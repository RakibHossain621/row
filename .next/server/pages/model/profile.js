module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../../ssr-module-cache.js');
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "0" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		"pages/model/profile": 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// require() chunk loading for javascript
/******/
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] !== 0) {
/******/ 			var chunk = require("../../" + ({}[chunkId]||chunkId) + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// uncaught error handler for webpack runtime
/******/ 	__webpack_require__.oe = function(err) {
/******/ 		process.nextTick(function() {
/******/ 			throw err; // catch this error by using import().catch()
/******/ 		});
/******/ 	};
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pages/model/profile/index.tsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../next-server/lib/head":
/*!****************************************************!*\
  !*** external "next/dist/next-server/lib/head.js" ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/head.js");

/***/ }),

/***/ "../next-server/lib/router-context":
/*!**************************************************************!*\
  !*** external "next/dist/next-server/lib/router-context.js" ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/router-context.js");

/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");
exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "react"));
var _router = __webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js");
var _router2 = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");
let cachedObserver;
const listeners = new Map();
const IntersectionObserver = false ? undefined : null;
const prefetched = {};
function getObserver() {
  // Return shared instance of IntersectionObserver if already created
  if (cachedObserver) {
    return cachedObserver;
  } // Only create shared IntersectionObserver if supported in browser
  if (!IntersectionObserver) {
    return undefined;
  }
  return cachedObserver = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (!listeners.has(entry.target)) {
        return;
      }
      const cb = listeners.get(entry.target);
      if (entry.isIntersecting || entry.intersectionRatio > 0) {
        cachedObserver.unobserve(entry.target);
        listeners.delete(entry.target);
        cb();
      }
    });
  }, {
    rootMargin: '200px'
  });
}
const listenToIntersections = (el, cb) => {
  const observer = getObserver();
  if (!observer) {
    return () => {};
  }
  observer.observe(el);
  listeners.set(el, cb);
  return () => {
    try {
      observer.unobserve(el);
    } catch (err) {
      console.error(err);
    }
    listeners.delete(el);
  };
};
function prefetch(router, href, as, options) {
  if (true) return;
  if (!(0, _router.isLocalURL)(href)) return; // Prefetch the JSON page if asked (only in the client)
  // We need to handle a prefetch error here since we may be
  // loading with priority which can reject but we don't
  // want to force navigation since this is only a prefetch
  router.prefetch(href, as, options).catch(err => {
    if (true) {
      // rethrow to show invalid URL errors
      throw err;
    }
  }); // Join on an invalid URI character
  prefetched[href + '%' + as] = true;
}
function isModifiedEvent(event) {
  const {
    target
  } = event.currentTarget;
  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey ||
  // triggers resource download
  event.nativeEvent && event.nativeEvent.which === 2;
}
function linkClicked(e, router, href, as, replace, shallow, scroll) {
  const {
    nodeName
  } = e.currentTarget;
  if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router.isLocalURL)(href))) {
    // ignore click for browserâ€™s default behavior
    return;
  }
  e.preventDefault(); //  avoid scroll for urls with anchor refs
  if (scroll == null) {
    scroll = as.indexOf('#') < 0;
  } // replace state instead of push if prop is present
  router[replace ? 'replace' : 'push'](href, as, {
    shallow
  }).then(success => {
    if (!success) return;
    if (scroll) {
      window.scrollTo(0, 0);
      document.body.focus();
    }
  });
}
function Link(props) {
  if (true) {
    function createPropError(args) {
      return new Error(`Failed prop type: The prop \`${args.key}\` expects a ${args.expected} in \`<Link>\`, but got \`${args.actual}\` instead.` + (false ? undefined : ''));
    } // TypeScript trick for type-guarding:
    const requiredPropsGuard = {
      href: true
    };
    const requiredProps = Object.keys(requiredPropsGuard);
    requiredProps.forEach(key => {
      if (key === 'href') {
        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {
          throw createPropError({
            key,
            expected: '`string` or `object`',
            actual: props[key] === null ? 'null' : typeof props[key]
          });
        }
      } else {
        // TypeScript trick for type-guarding:
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _ = key;
      }
    }); // TypeScript trick for type-guarding:
    const optionalPropsGuard = {
      as: true,
      replace: true,
      scroll: true,
      shallow: true,
      passHref: true,
      prefetch: true
    };
    const optionalProps = Object.keys(optionalPropsGuard);
    optionalProps.forEach(key => {
      if (key === 'as') {
        if (props[key] && typeof props[key] !== 'string' && typeof props[key] !== 'object') {
          throw createPropError({
            key,
            expected: '`string` or `object`',
            actual: typeof props[key]
          });
        }
      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {
        if (props[key] != null && typeof props[key] !== 'boolean') {
          throw createPropError({
            key,
            expected: '`boolean`',
            actual: typeof props[key]
          });
        }
      } else {
        // TypeScript trick for type-guarding:
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _ = key;
      }
    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const hasWarned = _react.default.useRef(false);
    if (props.prefetch && !hasWarned.current) {
      hasWarned.current = true;
      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated');
    }
  }
  const p = props.prefetch !== false;
  const [childElm, setChildElm] = _react.default.useState();
  const router = (0, _router2.useRouter)();
  const pathname = router && router.pathname || '/';
  const {
    href,
    as
  } = _react.default.useMemo(() => {
    const [resolvedHref, resolvedAs] = (0, _router.resolveHref)(pathname, props.href, true);
    return {
      href: resolvedHref,
      as: props.as ? (0, _router.resolveHref)(pathname, props.as) : resolvedAs || resolvedHref
    };
  }, [pathname, props.href, props.as]);
  _react.default.useEffect(() => {
    if (p && IntersectionObserver && childElm && childElm.tagName && (0, _router.isLocalURL)(href)) {
      // Join on an invalid URI character
      const isPrefetched = prefetched[href + '%' + as];
      if (!isPrefetched) {
        return listenToIntersections(childElm, () => {
          prefetch(router, href, as);
        });
      }
    }
  }, [p, childElm, href, as, router]);
  let {
    children,
    replace,
    shallow,
    scroll
  } = props; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag
  if (typeof children === 'string') {
    children = /*#__PURE__*/_react.default.createElement("a", null, children);
  } // This will return the first child, if multiple are provided it will throw an error
  const child = _react.Children.only(children);
  const childProps = {
    ref: el => {
      if (el) setChildElm(el);
      if (child && typeof child === 'object' && child.ref) {
        if (typeof child.ref === 'function') child.ref(el);else if (typeof child.ref === 'object') {
          child.ref.current = el;
        }
      }
    },
    onClick: e => {
      if (child.props && typeof child.props.onClick === 'function') {
        child.props.onClick(e);
      }
      if (!e.defaultPrevented) {
        linkClicked(e, router, href, as, replace, shallow, scroll);
      }
    }
  };
  if (p) {
    childProps.onMouseEnter = e => {
      if (!(0, _router.isLocalURL)(href)) return;
      if (child.props && typeof child.props.onMouseEnter === 'function') {
        child.props.onMouseEnter(e);
      }
      prefetch(router, href, as, {
        priority: true
      });
    };
  } // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
  // defined, we specify the current 'href', so that repetition is not needed by the user
  if (props.passHref || child.type === 'a' && !('href' in child.props)) {
    childProps.href = (0, _router.addBasePath)((0, _router.addLocale)(as, router && router.locale, router && router.defaultLocale));
  }
  return /*#__PURE__*/_react.default.cloneElement(child, childProps);
}
var _default = Link;
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0; /**
                                             * Removes the trailing slash of a path if there is one. Preserves the root path `/`.
                                             */
function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
} /**
  * Normalizes the trailing slash of a path according to the `trailingSlash` option
  * in `next.config.js`.
  */
const normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");
exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports.default = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));
var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));
exports.Router = _router2.default;
exports.NextRouter = _router2.NextRouter;
var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "../next-server/lib/router-context");
var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));
exports.withRouter = _withRouter.default; /* global window */
const singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready(cb) {
    if (this.router) return cb();
    if (false) {}
  }
}; // Create public properties and methods of the router in the singletonRouter
const urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale'];
const routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
const coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it
Object.defineProperty(singletonRouter, 'events', {
  get() {
    return _router2.default.events;
  }
});
urlPropertyFields.forEach(field => {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get() {
      const router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(field => {
  // We don't really know the types here, so we add them later instead
  ;
  singletonRouter[field] = (...args) => {
    const router = getRouter();
    return router[field](...args);
  };
});
routerEvents.forEach(event => {
  singletonRouter.ready(() => {
    _router2.default.events.on(event, (...args) => {
      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;
      const _singletonRouter = singletonRouter;
      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField](...args);
        } catch (err) {
          console.error(`Error when running the Router event: ${eventField}`);
          console.error(`${err.message}\n${err.stack}`);
        }
      }
    });
  });
});
function getRouter() {
  if (!singletonRouter.router) {
    const message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }
  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.
var _default = singletonRouter; // Reexport the withRoute HOC
exports.default = _default;
function useRouter() {
  return _react.default.useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.
const createRouter = (...args) => {
  singletonRouter.router = new _router2.default(...args);
  singletonRouter.readyCallbacks.forEach(cb => cb());
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance
exports.createRouter = createRouter;
function makePublicRouterInstance(router) {
  const _router = router;
  const instance = {};
  for (const property of urlPropertyFields) {
    if (typeof _router[property] === 'object') {
      instance[property] = Object.assign(Array.isArray(_router[property]) ? [] : {}, _router[property]); // makes sure query is not stateful
      continue;
    }
    instance[property] = _router[property];
  } // Events is a static property on the router, the router doesn't have to be initialized to use it
  instance.events = _router2.default.events;
  coreMethodFields.forEach(field => {
    instance[field] = (...args) => {
      return _router[field](...args);
    };
  });
  return instance;
}

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");
exports.__esModule = true;
exports.default = withRouter;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));
var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");
function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }
  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;
  if (true) {
    const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = `withRouter(${name})`;
  }
  return WithRouterWrapper;
}

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-to-regexp/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-to-regexp/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Tokenize input string.
 */
function lexer(str) {
    var tokens = [];
    var i = 0;
    while (i < str.length) {
        var char = str[i];
        if (char === "*" || char === "+" || char === "?") {
            tokens.push({ type: "MODIFIER", index: i, value: str[i++] });
            continue;
        }
        if (char === "\\") {
            tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });
            continue;
        }
        if (char === "{") {
            tokens.push({ type: "OPEN", index: i, value: str[i++] });
            continue;
        }
        if (char === "}") {
            tokens.push({ type: "CLOSE", index: i, value: str[i++] });
            continue;
        }
        if (char === ":") {
            var name = "";
            var j = i + 1;
            while (j < str.length) {
                var code = str.charCodeAt(j);
                if (
                // `0-9`
                (code >= 48 && code <= 57) ||
                    // `A-Z`
                    (code >= 65 && code <= 90) ||
                    // `a-z`
                    (code >= 97 && code <= 122) ||
                    // `_`
                    code === 95) {
                    name += str[j++];
                    continue;
                }
                break;
            }
            if (!name)
                throw new TypeError("Missing parameter name at " + i);
            tokens.push({ type: "NAME", index: i, value: name });
            i = j;
            continue;
        }
        if (char === "(") {
            var count = 1;
            var pattern = "";
            var j = i + 1;
            if (str[j] === "?") {
                throw new TypeError("Pattern cannot start with \"?\" at " + j);
            }
            while (j < str.length) {
                if (str[j] === "\\") {
                    pattern += str[j++] + str[j++];
                    continue;
                }
                if (str[j] === ")") {
                    count--;
                    if (count === 0) {
                        j++;
                        break;
                    }
                }
                else if (str[j] === "(") {
                    count++;
                    if (str[j + 1] !== "?") {
                        throw new TypeError("Capturing groups are not allowed at " + j);
                    }
                }
                pattern += str[j++];
            }
            if (count)
                throw new TypeError("Unbalanced pattern at " + i);
            if (!pattern)
                throw new TypeError("Missing pattern at " + i);
            tokens.push({ type: "PATTERN", index: i, value: pattern });
            i = j;
            continue;
        }
        tokens.push({ type: "CHAR", index: i, value: str[i++] });
    }
    tokens.push({ type: "END", index: i, value: "" });
    return tokens;
}
/**
 * Parse a string for the raw tokens.
 */
function parse(str, options) {
    if (options === void 0) { options = {}; }
    var tokens = lexer(str);
    var _a = options.prefixes, prefixes = _a === void 0 ? "./" : _a;
    var defaultPattern = "[^" + escapeString(options.delimiter || "/#?") + "]+?";
    var result = [];
    var key = 0;
    var i = 0;
    var path = "";
    var tryConsume = function (type) {
        if (i < tokens.length && tokens[i].type === type)
            return tokens[i++].value;
    };
    var mustConsume = function (type) {
        var value = tryConsume(type);
        if (value !== undefined)
            return value;
        var _a = tokens[i], nextType = _a.type, index = _a.index;
        throw new TypeError("Unexpected " + nextType + " at " + index + ", expected " + type);
    };
    var consumeText = function () {
        var result = "";
        var value;
        // tslint:disable-next-line
        while ((value = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR"))) {
            result += value;
        }
        return result;
    };
    while (i < tokens.length) {
        var char = tryConsume("CHAR");
        var name = tryConsume("NAME");
        var pattern = tryConsume("PATTERN");
        if (name || pattern) {
            var prefix = char || "";
            if (prefixes.indexOf(prefix) === -1) {
                path += prefix;
                prefix = "";
            }
            if (path) {
                result.push(path);
                path = "";
            }
            result.push({
                name: name || key++,
                prefix: prefix,
                suffix: "",
                pattern: pattern || defaultPattern,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        var value = char || tryConsume("ESCAPED_CHAR");
        if (value) {
            path += value;
            continue;
        }
        if (path) {
            result.push(path);
            path = "";
        }
        var open = tryConsume("OPEN");
        if (open) {
            var prefix = consumeText();
            var name_1 = tryConsume("NAME") || "";
            var pattern_1 = tryConsume("PATTERN") || "";
            var suffix = consumeText();
            mustConsume("CLOSE");
            result.push({
                name: name_1 || (pattern_1 ? key++ : ""),
                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
                prefix: prefix,
                suffix: suffix,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        mustConsume("END");
    }
    return result;
}
exports.parse = parse;
/**
 * Compile a string to a template function for the path.
 */
function compile(str, options) {
    return tokensToFunction(parse(str, options), options);
}
exports.compile = compile;
/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction(tokens, options) {
    if (options === void 0) { options = {}; }
    var reFlags = flags(options);
    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;
    // Compile all the tokens into regexps.
    var matches = tokens.map(function (token) {
        if (typeof token === "object") {
            return new RegExp("^(?:" + token.pattern + ")$", reFlags);
        }
    });
    return function (data) {
        var path = "";
        for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            if (typeof token === "string") {
                path += token;
                continue;
            }
            var value = data ? data[token.name] : undefined;
            var optional = token.modifier === "?" || token.modifier === "*";
            var repeat = token.modifier === "*" || token.modifier === "+";
            if (Array.isArray(value)) {
                if (!repeat) {
                    throw new TypeError("Expected \"" + token.name + "\" to not repeat, but got an array");
                }
                if (value.length === 0) {
                    if (optional)
                        continue;
                    throw new TypeError("Expected \"" + token.name + "\" to not be empty");
                }
                for (var j = 0; j < value.length; j++) {
                    var segment = encode(value[j], token);
                    if (validate && !matches[i].test(segment)) {
                        throw new TypeError("Expected all \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                    }
                    path += token.prefix + segment + token.suffix;
                }
                continue;
            }
            if (typeof value === "string" || typeof value === "number") {
                var segment = encode(String(value), token);
                if (validate && !matches[i].test(segment)) {
                    throw new TypeError("Expected \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                }
                path += token.prefix + segment + token.suffix;
                continue;
            }
            if (optional)
                continue;
            var typeOfMessage = repeat ? "an array" : "a string";
            throw new TypeError("Expected \"" + token.name + "\" to be " + typeOfMessage);
        }
        return path;
    };
}
exports.tokensToFunction = tokensToFunction;
/**
 * Create path match function from `path-to-regexp` spec.
 */
function match(str, options) {
    var keys = [];
    var re = pathToRegexp(str, keys, options);
    return regexpToFunction(re, keys, options);
}
exports.match = match;
/**
 * Create a path match function from `path-to-regexp` output.
 */
function regexpToFunction(re, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;
    return function (pathname) {
        var m = re.exec(pathname);
        if (!m)
            return false;
        var path = m[0], index = m.index;
        var params = Object.create(null);
        var _loop_1 = function (i) {
            // tslint:disable-next-line
            if (m[i] === undefined)
                return "continue";
            var key = keys[i - 1];
            if (key.modifier === "*" || key.modifier === "+") {
                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {
                    return decode(value, key);
                });
            }
            else {
                params[key.name] = decode(m[i], key);
            }
        };
        for (var i = 1; i < m.length; i++) {
            _loop_1(i);
        }
        return { path: path, index: index, params: params };
    };
}
exports.regexpToFunction = regexpToFunction;
/**
 * Escape a regular expression string.
 */
function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
/**
 * Get the flags for a regexp from the options.
 */
function flags(options) {
    return options && options.sensitive ? "" : "i";
}
/**
 * Pull out keys from a regexp.
 */
function regexpToRegexp(path, keys) {
    if (!keys)
        return path;
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);
    if (groups) {
        for (var i = 0; i < groups.length; i++) {
            keys.push({
                name: i,
                prefix: "",
                suffix: "",
                modifier: "",
                pattern: ""
            });
        }
    }
    return path;
}
/**
 * Transform an array into a regexp.
 */
function arrayToRegexp(paths, keys, options) {
    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });
    return new RegExp("(?:" + parts.join("|") + ")", flags(options));
}
/**
 * Create a path regexp from string input.
 */
function stringToRegexp(path, keys, options) {
    return tokensToRegexp(parse(path, options), keys, options);
}
/**
 * Expose a function for taking tokens and returning a RegExp.
 */
function tokensToRegexp(tokens, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;
    var endsWith = "[" + escapeString(options.endsWith || "") + "]|$";
    var delimiter = "[" + escapeString(options.delimiter || "/#?") + "]";
    var route = start ? "^" : "";
    // Iterate over the tokens and create our regexp string.
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof token === "string") {
            route += escapeString(encode(token));
        }
        else {
            var prefix = escapeString(encode(token.prefix));
            var suffix = escapeString(encode(token.suffix));
            if (token.pattern) {
                if (keys)
                    keys.push(token);
                if (prefix || suffix) {
                    if (token.modifier === "+" || token.modifier === "*") {
                        var mod = token.modifier === "*" ? "?" : "";
                        route += "(?:" + prefix + "((?:" + token.pattern + ")(?:" + suffix + prefix + "(?:" + token.pattern + "))*)" + suffix + ")" + mod;
                    }
                    else {
                        route += "(?:" + prefix + "(" + token.pattern + ")" + suffix + ")" + token.modifier;
                    }
                }
                else {
                    route += "(" + token.pattern + ")" + token.modifier;
                }
            }
            else {
                route += "(?:" + prefix + suffix + ")" + token.modifier;
            }
        }
    }
    if (end) {
        if (!strict)
            route += delimiter + "?";
        route += !options.endsWith ? "$" : "(?=" + endsWith + ")";
    }
    else {
        var endToken = tokens[tokens.length - 1];
        var isEndDelimited = typeof endToken === "string"
            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1
            : // tslint:disable-next-line
                endToken === undefined;
        if (!strict) {
            route += "(?:" + delimiter + "(?=" + endsWith + "))?";
        }
        if (!isEndDelimited) {
            route += "(?=" + delimiter + "|" + endsWith + ")";
        }
    }
    return new RegExp(route, flags(options));
}
exports.tokensToRegexp = tokensToRegexp;
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 */
function pathToRegexp(path, keys, options) {
    if (path instanceof RegExp)
        return regexpToRegexp(path, keys);
    if (Array.isArray(path))
        return arrayToRegexp(path, keys, options);
    return stringToRegexp(path, keys, options);
}
exports.pathToRegexp = pathToRegexp;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = mitt; /*
                        MIT License
                        Copyright (c) Jason Miller (https://jasonformat.com/)
                        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
                        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
                        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                        */ // This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file
function mitt() {
  const all = Object.create(null);
  return {
    on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit(type, ...evts) {
      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(handler => {
        handler(...evts);
      });
    }
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.addLocale = addLocale;
exports.delLocale = delLocale;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.interpolateAs = interpolateAs;
exports.resolveHref = resolveHref;
exports.markLoadingError = markLoadingError;
exports.default = void 0;
var _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");
var _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ "./node_modules/next/dist/next-server/server/denormalize-page-path.js");
var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));
var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");
var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");
var _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");
var _querystring = __webpack_require__(/*! ./utils/querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
var _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js"));
var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");
var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");
var _escapePathDelimiters = _interopRequireDefault(__webpack_require__(/*! ./utils/escape-path-delimiters */ "./node_modules/next/dist/next-server/lib/router/utils/escape-path-delimiters.js"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} /* global __NEXT_DATA__ */ // tslint:disable:no-console
const basePath =  false || '';
function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}
function addPathPrefix(path, prefix) {
  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : `${prefix}${path}` : path;
}
function addLocale(path, locale, defaultLocale) {
  if (false) {}
  return path;
}
function delLocale(path, locale) {
  if (false) {}
  return path;
}
function hasBasePath(path) {
  return path === basePath || path.startsWith(basePath + '/');
}
function addBasePath(path) {
  // we only add the basepath on relative urls
  return addPathPrefix(path, basePath);
}
function delBasePath(path) {
  return path.slice(basePath.length) || '/';
} /**
  * Detects whether a given url is routable by the Next.js router (browser only).
  */
function isLocalURL(url) {
  if (url.startsWith('/')) return true;
  try {
    // absolute urls can be local if they are on the same origin
    const locationOrigin = (0, _utils.getLocationOrigin)();
    const resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}
function interpolateAs(route, asPathname, query) {
  let interpolatedRoute = '';
  const dynamicRegex = (0, _routeRegex.getRouteRegex)(route);
  const dynamicGroups = dynamicRegex.groups;
  const dynamicMatches =
  // Try to match the dynamic route against the asPath
  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') ||
  // Fall back to reading the values from the href
  // TODO: should this take priority; also need to change in the router.
  query;
  interpolatedRoute = route;
  const params = Object.keys(dynamicGroups);
  if (!params.every(param => {
    let value = dynamicMatches[param] || '';
    const {
      repeat,
      optional
    } = dynamicGroups[param]; // support single-level catch-all
    // TODO: more robust handling for user-error (passing `/`)
    let replaced = `[${repeat ? '...' : ''}${param}]`;
    if (optional) {
      replaced = `${!value ? '/' : ''}[${replaced}]`;
    }
    if (repeat && !Array.isArray(value)) value = [value];
    return (optional || param in dynamicMatches) && (
    // Interpolate group into data URL if present
    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(_escapePathDelimiters.default).join('/') : (0, _escapePathDelimiters.default)(value)) || '/');
  })) {
    interpolatedRoute = ''; // did not satisfy all requirements
    // n.b. We ignore this error because we handle warning for this case in
    // development in the `<Link>` component directly.
  }
  return {
    params,
    result: interpolatedRoute
  };
}
function omitParmsFromQuery(query, params) {
  const filteredQuery = {};
  Object.keys(query).forEach(key => {
    if (!params.includes(key)) {
      filteredQuery[key] = query[key];
    }
  });
  return filteredQuery;
} /**
  * Resolves a given hyperlink with a certain router state (basePath not included).
  * Preserves absolute urls.
  */
function resolveHref(currentPath, href, resolveAs) {
  // we use a dummy base url for relative urls
  const base = new URL(currentPath, 'http://n');
  const urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);
  try {
    const finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);
    let interpolatedAs = '';
    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
      const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);
      const {
        result,
        params
      } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);
      if (result) {
        interpolatedAs = (0, _utils.formatWithValidation)({
          pathname: result,
          hash: finalUrl.hash,
          query: omitParmsFromQuery(query, params)
        });
      }
    } // if the origin didn't change, it means we received a relative href
    const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;
  } catch (_) {
    return resolveAs ? [urlAsString] : urlAsString;
  }
}
const PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');
function markLoadingError(err) {
  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});
}
function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  return {
    url: addBasePath(resolveHref(router.pathname, url)),
    as: as ? addBasePath(resolveHref(router.pathname, as)) : as
  };
}
const manualScrollRestoration =  false && false;
function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` wonâ€™t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(res => {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }
      throw new Error(`Failed to load static props`);
    }
    return res.json();
  });
}
function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch(err => {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      markLoadingError(err);
    }
    throw err;
  });
}
class Router {
  /**
  * Map of all components loaded in `Router`
  */ // Static Data Cache
  constructor(_pathname, _query, _as, {
    initialProps,
    pageLoader,
    App,
    wrapApp,
    Component,
    initialStyleSheets,
    err,
    subscription,
    isFallback,
    locale,
    locales,
    defaultLocale
  }) {
    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;
    this._shallow = void 0;
    this.locale = void 0;
    this.locales = void 0;
    this.defaultLocale = void 0;
    this.onPopState = e => {
      const state = e.state;
      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        const {
          pathname,
          query
        } = this;
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(pathname),
          query
        }), (0, _utils.getURL)());
        return;
      }
      if (!state.__N) {
        return;
      }
      const {
        url,
        as,
        options
      } = state;
      const {
        pathname
      } = (0, _parseRelativeUrl.parseRelativeUrl)(url); // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site
      if (this.isSsr && as === this.asPath && pathname === this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.
      if (this._bps && !this._bps(state)) {
        return;
      }
      this.change('replaceState', url, as, Object.assign({}, options, {
        shallow: options.shallow && this._shallow
      }));
    }; // represents the current component key
    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)
    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.
    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component,
        styleSheets: initialStyleSheets,
        props: initialProps,
        err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }
    this.components['/_app'] = {
      Component: App,
      styleSheets: [/* /_app does not need its stylesheets managed */]
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented
    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch
    this.asPath =
    // @ts-ignore this is temporarily global (attached to window)
    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site
    this.isSsr = true;
    this.isFallback = isFallback;
    if (false) {}
    if (false) {}
  }
  reload() {
    window.location.reload();
  } /**
    * Go back in history
    */
  back() {
    window.history.back();
  } /**
    * Performs a `pushState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */
  push(url, as = url, options = {}) {
    ;
    ({
      url,
      as
    } = prepareUrlAs(this, url, as));
    return this.change('pushState', url, as, options);
  } /**
    * Performs a `replaceState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */
  replace(url, as = url, options = {}) {
    ;
    ({
      url,
      as
    } = prepareUrlAs(this, url, as));
    return this.change('replaceState', url, as, options);
  }
  async change(method, url, as, options) {
    if (!isLocalURL(url)) {
      window.location.href = url;
      return false;
    }
    if (!options._h) {
      this.isSsr = false;
    } // marking route changes as a navigation start entry
    if (_utils.ST) {
      performance.mark('routeChange');
    }
    if (this._inFlightRoute) {
      this.abortComponentLoad(this._inFlightRoute);
    }
    as = addLocale(as, this.locale, this.defaultLocale);
    const cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);
    this._inFlightRoute = as; // If the url change is only related to a hash change
    // We should not proceed. We should only change the state.
    // WARNING: `_h` is an internal option for handing Next.js client-side
    // hydration. Your app should _never_ use this property. It may change at
    // any time without notice.
    if (!options._h && this.onlyAHashChange(cleanedAs)) {
      this.asPath = cleanedAs;
      Router.events.emit('hashChangeStart', as); // TODO: do we need the resolved href when only a hash change?
      this.changeState(method, url, as, options);
      this.scrollToHash(cleanedAs);
      this.notify(this.components[this.route]);
      Router.events.emit('hashChangeComplete', as);
      return true;
    } // The build manifest needs to be loaded before auto-static dynamic pages
    // get their query parameters to allow ensuring they can be parsed properly
    // when rewritten to
    const pages = await this.pageLoader.getPageList();
    const {
      __rewrites: rewrites
    } = await this.pageLoader.promisedBuildManifest;
    let parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
    let {
      pathname,
      query
    } = parsed;
    parsed = this._resolveHref(parsed, pages);
    if (parsed.pathname !== pathname) {
      pathname = parsed.pathname;
      url = (0, _utils.formatWithValidation)(parsed);
    } // url and as should always be prefixed with basePath by this
    // point by either next/link or router.push/replace so strip the
    // basePath from the pathname to match the pages dir 1-to-1
    pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page
    // (not location.reload() but reload getInitialProps and other Next.js stuffs)
    // We also need to set the method = replaceState always
    // as this should not go into the history (That's how browsers work)
    // We should compare the new asPath to the current asPath, not the url
    if (!this.urlIsNew(cleanedAs)) {
      method = 'replaceState';
    }
    let route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
    const {
      shallow = false
    } = options; // we need to resolve the as value using rewrites for dynamic SSG
    // pages to allow building the data URL correctly
    let resolvedAs = as;
    if (true) {
      resolvedAs = (0, _resolveRewrites.default)((0, _parseRelativeUrl.parseRelativeUrl)(as).pathname, pages, basePath, rewrites, query, p => this._resolveHref({
        pathname: p
      }, pages).pathname);
      if (resolvedAs !== as) {
        const potentialHref = (0, _normalizeTrailingSlash.removePathTrailingSlash)(this._resolveHref(Object.assign({}, parsed, {
          pathname: resolvedAs
        }), pages, false).pathname); // if this directly matches a page we need to update the href to
        // allow the correct page chunk to be loaded
        if (pages.includes(potentialHref)) {
          route = potentialHref;
          pathname = potentialHref;
          parsed.pathname = pathname;
          url = (0, _utils.formatWithValidation)(parsed);
        }
      }
    }
    resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);
    if ((0, _isDynamic.isDynamicRoute)(route)) {
      const parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);
      const asPathname = parsedAs.pathname;
      const routeRegex = (0, _routeRegex.getRouteRegex)(route);
      const routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);
      const shouldInterpolate = route === asPathname;
      const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};
      if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {
        const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);
        if (missingParams.length > 0) {
          if (true) {
            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \`as\` and \`href\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \`href\`'s \`query\``);
          }
          throw new Error((shouldInterpolate ? `The provided \`href\` (${url}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \`as\` value (${asPathname}) is incompatible with the \`href\` value (${route}). `) + `Read more: https://err.sh/vercel/next.js/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);
        }
      } else if (shouldInterpolate) {
        as = (0, _utils.formatWithValidation)(Object.assign({}, parsedAs, {
          pathname: interpolatedAs.result,
          query: omitParmsFromQuery(query, interpolatedAs.params)
        }));
      } else {
        // Merge params into `query`, overwriting any specified in search
        Object.assign(query, routeMatch);
      }
    }
    Router.events.emit('routeChangeStart', as);
    try {
      const routeInfo = await this.getRouteInfo(route, pathname, query, as, shallow);
      let {
        error,
        props,
        __N_SSG,
        __N_SSP
      } = routeInfo; // handle redirect on client-transition
      if ((__N_SSG || __N_SSP) && props && props.pageProps && props.pageProps.__N_REDIRECT) {
        const destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt
        // client-navigation if it is falling back to hard navigation if
        // it's not
        if (destination.startsWith('/')) {
          const parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
          this._resolveHref(parsedHref, pages);
          if (pages.includes(parsedHref.pathname)) {
            return this.change('replaceState', destination, destination, options);
          }
        }
        window.location.href = destination;
        return new Promise(() => {});
      }
      Router.events.emit('beforeHistoryChange', as);
      this.changeState(method, url, addLocale(as, this.locale, this.defaultLocale), options);
      if (true) {
        const appComp = this.components['/_app'].Component;
        window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
      }
      await this.set(route, pathname, query, cleanedAs, routeInfo).catch(e => {
        if (e.cancelled) error = error || e;else throw e;
      });
      if (error) {
        Router.events.emit('routeChangeError', error, cleanedAs);
        throw error;
      }
      if (false) {}
      Router.events.emit('routeChangeComplete', as);
      return true;
    } catch (err) {
      if (err.cancelled) {
        return false;
      }
      throw err;
    }
  }
  changeState(method, url, as, options = {}) {
    if (true) {
      if (typeof window.history === 'undefined') {
        console.error(`Warning: window.history is not available.`);
        return;
      }
      if (typeof window.history[method] === 'undefined') {
        console.error(`Warning: window.history.${method} is not available`);
        return;
      }
    }
    if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
      this._shallow = options.shallow;
      window.history[method]({
        url,
        as,
        options,
        __N: true
      },
      // Most browsers currently ignores this parameter, although they may use it in the future.
      // Passing the empty string here should be safe against future changes to the method.
      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
      '', as);
    }
  }
  async handleRouteInfoError(err, pathname, query, as, loadErrorFail) {
    if (err.cancelled) {
      // bubble up cancellation errors
      throw err;
    }
    if (PAGE_LOAD_ERROR in err || loadErrorFail) {
      Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons
      //  1. Page doesn't exists
      //  2. Page does exist in a different zone
      //  3. Internal error while loading the page
      // So, doing a hard reload is the proper way to deal with this.
      window.location.href = as; // Changing the URL doesn't block executing the current code path.
      // So let's throw a cancellation error stop the routing logic.
      throw buildCancellationError();
    }
    try {
      const {
        page: Component,
        styleSheets
      } = await this.fetchComponent('/_error');
      const routeInfo = {
        Component,
        styleSheets,
        err,
        error: err
      };
      try {
        routeInfo.props = await this.getInitialProps(Component, {
          err,
          pathname,
          query
        });
      } catch (gipErr) {
        console.error('Error in error page `getInitialProps`: ', gipErr);
        routeInfo.props = {};
      }
      return routeInfo;
    } catch (routeInfoErr) {
      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true);
    }
  }
  async getRouteInfo(route, pathname, query, as, shallow = false) {
    try {
      const cachedRouteInfo = this.components[route];
      if (shallow && cachedRouteInfo && this.route === route) {
        return cachedRouteInfo;
      }
      const routeInfo = cachedRouteInfo ? cachedRouteInfo : await this.fetchComponent(route).then(res => ({
        Component: res.page,
        styleSheets: res.styleSheets,
        __N_SSG: res.mod.__N_SSG,
        __N_SSP: res.mod.__N_SSP
      }));
      const {
        Component,
        __N_SSG,
        __N_SSP
      } = routeInfo;
      if (true) {
        const {
          isValidElementType
        } = __webpack_require__(/*! react-is */ "react-is");
        if (!isValidElementType(Component)) {
          throw new Error(`The default export is not a React Component in page: "${pathname}"`);
        }
      }
      let dataHref;
      if (__N_SSG || __N_SSP) {
        dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
          pathname,
          query
        }), delBasePath(as), __N_SSG, this.locale, this.defaultLocale);
      }
      const props = await this._getData(() => __N_SSG ? this._getStaticData(dataHref) : __N_SSP ? this._getServerData(dataHref) : this.getInitialProps(Component,
      // we provide AppTree later so this needs to be `any`
      {
        pathname,
        query,
        asPath: as
      }));
      routeInfo.props = props;
      this.components[route] = routeInfo;
      return routeInfo;
    } catch (err) {
      return this.handleRouteInfoError(err, pathname, query, as);
    }
  }
  set(route, pathname, query, as, data) {
    this.isFallback = false;
    this.route = route;
    this.pathname = pathname;
    this.query = query;
    this.asPath = as;
    return this.notify(data);
  } /**
    * Callback to execute before replacing router state
    * @param cb callback to be executed
    */
  beforePopState(cb) {
    this._bps = cb;
  }
  onlyAHashChange(as) {
    if (!this.asPath) return false;
    const [oldUrlNoHash, oldHash] = this.asPath.split('#');
    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same
    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
      return true;
    } // If the urls are change, there's more than a hash change
    if (oldUrlNoHash !== newUrlNoHash) {
      return false;
    } // If the hash has changed, then it's a hash only change.
    // This check is necessary to handle both the enter and
    // leave hash === '' cases. The identity case falls through
    // and is treated as a next reload.
    return oldHash !== newHash;
  }
  scrollToHash(as) {
    const [, hash] = as.split('#'); // Scroll to top if the hash is just `#` with no value
    if (hash === '') {
      window.scrollTo(0, 0);
      return;
    } // First we check if the element by id is found
    const idEl = document.getElementById(hash);
    if (idEl) {
      idEl.scrollIntoView();
      return;
    } // If there's no element with the id, we check the `name` property
    // To mirror browsers
    const nameEl = document.getElementsByName(hash)[0];
    if (nameEl) {
      nameEl.scrollIntoView();
    }
  }
  urlIsNew(asPath) {
    return this.asPath !== asPath;
  }
  _resolveHref(parsedHref, pages, applyBasePath = true) {
    const {
      pathname
    } = parsedHref;
    const cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(applyBasePath ? delBasePath(pathname) : pathname));
    if (cleanPathname === '/404' || cleanPathname === '/_error') {
      return parsedHref;
    } // handle resolving href for dynamic routes
    if (!pages.includes(cleanPathname)) {
      // eslint-disable-next-line array-callback-return
      pages.some(page => {
        if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {
          parsedHref.pathname = applyBasePath ? addBasePath(page) : page;
          return true;
        }
      });
    }
    return parsedHref;
  } /**
    * Prefetch page code, you may wait for the data during page rendering.
    * This feature only works in production!
    * @param url the href of prefetched page
    * @param asPath the as path of the prefetched page
    */
  async prefetch(url, asPath = url, options = {}) {
    let parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
    let {
      pathname
    } = parsed;
    const pages = await this.pageLoader.getPageList();
    parsed = this._resolveHref(parsed, pages);
    if (parsed.pathname !== pathname) {
      pathname = parsed.pathname;
      url = (0, _utils.formatWithValidation)(parsed);
    } // Prefetch is not supported in development mode because it would trigger on-demand-entries
    if (true) {
      return;
    }
    const route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
    await Promise.all([this.pageLoader.prefetchData(url, asPath, this.locale, this.defaultLocale), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);
  }
  async fetchComponent(route) {
    let cancelled = false;
    const cancel = this.clc = () => {
      cancelled = true;
    };
    const componentResult = await this.pageLoader.loadPage(route);
    if (cancelled) {
      const error = new Error(`Abort fetching component for route: "${route}"`);
      error.cancelled = true;
      throw error;
    }
    if (cancel === this.clc) {
      this.clc = null;
    }
    return componentResult;
  }
  _getData(fn) {
    let cancelled = false;
    const cancel = () => {
      cancelled = true;
    };
    this.clc = cancel;
    return fn().then(data => {
      if (cancel === this.clc) {
        this.clc = null;
      }
      if (cancelled) {
        const err = new Error('Loading initial props cancelled');
        err.cancelled = true;
        throw err;
      }
      return data;
    });
  }
  _getStaticData(dataHref) {
    const {
      href: cacheKey
    } = new URL(dataHref, window.location.href);
    if (false) {}
    return fetchNextData(dataHref, this.isSsr).then(data => {
      this.sdc[cacheKey] = data;
      return data;
    });
  }
  _getServerData(dataHref) {
    return fetchNextData(dataHref, this.isSsr);
  }
  getInitialProps(Component, ctx) {
    const {
      Component: App
    } = this.components['/_app'];
    const AppTree = this._wrapApp(App);
    ctx.AppTree = AppTree;
    return (0, _utils.loadGetInitialProps)(App, {
      AppTree,
      Component,
      router: this,
      ctx
    });
  }
  abortComponentLoad(as) {
    if (this.clc) {
      Router.events.emit('routeChangeError', buildCancellationError(), as);
      this.clc();
      this.clc = null;
    }
  }
  notify(data) {
    return this.sub(data, this.components['/_app'].Component);
  }
}
exports.default = Router;
Router.events = (0, _mitt.default)();

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/escape-path-delimiters.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/escape-path-delimiters.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = escapePathDelimiters; // escape delimiters used by path-to-regexp
function escapePathDelimiters(segment) {
  return segment.replace(/[/#?]/g, char => encodeURIComponent(char));
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.formatUrl = formatUrl;
var querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js"));
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function () {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
const slashedProtocols = /https?|ftp|gopher|file/;
function formatUrl(urlObj) {
  let {
    auth,
    hostname
  } = urlObj;
  let protocol = urlObj.protocol || '';
  let pathname = urlObj.pathname || '';
  let hash = urlObj.hash || '';
  let query = urlObj.query || '';
  let host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname);
    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }
  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }
  let search = urlObj.search || query && `?${query}` || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';
  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }
  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return `${protocol}${host}${pathname}${search}${hash}`;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string
const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;
function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;
var _utils = __webpack_require__(/*! ../../utils */ "./node_modules/next/dist/next-server/lib/utils.js");
var _querystring = __webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
const DUMMY_BASE = new URL(true ? 'http://n' : undefined); /**
                                                                                 * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
                                                                                 * (e.g. `./hello`) then at least base must be.
                                                                                 * Absolute urls are rejected with one exception, in the browser, absolute urls that are on
                                                                                 * the current origin will be parsed as relative
                                                                                 */
function parseRelativeUrl(url, base) {
  const resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE;
  const {
    pathname,
    searchParams,
    search,
    hash,
    href,
    origin,
    protocol
  } = new URL(url, resolvedBase);
  if (origin !== DUMMY_BASE.origin || protocol !== 'http:' && protocol !== 'https:') {
    throw new Error('invariant: invalid relative URL');
  }
  return {
    pathname,
    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
    search,
    hash,
    href: href.slice(DUMMY_BASE.origin.length)
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/path-match.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/path-match.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
exports.__esModule = true;
exports.pathToRegexp = exports.default = exports.customRouteMatcherOptions = exports.matcherOptions = void 0;
var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "./node_modules/next/dist/compiled/path-to-regexp/index.js"));
exports.pathToRegexp = pathToRegexp;
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function () {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
const matcherOptions = {
  sensitive: false,
  delimiter: '/'
};
exports.matcherOptions = matcherOptions;
const customRouteMatcherOptions = _objectSpread(_objectSpread({}, matcherOptions), {}, {
  strict: true
});
exports.customRouteMatcherOptions = customRouteMatcherOptions;
var _default = (customRoute = false) => {
  return path => {
    const keys = [];
    const matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);
    const matcher = pathToRegexp.regexpToFunction(matcherRegex, keys);
    return (pathname, params) => {
      const res = pathname == null ? false : matcher(pathname);
      if (!res) {
        return false;
      }
      if (customRoute) {
        for (const key of keys) {
          // unnamed params should be removed as they
          // are not allowed to be used in the destination
          if (typeof key.name === 'number') {
            delete res.params[key.name];
          }
        }
      }
      return _objectSpread(_objectSpread({}, params), res.params);
    };
  };
};
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
exports.__esModule = true;
exports.default = prepareDestination;
var _querystring = __webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
var _parseRelativeUrl = __webpack_require__(/*! ./parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");
var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "./node_modules/next/dist/compiled/path-to-regexp/index.js"));
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function () {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function prepareDestination(destination, params, query, appendParamsToQuery, basePath) {
  let parsedDestination = {};
  if (destination.startsWith('/')) {
    parsedDestination = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
  } else {
    const {
      pathname,
      searchParams,
      hash,
      hostname,
      port,
      protocol,
      search,
      href
    } = new URL(destination);
    parsedDestination = {
      pathname,
      query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
      hash,
      protocol,
      hostname,
      port,
      search,
      href
    };
  }
  const destQuery = parsedDestination.query;
  const destPath = `${parsedDestination.pathname}${parsedDestination.hash || ''}`;
  const destPathParamKeys = [];
  pathToRegexp.pathToRegexp(destPath, destPathParamKeys);
  const destPathParams = destPathParamKeys.map(key => key.name);
  let destinationCompiler = pathToRegexp.compile(destPath,
  // we don't validate while compiling the destination since we should
  // have already validated before we got to this point and validating
  // breaks compiling destinations with named pattern params from the source
  // e.g. /something:hello(.*) -> /another/:hello is broken with validation
  // since compile validation is meant for reversing and not for inserting
  // params from a separate path-regex into another
  {
    validate: false
  });
  let newUrl; // update any params in query values
  for (const [key, strOrArray] of Object.entries(destQuery)) {
    let value = Array.isArray(strOrArray) ? strOrArray[0] : strOrArray;
    if (value) {
      // the value needs to start with a forward-slash to be compiled
      // correctly
      value = `/${value}`;
      const queryCompiler = pathToRegexp.compile(value, {
        validate: false
      });
      value = queryCompiler(params).substr(1);
    }
    destQuery[key] = value;
  } // add path params to query if it's not a redirect and not
  // already defined in destination query or path
  const paramKeys = Object.keys(params);
  if (appendParamsToQuery && !paramKeys.some(key => destPathParams.includes(key))) {
    for (const key of paramKeys) {
      if (!(key in destQuery)) {
        destQuery[key] = params[key];
      }
    }
  }
  const shouldAddBasePath = destination.startsWith('/') && basePath;
  try {
    newUrl = `${shouldAddBasePath ? basePath : ''}${destinationCompiler(params)}`;
    const [pathname, hash] = newUrl.split('#');
    parsedDestination.pathname = pathname;
    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`;
    delete parsedDestination.search;
  } catch (err) {
    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {
      throw new Error(`To use a multi-match in the destination you must add \`*\` at the end of the param name to signify it should repeat. https://err.sh/vercel/next.js/invalid-multi-match`);
    }
    throw err;
  } // Query merge order lowest priority to highest
  // 1. initial URL query values
  // 2. path segment values
  // 3. destination specified query values
  parsedDestination.query = _objectSpread(_objectSpread({}, query), parsedDestination.query);
  return {
    newUrl,
    parsedDestination
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;
function searchParamsToUrlQuery(searchParams) {
  const query = {};
  searchParams.forEach((value, key) => {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}
function stringifyUrlQueryParam(param) {
  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
    return String(param);
  } else {
    return '';
  }
}
function urlQueryToSearchParams(urlQuery) {
  const result = new URLSearchParams();
  Object.entries(urlQuery).forEach(([key, value]) => {
    if (Array.isArray(value)) {
      value.forEach(item => result.append(key, stringifyUrlQueryParam(item)));
    } else {
      result.set(key, stringifyUrlQueryParam(value));
    }
  });
  return result;
}
function assign(target, ...searchParamsList) {
  searchParamsList.forEach(searchParams => {
    Array.from(searchParams.keys()).forEach(key => target.delete(key));
    searchParams.forEach((value, key) => target.append(key, value));
  });
  return target;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = resolveRewrites;
var _pathMatch = _interopRequireDefault(__webpack_require__(/*! ./path-match */ "./node_modules/next/dist/next-server/lib/router/utils/path-match.js"));
var _prepareDestination = _interopRequireDefault(__webpack_require__(/*! ./prepare-destination */ "./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js"));
var _normalizeTrailingSlash = __webpack_require__(/*! ../../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
const customRouteMatcher = (0, _pathMatch.default)(true);
function resolveRewrites(asPath, pages, basePath, rewrites, query, resolveHref) {
  if (!pages.includes(asPath)) {
    for (const rewrite of rewrites) {
      const matcher = customRouteMatcher(rewrite.source);
      const params = matcher(asPath);
      if (params) {
        if (!rewrite.destination) {
          // this is a proxied rewrite which isn't handled on the client
          break;
        }
        const destRes = (0, _prepareDestination.default)(rewrite.destination, params, query, true, rewrite.basePath === false ? '' : basePath);
        asPath = destRes.parsedDestination.pathname;
        Object.assign(query, destRes.parsedDestination.query);
        if (pages.includes((0, _normalizeTrailingSlash.removePathTrailingSlash)(asPath))) {
          // check if we now match a page as this means we are done
          // resolving the rewrites
          break;
        } // check if we match a dynamic-route, if so we break the rewrites chain
        const resolvedHref = resolveHref(asPath);
        if (resolvedHref !== asPath && pages.includes(resolvedHref)) {
          break;
        }
      }
    }
  }
  return asPath;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;
function getRouteMatcher(routeRegex) {
  const {
    re,
    groups
  } = routeRegex;
  return pathname => {
    const routeMatch = re.exec(pathname);
    if (!routeMatch) {
      return false;
    }
    const decode = param => {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        const err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };
    const params = {};
    Object.keys(groups).forEach(slugName => {
      const g = groups[slugName];
      const m = routeMatch[g.pos];
      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(entry => decode(entry)) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes
function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}
function parseParameter(param) {
  const optional = param.startsWith('[') && param.endsWith(']');
  if (optional) {
    param = param.slice(1, -1);
  }
  const repeat = param.startsWith('...');
  if (repeat) {
    param = param.slice(3);
  }
  return {
    key: param,
    repeat,
    optional
  };
}
function getRouteRegex(normalizedRoute) {
  const segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  const groups = {};
  let groupIndex = 1;
  const parameterizedRoute = segments.map(segment => {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      const {
        key,
        optional,
        repeat
      } = parseParameter(segment.slice(1, -1));
      groups[key] = {
        pos: groupIndex++,
        repeat,
        optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return `/${escapeRegex(segment)}`;
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest
  if (true) {
    let routeKeyCharCode = 97;
    let routeKeyCharLength = 1; // builds a minimal routeKey using only a-z and minimal number of characters
    const getSafeRouteKey = () => {
      let routeKey = '';
      for (let i = 0; i < routeKeyCharLength; i++) {
        routeKey += String.fromCharCode(routeKeyCharCode);
        routeKeyCharCode++;
        if (routeKeyCharCode > 122) {
          routeKeyCharLength++;
          routeKeyCharCode = 97;
        }
      }
      return routeKey;
    };
    const routeKeys = {};
    let namedParameterizedRoute = segments.map(segment => {
      if (segment.startsWith('[') && segment.endsWith(']')) {
        const {
          key,
          optional,
          repeat
        } = parseParameter(segment.slice(1, -1)); // replace any non-word characters since they can break
        // the named regex
        let cleanedKey = key.replace(/\W/g, '');
        let invalidKey = false; // check if the key is still invalid and fallback to using a known
        // safe key
        if (cleanedKey.length === 0 || cleanedKey.length > 30) {
          invalidKey = true;
        }
        if (!isNaN(parseInt(cleanedKey.substr(0, 1)))) {
          invalidKey = true;
        }
        if (invalidKey) {
          cleanedKey = getSafeRouteKey();
        }
        routeKeys[cleanedKey] = key;
        return repeat ? optional ? `(?:/(?<${cleanedKey}>.+?))?` : `/(?<${cleanedKey}>.+?)` : `/(?<${cleanedKey}>[^/]+?)`;
      } else {
        return `/${escapeRegex(segment)}`;
      }
    }).join('');
    return {
      re: new RegExp(`^${parameterizedRoute}(?:/)?$`),
      groups,
      routeKeys,
      namedRegex: `^${namedParameterizedRoute}(?:/)?$`
    };
  }
  return {
    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),
    groups
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;
var _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js"); /**
                                                       * Utils
                                                       */
function execOnce(fn) {
  let used = false;
  let result;
  return (...args) => {
    if (!used) {
      used = true;
      result = fn(...args);
    }
    return result;
  };
}
function getLocationOrigin() {
  const {
    protocol,
    hostname,
    port
  } = window.location;
  return `${protocol}//${hostname}${port ? ':' + port : ''}`;
}
function getURL() {
  const {
    href
  } = window.location;
  const origin = getLocationOrigin();
  return href.substring(origin.length);
}
function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}
function isResSent(res) {
  return res.finished || res.headersSent;
}
async function loadGetInitialProps(App, ctx) {
  if (true) {
    var _App$prototype;
    if ((_App$prototype = App.prototype) == null ? void 0 : _App$prototype.getInitialProps) {
      const message = `"${getDisplayName(App)}.getInitialProps()" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.`;
      throw new Error(message);
    }
  } // when called from _app `ctx` is nested in `ctx`
  const res = ctx.res || ctx.ctx && ctx.ctx.res;
  if (!App.getInitialProps) {
    if (ctx.ctx && ctx.Component) {
      // @ts-ignore pageProps default
      return {
        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
      };
    }
    return {};
  }
  const props = await App.getInitialProps(ctx);
  if (res && isResSent(res)) {
    return props;
  }
  if (!props) {
    const message = `"${getDisplayName(App)}.getInitialProps()" should resolve to an object. But found "${props}" instead.`;
    throw new Error(message);
  }
  if (true) {
    if (Object.keys(props).length === 0 && !ctx.ctx) {
      console.warn(`${getDisplayName(App)} returned an empty object from \`getInitialProps\`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps`);
    }
  }
  return props;
}
const urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;
function formatWithValidation(url) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(key => {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn(`Unknown key passed via urlObject into url.format: ${key}`);
        }
      });
    }
  }
  return (0, _formatUrl.formatUrl)(url);
}
const SP = typeof performance !== 'undefined';
exports.SP = SP;
const ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

/***/ }),

/***/ "./node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}
//# sourceMappingURL=denormalize-page-path.js.map

/***/ }),

/***/ "./node_modules/next/dist/pages/_error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/pages/_error.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");
exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));
var _head = _interopRequireDefault(__webpack_require__(/*! ../next-server/lib/head */ "../next-server/lib/head"));
const statusCodes = {
  400: 'Bad Request',
  404: 'This page could not be found',
  405: 'Method Not Allowed',
  500: 'Internal Server Error'
};
function _getInitialProps({
  res,
  err
}) {
  const statusCode = res && res.statusCode ? res.statusCode : err ? err.statusCode : 404;
  return {
    statusCode
  };
} /**
  * `Error` component used for handling errors.
  */
class Error extends _react.default.Component {
  render() {
    const {
      statusCode
    } = this.props;
    const title = this.props.title || statusCodes[statusCode] || 'An unexpected error has occurred';
    return /*#__PURE__*/_react.default.createElement("div", {
      style: styles.error
    }, /*#__PURE__*/_react.default.createElement(_head.default, null, /*#__PURE__*/_react.default.createElement("title", null, statusCode, ": ", title)), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("style", {
      dangerouslySetInnerHTML: {
        __html: 'body { margin: 0 }'
      }
    }), statusCode ? /*#__PURE__*/_react.default.createElement("h1", {
      style: styles.h1
    }, statusCode) : null, /*#__PURE__*/_react.default.createElement("div", {
      style: styles.desc
    }, /*#__PURE__*/_react.default.createElement("h2", {
      style: styles.h2
    }, title, "."))));
  }
}
exports.default = Error;
Error.displayName = 'ErrorPage';
Error.getInitialProps = _getInitialProps;
Error.origGetInitialProps = _getInitialProps;
const styles = {
  error: {
    color: '#000',
    background: '#fff',
    fontFamily: '-apple-system, BlinkMacSystemFont, Roboto, "Segoe UI", "Fira Sans", Avenir, "Helvetica Neue", "Lucida Grande", sans-serif',
    height: '100vh',
    textAlign: 'center',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center'
  },
  desc: {
    display: 'inline-block',
    textAlign: 'left',
    lineHeight: '49px',
    height: '49px',
    verticalAlign: 'middle'
  },
  h1: {
    display: 'inline-block',
    borderRight: '1px solid rgba(0, 0, 0,.3)',
    margin: 0,
    marginRight: '20px',
    padding: '10px 23px 10px 0',
    fontSize: '24px',
    fontWeight: 500,
    verticalAlign: 'top'
  },
  h2: {
    fontSize: '14px',
    fontWeight: 'normal',
    lineHeight: 'inherit',
    margin: 0,
    padding: 0
  }
};

/***/ }),

/***/ "./node_modules/next/error.js":
/*!************************************!*\
  !*** ./node_modules/next/error.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/pages/_error */ "./node_modules/next/dist/pages/_error.js")


/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/client/link */ "./node_modules/next/dist/client/link.js")


/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./pages/model/profile/index.tsx":
/*!***************************************!*\
  !*** ./pages/model/profile/index.tsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_video_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/video/actions */ "./src/redux/video/actions.ts");
/* harmony import */ var _redux_feed_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @redux/feed/actions */ "./src/redux/feed/actions.ts");
/* harmony import */ var _redux_product_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @redux/product/actions */ "./src/redux/product/actions.ts");
/* harmony import */ var _redux_gallery_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @redux/gallery/actions */ "./src/redux/gallery/actions.ts");
/* harmony import */ var _redux_user_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @redux/user/actions */ "./src/redux/user/actions.ts");
/* harmony import */ var src_services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/services */ "./src/services/index.ts");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/head */ "next/head");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
/* harmony import */ var _components_post_scroll_list__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @components/post/scroll-list */ "./src/components/post/scroll-list.tsx");
/* harmony import */ var _components_post_search_bar__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @components/post/search-bar */ "./src/components/post/search-bar.tsx");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var next_error__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! next/error */ "./node_modules/next/error.js");
/* harmony import */ var next_error__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(next_error__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _components_performer_performer_less__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @components/performer/performer.less */ "./src/components/performer/performer.less");
/* harmony import */ var _components_performer_performer_less__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_components_performer_performer_less__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var src_constants__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/constants */ "./src/constants.ts");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _services_config__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @services/config */ "./src/services/config.ts");
/* harmony import */ var _components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @components/ui/shared/AppIcon */ "./src/components/ui/shared/AppIcon.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! react-copy-to-clipboard */ "react-copy-to-clipboard");
/* harmony import */ var react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var _components_modals_goLiveModal__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @components/modals/goLiveModal */ "./src/components/modals/goLiveModal.tsx");
/* harmony import */ var _components_common_ProfileFollowButton__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @components/common/ProfileFollowButton */ "./src/components/common/ProfileFollowButton.tsx");
/* harmony import */ var _redux_performer_actions__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @redux/performer/actions */ "./src/redux/performer/actions.ts");
/* harmony import */ var _components_modals_donateRubiesModal__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @components/modals/donateRubiesModal */ "./src/components/modals/donateRubiesModal.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\pages\\model\\profile\\index.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





























const TipPerformerForm = next_dynamic__WEBPACK_IMPORTED_MODULE_19___default()(() => __webpack_require__.e(/*! import() */ 10).then(__webpack_require__.bind(null, /*! @components/performer/tip-form */ "./src/components/performer/tip-form.tsx")), {
  ssr: false,
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/performer/tip-form */ "./src/components/performer/tip-form.tsx")],
    modules: ['@components/performer/tip-form']
  }
});
const initialFilter = {
  q: '',
  fromDate: '',
  toDate: '',
  sortBy: '',
  sort: ''
};
class PerformerProfile extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "subscriptionType", 'monthly');
    _defineProperty(this, "state", {
      itemPerPage: 12,
      page: 0,
      openTipModal: false,
      submiting: false,
      tab: 'video',
      filter: initialFilter,
      isGrid: true,
      totalNotReadMessage: 0,
      loading: false,
      copied: false,
      isVisiblePromote: false,
      dropdownValue: "updatedAt"
    });
    _defineProperty(this, "handleDropDown", async value => {
      await this.loadItems();
      this.setState({
        dropdownValue: value
      });
    });
    _defineProperty(this, "handleJoinStream", () => {
      const {
        currentUser,
        performer
      } = this.props;
      if (!(currentUser !== null && currentUser !== void 0 && currentUser._id)) {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Please log in or register!');
        return;
      }
      if (!(performer !== null && performer !== void 0 && performer.isSubscribed)) {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Please subscribe to this model!');
        return;
      }
      next_router__WEBPACK_IMPORTED_MODULE_15___default.a.push({
        pathname: '/streaming/details',
        query: {
          performer: JSON.stringify(performer),
          username: (performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)
        }
      }, `/stream/${(performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)}`);
    });
    _defineProperty(this, "handleJoinChat", () => {
      const {
        currentUser,
        performer
      } = this.props;
      if (!(currentUser !== null && currentUser !== void 0 && currentUser._id)) {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Please log in or register!');
        return;
      }
      next_router__WEBPACK_IMPORTED_MODULE_15___default.a.push({
        pathname: '/private-waiting-room',
        query: {
          performer: JSON.stringify(performer),
          username: (performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)
        }
      }, `/private-waiting-room/${(performer === null || performer === void 0 ? void 0 : performer.username) || (performer === null || performer === void 0 ? void 0 : performer._id)}`);
    });
  }
  static async getInitialProps({
    ctx
  }) {
    const {
      query
    } = ctx;
    try {
      const [performer, countries] = await Promise.all([src_services__WEBPACK_IMPORTED_MODULE_8__["performerService"].findOne(query.username, {
        Authorization: ctx.token || ''
      }), src_services__WEBPACK_IMPORTED_MODULE_8__["utilsService"].countriesList()]);
      return {
        performer: performer === null || performer === void 0 ? void 0 : performer.data,
        countries: (countries === null || countries === void 0 ? void 0 : countries.data) || [],
        query
      };
    } catch (e) {
      const error = await Promise.resolve(e);
      return {
        error
      };
    }
  }
  async componentDidMount() {
    const el = document.querySelector('.main-container');
    const queryParams = new URLSearchParams(window.location.search);
    const value = queryParams.get('tab');
    if (value) {
      this.handleTabChange(value);
      if (value === 'video') window.scrollBy(0, 300);
    }
    const {
      performer,
      query
    } = this.props;
    if (query && query.tab) {
      this.setState({
        tab: query.tab
      });
    }
    if (performer) {
      this.loadItems();
      // this.getBrackets();
    }
  }
  componentDidUpdate(prevProps, prevState) {
    const {
      tab
    } = this.state;
    if (tab !== prevState.tab) {
      this.loadItems();
    }
    const {
      currentUser,
      performer
    } = this.props;
    if (currentUser !== prevProps.currentUser) {
      if ((currentUser === null || currentUser === void 0 ? void 0 : currentUser._id) !== (performer === null || performer === void 0 ? void 0 : performer._id) && currentUser !== null && currentUser !== void 0 && currentUser.roles.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_HOST_PRIVATE) && currentUser !== null && currentUser !== void 0 && currentUser.roles.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_ALL_RISING_MODEL) && performer !== null && performer !== void 0 && performer.roles.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_HOST_CROSSPROMOTE)) {
        this.setState({
          isVisiblePromote: true
        });
      } else {
        this.setState({
          isVisiblePromote: false
        });
      }
    }
  }
  async componentWillUnmount() {
    const {
      resetFeeds: handleResetFeed
    } = this.props;
    handleResetFeed();
  }
  async handleCountNotificationMessage() {
    const data = await (await src_services__WEBPACK_IMPORTED_MODULE_8__["messageService"].countTotalNotRead()).data;
    if (data) {
      this.setState({
        totalNotReadMessage: data.total
      });
    }
  }
  handleViewWelcomeVideo() {
    const {
      performer
    } = this.props;
    const notShownWelcomeVideos = localStorage.getItem('notShownWelcomeVideos');
    if (!(notShownWelcomeVideos !== null && notShownWelcomeVideos !== void 0 && notShownWelcomeVideos.includes(performer._id))) {
      const Ids = JSON.parse(notShownWelcomeVideos || '[]');
      const values = Array.isArray(Ids) ? Ids.concat([performer._id]) : [performer._id];
      localStorage.setItem('notShownWelcomeVideos', JSON.stringify(values));
    }
  }
  async handleDeleteFeed(feed) {
    const {
      currentUser,
      removeFeedSuccess: handleRemoveFeed
    } = this.props;
    if ((currentUser === null || currentUser === void 0 ? void 0 : currentUser._id) !== feed.fromSourceId) {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Permission denied');
      return;
    }
    if (!window.confirm('All earnings are related to this post will be refunded. Are you sure to remove?')) {
      return;
    }
    try {
      await src_services__WEBPACK_IMPORTED_MODULE_8__["feedService"].delete(feed._id);
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].success('Deleted post success');
      handleRemoveFeed({
        feed
      });
    } catch {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Something went wrong, please try again later');
    }
  }
  async handleFilterSearch(values) {
    const {
      filter
    } = this.state;
    await this.setState({
      filter: _objectSpread(_objectSpread({}, filter), values)
    });
    this.loadItems();
  }
  async handleTabChange(val) {
    await this.setState({
      tab: val,
      page: 0,
      filter: initialFilter
    });
  }
  async loadItems() {
    const {
      performer,
      getFeeds: handleGetFeeds,
      currentUser
    } = this.props;
    const {
      itemPerPage,
      filter,
      tab,
      page
    } = this.state;
    const query = {
      offset: page,
      limit: itemPerPage,
      performerId: performer === null || performer === void 0 ? void 0 : performer._id,
      sortBy: filter.sortBy || '',
      sort: filter.sort || '',
      fromDate: filter.fromDate || '',
      toDate: filter.toDate || '',
      status: performer._id !== currentUser._id ? 'active' : ''
    };
    handleGetFeeds(_objectSpread(_objectSpread({}, query), {}, {
      type: tab
    }));
  }
  async sendTip(price, isConfirm) {
    const {
      performer,
      currentUser,
      updateBalance: handleUpdateBalance
    } = this.props;
    if (!isConfirm) {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error({
        key: 'send-tip',
        content: 'Please confirm before send gift !! '
      });
      return;
    }
    if ((currentUser === null || currentUser === void 0 ? void 0 : currentUser.rubyBalance) < price) {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('You have an insufficient ruby balance. Please top up.');
      next_router__WEBPACK_IMPORTED_MODULE_15___default.a.push('/ruby-package');
      return;
    }
    try {
      await this.setState({
        submiting: true
      });
      await src_services__WEBPACK_IMPORTED_MODULE_8__["tokenTransctionService"].sendTip(performer === null || performer === void 0 ? void 0 : performer._id, {
        performerId: performer === null || performer === void 0 ? void 0 : performer._id,
        price
      });
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].success({
        key: 'send-tip-succes',
        content: 'Thank you for the tip'
      });
      handleUpdateBalance({
        token: -price,
        type: 'ruby-balance'
      });
    } catch (e) {
      const err = await e;
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(err.message || 'error occured, please try again later');
    } finally {
      this.setState({
        submiting: false,
        openTipModal: false
      });
    }
  }
  async loadMoreItem() {
    const {
      page,
      itemPerPage,
      tab,
      filter
    } = this.state;
    const {
      moreFeeds: getMoreFeed,
      performer
    } = this.props;
    const query = {
      limit: itemPerPage,
      performerId: performer._id,
      sortBy: filter.sortBy || '',
      sort: filter.sort || '',
      fromDate: filter.fromDate || '',
      toDate: filter.toDate || ''
    };
    this.setState({
      page: page + 1
    }, () => getMoreFeed(_objectSpread(_objectSpread({
      offset: (page + 1) * itemPerPage
    }, query), {}, {
      type: tab
    })));
  }
  onCopy() {
    this.setState({
      copied: true
    });
    setTimeout(() => this.setState({
      copied: false
    }), 2500);
  }
  handleNavigate(route, index) {
    next_router__WEBPACK_IMPORTED_MODULE_15___default.a.push(route);
  }
  render() {
    var _performer$roles, _performer$stats, _performer$roles2, _performer$roles3, _performer$roles4, _performer$roles5, _currentUser$roles, _currentUser$roles2;
    const {
      error,
      performer,
      ui,
      currentUser,
      feedState,
      countries,
      modals,
      updateModals,
      onFollow
    } = this.props;
    if (error) {
      return __jsx(next_error__WEBPACK_IMPORTED_MODULE_16___default.a, {
        statusCode: (error === null || error === void 0 ? void 0 : error.statusCode) || 404,
        title: (error === null || error === void 0 ? void 0 : error.message) || "Sorry, we can't find this page",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 379,
          columnNumber: 9
        }
      });
    }
    const {
      items: feeds = [],
      requesting: loadingFeed
    } = feedState;
    const {
      openTipModal,
      submiting,
      totalNotReadMessage,
      isGrid,
      loading,
      isVisiblePromote,
      tab
    } = this.state;
    const config = Object(_services_config__WEBPACK_IMPORTED_MODULE_20__["getGlobalConfig"])();
    console.log(currentUser);
    return (
      // <Layout>
      //   <Head>
      //     <title>
      //       {performer?.username}
      //       {' '}
      //       |
      //       {' '}
      //       {ui && capitalizeFirstLetter(ui.siteName)}
      //     </title>
      //     <meta
      //       name="keywords"
      //       content={`${performer?.username}, ${performer?.name}`}
      //     />
      //     <meta name="description" content={performer?.bio} />
      //     <meta property="og:type" content="website" />
      //     <meta
      //       property="og:title"
      //       content={`${ui?.siteName} | ${performer?.name || performer?.username
      //         }`}
      //     />
      //     <meta
      //       property="og:image"
      //       content={performer?.avatar || '/static/no-avatar.png'}
      //     />
      //     <meta property="og:description" content={performer?.bio} />
      //     <meta name="twitter:card" content="summary" />
      //     <meta
      //       name="twitter:title"
      //       content={`${ui?.siteName} | ${performer?.name || performer?.username
      //         }`}
      //     />
      //     <meta
      //       name="twitter:image"
      //       content={performer?.avatar || '/static/no-avatar.png'}
      //     />
      //     <meta name="twitter:description" content={performer?.bio} />
      //   </Head>
      //   <div className="main-container">
      //     <div
      //       className="top-profile"
      //       style={{
      //         backgroundImage: `url('${performer?.cover || '/static/banner-image.jpg'
      //           }')`
      //       }}
      //     >
      //       <div className="bg-2nd">
      //         <div className="top-banner" />
      //       </div>
      //     </div>
      //     <div className="main-profile">
      //       <div className="fl-col ">
      //         <Image
      //           alt="main-avt"
      //           src={performer?.avatar || '/static/no-avatar.png'}
      //           fallback="/static/no-avatar.png"
      //         />
      //         {currentUser?._id !== performer?._id && (
      //           <span
      //             className={
      //               performer?.isOnline > 0
      //                 ? 'online-status'
      //                 : 'online-status off'
      //             }
      //           />
      //         )}
      //         <div className="m-user-name">
      //           <h4 className="liveStatus">
      //             {performer?.name || 'N/A'}
      //             &nbsp;
      //             {performer?.verifiedAccount && <TickIcon style={{ color: 'green' }} />}
      //             &nbsp;
      //             {currentUser?._id === performer?._id && (
      //               <Link href="/model/account">
      //                 <a href="/model/account">
      //                   <EditOutlined className="primary-color" />
      //                 </a>
      //               </Link>
      //             )}
      //             {performer?.live > 0
      //               && currentUser?._id !== performer?._id && (
      //                 <a
      //                   aria-hidden
      //                   onClick={this.handleJoinStream}
      //                   className="live-status"
      //                 >
      //                   Live
      //                 </a>
      //               )}
      //             {performer?.privateChat > 0 && performer.isOnline > 0
      //               && currentUser?._id !== performer?._id
      //               && performer?.live === 0 && (
      //                 <a
      //                   aria-hidden
      //                   onClick={this.handleJoinChat}
      //                   className="live-status"
      //                 >
      //                   Private Chat
      //                 </a>
      //               )}
      //           </h4>
      //           <h6>
      //             @
      //             {performer?.username || 'N/A'}
      //           </h6>
      //         </div>
      //         <div className="m-user-name" />
      //         {currentUser?._id !== performer._id && (
      //           <ButtonFollow
      //             performer={performer}
      //             isHideOnClick={false}
      //             targetId={performer._id}
      //             sourceId={currentUser?._id}
      //             isFollow={performer.isFollowed}
      //             getPerformerList={() => { }}
      //           />
      //         )}
      //       </div>
      //       <div className="btn-grp">
      //         <div>
      //           {currentUser && currentUser?.roles && (
      //             <Tooltip title="Internal Profile">
      //               <Button
      //                 hidden={!currentUser?.roles.includes('admin')}
      //                 className="normal"
      //               >
      //                 <a
      //                   href={`${config.NEXT_PUBLIC_ADMIN_URL}/user/internal-profile?performerId=${performer._id}`}
      //                 >
      //                   <AuditOutlined />
      //                 </a>
      //               </Button>
      //             </Tooltip>
      //           )}
      //           {performer.live > 0 && (
      //             <Tooltip title="Go Live">
      //               <Button
      //                 hidden={currentUser?._id === performer._id}
      //                 className="normal"
      //                 href={`/stream/${performer.username}`}
      //                 onClick={() => {
      //                   Router.push(`/stream/${performer.username}`);
      //                 }}
      //               >
      //                 <VideoCameraOutlined />
      //               </Button>
      //             </Tooltip>
      //           )}
      //           {(performer.privateChat > 0 && performer.isOnline === 1) && (
      //             <Tooltip title="Private Chat">
      //               <Button
      //                 hidden={currentUser?._id === performer._id}
      //                 className="normal"
      //                 onClick={() => {
      //                   Router.push(
      //                     `/private-waiting-room/${performer.username}`
      //                   );
      //                 }}
      //               >
      //                 <MessageOutlined />
      //               </Button>
      //             </Tooltip>
      //           )}

      //           {currentUser?._id && (
      //             <Tooltip title="Send Message">
      //               <Button
      //                 hidden={currentUser?._id === performer._id}
      //                 className="normal"
      //                 onClick={() => Router.push({
      //                   pathname: '/messages',
      //                   query: {
      //                     toSource: 'performer',
      //                     toId: performer?._id || ''
      //                   }
      //                 })}
      //               >
      //                 <MessageIcon />
      //               </Button>
      //             </Tooltip>
      //           )}
      //           <Tooltip title="Direct Tip">
      //             <Button
      //               hidden={currentUser?._id === performer._id}
      //               className="normal"
      //               onClick={() => this.setState({ openTipModal: !openTipModal })}
      //             >
      //               <DollarOutlined />
      //             </Button>
      //           </Tooltip>
      //           <Tooltip title="Cross Promotion">
      //             <Button
      //               hidden={currentUser?.analytics?.diamondsEarned < 1000 || !currentUser?.roles?.includes(ROLE_PERMISSIONS.ROLE_HOST_PRIVATE) || !performer?.roles?.includes(ROLE_PERMISSIONS.ROLE_HOST_CROSSPROMOTE) || (currentUser?._id === performer._id) || loading}
      //               className="normal"
      //               onClick={() => Router.push({
      //                 pathname: '/cross-promotion',
      //                 query: { id: performer?._id }
      //               })}
      //             >
      //               <ShakeHandIcon />
      //             </Button>
      //           </Tooltip>
      //           <Tooltip title="Messages">
      //             <Button
      //               hidden={currentUser?._id !== performer._id}
      //               className="normal"
      //               onClick={() => Router.push({
      //                 pathname: '/messages'
      //               })}
      //             >
      //               <MailOutlined />
      //               <Badge className="cart-total" count={totalNotReadMessage} />
      //             </Button>
      //           </Tooltip>
      //           <Popover
      //             title="Share to social network"
      //             content={(
      //               <ShareButtons
      //                 siteName={ui.siteName}
      //                 performer={performer}
      //               />
      //             )}
      //           >
      //             <Button className="normal">
      //               <ShareIcon />
      //             </Button>
      //           </Popover>
      //         </div>
      //       </div>
      //       <div
      //         className={
      //           currentUser?.isPerformer ? 'mar-0 pro-desc' : 'pro-desc'
      //         }
      //       >
      //         {/* Fan Counter */}
      //         <PerformerInfo
      //           countries={countries}
      //           performer={performer}
      //           ranking={performer.ranking}
      //         />
      //       </div>
      //     </div>
      //     <div className="model-content">
      //       <Tabs
      //         defaultActiveKey="photo"
      //         activeKey={tab}
      //         size="large"
      //         onTabClick={(t: string) => {
      //           this.handleTabChange(t);
      //         }}
      //       >
      //         <TabPane
      //           tab={(
      //             <Link href={{ pathname: '/model/profile', query: { username: performer?.username || performer?._id, tab: 'video' } }}>
      //               <a href={`/model/profile?username=${performer?.username || performer?._id}&tab=video`}>
      //                 <VideoCameraOutlined />
      //                 {' '}
      //                 {performer._id === currentUser._id ? performer.stats.totalVideos : performer.stats.totalActiveVideos}
      //               </a>
      //             </Link>
      //           )}
      //           key="video"
      //         >
      //           <div className="heading-tab">
      //             <SearchPostBar
      //               searching={loadingFeed}
      //               tab={tab}
      //               handleSearch={this.handleFilterSearch.bind(this)}
      //               handleViewGrid={(val) => this.setState({ isGrid: val })}
      //             />
      //           </div>
      //           {tab === 'video' && (
      //             <div
      //               className="main-container"
      //             >
      //               <ScrollListFeed
      //                 items={feeds}
      //                 loading={loadingFeed}
      //                 canLoadmore
      //                 loadMore={this.loadMoreItem.bind(this)}
      //                 isGrid={isGrid}
      //                 performer={performer}
      //                 tab={tab}
      //               />
      //             </div>
      //           )}
      //         </TabPane>
      //         <TabPane
      //           tab={(
      //             <Link href={{ pathname: '/model/profile', query: { username: performer?.username || performer?._id, tab: 'photo' } }}>
      //               <a href={`/model/profile?username=${performer?.username || performer?._id}&tab=photo`}>
      //                 <PictureOutlined />
      //                 {' '}
      //                 {performer._id === currentUser._id ? performer.stats.totalPhotos : performer.stats.totalActivePhotos}
      //               </a>
      //             </Link>
      //           )}
      //           key="photo"
      //         >
      //           <div className="heading-tab">
      //             <SearchPostBar
      //               searching={loadingFeed}
      //               tab={tab}
      //               handleSearch={this.handleFilterSearch.bind(this)}
      //               handleViewGrid={(val) => this.setState({ isGrid: val })}
      //             />
      //           </div>
      //           {tab === 'photo' && (
      //             <div className="main-container">
      //               <ScrollListFeed
      //                 items={feeds}
      //                 loading={loadingFeed}
      //                 canLoadmore
      //                 loadMore={this.loadMoreItem.bind(this)}
      //                 isGrid={isGrid}
      //                 performer={performer}
      //                 tab={tab}
      //               />
      //             </div>
      //           )}
      //         </TabPane>
      //       </Tabs>
      //     </div>
      //   </div>
      //   <Modal
      //     key="tip_performer"
      //     className="subscription-modal"
      //     visible={openTipModal}
      //     centered
      //     onOk={() => this.setState({ openTipModal: false })}
      //     footer={null}
      //     width={380}
      //     title={null}
      //     onCancel={() => this.setState({ openTipModal: false })}
      //   >
      //     <TipPerformerForm
      //       performer={performer}
      //       submiting={submiting}
      //       onFinish={this.sendTip.bind(this)}
      //     />
      //   </Modal>
      //   {submiting && <Loader customText="We are processing your payment..." />}
      // </Layout>
      __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx(next_head__WEBPACK_IMPORTED_MODULE_9___default.a, {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 744,
          columnNumber: 9
        }
      }, __jsx("title", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 745,
          columnNumber: 11
        }
      }, ui && ui.siteName, ' ', "| Model Profile")), __jsx("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 752,
          columnNumber: 9
        }
      }, __jsx("div", {
        className: "p-5 bg-purple-900 md:h-36 xl:h-72 rounded-xl",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 754,
          columnNumber: 11
        }
      }, __jsx("div", {
        className: "flex items-start justify-between h-full md:justify-start",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 755,
          columnNumber: 13
        }
      }, __jsx("div", {
        className: "inline-flex items-center",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 756,
          columnNumber: 15
        }
      }, __jsx("span", {
        className: "relative flex w-3 h-3 mr-2",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 757,
          columnNumber: 17
        }
      }, __jsx("span", {
        className: "relative inline-flex w-3 h-3 rounded-full bg-alertGreen",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 759,
          columnNumber: 19
        }
      })), __jsx("span", {
        className: "text-sm text-white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 762,
          columnNumber: 17
        }
      }, "Active")), __jsx(_components_common_ProfileFollowButton__WEBPACK_IMPORTED_MODULE_26__["default"], {
        performer: performer,
        currentUser: currentUser,
        onFollow: onFollow,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 768,
          columnNumber: 15
        }
      }))), __jsx("div", {
        className: "gap-5 pl-5 mb-4 -mt-8 md:-mt-12 xl:mb-8 xl:-mt-16",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 772,
          columnNumber: 11
        }
      }, __jsx("div", {
        className: "flex gap-4",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 773,
          columnNumber: 13
        }
      }, __jsx("div", {
        className: "flex-shrink-0 w-16 h-16 overflow-hidden border-4 border-white rounded-full md:w-32 md:h-32 xl:w-44 xl:h-44",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 774,
          columnNumber: 15
        }
      }, __jsx("img", {
        className: "object-cover w-full h-full",
        src: performer.avatar || '/static/no-avatar.png',
        alt: "User avatar photo",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 775,
          columnNumber: 17
        }
      })), __jsx("div", {
        className: "flex-shrink-0 hidden pt-16 mr-auto xl:pt-20 md:block",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 778,
          columnNumber: 15
        }
      }, __jsx("div", {
        className: "flex items-center gap-2",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 779,
          columnNumber: 17
        }
      }, __jsx("h2", {
        className: "text-2xl text-gray-900 xl:text-3xl",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 780,
          columnNumber: 19
        }
      }, performer.firstName, " ", performer.lastName), ((_performer$roles = performer.roles) === null || _performer$roles === void 0 ? void 0 : _performer$roles.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_FAN_VERIFIED)) && __jsx("svg", {
        className: "block w-8 h-8",
        xmlns: "http://www.w3.org/2000/svg",
        width: "30",
        height: "30",
        viewBox: "0 0 30 30",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 784,
          columnNumber: 85
        }
      }, __jsx("g", {
        clipPath: "url(#clip0_2241_45931)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 785,
          columnNumber: 21
        }
      }, __jsx("mask", {
        id: "mask0_2241_45931",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "30",
        height: "30",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 786,
          columnNumber: 23
        }
      }, __jsx("rect", {
        width: "30",
        height: "30",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 787,
          columnNumber: 25
        }
      })), __jsx("g", {
        mask: "url(#mask0_2241_45931)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 789,
          columnNumber: 23
        }
      }, __jsx("path", {
        d: "M10.8438 27.75L8.5 23.875L4.09375 22.875L4.5 18.375L1.5 15L4.5 11.625L4.09375 7.125L8.5 6.125L10.8438 2.25L15 4.03125L19.1562 2.25L21.5 6.125L25.9062 7.125L25.5 11.625L28.5 15L25.5 18.375L25.9062 22.875L21.5 23.875L19.1562 27.75L15 25.9688L10.8438 27.75ZM13.4062 19.5L20.8438 12.0938L19.25 10.5L13.4062 16.3125L10.75 13.6875L9.15625 15.2812L13.4062 19.5Z",
        fill: "#2CB1EC",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 790,
          columnNumber: 25
        }
      }))), __jsx("defs", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 793,
          columnNumber: 21
        }
      }, __jsx("clipPath", {
        id: "clip0_2241_45931",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 794,
          columnNumber: 23
        }
      }, __jsx("rect", {
        width: "30",
        height: "30",
        fill: "white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 795,
          columnNumber: 25
        }
      })))), __jsx(next_link__WEBPACK_IMPORTED_MODULE_14___default.a, {
        href: "/model/account",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 800,
          columnNumber: 19
        }
      }, __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        className: "hidden sm:block",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 801,
          columnNumber: 21
        }
      }, __jsx("svg", {
        className: "w-6 h-6",
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 802,
          columnNumber: 23
        }
      }, __jsx("path", {
        d: "M4.99997 19H6.2615L16.4981 8.7634L15.2366 7.50188L4.99997 17.7385V19ZM3.5 20.5V17.1154L16.6904 3.93078C16.8416 3.79343 17.0086 3.68729 17.1913 3.61237C17.374 3.53746 17.5656 3.5 17.7661 3.5C17.9666 3.5 18.1608 3.53558 18.3488 3.60675C18.5368 3.6779 18.7032 3.79103 18.848 3.94615L20.0692 5.18268C20.2243 5.32754 20.3349 5.49424 20.4009 5.68278C20.4669 5.87129 20.5 6.05981 20.5 6.24833C20.5 6.44941 20.4656 6.64131 20.3969 6.82403C20.3283 7.00676 20.219 7.17373 20.0692 7.32495L6.88458 20.5H3.5ZM15.8563 8.1437L15.2366 7.50188L16.4981 8.7634L15.8563 8.1437Z",
        fill: "#121212",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 803,
          columnNumber: 25
        }
      }))))), __jsx("div", {
        className: "flex items-end gap-2 mb-4 md:mb-7",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 809,
          columnNumber: 17
        }
      }, __jsx("span", {
        className: "text-base text-black ",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 810,
          columnNumber: 19
        }
      }, "@", performer.username, " "), __jsx(react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_23__["CopyToClipboard"], {
        onCopy: () => this.onCopy(),
        text: `@${performer.username}`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 812,
          columnNumber: 19
        }
      }, __jsx("button", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 813,
          columnNumber: 21
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "20",
        height: "20",
        viewBox: "0 0 20 20",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 814,
          columnNumber: 23
        }
      }, __jsx("g", {
        clipPath: "url(#clip0_3328_61555)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 815,
          columnNumber: 25
        }
      }, __jsx("mask", {
        id: "mask0_3328_61555",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "20",
        height: "20",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 816,
          columnNumber: 27
        }
      }, __jsx("rect", {
        width: "20",
        height: "20",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 817,
          columnNumber: 29
        }
      })), __jsx("g", {
        mask: "url(#mask0_3328_61555)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 819,
          columnNumber: 27
        }
      }, __jsx("path", {
        d: "M7.5 15C7.0875 15 6.73438 14.8531 6.44062 14.5594C6.14687 14.2656 6 13.9125 6 13.5V3.5C6 3.0875 6.14687 2.73438 6.44062 2.44063C6.73438 2.14688 7.0875 2 7.5 2H15.5C15.9125 2 16.2656 2.14688 16.5594 2.44063C16.8531 2.73438 17 3.0875 17 3.5V13.5C17 13.9125 16.8531 14.2656 16.5594 14.5594C16.2656 14.8531 15.9125 15 15.5 15H7.5ZM7.5 13.5H15.5V3.5H7.5V13.5ZM4.5 18C4.0875 18 3.73437 17.8531 3.44062 17.5594C3.14687 17.2656 3 16.9125 3 16.5V5H4.5V16.5H14V18H4.5Z",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 820,
          columnNumber: 29
        }
      }))), __jsx("defs", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 823,
          columnNumber: 25
        }
      }, __jsx("clipPath", {
        id: "clip0_3328_61555",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 824,
          columnNumber: 27
        }
      }, __jsx("rect", {
        width: "20",
        height: "20",
        fill: "white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 825,
          columnNumber: 29
        }
      })))))), this.state.copied ? __jsx("span", {
        className: "text-xs text-gray-500",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 832,
          columnNumber: 40
        }
      }, "Copied.") : null), __jsx("button", {
        onClick: () => this.handleNavigate(`/model/list-follow?id=${performer._id} `, 2),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 835,
          columnNumber: 16
        }
      }, __jsx("span", {
        className: "text-base font-semibold text-black",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 836,
          columnNumber: 16
        }
      }, " ", (performer === null || performer === void 0 ? void 0 : (_performer$stats = performer.stats) === null || _performer$stats === void 0 ? void 0 : _performer$stats.totalFollower) || 0, ' ', " fans "))), __jsx("div", {
        className: "hidden pt-16 xl:pt-20 md:block",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 842,
          columnNumber: 15
        }
      }, __jsx("div", {
        className: "flex flex-wrap justify-end gap-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 843,
          columnNumber: 17
        }
      }, __jsx("div", {
        className: "inline-flex gap-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 844,
          columnNumber: 19
        }
      }, ((_performer$roles2 = performer.roles) === null || _performer$roles2 === void 0 ? void 0 : _performer$roles2.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_HOST_LIVE)) && __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_22__["AppButton"], {
        onClick: () => updateModals({
          isGoLiveModalOpen: true
        }),
        className: "px-6",
        variant: "error",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 845,
          columnNumber: 84
        }
      }, "Go Live"), ((_performer$roles3 = performer.roles) === null || _performer$roles3 === void 0 ? void 0 : _performer$roles3.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_HOST_PRIVATE)) && __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_22__["AppButton"], {
        onClick: () => updateModals({
          isGoLiveModalOpen: true
        }),
        className: "px-6",
        variant: "error",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 849,
          columnNumber: 87
        }
      }, "Go Private")), __jsx(_components_modals_donateRubiesModal__WEBPACK_IMPORTED_MODULE_28__["default"], {
        isOpen: modals.isDonateRubiesModalOpen,
        onClose: () => updateModals({
          isDonateRubiesModalOpen: false
        }),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 853,
          columnNumber: 19
        }
      }), __jsx("div", {
        className: "flex gap-x-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 855,
          columnNumber: 19
        }
      }, ((_performer$roles4 = performer.roles) === null || _performer$roles4 === void 0 ? void 0 : _performer$roles4.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_ADMIN)) && __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        style: {
          border: "1px solid #d897eb"
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 857,
          columnNumber: 80
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 860,
          columnNumber: 21
        }
      }, __jsx("mask", {
        id: "mask0_2923_60017",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "24",
        height: "24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 861,
          columnNumber: 23
        }
      }, __jsx("rect", {
        width: "24",
        height: "24",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 862,
          columnNumber: 25
        }
      })), __jsx("g", {
        mask: "url(#mask0_2923_60017)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 864,
          columnNumber: 23
        }
      }, __jsx("path", {
        d: "M17 17.0001C17.4167 17.0001 17.7708 16.8542 18.0625 16.5626C18.3542 16.2709 18.5 15.9167 18.5 15.5001C18.5 15.0834 18.3542 14.7292 18.0625 14.4376C17.7708 14.1459 17.4167 14.0001 17 14.0001C16.5833 14.0001 16.2292 14.1459 15.9375 14.4376C15.6458 14.7292 15.5 15.0834 15.5 15.5001C15.5 15.9167 15.6458 16.2709 15.9375 16.5626C16.2292 16.8542 16.5833 17.0001 17 17.0001ZM17 20.0001C17.523 20.0001 17.9996 19.8808 18.4298 19.6423C18.8599 19.4038 19.2115 19.0846 19.4845 18.6846C19.1115 18.4616 18.7167 18.2917 18.3 18.1751C17.8833 18.0584 17.45 18.0001 17 18.0001C16.55 18.0001 16.1167 18.0584 15.7 18.1751C15.2833 18.2917 14.8885 18.4616 14.5155 18.6846C14.7885 19.0846 15.1401 19.4038 15.5703 19.6423C16.0004 19.8808 16.477 20.0001 17 20.0001ZM12 21.4808C9.83717 20.891 8.0465 19.6179 6.628 17.6616C5.20933 15.7052 4.5 13.5181 4.5 11.1001V5.34632L12 2.53857L19.5 5.34632V11.0116C19.2667 10.9167 19.0218 10.8312 18.7653 10.7548C18.5089 10.6787 18.2538 10.6187 18 10.5751V6.39057L12 4.15007L6 6.39057V11.1001C6 11.9859 6.125 12.851 6.375 13.6953C6.625 14.5395 6.96958 15.3286 7.40875 16.0626C7.84775 16.7966 8.37242 17.4556 8.98275 18.0396C9.59292 18.6236 10.2551 19.0899 10.9692 19.4386L10.9983 19.4288C11.1302 19.7955 11.3013 20.1468 11.5115 20.4828C11.7218 20.8187 11.9609 21.1237 12.2287 21.3981C12.1866 21.4109 12.1485 21.4247 12.1145 21.4396C12.0805 21.4542 12.0423 21.468 12 21.4808ZM17 21.5001C15.7513 21.5001 14.6892 21.0622 13.8135 20.1866C12.9378 19.3109 12.5 18.2487 12.5 17.0001C12.5 15.7514 12.9378 14.6892 13.8135 13.8136C14.6892 12.9379 15.7513 12.5001 17 12.5001C18.2487 12.5001 19.3108 12.9379 20.1865 13.8136C21.0622 14.6892 21.5 15.7514 21.5 17.0001C21.5 18.2487 21.0622 19.3109 20.1865 20.1866C19.3108 21.0622 18.2487 21.5001 17 21.5001Z",
        fill: "#1C1B1F",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 865,
          columnNumber: 25
        }
      })))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        onClick: () => updateModals({
          isDonateRubiesModalOpen: true
        }),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 871,
          columnNumber: 21
        }
      }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_11__["GiftIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 872,
          columnNumber: 21
        }
      })), ((_performer$roles5 = performer.roles) === null || _performer$roles5 === void 0 ? void 0 : _performer$roles5.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_HOST_CROSSPROMOTE)) && ((_currentUser$roles = currentUser.roles) === null || _currentUser$roles === void 0 ? void 0 : _currentUser$roles.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_ALL_RISING_MODEL)) && ((_currentUser$roles2 = currentUser.roles) === null || _currentUser$roles2 === void 0 ? void 0 : _currentUser$roles2.includes(src_constants__WEBPACK_IMPORTED_MODULE_18__["ROLE_PERMISSIONS"].ROLE_HOST_PRIVATE)) && __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        onClick: () => updateModals({
          crossPromotionPurchaseModal: {
            isOpen: true,
            performerId: performer._id
          }
        }),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 876,
          columnNumber: 231
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 882,
          columnNumber: 23
        }
      }, __jsx("mask", {
        id: "mask0_2844_37404",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "24",
        height: "24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 883,
          columnNumber: 25
        }
      }, __jsx("rect", {
        width: "24",
        height: "24",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 884,
          columnNumber: 27
        }
      })), __jsx("g", {
        mask: "url(#mask0_2844_37404)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 886,
          columnNumber: 25
        }
      }, __jsx("path", {
        d: "M23.566 10.3558L19.6546 4.50725C19.5492 4.34972 19.3463 4.30216 19.1863 4.39728C18.5638 4.76852 17.8095 4.79051 17.1682 4.45553L15.1739 3.41434C14.2152 2.91382 13.0946 2.86447 12.0988 3.27881L10.2321 4.05576C9.97244 4.16366 9.73676 4.31614 9.53182 4.50637C9.41028 4.4927 9.28703 4.48556 9.16434 4.48556C8.6517 4.48556 8.13675 4.60921 7.67563 4.84283C7.27341 5.04673 6.79094 5.01463 6.41634 4.75931L5.28542 3.98801C5.20628 3.93421 5.11007 3.91519 5.01784 3.9354C4.9256 3.95561 4.84449 4.01327 4.79297 4.0959L1.05789 10.0692C0.950576 10.241 0.996691 10.4714 1.16122 10.5834L2.52867 11.5158C2.66075 11.6059 2.77347 11.7209 2.86285 11.8573C2.95223 11.9941 3.014 12.1453 3.04645 12.307C3.11164 12.6316 3.25539 12.9351 3.45919 13.1871L3.23659 13.5429C2.78599 14.2634 2.9807 15.2323 3.67068 15.7028C3.91433 15.869 4.19644 15.9567 4.48677 15.9567C4.63308 15.9567 4.77597 15.9341 4.91234 15.8922C4.91746 15.9338 4.92372 15.9754 4.93198 16.0167C5.01396 16.4248 5.24311 16.775 5.57727 17.0026C5.82092 17.1688 6.10302 17.2568 6.39363 17.2568C6.54022 17.2568 6.68312 17.2342 6.81946 17.192C6.87269 17.6307 7.10239 18.0429 7.48384 18.303C7.72749 18.4692 8.00959 18.5571 8.29993 18.5571C8.44624 18.5571 8.58913 18.5346 8.72549 18.4923C8.73062 18.534 8.73688 18.5756 8.74514 18.6172C8.82711 19.025 9.05627 19.3751 9.39042 19.6031C9.63408 19.7692 9.91618 19.8569 10.2068 19.8569C10.714 19.8569 11.182 19.5924 11.4587 19.1498L11.6334 18.8707L13.0558 19.8308C13.3075 20.0023 13.5904 20.0843 13.8708 20.0843C14.359 20.0843 14.838 19.8352 15.1244 19.3775C15.29 19.1124 15.3683 18.814 15.3669 18.5188C15.5334 18.5824 15.7065 18.6136 15.8787 18.6136C16.3669 18.6136 16.8459 18.3646 17.1323 17.9068C17.3088 17.6245 17.3859 17.3041 17.3734 16.9902C17.5185 17.0312 17.6683 17.0523 17.8194 17.0523C17.9381 17.0523 18.0577 17.0395 18.1766 17.0134C18.627 16.9147 19.0132 16.6389 19.2649 16.2367C19.4795 15.8934 19.5737 15.4931 19.5378 15.0909C19.7129 15.1512 19.8942 15.1807 20.0744 15.1807C20.6386 15.1807 21.1931 14.8932 21.5218 14.368C21.7052 14.075 21.8019 13.7353 21.8019 13.386C21.8019 13.1351 21.751 12.8858 21.6542 12.6569C21.7541 12.2907 21.9705 11.9727 22.2722 11.7524L23.4782 10.8729C23.639 10.7558 23.6784 10.524 23.566 10.3558ZM4.05989 15.0805C3.69838 14.8341 3.59648 14.3264 3.83245 13.9489L4.4288 12.9957C4.57397 12.7636 4.81933 12.6251 5.08492 12.6251C5.23664 12.6251 5.38408 12.6712 5.51218 12.7586C5.8734 13.005 5.97558 13.5123 5.73961 13.8898L5.14327 14.843C4.99839 15.0749 4.75303 15.2134 4.48688 15.2134C4.33516 15.2137 4.1877 15.1676 4.05989 15.0805ZM5.96646 16.3806C5.7914 16.2611 5.67129 16.0777 5.62829 15.864C5.58531 15.6503 5.62459 15.4321 5.73902 15.2493L6.33537 14.2961C6.48025 14.0643 6.72561 13.9258 6.99149 13.9258C7.14321 13.9258 7.29094 13.9718 7.41875 14.0589C7.59381 14.1784 7.71392 14.3618 7.75692 14.5755C7.79991 14.7892 7.76062 15.0074 7.64619 15.1901L7.04984 16.1434C6.90496 16.3752 6.6596 16.5137 6.39372 16.5137C6.242 16.5137 6.09427 16.4676 5.96646 16.3806ZM7.87303 17.6809C7.51152 17.4345 7.40963 16.9269 7.6456 16.5494L8.24194 15.5962C8.38711 15.3641 8.63248 15.2256 8.89806 15.2256C9.04978 15.2256 9.19722 15.2716 9.32532 15.359C9.68654 15.6054 9.78873 16.1128 9.55276 16.4903L8.95642 17.4435C8.81153 17.6753 8.56617 17.8138 8.30003 17.8138C8.14831 17.8141 8.00085 17.768 7.87303 17.6809ZM10.2069 19.1142C10.0551 19.1142 9.90742 19.0681 9.7799 18.9813C9.60484 18.8618 9.48472 18.6784 9.44173 18.4647C9.39875 18.251 9.43803 18.0329 9.55217 17.8504L9.83311 17.4015L10.1485 16.8971C10.2934 16.6653 10.5387 16.5268 10.8046 16.5268C10.9563 16.5268 11.1041 16.5729 11.2319 16.66C11.4069 16.7794 11.5271 16.9628 11.57 17.1765C11.613 17.3902 11.5737 17.6084 11.4593 17.7912L10.863 18.7444C10.7181 18.9756 10.4727 19.1142 10.2069 19.1142ZM20.9256 13.9621C20.6253 14.4424 20.0033 14.5836 19.5396 14.2769C19.5373 14.2754 19.5356 14.2742 19.5331 14.2727L15.3326 11.4079L14.9435 12.03L18.3751 14.3704C18.6012 14.5246 18.756 14.7612 18.8115 15.037C18.867 15.3129 18.8164 15.5946 18.6686 15.8306C18.5212 16.0666 18.2943 16.2283 18.0302 16.2863C17.766 16.3442 17.4962 16.291 17.2702 16.1371L13.8382 13.7967L13.4491 14.4188L16.309 16.3692C16.6705 16.6156 16.7724 17.1232 16.5364 17.5005C16.3005 17.8779 15.8143 17.9843 15.453 17.7379L14.6905 17.2181L12.5929 15.7878L12.2038 16.4099L14.3013 17.8402C14.6625 18.0866 14.7644 18.5939 14.5285 18.9714C14.414 19.1542 14.2384 19.2796 14.0338 19.3245C13.8291 19.3694 13.6202 19.3284 13.4434 19.208L12.0224 18.2489L12.0549 18.1969C12.2732 17.8479 12.3483 17.4312 12.2664 17.0231C12.1844 16.615 11.9552 16.2649 11.6211 16.0372C11.3774 15.8711 11.0953 15.7834 10.8047 15.7834C10.6581 15.7834 10.5152 15.806 10.3789 15.8482C10.3254 15.4098 10.096 14.9972 9.7145 14.7375C9.47056 14.571 9.18848 14.483 8.89814 14.483C8.75183 14.483 8.60921 14.5056 8.47287 14.5475C8.46774 14.5059 8.46148 14.4643 8.45323 14.423C8.37125 14.0149 8.1421 13.6648 7.80794 13.4371C7.56429 13.2709 7.28218 13.183 6.99158 13.183C6.84498 13.183 6.70209 13.2055 6.56575 13.2477C6.51223 12.8093 6.28282 12.3968 5.90137 12.137C5.65742 11.9706 5.37534 11.8826 5.085 11.8826C4.60452 11.8826 4.15904 12.1204 3.87808 12.5225C3.81517 12.4087 3.76906 12.2844 3.74287 12.1548C3.69135 11.8975 3.59286 11.6564 3.45025 11.4382C3.30764 11.2207 3.12831 11.0373 2.91767 10.8937L1.84852 10.1643L5.19495 4.81364L6.02813 5.38193C6.61053 5.77902 7.36114 5.82866 7.98707 5.51182C8.29533 5.35548 8.63435 5.26156 8.9765 5.2363L7.17126 8.12265C7.06822 8.28731 7.03292 8.48377 7.07163 8.67638C7.11035 8.86869 7.21851 9.03396 7.37621 9.14155L7.51341 9.23517C7.94694 9.53091 8.43482 9.67211 8.91759 9.67211C9.75902 9.67211 10.5848 9.24291 11.0781 8.45408L12 6.97984C12.0883 6.83866 12.2699 6.79912 12.4048 6.89126L20.6326 12.5016C20.7735 12.5976 20.8853 12.724 20.9653 12.8767C21.047 13.0322 21.0903 13.2087 21.0903 13.3862C21.0903 13.5907 21.0332 13.79 20.9256 13.9621ZM21.8643 11.1435C21.5637 11.3625 21.3218 11.6488 21.1527 11.9787C21.1106 11.9436 21.0664 11.9103 21.0212 11.8794L12.7939 6.26878C12.6248 6.15346 12.4347 6.09847 12.2463 6.09847C11.9183 6.09847 11.5964 6.26582 11.404 6.57346L10.482 8.0477C9.9201 8.94622 8.76272 9.19976 7.90215 8.61303L7.77064 8.52326L9.71593 5.4132C9.90494 5.11092 10.1748 4.88057 10.4959 4.74683L12.3626 3.96988C13.1699 3.63371 14.0785 3.67384 14.8557 4.07955L16.85 5.12075C17.606 5.51545 18.4805 5.53805 19.2464 5.19535L22.7787 10.477L21.8643 11.1435Z",
        fill: "black",
        stroke: "black",
        strokeWidth: "0.6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 887,
          columnNumber: 27
        }
      })))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 893,
          columnNumber: 21
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 894,
          columnNumber: 23
        }
      }, __jsx("mask", {
        id: "mask0_4096_52896",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "24",
        height: "24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 895,
          columnNumber: 25
        }
      }, __jsx("rect", {
        width: "24",
        height: "24",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 896,
          columnNumber: 27
        }
      })), __jsx("g", {
        mask: "url(#mask0_4096_52896)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 898,
          columnNumber: 25
        }
      }, __jsx("path", {
        d: "M4.3077 19.5C3.80257 19.5 3.375 19.325 3.025 18.975C2.675 18.625 2.5 18.1974 2.5 17.6923V6.3077C2.5 5.80257 2.675 5.375 3.025 5.025C3.375 4.675 3.80257 4.5 4.3077 4.5H19.6923C20.1974 4.5 20.625 4.675 20.975 5.025C21.325 5.375 21.5 5.80257 21.5 6.3077V17.6923C21.5 18.1974 21.325 18.625 20.975 18.975C20.625 19.325 20.1974 19.5 19.6923 19.5H4.3077ZM12 12.5576L3.99998 7.44225V17.6923C3.99998 17.782 4.02883 17.8557 4.08653 17.9134C4.14423 17.9711 4.21795 18 4.3077 18H19.6923C19.782 18 19.8557 17.9711 19.9134 17.9134C19.9711 17.8557 20 17.782 20 17.6923V7.44225L12 12.5576ZM12 11L19.8461 5.99998H4.15383L12 11ZM3.99998 7.44225V5.99998V17.6923C3.99998 17.782 4.02883 17.8557 4.08653 17.9134C4.14423 17.9711 4.21795 18 4.3077 18H3.99998V7.44225Z",
        fill: "#121212",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 899,
          columnNumber: 27
        }
      })))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 903,
          columnNumber: 21
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        fill: "none",
        viewBox: "0 0 24 24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 904,
          columnNumber: 23
        }
      }, __jsx("mask", {
        id: "a",
        width: "24",
        height: "24",
        x: "0",
        y: "0",
        maskUnits: "userSpaceOnUse",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 905,
          columnNumber: 25
        }
      }, __jsx("path", {
        fill: "#D9D9D9",
        d: "M0 0h24v24H0z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 906,
          columnNumber: 27
        }
      })), __jsx("g", {
        mask: "url(#a)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 908,
          columnNumber: 25
        }
      }, __jsx("path", {
        fill: "#1C1B1F",
        d: "M7.75 14.394V8.702c0-.499.177-.925.53-1.278.353-.353.78-.53 1.278-.53h8.553L15.287 4.07 16.357 3 21 7.644l-4.644 4.654-1.07-1.054 2.825-2.85H9.558a.3.3 0 0 0-.222.087.3.3 0 0 0-.086.221v5.692h-1.5Zm-1.942 5.75c-.499 0-.925-.176-1.278-.53A1.742 1.742 0 0 1 4 18.337V3.952h1.5v14.385a.3.3 0 0 0 .087.22.3.3 0 0 0 .22.087h11.385a.3.3 0 0 0 .221-.086.3.3 0 0 0 .087-.221v-3.943H19v3.943c0 .498-.177.924-.53 1.277a1.74 1.74 0 0 1-1.278.53H5.808Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 909,
          columnNumber: 27
        }
      }))))))))), __jsx("div", {
        className: "w-full mt-3 mb-6 md:hidden",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 920,
          columnNumber: 11
        }
      }, __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 921,
          columnNumber: 13
        }
      }, __jsx("div", {
        className: "flex items-center gap-2",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 922,
          columnNumber: 15
        }
      }, __jsx("h2", {
        className: "text-2xl text-gray-900 xl:text-3xl",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 923,
          columnNumber: 17
        }
      }, performer.firstName, " ", performer.lastName), __jsx("svg", {
        className: "block w-8 h-8",
        xmlns: "http://www.w3.org/2000/svg",
        width: "30",
        height: "30",
        viewBox: "0 0 30 30",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 927,
          columnNumber: 17
        }
      }, __jsx("g", {
        clipPath: "url(#clip0_2241_45931)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 928,
          columnNumber: 19
        }
      }, __jsx("mask", {
        id: "mask0_2241_45931",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "30",
        height: "30",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 929,
          columnNumber: 21
        }
      }, __jsx("rect", {
        width: "30",
        height: "30",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 930,
          columnNumber: 23
        }
      })), __jsx("g", {
        mask: "url(#mask0_2241_45931)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 932,
          columnNumber: 21
        }
      }, __jsx("path", {
        d: "M10.8438 27.75L8.5 23.875L4.09375 22.875L4.5 18.375L1.5 15L4.5 11.625L4.09375 7.125L8.5 6.125L10.8438 2.25L15 4.03125L19.1562 2.25L21.5 6.125L25.9062 7.125L25.5 11.625L28.5 15L25.5 18.375L25.9062 22.875L21.5 23.875L19.1562 27.75L15 25.9688L10.8438 27.75ZM13.4062 19.5L20.8438 12.0938L19.25 10.5L13.4062 16.3125L10.75 13.6875L9.15625 15.2812L13.4062 19.5Z",
        fill: "#2CB1EC",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 933,
          columnNumber: 23
        }
      }))), __jsx("defs", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 936,
          columnNumber: 19
        }
      }, __jsx("clipPath", {
        id: "clip0_2241_45931",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 937,
          columnNumber: 21
        }
      }, __jsx("rect", {
        width: "30",
        height: "30",
        fill: "white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 938,
          columnNumber: 23
        }
      }))))), __jsx("div", {
        className: "flex items-end gap-2 mb-4 md:mb-7",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 944,
          columnNumber: 15
        }
      }, __jsx("span", {
        className: "text-base text-black ",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 945,
          columnNumber: 17
        }
      }, "@thesarajones "), __jsx(react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_23__["CopyToClipboard"], {
        onCopy: () => this.onCopy(),
        text: '@thesarajones',
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 947,
          columnNumber: 17
        }
      }, __jsx("button", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 948,
          columnNumber: 19
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "20",
        height: "20",
        viewBox: "0 0 20 20",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 949,
          columnNumber: 21
        }
      }, __jsx("g", {
        clipPath: "url(#clip0_3328_61555)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 950,
          columnNumber: 23
        }
      }, __jsx("mask", {
        id: "mask0_3328_61555",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "20",
        height: "20",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 951,
          columnNumber: 25
        }
      }, __jsx("rect", {
        width: "20",
        height: "20",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 952,
          columnNumber: 27
        }
      })), __jsx("g", {
        mask: "url(#mask0_3328_61555)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 954,
          columnNumber: 25
        }
      }, __jsx("path", {
        d: "M7.5 15C7.0875 15 6.73438 14.8531 6.44062 14.5594C6.14687 14.2656 6 13.9125 6 13.5V3.5C6 3.0875 6.14687 2.73438 6.44062 2.44063C6.73438 2.14688 7.0875 2 7.5 2H15.5C15.9125 2 16.2656 2.14688 16.5594 2.44063C16.8531 2.73438 17 3.0875 17 3.5V13.5C17 13.9125 16.8531 14.2656 16.5594 14.5594C16.2656 14.8531 15.9125 15 15.5 15H7.5ZM7.5 13.5H15.5V3.5H7.5V13.5ZM4.5 18C4.0875 18 3.73437 17.8531 3.44062 17.5594C3.14687 17.2656 3 16.9125 3 16.5V5H4.5V16.5H14V18H4.5Z",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 955,
          columnNumber: 27
        }
      }))), __jsx("defs", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 958,
          columnNumber: 23
        }
      }, __jsx("clipPath", {
        id: "clip0_3328_61555",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 959,
          columnNumber: 25
        }
      }, __jsx("rect", {
        width: "20",
        height: "20",
        fill: "white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 960,
          columnNumber: 27
        }
      })))))), this.state.copied ? __jsx("span", {
        className: "text-xs text-gray-500",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 967,
          columnNumber: 38
        }
      }, "Copied.") : null), __jsx("div", {
        className: "flex flex-wrap items-center gap-5",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 970,
          columnNumber: 15
        }
      }, __jsx("span", {
        className: "flex-shrink-0 mr-auto text-base font-semibold text-black",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 971,
          columnNumber: 17
        }
      }, "100 fans"), __jsx("div", {
        className: "flex gap-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 973,
          columnNumber: 17
        }
      }, __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 974,
          columnNumber: 19
        }
      }, __jsx("svg", {
        className: "w-6 h-6",
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 975,
          columnNumber: 21
        }
      }, __jsx("path", {
        d: "M4.99997 19H6.2615L16.4981 8.7634L15.2366 7.50188L4.99997 17.7385V19ZM3.5 20.5V17.1154L16.6904 3.93078C16.8416 3.79343 17.0086 3.68729 17.1913 3.61237C17.374 3.53746 17.5656 3.5 17.7661 3.5C17.9666 3.5 18.1608 3.53558 18.3488 3.60675C18.5368 3.6779 18.7032 3.79103 18.848 3.94615L20.0692 5.18268C20.2243 5.32754 20.3349 5.49424 20.4009 5.68278C20.4669 5.87129 20.5 6.05981 20.5 6.24833C20.5 6.44941 20.4656 6.64131 20.3969 6.82403C20.3283 7.00676 20.219 7.17373 20.0692 7.32495L6.88458 20.5H3.5ZM15.8563 8.1437L15.2366 7.50188L16.4981 8.7634L15.8563 8.1437Z",
        fill: "#121212",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 976,
          columnNumber: 23
        }
      }))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        onClick: () => updateModals({
          isDonateRubiesModalOpen: true
        }),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 980,
          columnNumber: 19
        }
      }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_11__["GiftIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 981,
          columnNumber: 19
        }
      })), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 984,
          columnNumber: 19
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 985,
          columnNumber: 21
        }
      }, __jsx("mask", {
        id: "mask0_2923_60017",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "24",
        height: "24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 986,
          columnNumber: 23
        }
      }, __jsx("rect", {
        width: "24",
        height: "24",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 987,
          columnNumber: 25
        }
      })), __jsx("g", {
        mask: "url(#mask0_2923_60017)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 989,
          columnNumber: 23
        }
      }, __jsx("path", {
        d: "M17 17.0001C17.4167 17.0001 17.7708 16.8542 18.0625 16.5626C18.3542 16.2709 18.5 15.9167 18.5 15.5001C18.5 15.0834 18.3542 14.7292 18.0625 14.4376C17.7708 14.1459 17.4167 14.0001 17 14.0001C16.5833 14.0001 16.2292 14.1459 15.9375 14.4376C15.6458 14.7292 15.5 15.0834 15.5 15.5001C15.5 15.9167 15.6458 16.2709 15.9375 16.5626C16.2292 16.8542 16.5833 17.0001 17 17.0001ZM17 20.0001C17.523 20.0001 17.9996 19.8808 18.4298 19.6423C18.8599 19.4038 19.2115 19.0846 19.4845 18.6846C19.1115 18.4616 18.7167 18.2917 18.3 18.1751C17.8833 18.0584 17.45 18.0001 17 18.0001C16.55 18.0001 16.1167 18.0584 15.7 18.1751C15.2833 18.2917 14.8885 18.4616 14.5155 18.6846C14.7885 19.0846 15.1401 19.4038 15.5703 19.6423C16.0004 19.8808 16.477 20.0001 17 20.0001ZM12 21.4808C9.83717 20.891 8.0465 19.6179 6.628 17.6616C5.20933 15.7052 4.5 13.5181 4.5 11.1001V5.34632L12 2.53857L19.5 5.34632V11.0116C19.2667 10.9167 19.0218 10.8312 18.7653 10.7548C18.5089 10.6787 18.2538 10.6187 18 10.5751V6.39057L12 4.15007L6 6.39057V11.1001C6 11.9859 6.125 12.851 6.375 13.6953C6.625 14.5395 6.96958 15.3286 7.40875 16.0626C7.84775 16.7966 8.37242 17.4556 8.98275 18.0396C9.59292 18.6236 10.2551 19.0899 10.9692 19.4386L10.9983 19.4288C11.1302 19.7955 11.3013 20.1468 11.5115 20.4828C11.7218 20.8187 11.9609 21.1237 12.2287 21.3981C12.1866 21.4109 12.1485 21.4247 12.1145 21.4396C12.0805 21.4542 12.0423 21.468 12 21.4808ZM17 21.5001C15.7513 21.5001 14.6892 21.0622 13.8135 20.1866C12.9378 19.3109 12.5 18.2487 12.5 17.0001C12.5 15.7514 12.9378 14.6892 13.8135 13.8136C14.6892 12.9379 15.7513 12.5001 17 12.5001C18.2487 12.5001 19.3108 12.9379 20.1865 13.8136C21.0622 14.6892 21.5 15.7514 21.5 17.0001C21.5 18.2487 21.0622 19.3109 20.1865 20.1866C19.3108 21.0622 18.2487 21.5001 17 21.5001Z",
        fill: "#1C1B1F",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 990,
          columnNumber: 25
        }
      })))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 995,
          columnNumber: 19
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 996,
          columnNumber: 21
        }
      }, __jsx("mask", {
        id: "mask0_2844_37404",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "24",
        height: "24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 997,
          columnNumber: 23
        }
      }, __jsx("rect", {
        width: "24",
        height: "24",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 998,
          columnNumber: 25
        }
      })), __jsx("g", {
        mask: "url(#mask0_2844_37404)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1000,
          columnNumber: 23
        }
      }, __jsx("path", {
        d: "M23.566 10.3558L19.6546 4.50725C19.5492 4.34972 19.3463 4.30216 19.1863 4.39728C18.5638 4.76852 17.8095 4.79051 17.1682 4.45553L15.1739 3.41434C14.2152 2.91382 13.0946 2.86447 12.0988 3.27881L10.2321 4.05576C9.97244 4.16366 9.73676 4.31614 9.53182 4.50637C9.41028 4.4927 9.28703 4.48556 9.16434 4.48556C8.6517 4.48556 8.13675 4.60921 7.67563 4.84283C7.27341 5.04673 6.79094 5.01463 6.41634 4.75931L5.28542 3.98801C5.20628 3.93421 5.11007 3.91519 5.01784 3.9354C4.9256 3.95561 4.84449 4.01327 4.79297 4.0959L1.05789 10.0692C0.950576 10.241 0.996691 10.4714 1.16122 10.5834L2.52867 11.5158C2.66075 11.6059 2.77347 11.7209 2.86285 11.8573C2.95223 11.9941 3.014 12.1453 3.04645 12.307C3.11164 12.6316 3.25539 12.9351 3.45919 13.1871L3.23659 13.5429C2.78599 14.2634 2.9807 15.2323 3.67068 15.7028C3.91433 15.869 4.19644 15.9567 4.48677 15.9567C4.63308 15.9567 4.77597 15.9341 4.91234 15.8922C4.91746 15.9338 4.92372 15.9754 4.93198 16.0167C5.01396 16.4248 5.24311 16.775 5.57727 17.0026C5.82092 17.1688 6.10302 17.2568 6.39363 17.2568C6.54022 17.2568 6.68312 17.2342 6.81946 17.192C6.87269 17.6307 7.10239 18.0429 7.48384 18.303C7.72749 18.4692 8.00959 18.5571 8.29993 18.5571C8.44624 18.5571 8.58913 18.5346 8.72549 18.4923C8.73062 18.534 8.73688 18.5756 8.74514 18.6172C8.82711 19.025 9.05627 19.3751 9.39042 19.6031C9.63408 19.7692 9.91618 19.8569 10.2068 19.8569C10.714 19.8569 11.182 19.5924 11.4587 19.1498L11.6334 18.8707L13.0558 19.8308C13.3075 20.0023 13.5904 20.0843 13.8708 20.0843C14.359 20.0843 14.838 19.8352 15.1244 19.3775C15.29 19.1124 15.3683 18.814 15.3669 18.5188C15.5334 18.5824 15.7065 18.6136 15.8787 18.6136C16.3669 18.6136 16.8459 18.3646 17.1323 17.9068C17.3088 17.6245 17.3859 17.3041 17.3734 16.9902C17.5185 17.0312 17.6683 17.0523 17.8194 17.0523C17.9381 17.0523 18.0577 17.0395 18.1766 17.0134C18.627 16.9147 19.0132 16.6389 19.2649 16.2367C19.4795 15.8934 19.5737 15.4931 19.5378 15.0909C19.7129 15.1512 19.8942 15.1807 20.0744 15.1807C20.6386 15.1807 21.1931 14.8932 21.5218 14.368C21.7052 14.075 21.8019 13.7353 21.8019 13.386C21.8019 13.1351 21.751 12.8858 21.6542 12.6569C21.7541 12.2907 21.9705 11.9727 22.2722 11.7524L23.4782 10.8729C23.639 10.7558 23.6784 10.524 23.566 10.3558ZM4.05989 15.0805C3.69838 14.8341 3.59648 14.3264 3.83245 13.9489L4.4288 12.9957C4.57397 12.7636 4.81933 12.6251 5.08492 12.6251C5.23664 12.6251 5.38408 12.6712 5.51218 12.7586C5.8734 13.005 5.97558 13.5123 5.73961 13.8898L5.14327 14.843C4.99839 15.0749 4.75303 15.2134 4.48688 15.2134C4.33516 15.2137 4.1877 15.1676 4.05989 15.0805ZM5.96646 16.3806C5.7914 16.2611 5.67129 16.0777 5.62829 15.864C5.58531 15.6503 5.62459 15.4321 5.73902 15.2493L6.33537 14.2961C6.48025 14.0643 6.72561 13.9258 6.99149 13.9258C7.14321 13.9258 7.29094 13.9718 7.41875 14.0589C7.59381 14.1784 7.71392 14.3618 7.75692 14.5755C7.79991 14.7892 7.76062 15.0074 7.64619 15.1901L7.04984 16.1434C6.90496 16.3752 6.6596 16.5137 6.39372 16.5137C6.242 16.5137 6.09427 16.4676 5.96646 16.3806ZM7.87303 17.6809C7.51152 17.4345 7.40963 16.9269 7.6456 16.5494L8.24194 15.5962C8.38711 15.3641 8.63248 15.2256 8.89806 15.2256C9.04978 15.2256 9.19722 15.2716 9.32532 15.359C9.68654 15.6054 9.78873 16.1128 9.55276 16.4903L8.95642 17.4435C8.81153 17.6753 8.56617 17.8138 8.30003 17.8138C8.14831 17.8141 8.00085 17.768 7.87303 17.6809ZM10.2069 19.1142C10.0551 19.1142 9.90742 19.0681 9.7799 18.9813C9.60484 18.8618 9.48472 18.6784 9.44173 18.4647C9.39875 18.251 9.43803 18.0329 9.55217 17.8504L9.83311 17.4015L10.1485 16.8971C10.2934 16.6653 10.5387 16.5268 10.8046 16.5268C10.9563 16.5268 11.1041 16.5729 11.2319 16.66C11.4069 16.7794 11.5271 16.9628 11.57 17.1765C11.613 17.3902 11.5737 17.6084 11.4593 17.7912L10.863 18.7444C10.7181 18.9756 10.4727 19.1142 10.2069 19.1142ZM20.9256 13.9621C20.6253 14.4424 20.0033 14.5836 19.5396 14.2769C19.5373 14.2754 19.5356 14.2742 19.5331 14.2727L15.3326 11.4079L14.9435 12.03L18.3751 14.3704C18.6012 14.5246 18.756 14.7612 18.8115 15.037C18.867 15.3129 18.8164 15.5946 18.6686 15.8306C18.5212 16.0666 18.2943 16.2283 18.0302 16.2863C17.766 16.3442 17.4962 16.291 17.2702 16.1371L13.8382 13.7967L13.4491 14.4188L16.309 16.3692C16.6705 16.6156 16.7724 17.1232 16.5364 17.5005C16.3005 17.8779 15.8143 17.9843 15.453 17.7379L14.6905 17.2181L12.5929 15.7878L12.2038 16.4099L14.3013 17.8402C14.6625 18.0866 14.7644 18.5939 14.5285 18.9714C14.414 19.1542 14.2384 19.2796 14.0338 19.3245C13.8291 19.3694 13.6202 19.3284 13.4434 19.208L12.0224 18.2489L12.0549 18.1969C12.2732 17.8479 12.3483 17.4312 12.2664 17.0231C12.1844 16.615 11.9552 16.2649 11.6211 16.0372C11.3774 15.8711 11.0953 15.7834 10.8047 15.7834C10.6581 15.7834 10.5152 15.806 10.3789 15.8482C10.3254 15.4098 10.096 14.9972 9.7145 14.7375C9.47056 14.571 9.18848 14.483 8.89814 14.483C8.75183 14.483 8.60921 14.5056 8.47287 14.5475C8.46774 14.5059 8.46148 14.4643 8.45323 14.423C8.37125 14.0149 8.1421 13.6648 7.80794 13.4371C7.56429 13.2709 7.28218 13.183 6.99158 13.183C6.84498 13.183 6.70209 13.2055 6.56575 13.2477C6.51223 12.8093 6.28282 12.3968 5.90137 12.137C5.65742 11.9706 5.37534 11.8826 5.085 11.8826C4.60452 11.8826 4.15904 12.1204 3.87808 12.5225C3.81517 12.4087 3.76906 12.2844 3.74287 12.1548C3.69135 11.8975 3.59286 11.6564 3.45025 11.4382C3.30764 11.2207 3.12831 11.0373 2.91767 10.8937L1.84852 10.1643L5.19495 4.81364L6.02813 5.38193C6.61053 5.77902 7.36114 5.82866 7.98707 5.51182C8.29533 5.35548 8.63435 5.26156 8.9765 5.2363L7.17126 8.12265C7.06822 8.28731 7.03292 8.48377 7.07163 8.67638C7.11035 8.86869 7.21851 9.03396 7.37621 9.14155L7.51341 9.23517C7.94694 9.53091 8.43482 9.67211 8.91759 9.67211C9.75902 9.67211 10.5848 9.24291 11.0781 8.45408L12 6.97984C12.0883 6.83866 12.2699 6.79912 12.4048 6.89126L20.6326 12.5016C20.7735 12.5976 20.8853 12.724 20.9653 12.8767C21.047 13.0322 21.0903 13.2087 21.0903 13.3862C21.0903 13.5907 21.0332 13.79 20.9256 13.9621ZM21.8643 11.1435C21.5637 11.3625 21.3218 11.6488 21.1527 11.9787C21.1106 11.9436 21.0664 11.9103 21.0212 11.8794L12.7939 6.26878C12.6248 6.15346 12.4347 6.09847 12.2463 6.09847C11.9183 6.09847 11.5964 6.26582 11.404 6.57346L10.482 8.0477C9.9201 8.94622 8.76272 9.19976 7.90215 8.61303L7.77064 8.52326L9.71593 5.4132C9.90494 5.11092 10.1748 4.88057 10.4959 4.74683L12.3626 3.96988C13.1699 3.63371 14.0785 3.67384 14.8557 4.07955L16.85 5.12075C17.606 5.51545 18.4805 5.53805 19.2464 5.19535L22.7787 10.477L21.8643 11.1435Z",
        fill: "black",
        stroke: "black",
        strokeWidth: "0.6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1001,
          columnNumber: 25
        }
      })))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1006,
          columnNumber: 19
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        viewBox: "0 0 24 24",
        fill: "none",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1007,
          columnNumber: 21
        }
      }, __jsx("mask", {
        id: "mask0_4096_52896",
        maskUnits: "userSpaceOnUse",
        x: "0",
        y: "0",
        width: "24",
        height: "24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1008,
          columnNumber: 23
        }
      }, __jsx("rect", {
        width: "24",
        height: "24",
        fill: "#D9D9D9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1009,
          columnNumber: 25
        }
      })), __jsx("g", {
        mask: "url(#mask0_4096_52896)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1011,
          columnNumber: 23
        }
      }, __jsx("path", {
        d: "M4.3077 19.5C3.80257 19.5 3.375 19.325 3.025 18.975C2.675 18.625 2.5 18.1974 2.5 17.6923V6.3077C2.5 5.80257 2.675 5.375 3.025 5.025C3.375 4.675 3.80257 4.5 4.3077 4.5H19.6923C20.1974 4.5 20.625 4.675 20.975 5.025C21.325 5.375 21.5 5.80257 21.5 6.3077V17.6923C21.5 18.1974 21.325 18.625 20.975 18.975C20.625 19.325 20.1974 19.5 19.6923 19.5H4.3077ZM12 12.5576L3.99998 7.44225V17.6923C3.99998 17.782 4.02883 17.8557 4.08653 17.9134C4.14423 17.9711 4.21795 18 4.3077 18H19.6923C19.782 18 19.8557 17.9711 19.9134 17.9134C19.9711 17.8557 20 17.782 20 17.6923V7.44225L12 12.5576ZM12 11L19.8461 5.99998H4.15383L12 11ZM3.99998 7.44225V5.99998V17.6923C3.99998 17.782 4.02883 17.8557 4.08653 17.9134C4.14423 17.9711 4.21795 18 4.3077 18H3.99998V7.44225Z",
        fill: "#121212",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1012,
          columnNumber: 25
        }
      })))), __jsx(_components_ui_shared_AppIcon__WEBPACK_IMPORTED_MODULE_21__["AppIcon"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1017,
          columnNumber: 19
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "24",
        height: "24",
        fill: "none",
        viewBox: "0 0 24 24",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1018,
          columnNumber: 21
        }
      }, __jsx("mask", {
        id: "a",
        width: "24",
        height: "24",
        x: "0",
        y: "0",
        maskUnits: "userSpaceOnUse",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1019,
          columnNumber: 23
        }
      }, __jsx("path", {
        fill: "#D9D9D9",
        d: "M0 0h24v24H0z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1020,
          columnNumber: 25
        }
      })), __jsx("g", {
        mask: "url(#a)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1022,
          columnNumber: 23
        }
      }, __jsx("path", {
        fill: "#1C1B1F",
        d: "M7.75 14.394V8.702c0-.499.177-.925.53-1.278.353-.353.78-.53 1.278-.53h8.553L15.287 4.07 16.357 3 21 7.644l-4.644 4.654-1.07-1.054 2.825-2.85H9.558a.3.3 0 0 0-.222.087.3.3 0 0 0-.086.221v5.692h-1.5Zm-1.942 5.75c-.499 0-.925-.176-1.278-.53A1.742 1.742 0 0 1 4 18.337V3.952h1.5v14.385a.3.3 0 0 0 .087.22.3.3 0 0 0 .22.087h11.385a.3.3 0 0 0 .221-.086.3.3 0 0 0 .087-.221v-3.943H19v3.943c0 .498-.177.924-.53 1.277a1.74 1.74 0 0 1-1.278.53H5.808Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1023,
          columnNumber: 25
        }
      }))))), __jsx("div", {
        className: "flex flex-grow gap-3",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1030,
          columnNumber: 17
        }
      }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_22__["AppButton"], {
        onClick: () => updateModals({
          isGoLiveModalOpen: true
        }),
        className: "flex-grow px-6",
        variant: "error",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1031,
          columnNumber: 19
        }
      }, "Go Live"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_22__["AppButton"], {
        className: "flex-grow px-6",
        variant: "error",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1035,
          columnNumber: 19
        }
      }, "Go Private"))))), __jsx("div", {
        className: "mb-9 sm:mb-11",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1043,
          columnNumber: 11
        }
      }, __jsx("div", {
        className: "flex flex-col gap-6 text-black md:items-stretch md:flex-row",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1044,
          columnNumber: 13
        }
      }, __jsx("div", {
        className: "mb:pb-6 md:border-b md:w-1/4 md:pb-11 md:border-base-400",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1045,
          columnNumber: 15
        }
      }, __jsx("h3", {
        className: "pb-3 mb-3 font-semibold text-black border-b border-base-400",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1046,
          columnNumber: 17
        }
      }, "Bio"), __jsx("p", {
        className: "text-black",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1050,
          columnNumber: 17
        }
      }, performer.bio)), __jsx("div", {
        className: "pb-6 border-b md:w-3/4 md:pb-11 border-base-400",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1056,
          columnNumber: 15
        }
      }, __jsx("h3", {
        className: "pb-3 mb-3 font-semibold text-black border-b border-base-400",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1057,
          columnNumber: 17
        }
      }, "Personal details"), __jsx("div", {
        className: "flex justify-between",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1061,
          columnNumber: 17
        }
      }, __jsx("div", {
        className: "space-y-6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1062,
          columnNumber: 19
        }
      }, __jsx("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1063,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1064,
          columnNumber: 23
        }
      }, "Gender"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1065,
          columnNumber: 23
        }
      }, performer.gender)), __jsx("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1070,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1071,
          columnNumber: 23
        }
      }, "State"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1072,
          columnNumber: 23
        }
      }, performer.state)), __jsx("div", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1077,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1078,
          columnNumber: 23
        }
      }, "City"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1079,
          columnNumber: 23
        }
      }, performer.city))), __jsx("div", {
        className: "space-y-6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1085,
          columnNumber: 19
        }
      }, __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1086,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1087,
          columnNumber: 23
        }
      }, "Ethnicity:"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1088,
          columnNumber: 23
        }
      }, performer.ethnicity)), __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1093,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1094,
          columnNumber: 23
        }
      }, "Height"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1095,
          columnNumber: 23
        }
      }, performer.height)), __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1100,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1101,
          columnNumber: 23
        }
      }, "Dob"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1102,
          columnNumber: 23
        }
      }, performer.dateOfBirth ? `${new Date(performer.dateOfBirth).getMonth() + 1}/${new Date(performer.dateOfBirth).getDate()}/${new Date(performer.dateOfBirth).getFullYear()}` : ''))), __jsx("div", {
        className: "space-y-6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1108,
          columnNumber: 19
        }
      }, __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1109,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1110,
          columnNumber: 23
        }
      }, "Relationship status:"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1111,
          columnNumber: 23
        }
      }, performer.relationship)), __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1116,
          columnNumber: 21
        }
      }, __jsx("h4", {
        className: "mb-2 font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1117,
          columnNumber: 23
        }
      }, "Joined:"), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1118,
          columnNumber: 23
        }
      }, performer.dateOfBirth ? `${new Date(performer.createdAt).getMonth() + 1}/${new Date(performer.createdAt).getDate()}/${new Date(performer.createdAt).getFullYear()}` : '')), __jsx("div", {
        className: "md:hidden",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1123,
          columnNumber: 21
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "98",
        height: "35",
        fill: "none",
        viewBox: "0 0 98 35",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1124,
          columnNumber: 23
        }
      }, __jsx("g", {
        clipPath: "url(#a)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1125,
          columnNumber: 25
        }
      }, __jsx("path", {
        fill: "#F3E6F1",
        d: "M8 35a8 8 0 0 1-8-8V8a8 8 0 0 1 8-8h82a8 8 0 0 1 8 8v19a8 8 0 0 1-8 8H8Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1126,
          columnNumber: 27
        }
      }), __jsx("mask", {
        id: "b",
        fill: "#fff",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1127,
          columnNumber: 27
        }
      }, __jsx("path", {
        d: "M27 0h70v35H27V0Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1128,
          columnNumber: 29
        }
      })), __jsx("path", {
        fill: "#F7F7F7",
        d: "M27 0h70v35H27V0Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1130,
          columnNumber: 27
        }
      }), __jsx("path", {
        fill: "#C182BB",
        d: "M28 35V0h-2v35h2Z",
        mask: "url(#b)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1131,
          columnNumber: 27
        }
      }), __jsx("g", {
        clipPath: "url(#c)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1132,
          columnNumber: 27
        }
      }, __jsx("rect", {
        width: "18",
        height: "18",
        x: "5",
        y: "9",
        fill: "#850079",
        rx: "9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1133,
          columnNumber: 29
        }
      }), __jsx("g", {
        clipPath: "url(#d)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1134,
          columnNumber: 29
        }
      }, __jsx("mask", {
        id: "e",
        width: "21",
        height: "20",
        x: "3",
        y: "5",
        maskUnits: "userSpaceOnUse",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1135,
          columnNumber: 31
        }
      }, __jsx("path", {
        fill: "#D9D9D9",
        d: "M3.926 5.346h19.149v19.149H3.926z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1136,
          columnNumber: 33
        }
      })), __jsx("g", {
        mask: "url(#e)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1138,
          columnNumber: 31
        }
      }, __jsx("path", {
        fill: "#FFE6A4",
        stroke: "#FFE6A4",
        "stroke-width": ".191",
        d: "m14.462 17.054.02.068h1.598l-1.2.88-.053.039.017.063.41 1.558-1.218-.894-.057-.041-.057.041-1.218.893.41-1.557.017-.063-.053-.039-1.2-.88h1.597l.021-.068.483-1.61.483 1.61Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1139,
          columnNumber: 33
        }
      }), __jsx("path", {
        fill: "#FFE6A4",
        stroke: "#FFE6A4",
        "stroke-width": ".191",
        d: "m17.434 14.114-.027.06.047.048c.94.94 1.504 2.162 1.504 3.57 0 2.724-2.255 4.98-4.979 4.98S9 20.515 9 17.791c0-1.408.563-2.63 1.504-3.57l.047-.047-.027-.06-3.098-6.759h5.055l1.41 3.104.088.191.087-.191 1.41-3.104h5.056l-3.098 6.758Zm-1.061-5.513h-.06l-.026.054-1.628 3.35-.02.043.02.043.383.766.021.041.046.01c.465.093.837.278 1.22.47l.09.044.04-.09 2.107-4.595.062-.136h-2.255Zm-6.894 0h-.15l.063.136 2.106 4.595.042.09.088-.044a6.258 6.258 0 0 1 1.886-.565l.129-.019-.056-.117-1.915-4.021-.026-.055H9.479Zm.862 9.191c0 1.968 1.67 3.639 3.638 3.639s3.638-1.67 3.638-3.639c0-1.967-1.67-3.638-3.638-3.638s-3.638 1.67-3.638 3.638Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1140,
          columnNumber: 33
        }
      })))), __jsx("rect", {
        width: "18",
        height: "18",
        x: "5",
        y: "9",
        stroke: "#850079",
        "stroke-width": ".367",
        rx: "9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1144,
          columnNumber: 27
        }
      }), __jsx("path", {
        fill: "#850079",
        d: "m35.082 17 1.432-8.727h1.193L36.276 17h-1.194Zm-3.933-2.25.2-1.193h6.716l-.2 1.193H31.15Zm.865 2.25 1.432-8.727h1.193L33.207 17h-1.193Zm-.358-5.284.196-1.193h6.716l-.196 1.193h-6.716Zm11.392-3.443V17h-1.581V9.811h-.051l-2.041 1.304V9.666l2.169-1.393h1.504Zm5.442 8.893c-.702 0-1.304-.177-1.807-.532-.5-.358-.885-.874-1.155-1.547-.267-.676-.4-1.49-.4-2.442.002-.952.137-1.761.404-2.43.27-.67.655-1.18 1.155-1.533.503-.352 1.104-.529 1.803-.529.699 0 1.3.177 1.802.529.503.352.888.863 1.155 1.534.27.67.405 1.48.405 2.429 0 .954-.135 1.77-.405 2.446-.267.673-.652 1.187-1.155 1.543-.5.355-1.1.532-1.802.532Zm0-1.334c.545 0 .976-.268 1.29-.805.32-.54.478-1.334.478-2.382 0-.693-.072-1.276-.217-1.747-.145-.472-.35-.827-.614-1.066a1.343 1.343 0 0 0-.937-.362c-.543 0-.972.27-1.287.81-.316.537-.475 1.325-.478 2.365-.002.696.067 1.281.21 1.756.144.474.349.832.613 1.073.264.24.578.358.942.358Zm8.004 1.334c-.702 0-1.304-.177-1.807-.532-.5-.358-.885-.874-1.155-1.547-.267-.676-.4-1.49-.4-2.442.002-.952.137-1.761.404-2.43.27-.67.655-1.18 1.155-1.533.503-.352 1.104-.529 1.803-.529.699 0 1.3.177 1.802.529.503.352.888.863 1.155 1.534.27.67.405 1.48.405 2.429 0 .954-.135 1.77-.405 2.446-.267.673-.652 1.187-1.155 1.543-.5.355-1.1.532-1.802.532Zm0-1.334c.545 0 .975-.268 1.29-.805.319-.54.478-1.334.478-2.382 0-.693-.072-1.276-.217-1.747-.145-.472-.35-.827-.614-1.066a1.343 1.343 0 0 0-.937-.362c-.543 0-.972.27-1.287.81-.316.537-.475 1.325-.478 2.365-.002.696.067 1.281.21 1.756.144.474.349.832.613 1.073.264.24.578.358.942.358Zm-24.676 5.35h.84l1.978 4.83h.068l1.977-4.83h.841V27h-.659v-4.42h-.056L34.987 27h-.636l-1.818-4.42h-.057V27h-.66v-5.818Zm8.799 5.909c-.394 0-.74-.094-1.037-.281a1.911 1.911 0 0 1-.693-.787c-.165-.337-.247-.731-.247-1.182 0-.455.082-.851.247-1.19a1.89 1.89 0 0 1 .693-.79 1.902 1.902 0 0 1 1.037-.282c.394 0 .739.094 1.034.282.297.187.528.45.693.79.167.339.25.735.25 1.19 0 .45-.083.845-.25 1.182-.165.337-.396.6-.693.787-.296.187-.64.28-1.034.28Zm0-.602c.3 0 .545-.077.739-.23.193-.154.336-.356.428-.606.093-.25.14-.52.14-.812a2.34 2.34 0 0 0-.14-.815 1.374 1.374 0 0 0-.428-.611c-.194-.155-.44-.233-.74-.233-.298 0-.545.078-.738.233a1.374 1.374 0 0 0-.429.61 2.34 2.34 0 0 0-.139.816c0 .292.046.562.14.812.092.25.235.452.428.606.193.153.44.23.739.23Zm6.092-2.875-.603.17a1.12 1.12 0 0 0-.167-.293.814.814 0 0 0-.296-.238 1.073 1.073 0 0 0-.48-.094c-.267 0-.49.062-.668.185-.176.121-.264.275-.264.463 0 .167.06.298.182.395.121.096.31.177.568.241l.648.16c.39.094.68.239.872.434.191.193.287.442.287.747 0 .25-.072.474-.216.67a1.42 1.42 0 0 1-.597.466 2.18 2.18 0 0 1-.892.17c-.445 0-.813-.096-1.105-.289-.291-.193-.476-.475-.554-.846l.637-.16c.06.235.175.411.343.529.17.117.393.176.668.176.313 0 .56-.066.744-.199.186-.134.279-.295.279-.483a.507.507 0 0 0-.16-.38c-.105-.105-.268-.182-.488-.233l-.727-.17c-.4-.096-.693-.242-.88-.441a1.067 1.067 0 0 1-.28-.753c0-.246.07-.464.208-.654.14-.189.33-.338.571-.446.243-.107.517-.162.824-.162.432 0 .77.095 1.017.285.248.189.424.439.529.75Zm2.986-.978v.569h-2.261v-.569h2.261Zm-1.602-1.045h.67v4.159c0 .19.028.331.083.426a.427.427 0 0 0 .215.188c.09.03.183.045.282.045.073 0 .134-.004.181-.011l.114-.023.137.602a1.405 1.405 0 0 1-.5.08c-.19 0-.375-.04-.557-.122a1.107 1.107 0 0 1-.45-.372c-.117-.167-.175-.377-.175-.631V21.59ZM53.044 27v-5.818h3.489v.625h-2.784v1.966h2.523v.625h-2.523V27h-.705Zm6.057.09c-.394 0-.74-.093-1.037-.28a1.911 1.911 0 0 1-.693-.787c-.165-.337-.247-.731-.247-1.182 0-.455.082-.851.247-1.19.167-.34.398-.603.693-.79a1.902 1.902 0 0 1 1.037-.282c.394 0 .739.094 1.034.282.298.187.529.45.694.79.166.339.25.735.25 1.19 0 .45-.084.845-.25 1.182-.165.337-.396.6-.694.787a1.89 1.89 0 0 1-1.034.28Zm0-.601c.3 0 .546-.077.739-.23.193-.154.336-.356.429-.606.093-.25.139-.52.139-.812a2.34 2.34 0 0 0-.14-.815 1.374 1.374 0 0 0-.428-.611c-.193-.155-.44-.233-.739-.233s-.545.078-.738.233a1.374 1.374 0 0 0-.43.61 2.34 2.34 0 0 0-.139.816c0 .292.047.562.14.812.092.25.235.452.429.606.193.153.439.23.738.23Zm3.671-5.307V27h-.67v-5.818h.67Zm1.899 0V27H64v-5.818h.67Zm3 5.909c-.393 0-.74-.094-1.036-.281a1.911 1.911 0 0 1-.694-.787c-.164-.337-.247-.731-.247-1.182 0-.455.083-.851.247-1.19.167-.34.398-.603.694-.79a1.902 1.902 0 0 1 1.036-.282c.394 0 .74.094 1.035.282.297.187.528.45.693.79.166.339.25.735.25 1.19 0 .45-.084.845-.25 1.182-.165.337-.396.6-.693.787-.296.187-.64.28-1.035.28Zm0-.602c.3 0 .546-.077.74-.23.192-.154.335-.356.428-.606.093-.25.14-.52.14-.812a2.34 2.34 0 0 0-.14-.815 1.375 1.375 0 0 0-.429-.611c-.193-.155-.44-.233-.739-.233s-.545.078-.738.233a1.374 1.374 0 0 0-.43.61 2.34 2.34 0 0 0-.138.816c0 .292.046.562.139.812.093.25.236.452.429.606.193.153.44.23.738.23Zm3.841.511-1.33-4.364h.705l.944 3.341h.045l.932-3.34h.716l.92 3.329h.046l.943-3.33h.704L74.807 27h-.658l-.955-3.352h-.068L72.171 27h-.659Zm7.193.09c-.42 0-.783-.092-1.088-.277a1.87 1.87 0 0 1-.702-.785c-.163-.337-.244-.729-.244-1.176 0-.447.081-.84.244-1.181.165-.343.394-.61.688-.802.295-.193.64-.29 1.034-.29.227 0 .451.038.673.114.222.076.423.199.605.37.182.168.327.392.435.67.108.278.162.621.162 1.028v.285h-3.364v-.58h2.682c0-.246-.05-.466-.148-.66a1.114 1.114 0 0 0-1.045-.624c-.267 0-.498.066-.694.199a1.31 1.31 0 0 0-.445.511c-.105.21-.157.436-.157.676v.386c0 .33.057.61.17.839.116.227.276.4.48.52.205.117.443.176.714.176.176 0 .335-.025.477-.074.144-.051.268-.127.372-.227.105-.103.185-.23.242-.381l.647.182a1.44 1.44 0 0 1-.343.58c-.161.164-.36.293-.597.386a2.21 2.21 0 0 1-.798.136Zm4.474 0a1.7 1.7 0 0 1-.963-.275 1.86 1.86 0 0 1-.653-.784c-.157-.339-.236-.74-.236-1.201 0-.459.079-.856.236-1.194.157-.337.376-.597.656-.78.28-.185.604-.277.972-.277.284 0 .508.048.673.143.167.092.294.198.38.318.09.117.159.214.208.29h.057v-2.148h.67V27h-.647v-.67h-.08c-.05.08-.12.18-.21.3-.091.12-.22.227-.39.322-.168.092-.392.139-.673.139Zm.091-.601c.27 0 .496-.07.682-.21.186-.143.327-.339.423-.589.097-.252.145-.542.145-.872 0-.326-.047-.61-.142-.855a1.245 1.245 0 0 0-.42-.574 1.118 1.118 0 0 0-.688-.207c-.284 0-.52.073-.71.219a1.31 1.31 0 0 0-.423.588 2.33 2.33 0 0 0-.14.83c0 .31.048.592.143.846.096.252.238.452.426.602.19.148.424.222.704.222Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1145,
          columnNumber: 27
        }
      })), __jsx("path", {
        stroke: "#850079",
        d: "M8 34.5A7.5 7.5 0 0 1 .5 27V8A7.5 7.5 0 0 1 8 .5h82A7.5 7.5 0 0 1 97.5 8v19a7.5 7.5 0 0 1-7.5 7.5H8Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1147,
          columnNumber: 25
        }
      }), __jsx("defs", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1148,
          columnNumber: 25
        }
      }, __jsx("clipPath", {
        id: "a",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1149,
          columnNumber: 27
        }
      }, __jsx("path", {
        fill: "#fff",
        d: "M8 35a8 8 0 0 1-8-8V8a8 8 0 0 1 8-8h82a8 8 0 0 1 8 8v19a8 8 0 0 1-8 8H8Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1150,
          columnNumber: 29
        }
      })), __jsx("clipPath", {
        id: "c",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1152,
          columnNumber: 27
        }
      }, __jsx("rect", {
        width: "18",
        height: "18",
        x: "5",
        y: "9",
        fill: "#fff",
        rx: "9",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1153,
          columnNumber: 29
        }
      })), __jsx("clipPath", {
        id: "d",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1155,
          columnNumber: 27
        }
      }, __jsx("path", {
        fill: "#fff",
        d: "M3.926 5.346h19.149v19.149H3.926z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1156,
          columnNumber: 29
        }
      })))))), __jsx("div", {
        className: "hidden md:block",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1164,
          columnNumber: 19
        }
      }, __jsx("div", {
        className: "flex flex-col items-center justify-center gap-4 pt-3 overflow-hidden border border-purple-900 rounded-lg bg-pink-50",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1165,
          columnNumber: 21
        }
      }, __jsx("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "51",
        height: "51",
        fill: "none",
        viewBox: "0 0 51 51",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1166,
          columnNumber: 23
        }
      }, __jsx("g", {
        clipPath: "url(#a)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1167,
          columnNumber: 25
        }
      }, __jsx("rect", {
        width: "49",
        height: "49",
        x: "1",
        y: ".588",
        fill: "#850079",
        rx: "24.5",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1168,
          columnNumber: 27
        }
      }), __jsx("g", {
        clipPath: "url(#b)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1169,
          columnNumber: 27
        }
      }, __jsx("mask", {
        id: "c",
        width: "53",
        height: "53",
        x: "-2",
        y: "-10",
        maskUnits: "userSpaceOnUse",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1170,
          columnNumber: 29
        }
      }, __jsx("path", {
        fill: "#D9D9D9",
        d: "M-1.926-9.359h52.128v52.128H-1.926z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1171,
          columnNumber: 31
        }
      })), __jsx("g", {
        mask: "url(#c)",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1173,
          columnNumber: 29
        }
      }, __jsx("path", {
        fill: "#FFE6A4",
        stroke: "#FFE6A4",
        strokeWidth: ".521",
        d: "m26.756 22.514.055.185h4.35l-3.267 2.396-.143.105.045.172 1.116 4.24-3.316-2.431-.154-.113-.155.113-3.316 2.431 1.116-4.24.045-.172-.143-.104-3.267-2.397h4.35l.055-.186 1.315-4.38 1.314 4.38Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1174,
          columnNumber: 31
        }
      }), __jsx("path", {
        fill: "#FFE6A4",
        stroke: "#FFE6A4",
        strokeWidth: ".521",
        d: "m34.848 14.511-.075.165.128.128c2.561 2.561 4.094 5.885 4.094 9.72 0 7.415-6.139 13.553-13.553 13.553-7.415 0-13.554-6.138-13.554-13.553 0-3.835 1.533-7.159 4.094-9.72l.128-.128-.075-.165L7.603-3.886h13.761l3.84 8.448.238.523.237-.523 3.84-8.448H43.28l-8.432 18.397ZM31.958-.498h-.164l-.07.147-4.432 9.123-.056.115.058.115 1.042 2.085.057.114.125.025c1.265.253 2.278.758 3.323 1.281l.241.12.112-.245L37.93-.128l.169-.37h-6.14Zm-18.767 0h-.406l.17.37 5.734 12.51.112.245.241-.12c1.534-.767 3.331-1.281 5.133-1.539l.351-.05-.152-.32L19.16-.35l-.07-.149h-5.899Zm2.346 25.022c0 5.357 4.548 9.904 9.905 9.904 5.356 0 9.904-4.547 9.904-9.904s-4.548-9.904-9.904-9.904c-5.357 0-9.905 4.547-9.905 9.904Z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1175,
          columnNumber: 31
        }
      })))), __jsx("rect", {
        width: "49",
        height: "49",
        x: "1",
        y: ".588",
        stroke: "#850079",
        rx: "24.5",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1179,
          columnNumber: 25
        }
      }), __jsx("defs", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1180,
          columnNumber: 25
        }
      }, __jsx("clipPath", {
        id: "a",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1181,
          columnNumber: 27
        }
      }, __jsx("rect", {
        width: "49",
        height: "49",
        x: "1",
        y: ".588",
        fill: "#fff",
        rx: "24.5",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1182,
          columnNumber: 29
        }
      })), __jsx("clipPath", {
        id: "b",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1184,
          columnNumber: 27
        }
      }, __jsx("path", {
        fill: "#fff",
        d: "M-1.926-9.36h52.128v52.128H-1.926z",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1185,
          columnNumber: 29
        }
      })))), performer.ranking.mostFansPosition <= 100 && __jsx("div", {
        className: "flex flex-col items-center p-2 bg-base-200",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1190,
          columnNumber: 67
        }
      }, __jsx("span", {
        className: "text-xs font-semibold text-purple-900",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1191,
          columnNumber: 24
        }
      }, "#", performer.ranking.mostFansPosition), __jsx("span", {
        className: "text-[10px] text-purple-900",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1192,
          columnNumber: 24
        }
      }, "Most Followed")))))))), __jsx("div", {
        className: "model-content",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1202,
          columnNumber: 11
        }
      }, __jsx("div", {
        className: "flex flex-col gap-6",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1204,
          columnNumber: 7
        }
      }, __jsx("div", {
        className: "flex items-center justify-between",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1205,
          columnNumber: 9
        }
      }, __jsx("div", {
        className: "flex items-center gap-4 p-2 bg-gray-300 rounded-full",
        style: {
          width: '30%'
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1206,
          columnNumber: 9
        }
      }, __jsx("button", {
        onClick: () => {
          this.handleTabChange('video');
          this.setState({
            dropdownValue: "updatedAt"
          });
        },
        style: {
          width: '45%'
        },
        className: `px-6 py-2 rounded-full flex items-center gap-2 transition-colors
              ${tab === 'video' ? 'bg-white text-black shadow' : 'bg-transparent text-gray-700'}`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1207,
          columnNumber: 11
        }
      }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_10__["VideoCameraOutlined"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1218,
          columnNumber: 13
        }
      }), "Video ", performer._id === currentUser._id ? performer.stats.totalVideos : performer.stats.totalActiveVideos), __jsx("button", {
        onClick: () => {
          this.handleTabChange('photo');
          this.setState({
            dropdownValue: "updatedAt"
          });
        },
        style: {
          width: '50%'
        },
        className: `px-6 py-2 rounded-full flex items-center gap-2 transition-colors
              ${tab === 'photo' ? 'bg-white text-black shadow' : 'bg-transparent text-gray-700'}`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1222,
          columnNumber: 11
        }
      }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_10__["PictureOutlined"], {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1231,
          columnNumber: 13
        }
      }), "Photo ", performer._id === currentUser._id ? performer.stats.totalPhotos : performer.stats.totalActivePhotos)), __jsx("div", {
        className: "heading-tab mb-4 flex justify-start",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1236,
          columnNumber: 11
        }
      }, __jsx(_components_post_search_bar__WEBPACK_IMPORTED_MODULE_13__["default"], {
        searching: loadingFeed,
        tab: tab,
        handleSearch: this.handleFilterSearch.bind(this),
        dropdownValue: this.state.dropdownValue,
        handleDropDown: this.handleDropDown,
        handleViewGrid: isGrid => console.log(isGrid),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1237,
          columnNumber: 13
        }
      }))), __jsx("div", {
        className: "main-container p-4 bg-white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1251,
          columnNumber: 9
        }
      }, __jsx("div", {
        className: "",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1252,
          columnNumber: 15
        }
      }, __jsx("div", {
        className: "w-full",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1254,
          columnNumber: 17
        }
      }, tab === 'video' ? __jsx(_components_post_scroll_list__WEBPACK_IMPORTED_MODULE_12__["default"], {
        items: feeds,
        loading: loadingFeed,
        canLoadmore: true,
        loadMore: this.loadMoreItem.bind(this),
        isGrid: isGrid,
        performer: performer,
        tab: tab,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1256,
          columnNumber: 21
        }
      }) : __jsx("div", {
        className: "main-container",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1266,
          columnNumber: 21
        }
      }, __jsx(_components_post_scroll_list__WEBPACK_IMPORTED_MODULE_12__["default"], {
        items: feeds,
        loading: loadingFeed,
        canLoadmore: true,
        loadMore: this.loadMoreItem.bind(this),
        isGrid: isGrid,
        performer: performer,
        tab: tab,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1267,
          columnNumber: 22
        }
      }))))))), __jsx(_components_modals_goLiveModal__WEBPACK_IMPORTED_MODULE_25__["default"], {
        isOpen: modals.isGoLiveModalOpen,
        onClose: () => updateModals({
          isGoLiveModalOpen: false
        }),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 1285,
          columnNumber: 11
        }
      })))
    );
  }
}
_defineProperty(PerformerProfile, "authenticate", true);
_defineProperty(PerformerProfile, "noredirect", true);
const mapStates = state => _objectSpread({
  ui: _objectSpread({}, state.ui),
  modals: _objectSpread({}, state.modals),
  videoState: _objectSpread({}, state.video.videos),
  feedState: _objectSpread({}, state.feed.feeds),
  productState: _objectSpread({}, state.product.products),
  galleryState: _objectSpread({}, state.gallery.galleries),
  currentUser: _objectSpread({}, state.user.current)
}, state.streaming);
const mapDispatch = {
  getFeeds: _redux_feed_actions__WEBPACK_IMPORTED_MODULE_4__["getFeeds"],
  moreFeeds: _redux_feed_actions__WEBPACK_IMPORTED_MODULE_4__["moreFeeds"],
  getVideos: _redux_video_actions__WEBPACK_IMPORTED_MODULE_3__["getVideos"],
  moreVideo: _redux_video_actions__WEBPACK_IMPORTED_MODULE_3__["moreVideo"],
  listProducts: _redux_product_actions__WEBPACK_IMPORTED_MODULE_5__["listProducts"],
  moreProduct: _redux_product_actions__WEBPACK_IMPORTED_MODULE_5__["moreProduct"],
  getGalleries: _redux_gallery_actions__WEBPACK_IMPORTED_MODULE_6__["getGalleries"],
  moreGalleries: _redux_gallery_actions__WEBPACK_IMPORTED_MODULE_6__["moreGalleries"],
  removeFeedSuccess: _redux_feed_actions__WEBPACK_IMPORTED_MODULE_4__["removeFeedSuccess"],
  updateBalance: _redux_user_actions__WEBPACK_IMPORTED_MODULE_7__["updateBalance"],
  resetFeeds: _redux_feed_actions__WEBPACK_IMPORTED_MODULE_4__["resetFeeds"],
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_24__["updateModals"],
  onFollow: _redux_performer_actions__WEBPACK_IMPORTED_MODULE_27__["onFollow"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStates, mapDispatch)(PerformerProfile));

/***/ }),

/***/ "./src/components/common/ProfileFollowButton.tsx":
/*!*******************************************************!*\
  !*** ./src/components/common/ProfileFollowButton.tsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _services_follow_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/follow.service */ "./src/services/follow.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\ProfileFollowButton.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;




const FollowButton = ({
  performer,
  currentUser,
  onFollow
}) => {
  const {
    0: loading,
    1: setLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: isFollowing,
    1: setIsFollowing
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(performer.isFollowed);
  const handleFollow = async () => {
    if (!currentUser) return;
    try {
      if (isFollowing) {
        const confirmUnfollow = window.confirm("Are you sure you want to unfollow this person?");
        if (!confirmUnfollow) return;
        setLoading(true);
        await _services_follow_service__WEBPACK_IMPORTED_MODULE_3__["followService"].delete(performer._id);
        onFollow && onFollow({
          action: "delete",
          performerId: performer._id
        });
        setIsFollowing(false);
      } else {
        setLoading(true);
        await _services_follow_service__WEBPACK_IMPORTED_MODULE_3__["followService"].create({
          targetId: performer._id,
          sourceId: currentUser._id
        });
        onFollow && onFollow({
          action: "create",
          performerId: performer._id
        });
        setIsFollowing(true);
      }
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(error.message || "Error occurred, please try again later");
    } finally {
      setLoading(false);
    }
  };
  if ((currentUser === null || currentUser === void 0 ? void 0 : currentUser._id) === performer._id) return null;
  return __jsx("button", {
    onClick: handleFollow,
    type: "button",
    className: `md:self-end md:ml-16 xl:ml-36 h-10 z-10 ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_2__["buttonVariants"])()}`,
    disabled: loading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 5
    }
  }, __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 7
    }
  }, isFollowing ? "Unfollow" : "Follow"));
};
/* harmony default export */ __webpack_exports__["default"] = (FollowButton);

/***/ }),

/***/ "./src/components/modals/donateRubiesModal.tsx":
/*!*****************************************************!*\
  !*** ./src/components/modals/donateRubiesModal.tsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\donateRubiesModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }











const schema = yup__WEBPACK_IMPORTED_MODULE_2__["object"]({
  amount: yup__WEBPACK_IMPORTED_MODULE_2__["number"]().typeError("Must be a number").positive("Must be a positive value").required("Please enter an amount").min(1, "Must be at least 1")
});
const DonateRubiesModal = ({
  isOpen,
  onClose
}) => {
  var _errors$amount;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["useDispatch"])();
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_3__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = data => {
    try {} catch (error) {
      console.error(error);
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow pb-11",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 mb-10 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 15
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4200_27292",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4200_27292)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M12 20.6057L2.2981 8.9615L5.15385 3.25H18.8461L21.7019 8.9615L12 20.6057ZM9.22112 8.25H14.7789L13.0288 4.74995H10.9711L9.22112 8.25ZM11.25 17.3673V9.74995H4.92112L11.25 17.3673ZM12.75 17.3673L19.0789 9.74995H12.75V17.3673ZM16.4461 8.25H19.6539L17.9038 4.74995H14.6961L16.4461 8.25ZM4.34612 8.25H7.55385L9.30387 4.74995H6.09615L4.34612 8.25Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 21
    }
  }))), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 17
    }
  }, "Donate Rubys")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "flex flex-col gap-6 px-6 mb-6 md:flex-row",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "md:max-w-[200px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 15
    }
  }, __jsx("div", {
    style: {
      backgroundImage: `url(${'/images/default-avatar.png'})`
    },
    className: "relative w-[200px] md:w-auto h-[277px] mx-auto mb-6 bg-center bg-cover rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "absolute left-3 bottom-16",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 21
    }
  }, __jsx("h4", {
    className: "font-semibold text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 23
    }
  }, "Business Time"), __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "13",
    height: "13",
    viewBox: "0 0 13 13",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 23
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_3975_31167)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 25
    }
  }, __jsx("mask", {
    id: "mask0_3975_31167",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "13",
    height: "13",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "13",
    height: "13",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 29
    }
  })), __jsx("g", {
    mask: "url(#mask0_3975_31167)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M4.69886 12.0251L3.68324 10.3459L1.77386 9.9126L1.9499 7.9626L0.649902 6.5001L1.9499 5.0376L1.77386 3.0876L3.68324 2.65426L4.69886 0.975098L6.4999 1.74697L8.30094 0.975098L9.31657 2.65426L11.2259 3.0876L11.0499 5.0376L12.3499 6.5001L11.0499 7.9626L11.2259 9.9126L9.31657 10.3459L8.30094 12.0251L6.4999 11.2532L4.69886 12.0251ZM5.80928 8.4501L9.03219 5.24072L8.34157 4.5501L5.80928 7.06885L4.65824 5.93135L3.96761 6.62197L5.80928 8.4501Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 29
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 25
    }
  }, __jsx("clipPath", {
    id: "clip0_3975_31167",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "13",
    height: "13",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 29
    }
  })))))), __jsx("div", {
    className: "absolute left-3 bottom-11",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "inline-flex items-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 21
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 23
    }
  }, __jsx("mask", {
    id: "mask0_4200_12005",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "14",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 25
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 27
    }
  })), __jsx("g", {
    mask: "url(#mask0_4200_12005)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M7.00005 7.00005C6.41672 7.00005 5.92088 6.79588 5.51255 6.38755C5.10422 5.97922 4.90005 5.48338 4.90005 4.90005C4.90005 4.31672 5.10422 3.82088 5.51255 3.41255C5.92088 3.00422 6.41672 2.80005 7.00005 2.80005C7.58338 2.80005 8.07922 3.00422 8.48755 3.41255C8.89588 3.82088 9.10005 4.31672 9.10005 4.90005C9.10005 5.48338 8.89588 5.97922 8.48755 6.38755C8.07922 6.79588 7.58338 7.00005 7.00005 7.00005ZM2.80005 11.2V9.80005C2.80005 9.57644 2.86081 9.36498 2.98234 9.16567C3.10387 8.96637 3.27158 8.79866 3.48547 8.66255C4.02019 8.35144 4.58651 8.11324 5.18442 7.94797C5.78234 7.78269 6.38755 7.70005 7.00005 7.70005C7.61255 7.70005 8.21776 7.78269 8.81567 7.94797C9.41359 8.11324 9.97991 8.35144 10.5146 8.66255C10.7285 8.78894 10.8962 8.95422 11.0178 9.15838C11.1393 9.36255 11.2 9.57644 11.2 9.80005V11.2H2.80005Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 27
    }
  }))), __jsx("span", {
    className: "text-[10px] text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 23
    }
  }, "1500 fans"))), __jsx("div", {
    className: "absolute bottom-0 left-0 right-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 19
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full rounded-b-lg rounded-t-none ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 21
    }
  }, "Follow"))), __jsx("h4", {
    className: "mb-3 font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131,
      columnNumber: 17
    }
  }, "Help me get to the top!"), __jsx("p", {
    className: "text-black-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135,
      columnNumber: 17
    }
  }, "All donations contribute to", __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
    href: "#",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 19
    }
  }, __jsx("a", {
    className: "px-1 font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 21
    }
  }, "Most Supported")), "ranking.")), __jsx("div", {
    className: "flex-grow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "grid grid-cols-2 gap-5 md:gap-6 md:grid-cols-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 23
    }
  }, "1"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 23
    }
  }, "Ruby")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 23
    }
  }, "10"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 173,
      columnNumber: 23
    }
  }, "Rubys")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 181,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 183,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 184,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 189,
      columnNumber: 23
    }
  }, "100"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 23
    }
  }, "Rubys")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 194,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 198,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 205,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 206,
      columnNumber: 23
    }
  }, "1.000"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 207,
      columnNumber: 23
    }
  }, "Rubys")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 218,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 222,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 23
    }
  }, "10.000"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 23
    }
  }, "Ruby")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 232,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 233,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 234,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 239,
      columnNumber: 21
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({}, register("amount"), {
    type: "number",
    id: "custom-rubies-amount",
    placeholder: "5000",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 23
    }
  })), __jsx("span", {
    className: "block mt-1 text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241,
      columnNumber: 23
    }
  }, "Custom amount")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 245,
      columnNumber: 23
    }
  }, "Select")))))), __jsx("div", {
    className: "px-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 252,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex flex-col gap-6 md:flex-row",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 253,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex-grow md:max-w-[200px] px-5 py-3 rounded-lg bg-base-200",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "block mb-1 font-semibold text-center text-base-600 md:text-left",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 19
    }
  }, "Ruby Balance"), __jsx("h2", {
    className: "flex items-center justify-center md:justify-start",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 257,
      columnNumber: 19
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 258,
      columnNumber: 21
    }
  }), __jsx("span", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 260,
      columnNumber: 21
    }
  }, "15.000"))), __jsx("div", {
    className: "flex-grow md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex flex-col items-center gap-3 md:flex-row md:justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267,
      columnNumber: 19
    }
  }, __jsx("label", {
    className: "inline-flex items-center gap-2 text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 268,
      columnNumber: 21
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "w-4 h-4 mr-auto text-base bg-gray-100 rounded border-base-400 text-base-900 focus:ring-2 focus:ring-offset-2 focus:ring-purple-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 269,
      columnNumber: 23
    }
  }), "I agree to the terms of this purchase"), __jsx("div", {
    className: "inline-flex gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 273,
      columnNumber: 21
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 274,
      columnNumber: 23
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["AppButton"], {
    variant: "secondary",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 278,
      columnNumber: 23
    }
  }, "Send"))))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 288,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapState, mapDispatch)(DonateRubiesModal));

/***/ }),

/***/ "./src/components/modals/goLiveModal.tsx":
/*!***********************************************!*\
  !*** ./src/components/modals/goLiveModal.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _services_stream_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/stream.service */ "./src/services/stream.service.tsx");
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_11__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\goLiveModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }












const schema = yup__WEBPACK_IMPORTED_MODULE_4__["object"]({
  checkbox: yup__WEBPACK_IMPORTED_MODULE_4__["boolean"]().oneOf([true], 'You must agree to the community guidelines')
});
const GoLiveModal = ({
  isOpen,
  onClose,
  currentUser,
  updateModals
}) => {
  // currentUser se pasa aquÃ­
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["useDispatch"])();
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: isCheckboxChecked,
    1: setIsCheckboxChecked
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const videoRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const webrtcAdaptorRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_11__["useRouter"])();
  const {
    register,
    handleSubmit,
    formState: {
      isValid
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_2__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = async () => {
    setIsLoading(true);
    try {
      const response = await _services_stream_service__WEBPACK_IMPORTED_MODULE_7__["streamService"].goLive();
      router.push(`/stream/${currentUser === null || currentUser === void 0 ? void 0 : currentUser.username}`);
    } catch (error) {
      console.error('Error starting live stream:', error);
      antd__WEBPACK_IMPORTED_MODULE_10__["message"].error('Failed to go live. Please try again.');
    } finally {
      setIsLoading(false);
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__["default"])(isOpen);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (isOpen) {
      const startVideo = async () => {
        try {
          const stream = await navigator.mediaDevices.getUserMedia({
            video: true,
            audio: true
          });
          if (videoRef.current) {
            videoRef.current.srcObject = stream;
          }
        } catch (err) {
          console.error('Error accessing camera: ', err);
          antd__WEBPACK_IMPORTED_MODULE_10__["message"].error('Failed to access the camera.');
        }
      };
      startVideo();
    }
  }, [isOpen]);
  const handleOutsideClick = e => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    onClick: handleOutsideClick,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 7
    }
  }, __jsx("div", {
    role: "dialog",
    className: "w-full max-w-[432px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 17
    }
  }, "Get ready to go live")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "flex h-56 py-3 bg-base-200",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 13
    }
  }, __jsx("video", {
    ref: videoRef,
    id: "localVideo",
    className: "m-auto w-[120px] h-full bg-black",
    autoPlay: true,
    muted: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 15
    }
  })), __jsx("div", {
    className: "px-6 pt-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "pb-5 border-b border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex justify-between mb-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 17
    }
  }, __jsx("h4", {
    className: "font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 19
    }
  }, "Model Guidelines"), __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
    href: "/help",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 19
    }
  }, __jsx("a", {
    className: "font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 21
    }
  }, "Need Help?"))), __jsx("ol", {
    className: "text-sm text-black list-decimal list-inside",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 17
    }
  }, __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 19
    }
  }, "No nudity is permitted."), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 19
    }
  }, "Typing disabled. Speak to commenters."), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 19
    }
  }, "Be friendly, outgoing and respectful.")), __jsx("hr", {
    className: "h-px my-4 border-0 bg-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 17
    }
  }), __jsx("form", {
    id: "goLiveForm",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 17
    }
  }, __jsx("label", {
    className: "inline-flex gap-2 text-sm text-black text-baseline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 19
    }
  }, __jsx("input", _extends({
    type: "checkbox"
  }, register('checkbox'), {
    className: "w-4 h-4 mr-auto text-base bg-gray-100 rounded border-base-400 checked: text-base-900 focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 checked:bg-black",
    onChange: e => setIsCheckboxChecked(e.target.checked),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 21
    }
  })), __jsx("div", {
    className: "flex flex-col",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 21
    }
  }, __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 23
    }
  }, "I have read the Community Guidelines."), __jsx("span", {
    className: "text-base-500 text-[10px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 23
    }
  }, "Terms and conditions: updated on 10/10/2024")))))), __jsx("div", {
    className: "flex-grow px-6 py-5 md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex flex-col items-center gap-3 sm:flex-row sm:justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 15
    }
  }, __jsx("button", {
    className: "font-medium text-center text-purple-800 hover:underline",
    onClick: () => updateModals({
      isStreamMutedListModalOpen: true
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 17
    }
  }, "Muted list"), __jsx("div", {
    className: "inline-flex gap-3 md:gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 17
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 19
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["AppButton"], {
    onClick: handleSubmit(onSubmit),
    type: "submit",
    form: "goLiveForm",
    disabled: !isCheckboxChecked || isLoading,
    loading: isLoading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 19
    }
  }, "Start streaming"))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals),
  currentUser: state.user.current // Asegurarse de pasar currentUser correctamente
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapState, mapDispatch)(GoLiveModal));

/***/ }),

/***/ "./src/components/performer/performer.less":
/*!*************************************************!*\
  !*** ./src/components/performer/performer.less ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/components/post/grid-card.tsx":
/*!*******************************************!*\
  !*** ./src/components/post/grid-card.tsx ***!
  \*******************************************/
/*! exports provided: FeedGridCard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedGridCard", function() { return FeedGridCard; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/index */ "./src/lib/index.ts");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.less */ "./src/components/post/index.less");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\post\\grid-card.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;





class FeedGridCard extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  render() {
    var _feed$files$, _feed$thumbnail;
    const {
      feed
    } = this.props;
    const thumbUrl = ((feed === null || feed === void 0 ? void 0 : feed.type) === 'photo' ? (feed === null || feed === void 0 ? void 0 : feed.files) && feed.files[0] && ((_feed$files$ = feed.files[0]) === null || _feed$files$ === void 0 ? void 0 : _feed$files$.url) : (feed === null || feed === void 0 ? void 0 : (_feed$thumbnail = feed.thumbnail) === null || _feed$thumbnail === void 0 ? void 0 : _feed$thumbnail.url) || (feed === null || feed === void 0 ? void 0 : feed.files) && feed.files[0] && feed.files[0].thumbnailUrl) || '/static/leaf.jpg';
    if (feed) {
      return __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
        href: {
          pathname: '/model/related',
          query: {
            username: (feed === null || feed === void 0 ? void 0 : feed.performer.username) || (feed === null || feed === void 0 ? void 0 : feed.performer._id),
            postId: feed._id,
            tab: feed.type === 'video' ? 'related-videos' : 'related-photos'
          }
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 25,
          columnNumber: 9
        }
      }, __jsx("div", {
        className: (feed === null || feed === void 0 ? void 0 : feed.type) === 'photo' ? 'relative rounded-lg w-full overflow-hidden cursor-pointer' : 'relative rounded-lg w-full overflow-hidden cursor-pointer',
        style: {
          aspectRatio: (feed === null || feed === void 0 ? void 0 : feed.type) === 'video' ? '4 / 6' : '1'
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 35,
          columnNumber: 11
        }
      }, feed.type === 'video' && __jsx(src_icons__WEBPACK_IMPORTED_MODULE_4__["PlayIcon"], {
        className: "absolute -top-6 left-0 bottom-0 right-0 m-auto flex items-center justify-center pb-3 transition-all z-50",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 43,
          columnNumber: 39
        }
      }), __jsx("div", {
        className: "absolute w-full h-full top-0 left-0 bottom-0 right-0 z-0",
        style: {
          backgroundImage: `url(${thumbUrl})`,
          backgroundPosition: 'center',
          backgroundSize: 'cover'
        },
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 44,
          columnNumber: 13
        }
      }), __jsx("div", {
        className: "absolute w-full h-full top-0 left-0 bottom-0 right-0 z-10 bg-black/30 flex items-end justify-start",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 52,
          columnNumber: 13
        }
      }, __jsx("div", {
        className: "flex-1 p-3 text-white",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 53,
          columnNumber: 15
        }
      }, __jsx("p", {
        className: "flex items-center font-semibold",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 54,
          columnNumber: 17
        }
      }, feed.performer.name, feed.performer.verifiedAccount && __jsx(src_icons__WEBPACK_IMPORTED_MODULE_4__["TickIcon"], {
        className: "ml-1",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 56,
          columnNumber: 54
        }
      })), __jsx("p", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 58,
          columnNumber: 17
        }
      }, feed.stats.views > 0 ? Object(_lib_index__WEBPACK_IMPORTED_MODULE_2__["shortenLargeNumber"])(feed.stats.views) : 0, __jsx("span", {
        className: "pl-1",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 63,
          columnNumber: 19
        }
      }, "Views"))))));
    }
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null);
  }
}

/***/ }),

/***/ "./src/components/post/index.less":
/*!****************************************!*\
  !*** ./src/components/post/index.less ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/components/post/scroll-list.tsx":
/*!*********************************************!*\
  !*** ./src/components/post/scroll-list.tsx ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-infinite-scroll-component */ "react-infinite-scroll-component");
/* harmony import */ var react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _grid_card__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./grid-card */ "./src/components/post/grid-card.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\post\\scroll-list.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/no-unused-prop-types */
/* eslint-disable react/require-default-props */





class ScrollListFeed extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  render() {
    const {
      items = [],
      loadMore,
      canLoadmore,
      loading = false,
      isGrid = false,
      isBookmarkPage = false,
      currentUser,
      performer,
      tab
    } = this.props;
    return __jsx(react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_2___default.a, {
      dataLength: items.length,
      hasMore: canLoadmore,
      loader: null,
      next: loadMore,
      endMessage: null,
      scrollThreshold: 0.8,
      scrollableTarget: "scrollableContent",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38,
        columnNumber: 7
      }
    }, __jsx("div", {
      className: isGrid ? 'grid grid-cols-2 md:grid-cols-5 gap-4 py-3' : 'fixed-scroll',
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 9
      }
    }, performer && isGrid && currentUser._id === performer._id && '', items.length > 0 && items.map(item => __jsx(_grid_card__WEBPACK_IMPORTED_MODULE_4__["FeedGridCard"], {
      feed: item,
      key: item._id,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 33
      }
    }))), !items.length && !loading && __jsx("div", {
      className: "main-container custom",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 54,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Alert"], {
      className: "text-center",
      message: isBookmarkPage ? `There are no bookmarked ${tab}` : 'No post was found',
      type: "info",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 55,
        columnNumber: 13
      }
    })), loading && __jsx("div", {
      className: "text-center",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 63,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Spin"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 64,
        columnNumber: 13
      }
    })));
  }
}
const mapStates = state => ({
  currentUser: _objectSpread({}, state.user.current)
});
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStates)(ScrollListFeed));

/***/ }),

/***/ "./src/components/post/search-bar.tsx":
/*!********************************************!*\
  !*** ./src/components/post/search-bar.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.less */ "./src/components/post/index.less");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\post\\search-bar.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/require-default-props */





const {
  RangePicker
} = antd__WEBPACK_IMPORTED_MODULE_1__["DatePicker"];
const {
  Search
} = antd__WEBPACK_IMPORTED_MODULE_1__["Input"];
class SearchFeedBar extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      q: '',
      isGrid: false,
      showSearch: false,
      showCalendar: false
    });
    _defineProperty(this, "onSearch", Object(lodash__WEBPACK_IMPORTED_MODULE_2__["debounce"])(async val => {
      const {
        handleSearch
      } = this.props;
      val === 'oldest' ? handleSearch({
        sortBy: 'createdAt',
        sort: 'asc'
      }) : handleSearch({
        sortBy: val,
        sort: 'desc'
      });
    }, 500));
  }
  componentDidUpdate(prevProps) {
    const {
      tab: prevTab
    } = prevProps;
    const {
      tab
    } = this.props;
    if (prevTab !== tab) {
      // eslint-disable-next-line react/no-did-update-set-state
      this.setState({
        q: ''
      });
    }
  }
  handleViewGrid(isGrid) {
    const {
      handleViewGrid: viewGrid
    } = this.props;
    this.setState({
      isGrid
    });
    viewGrid(isGrid);
  }
  searchDateRange(dates, dateStrings) {
    if (!dateStrings.length) return;
    const {
      handleSearch
    } = this.props;
    handleSearch({
      fromDate: dateStrings[0],
      toDate: dateStrings[1]
    });
  }
  render() {
    const {
      q,
      isGrid,
      showSearch,
      showCalendar
    } = this.state;
    const {
      searching,
      dropdownValue,
      handleDropDown
    } = this.props;
    return __jsx("div", {
      className: "search-post-bar",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 70,
        columnNumber: 7
      }
    }, showCalendar && __jsx(RangePicker, {
      onChange: this.searchDateRange.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72,
        columnNumber: 11
      }
    }), showSearch && __jsx(Search, {
      placeholder: "Enter keyword here...",
      onChange: e => {
        var _e$target;
        e.persist();
        this.setState({
          q: (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || ''
        });
        this.onSearch(e);
      },
      value: q,
      loading: searching,
      allowClear: true,
      enterButton: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 75,
        columnNumber: 11
      }
    }), __jsx("div", {
      className: "grid-btns",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88,
        columnNumber: 9
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      placeholder: "",
      defaultValue: "Newest",
      showSearch: true,
      optionFilterProp: "label",
      value: dropdownValue,
      onChange: val => {
        this.onSearch(val);
        handleDropDown(val);
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 99,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: "newest",
      label: "Newest",
      value: "updatedAt",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 110,
        columnNumber: 13
      }
    }, "Newest"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: "oldest",
      label: "Oldest",
      value: "oldest",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 113,
        columnNumber: 13
      }
    }, "Oldest"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: "views",
      label: "Most Viewed",
      value: "views",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 116,
        columnNumber: 13
      }
    }, "Most Viewed"))));
  }
}
const mapStates = state => ({
  currentUser: _objectSpread({}, state.user.current)
});
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStates)(SearchFeedBar));

/***/ }),

/***/ "./src/components/ui/shared/AppButton.tsx":
/*!************************************************!*\
  !*** ./src/components/ui/shared/AppButton.tsx ***!
  \************************************************/
/*! exports provided: AppButton, buttonVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppButton", function() { return AppButton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buttonVariants", function() { return buttonVariants; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! class-variance-authority */ "class-variance-authority");
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\AppButton.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0__["createElement"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }



// import { cn } from "../lib/utils"

const buttonVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('gap-1 md:gap-2 items-center justify-center font-medium transition duration-150 ease-in-out rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:z-10 focus:ring-purple-800', {
  variants: {
    variant: {
      default: 'text-white bg-purple-800 inline-flex',
      secondary: 'text-white bg-base-900 inline-flex',
      tertiary: 'text-black bg-white border border-base-400 inline-flex',
      error: 'text-white bg-error-500 inline-flex',
      noFlex: 'block text-white bg-purple-800'
    },
    disabled: {
      false: 'cursor-pointer',
      true: 'opacity-75 cursor-not-allowed'
    },
    size: {
      sm: 'px-6 text-sm h-10',
      base: 'px-3 md:px-8 text-sm h-10'
    }
  },
  compoundVariants: [{
    variant: 'default',
    disabled: false,
    class: 'hover:bg-purple-700'
  }, {
    variant: 'secondary',
    disabled: false,
    class: 'hover:bg-gray-700'
  }, {
    variant: 'tertiary',
    disabled: false,
    class: 'hover:bg-gray-300'
  }, {
    variant: 'error',
    disabled: false,
    class: 'hover:bg-error-600'
  }],
  defaultVariants: {
    size: 'base',
    variant: 'default',
    disabled: false
  }
});
const AppButton = _ref => {
  let {
      children,
      className,
      variant,
      size,
      loading = false,
      disabled = false
    } = _ref,
    props = _objectWithoutProperties(_ref, ["children", "className", "variant", "size", "loading", "disabled"]);
  return __jsx("button", _extends({}, props, {
    className: buttonVariants({
      variant,
      size,
      disabled,
      className
    }),
    disabled: disabled,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 5
    }
  }), loading && __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 9
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 11
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 13
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 13
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 11
    }
  }, "Loading...")), !loading && __jsx(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null, children));
};
AppButton.displayName = "AppButton";


/***/ }),

/***/ "./src/components/ui/shared/AppIcon.tsx":
/*!**********************************************!*\
  !*** ./src/components/ui/shared/AppIcon.tsx ***!
  \**********************************************/
/*! exports provided: AppIcon, iconVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppIcon", function() { return AppIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iconVariants", function() { return iconVariants; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! class-variance-authority */ "class-variance-authority");
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\AppIcon.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0__["createElement"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }



// import { cn } from "../lib/utils"

const iconVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('inline-flex gap-2 w-10 h-10 p-2 bg-base-300 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 hover:bg-base-400 focus:z-10 focus:ring-purple-800', {
  variants: {
    variant: {},
    disabled: {
      false: 'cursor-pointer',
      true: 'opacity-75 cursor-not-allowed'
    },
    size: {}
  },
  compoundVariants: [],
  defaultVariants: {
    disabled: false
  }
});
const AppIcon = _ref => {
  let {
      children,
      className,
      variant,
      disabled
    } = _ref,
    props = _objectWithoutProperties(_ref, ["children", "className", "variant", "disabled"]);
  return __jsx("button", _extends({}, props, {
    className: iconVariants({
      variant,
      disabled,
      className
    }),
    disabled: disabled,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 5
    }
  }), __jsx("span", {
    className: disabled && 'pointer-events-none',
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 7
    }
  }, children));
};
AppIcon.displayName = "AppIcon";


/***/ }),

/***/ "./src/components/ui/shared/AppInput.tsx":
/*!***********************************************!*\
  !*** ./src/components/ui/shared/AppInput.tsx ***!
  \***********************************************/
/*! exports provided: AppInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppInput", function() { return AppInput; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! class-variance-authority */ "class-variance-authority");
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\AppInput.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0__["createElement"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }



// import { cn } from "@/lib/utils"

const inputVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('block border border-base-400 w-full text-sm py-4 bg-white placeholder-base-500 focus:outline-none focus:ring-inset focus:ring-1 focus:z-10', {
  variants: {
    variant: {},
    disabled: {
      false: 'cursor-pointer',
      true: 'opacity-75 cursor-not-allowed pointer-events-none'
    },
    error: {
      true: 'border-error-500 focus:ring-error-500',
      false: 'focus:border-purple-800 focus:ring-purple-800'
    },
    size: {
      sm: 'h-10',
      base: 'h-12'
    },
    rounded: {
      base: 'rounded-lg',
      full: 'rounded-full'
    },
    prefixIcon: {
      true: 'pl-10'
    },
    suffixIcon: {
      true: 'pr-10'
    }
  },
  compoundVariants: [{
    prefixIcon: false,
    suffixIcon: false,
    class: 'px-5'
  }],
  defaultVariants: {
    size: 'base',
    // disabled: false,
    rounded: 'base'
  }
});
const labelVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('block text-xs', {
  variants: {
    error: {
      true: 'text-error-500',
      false: 'text-base-700'
    },
    required: {
      true: 'after:content-["*"] after:text-red-600'
    }
  },
  compoundVariants: [],
  defaultVariants: {}
});
const AppInput = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__["forwardRef"]((_ref, ref) => {
  let {
      type,
      label,
      size,
      rounded,
      errorMessage,
      prefixIcon,
      suffixIcon
    } = _ref,
    props = _objectWithoutProperties(_ref, ["type", "label", "size", "rounded", "errorMessage", "prefixIcon", "suffixIcon"]);
  const [showPassword, setShowPassword] = react__WEBPACK_IMPORTED_MODULE_0__["useState"](false);
  const inputType = type === 'password' && !showPassword ? 'password' : type === 'password' ? 'text' : type;
  return __jsx("div", {
    className: "space-y-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 7
    }
  }, label && __jsx("label", {
    htmlFor: props.id,
    className: labelVariants({
      error: !!errorMessage,
      required: props.required
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 19
    }
  }, label), __jsx("div", {
    className: "relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 9
    }
  }, prefixIcon && __jsx("label", {
    htmlFor: props.id,
    className: "absolute top-[3px] left-0 z-10 inline-flex items-center h-[44px] px-5 select-none text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 15
    }
  }, prefixIcon), __jsx("input", _extends({}, props, {
    ref: ref,
    className: inputVariants({
      size,
      rounded,
      error: !!errorMessage,
      prefixIcon: !!prefixIcon,
      suffixIcon: !!suffixIcon
    }),
    type: inputType,
    onChange: props.onChange,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 11
    }
  })), type === 'password' && __jsx("button", {
    onClick: () => setShowPassword(!showPassword),
    type: "button",
    className: "absolute inset-y-0 flex items-center px-2 text-gray-500 right-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 13
    }
  }, showPassword && __jsx("svg", {
    className: "w-5 h-5",
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4292_60094",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4292_60094)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M13.2708 11.1457L11.9792 9.854C12.0347 9.32623 11.875 8.87137 11.5 8.48942C11.125 8.10748 10.6736 7.94428 10.1458 7.99984L8.85417 6.70817C9.03472 6.63873 9.22222 6.58664 9.41667 6.55192C9.61111 6.5172 9.80556 6.49984 10 6.49984C10.9722 6.49984 11.7986 6.84012 12.4792 7.52067C13.1597 8.20123 13.5 9.02762 13.5 9.99984C13.5 10.1943 13.4826 10.3887 13.4479 10.5832C13.4132 10.7776 13.3542 10.9651 13.2708 11.1457ZM16.0417 13.9165L14.9583 12.8332C15.4583 12.4443 15.9132 12.0172 16.3229 11.5519C16.7326 11.0866 17.0764 10.5693 17.3542 9.99984C16.6736 8.59706 15.6701 7.49637 14.3438 6.69775C13.0174 5.89914 11.5694 5.49984 10 5.49984C9.63889 5.49984 9.28472 5.52067 8.9375 5.56234C8.59028 5.604 8.25 5.67345 7.91667 5.77067L6.70833 4.56234C7.23611 4.354 7.77431 4.20817 8.32292 4.12484C8.87153 4.0415 9.43056 3.99984 10 3.99984C11.9861 3.99984 13.8021 4.53803 15.4479 5.61442C17.0938 6.69081 18.2778 8.15262 19 9.99984C18.6944 10.7915 18.2882 11.5103 17.7812 12.1561C17.2743 12.8019 16.6944 13.3887 16.0417 13.9165ZM16 18.1248L13.2917 15.4165C12.7639 15.6109 12.2257 15.7568 11.6771 15.854C11.1285 15.9512 10.5694 15.9998 10 15.9998C8.01389 15.9998 6.19792 15.4616 4.55208 14.3853C2.90625 13.3089 1.72222 11.8471 1 9.99984C1.30556 9.20817 1.70833 8.48595 2.20833 7.83317C2.70833 7.18039 3.29167 6.59012 3.95833 6.06234L1.875 3.979L2.9375 2.9165L17.0625 17.0623L16 18.1248ZM5.02083 7.14567C4.53472 7.53456 4.08333 7.96164 3.66667 8.42692C3.25 8.8922 2.90972 9.4165 2.64583 9.99984C3.32639 11.4026 4.32986 12.5033 5.65625 13.3019C6.98264 14.1005 8.43056 14.4998 10 14.4998C10.3611 14.4998 10.7153 14.4755 11.0625 14.4269C11.4097 14.3783 11.7569 14.3123 12.1042 14.229L11.1667 13.2915C10.9722 13.3609 10.7778 13.413 10.5833 13.4478C10.3889 13.4825 10.1944 13.4998 10 13.4998C9.02778 13.4998 8.20139 13.1596 7.52083 12.479C6.84028 11.7984 6.5 10.9721 6.5 9.99984C6.5 9.80539 6.52431 9.61095 6.57292 9.4165C6.62153 9.22206 6.66667 9.02762 6.70833 8.83317L5.02083 7.14567Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 21
    }
  }))), !showPassword && __jsx("svg", {
    className: "w-5 h-5",
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4292_12472",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4292_12472)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M10 13.5C10.9722 13.5 11.7986 13.1597 12.4792 12.4792C13.1597 11.7986 13.5 10.9722 13.5 10C13.5 9.02778 13.1597 8.20139 12.4792 7.52083C11.7986 6.84028 10.9722 6.5 10 6.5C9.02778 6.5 8.20139 6.84028 7.52083 7.52083C6.84028 8.20139 6.5 9.02778 6.5 10C6.5 10.9722 6.84028 11.7986 7.52083 12.4792C8.20139 13.1597 9.02778 13.5 10 13.5ZM10 12C9.44444 12 8.97222 11.8056 8.58333 11.4167C8.19444 11.0278 8 10.5556 8 10C8 9.44444 8.19444 8.97222 8.58333 8.58333C8.97222 8.19444 9.44444 8 10 8C10.5556 8 11.0278 8.19444 11.4167 8.58333C11.8056 8.97222 12 9.44444 12 10C12 10.5556 11.8056 11.0278 11.4167 11.4167C11.0278 11.8056 10.5556 12 10 12ZM10 16C8.0195 16 6.21535 15.4549 4.58754 14.3646C2.95974 13.2743 1.76389 11.8194 1 10C1.76389 8.18056 2.95974 6.72569 4.58754 5.63542C6.21535 4.54514 8.0195 4 10 4C11.9805 4 13.7847 4.54514 15.4125 5.63542C17.0403 6.72569 18.2361 8.18056 19 10C18.2361 11.8194 17.0403 13.2743 15.4125 14.3646C13.7847 15.4549 11.9805 16 10 16ZM10 14.5C11.5556 14.5 12.9931 14.0972 14.3125 13.2917C15.6319 12.4861 16.6458 11.3889 17.3542 10C16.6458 8.61111 15.6319 7.51389 14.3125 6.70833C12.9931 5.90278 11.5556 5.5 10 5.5C8.44444 5.5 7.00694 5.90278 5.6875 6.70833C4.36806 7.51389 3.35417 8.61111 2.64583 10C3.35417 11.3889 4.36806 12.4861 5.6875 13.2917C7.00694 14.0972 8.44444 14.5 10 14.5Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 21
    }
  })))), suffixIcon && __jsx("label", {
    htmlFor: props.id,
    className: "absolute top-[3px] right-0 z-10 inline-flex items-center h-[44px] px-5 select-none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 15
    }
  }, suffixIcon)), errorMessage && __jsx("p", {
    className: "text-xs text-red-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 26
    }
  }, errorMessage));
});
AppInput.displayName = "AppInput";


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/*! exports provided: SETTING_CHANNEL, SETTING_KEYS, MENU_SECTION, RECEIVED_PAID_TOKEN_EVENT, UPDATE_RUBY_MOST_SUPPORTED_EVENT, UPDATE_TOP_GIFTED_EVENT, UPDATE_TOTAL_RUBY_IN_ROOM, ROLE_PERMISSIONS, ROLE_UNLOCKED_FEATURE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SETTING_CHANNEL", function() { return SETTING_CHANNEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SETTING_KEYS", function() { return SETTING_KEYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MENU_SECTION", function() { return MENU_SECTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RECEIVED_PAID_TOKEN_EVENT", function() { return RECEIVED_PAID_TOKEN_EVENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_RUBY_MOST_SUPPORTED_EVENT", function() { return UPDATE_RUBY_MOST_SUPPORTED_EVENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_TOP_GIFTED_EVENT", function() { return UPDATE_TOP_GIFTED_EVENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_TOTAL_RUBY_IN_ROOM", function() { return UPDATE_TOTAL_RUBY_IN_ROOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROLE_PERMISSIONS", function() { return ROLE_PERMISSIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROLE_UNLOCKED_FEATURE", function() { return ROLE_UNLOCKED_FEATURE; });
const SETTING_CHANNEL = 'SETTINGS';
const SETTING_KEYS = {
  SITE_NAME: 'siteName',
  LOGO_URL: 'logoUrl',
  FAVICON: 'favicon',
  LOGIN_PLACEHOLDER_IMAGE: 'loginPlaceholderImage',
  REQUIRE_EMAIL_VERIFICATION: 'requireEmailVerification',
  ADMIN_EMAIL: 'adminEmail',
  SENDER_EMAIL: 'senderEmail',
  META_KEYWORDS: 'metaKeywords',
  META_DESCRIPTION: 'metaDescription',
  HEADER_SCRIPT: 'headerScript',
  AFTER_BODY_SCRIPT: 'afterBodyScript',
  MONTHLY_SUBSCRIPTION_COMMISSION: 'monthlySubscriptionCommission',
  YEARLY_SUBSCRIPTION_COMMISSION: 'yearlySubscriptionCommission',
  VIDEO_SALE_COMMISSION: 'videoSaleCommission',
  GALLERY_SALE_COMMISSION: 'gallerySaleCommission',
  PRODUCT_SALE_COMMISSION: 'productSaleCommission',
  FEED_SALE_COMMISSION: 'feedSaleCommission',
  TIP_COMMISSION: 'tipCommission',
  STREAM_COMMISSION: 'streamCommission',
  MESSAGE_COMMISSION: 'messageCommission',
  CCBILL_CLIENT_ACCOUNT_NUMBER: 'ccbillClientAccountNumber',
  CCBILL_DATALINK_USERNAME: 'ccbillDatalinkUsername',
  CCBILL_DATALINK_PASSWORD: 'ccbillDatalinkPassword',
  CCBILL_SUB_ACCOUNT_NUMBER: 'ccbillSubAccountNumber',
  CCBILL_FLEXFORM_ID: 'ccbillFlexformId',
  CCBILL_SALT: 'ccbillSalt',
  CCBILL_CURRENCY_CODE: 'ccbilCurrencyCode',
  CCBILL_ENABLE: 'ccbillEnable',
  USE_SENDGRID_TRANSPORTER: 'useSengridTransporter',
  SMTP_TRANSPORTER: 'smtpTransporter',
  GOOGLE_ANALYTICS_CODE: 'gaCode',
  MAINTENANCE_MODE: 'maintenanceMode',
  PERFORMER_VERIFY_NUMBER: 'performerVerifyNumber',
  TWITTER_CLIENT_ID: 'twitterClientId',
  TWITTER_CLIENT_SECRET: 'twitterClientSecret',
  GOOGLE_CLIENT_ID: 'googleClientId',
  GOOGLE_CLIENT_SECRET: 'googleClientSecret',
  VIEWER_URL: 'viewerURL',
  PUBLISHER_URL: 'publisherURL',
  SUBSCRIBER_URL: 'subscriberUrl',
  OPTION_FOR_BROADCAST: 'optionForBroadcast',
  OPTION_FOR_PRIVATE: 'optionForPrivate',
  OPTION_FOR_GROUP: 'optionForGroup',
  SECURE_OPTION: 'secureOption',
  ANT_MEDIA_API_ENDPOINT: 'AntMediaApiEndpoint',
  ANT_MEDIA_APPNAME: 'AntMediaAppname',
  ANT_MEDIA_ENTERPRISE: 'AntMediaEnterprise',
  FOOTER_CONTENT: 'footerContent',
  USER_BENEFIT: 'userBenefit',
  MODEL_BENEFIT: 'modelBenefit',
  GOOGLE_RECAPTCHA_SITE_KEY: 'googleReCaptchaSiteKey',
  GOOGLE_RECAPTCHA_SECRET_KEY: 'googleReCaptchaSecretKey',
  ENABLE_GOOGLE_RECAPTCHA: 'enableGoogleReCaptcha',
  BITPAY_PRODUCTION_MODE: 'bitpayProductionMode',
  BITPAY_API_TOKEN: 'bitpayApiToken',
  TOKEN_CONVERSION_RATE: 'tokenConversionRate',
  STRIPE_PUBLISHABLE_KEY: 'stripePublishableKey',
  STRIPE_SECRET_KEY: 'stripeSecretKey',
  STRIPE_ENABLE: 'stripeEnable',
  AGORA_APPID: 'agoraAppId',
  AGORA_ENABLE: 'agoraEnable',
  PAYPAL_CLIENT_ID: 'paypalClientId',
  PAYPAL_CLIENT_SECRET: 'paypalClientSecret',
  PAYPAL_ENABLE: 'paypalEnable',
  PAYPAL_LIVE_MODE: 'paypalLiveMode',
  TOTAL_FOLLOWER_FOR_LIVE: 'totalFollowerForLive',
  TOTAL_FOLLOWER_FOR_PRIVATE_CHAT: 'totalFollowerForPrivateChat',
  CROSS_PROMOTION_DESCRIPTIONS: 'crossPromotionDescription',
  EXCHANGE_RATE_WEB_VALUE: 'exchangeRateWebValue',
  SALES_RUBY_HEADER_PAGE: 'salesRubyHeaderPage'
};
const MENU_SECTION = {
  MAIN: 'main',
  HEADER: 'header',
  FOOTER: 'footer'
};
const RECEIVED_PAID_TOKEN_EVENT = 'RECEIVED_PAID_TOKEN_EVENT';
const UPDATE_RUBY_MOST_SUPPORTED_EVENT = 'UPDATE_RUBY_MOST_SUPPORTED_EVENT';
const UPDATE_TOP_GIFTED_EVENT = 'UPDATE_TOP_GIFTED_EVENT';
const UPDATE_TOTAL_RUBY_IN_ROOM = 'UPDATE_TOTAL_RUBY_IN_ROOM';
const ROLE_PERMISSIONS = {
  ROLE_ADMIN: 'admin',
  ROLE_PUBLIC: 'role-public',
  ROLE_FAN_FREE: 'role-fan-free',
  ROLE_FAN_PAYING: 'role-fan-paying',
  ROLE_FAN_VERIFIED: 'role-fan-verified',
  ROLE_HOST_PRIVATE: 'role-host-private',
  ROLE_HOST_LIVE: 'role-host-live',
  ROLE_HOST_VERIFIED: 'role-host-verified',
  ROLE_CHANGE_PAYMENT_SETTINGS: 'role-change-payment-settings',
  ROLE_MILESTONES: 'role-milestones',
  ROLE_ALL_RISING_MODEL: 'role-all-rising-models',
  ROLE_MANAGED_ACCOUNT: 'role-managed-account',
  ROLE_HOST_CROSSPROMOTE: 'role-host-crosspromote',
  ROLE_HOST_DMMEFEE: 'role-host-dmefee'
};
const ROLE_UNLOCKED_FEATURE = {
  [ROLE_PERMISSIONS.ROLE_ALL_RISING_MODEL]: {
    url: '/broadcaster-dashboard',
    name: 'Broadcaster Analytics'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_PRIVATE]: {
    url: '/model/private-waiting-room',
    name: 'Host Private Live'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_LIVE]: {
    url: '/go-live',
    name: 'Host Public Live'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_VERIFIED]: {
    url: '/broadcaster-dashboard?tab=verification',
    name: 'Get Verified to Proceed'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_CROSSPROMOTE]: {
    url: '/help/models/cross-promotion',
    name: 'Cross Promotion'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_DMMEFEE]: {
    url: '/help/models/dm-me-for-a-fee',
    name: 'DM ME Fee'
  }
};

/***/ }),

/***/ "./src/hooks/useClickOutside.ts":
/*!**************************************!*\
  !*** ./src/hooks/useClickOutside.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useClickOutside = callback => {
  const ref = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const handleClickOutside = event => {
      if (ref.current && !ref.current.contains(event.target)) {
        callback();
      }
    };
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [callback]);
  return ref;
};
/* harmony default export */ __webpack_exports__["default"] = (useClickOutside);

/***/ }),

/***/ "./src/hooks/useDisabledScroll.ts":
/*!****************************************!*\
  !*** ./src/hooks/useDisabledScroll.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useDisableScroll = isOpen => {
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (isOpen) {
      // Disable scroll
      document.body.style.overflow = 'hidden';
    } else {
      // Enable scroll
      document.body.style.overflow = '';
    }

    // Cleanup function to re-enable scroll when the component unmounts
    return () => {
      document.body.style.overflow = '';
    };
  }, [isOpen]);
};
/* harmony default export */ __webpack_exports__["default"] = (useDisableScroll);

/***/ }),

/***/ "./src/icons/index.tsx":
/*!*****************************!*\
  !*** ./src/icons/index.tsx ***!
  \*****************************/
/*! exports provided: RubySvg, DiamondSvg, WalletSvg, CameraSvg, GiftIcon, SearchInputSvg, HashtagSvg, ProfileSvg, SaveBookSvg, CommentsSvg, ImageSvg, CautionSvg, RubySmallSvg, NoVerifiedIcon, CheckedIcon, WarningIcon, RubyIcon, RubySmallIcon, CautionIcon, DiamondIcon, ModelIcon, HomeIcon, PlusIcon, MessageIcon, UserIcon, TickIcon, ShareIcon, LiveIcon, MuteIcon, TopIcon, ShakeHandIcon, TrofeoIcon, VideoIcon, CameraIcon, SearchFilterIcon, SearchInputIcon, PlayIcon, HashtagIcon, ProfileIcon, SaveBookIcon, CommentsIcon, ImageIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubySvg", function() { return RubySvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiamondSvg", function() { return DiamondSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WalletSvg", function() { return WalletSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CameraSvg", function() { return CameraSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftIcon", function() { return GiftIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchInputSvg", function() { return SearchInputSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashtagSvg", function() { return HashtagSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileSvg", function() { return ProfileSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveBookSvg", function() { return SaveBookSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentsSvg", function() { return CommentsSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageSvg", function() { return ImageSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CautionSvg", function() { return CautionSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubySmallSvg", function() { return RubySmallSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoVerifiedIcon", function() { return NoVerifiedIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckedIcon", function() { return CheckedIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WarningIcon", function() { return WarningIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubyIcon", function() { return RubyIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubySmallIcon", function() { return RubySmallIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CautionIcon", function() { return CautionIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiamondIcon", function() { return DiamondIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelIcon", function() { return ModelIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeIcon", function() { return HomeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlusIcon", function() { return PlusIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageIcon", function() { return MessageIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserIcon", function() { return UserIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TickIcon", function() { return TickIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShareIcon", function() { return ShareIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiveIcon", function() { return LiveIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MuteIcon", function() { return MuteIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopIcon", function() { return TopIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShakeHandIcon", function() { return ShakeHandIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrofeoIcon", function() { return TrofeoIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoIcon", function() { return VideoIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CameraIcon", function() { return CameraIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchFilterIcon", function() { return SearchFilterIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchInputIcon", function() { return SearchInputIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlayIcon", function() { return PlayIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashtagIcon", function() { return HashtagIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileIcon", function() { return ProfileIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveBookIcon", function() { return SaveBookIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentsIcon", function() { return CommentsIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageIcon", function() { return ImageIcon; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\icons\\index.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
/* eslint-disable react/require-default-props */


const RubySvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 40 40",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 15,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M15.0719 10.1104L16.4441 7.60988C15.5293 7.22871 14.6144 7 13.6234 7C11.9462 7 10.3453 7.60988 9.12549 8.67718L9.81161 10.8118L15.0719 10.1104Z",
  fill: "url(#paint0_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 16,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M31.2341 10.7355L31.9202 8.67718C30.6242 7.60988 29.0995 7 27.4223 7C26.4312 7 25.4021 7.22871 24.5635 7.60988L25.9738 10.1257L31.2341 10.7355Z",
  fill: "url(#paint1_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 17,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M17.1306 7.91529C16.9019 7.76282 16.7494 7.70946 16.4445 7.61035L15.0723 10.1109L20.485 11.8033C19.7989 10.1261 18.5791 8.83012 17.1306 7.91529Z",
  fill: "url(#paint2_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 18,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M23.8392 7.91529C22.3908 8.75388 21.171 10.1261 20.4849 11.8033L25.9738 10.1261L24.5635 7.61035C24.3348 7.76282 24.0984 7.7552 23.8392 7.91529Z",
  fill: "url(#paint3_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 19,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M11.8702 26.8215C12.3276 27.2789 12.9375 27.7363 13.3949 28.1938L11.1841 21.8662L11.8702 26.8215Z",
  fill: "url(#paint4_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 20,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M27.6509 28.1938C28.1845 27.7363 28.6419 27.2027 29.0994 26.8215L29.7855 21.8662L27.6509 28.1938Z",
  fill: "url(#paint5_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 21,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.485 25.8305L24.1443 22.8573L25.8977 18.4356L23.3819 14.8525H17.588L15.0723 18.4356L16.8257 22.8573L20.485 25.8305Z",
  fill: "url(#paint6_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 22,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.0718 18.4353L17.5876 14.8522L15.0718 10.1104L9.81159 10.8117L7.98193 15.0809L15.0718 18.4353Z",
  fill: "url(#paint7_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 23,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M6.99106 14.8137L6 14.5469C6 14.8518 6 15.233 6 15.6142C6 16.8339 6.30494 18.1299 6.76236 19.4259L7.37224 17.2151L6.99106 14.8137Z",
  fill: "url(#paint8_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 24,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M6.99121 14.8145L7.37239 17.2159L7.98227 15.0813L6.99121 14.8145Z",
  fill: "url(#paint9_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 25,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.8976 18.4357L33.0638 15.0813L31.2341 10.7359L25.9738 10.126L23.3818 14.8526L25.8976 18.4357Z",
  fill: "url(#paint10_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 26,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M33.0635 15.0812L33.5971 17.2158L34.0545 14.8525L33.0635 15.0812Z",
  fill: "url(#paint11_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 27,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M33.5972 17.2151L34.2833 19.4259C34.7407 18.1299 34.9694 16.8339 34.9694 15.6142C34.9694 15.233 35.0456 14.9281 34.9694 14.5469L34.0546 14.8518L33.5972 17.2151Z",
  fill: "url(#paint12_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 28,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M7.98195 15.0811L7.37207 17.2156L11.1838 21.866L15.0719 18.4354L7.98195 15.0811Z",
  fill: "url(#paint13_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 29,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M8.85889 23.3147C9.39254 24.077 9.9643 24.8394 10.5742 25.5255C10.9554 25.9829 11.4128 26.3641 11.8702 26.8215L11.1841 21.8662L8.85889 23.3147Z",
  fill: "url(#paint14_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 30,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M7.37209 17.2158L6.76221 19.4267C7.29586 20.7227 7.94386 22.0187 8.85868 23.3147L11.1839 21.8662L7.37209 17.2158Z",
  fill: "url(#paint15_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 31,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.0721 18.4355L11.1841 21.8661L15.682 24.6869L16.8255 22.8572L15.0721 18.4355Z",
  fill: "url(#paint16_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 32,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.682 24.6869L11.1841 21.8662L13.3949 28.1938L15.682 24.6869Z",
  fill: "url(#paint17_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 33,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M24.144 22.8572L25.3638 24.6869L29.7855 21.8661L25.8975 18.4355L24.144 22.8572Z",
  fill: "url(#paint18_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 34,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.3638 24.6869L27.6508 28.1938L29.7854 21.8662L25.3638 24.6869Z",
  fill: "url(#paint19_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 35,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M29.0996 26.8215C29.557 26.3641 30.0144 25.9829 30.3956 25.5255C31.2342 24.5345 32.0728 23.5434 32.6827 22.5523L29.7857 21.8662L29.0996 26.8215Z",
  fill: "url(#paint20_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 36,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M33.5974 17.2158L29.7856 21.8662L32.6826 22.5523C33.3687 21.485 33.9024 20.4939 34.2835 19.4267L33.5974 17.2158Z",
  fill: "url(#paint21_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 37,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.8975 18.4354L29.7855 21.866L33.5973 17.2156L33.0636 15.0811L25.8975 18.4354Z",
  fill: "url(#paint22_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 38,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M23.3818 14.8522L20.4848 11.8027L17.5879 14.8522H23.3818Z",
  fill: "url(#paint23_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 39,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.485 11.8028L15.0723 10.1104L17.588 14.8522L20.485 11.8028Z",
  fill: "url(#paint24_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 40,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.9738 10.126L20.4849 11.8032L23.3818 14.8526L25.9738 10.126Z",
  fill: "url(#paint25_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 41,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.3639 24.6865L20.4849 25.8301L23.458 31.5477C24.5253 30.7091 25.7451 29.7943 26.8886 28.8032C27.1174 28.5745 27.4223 28.4221 27.651 28.1934L25.3639 24.6865Z",
  fill: "url(#paint26_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 42,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 25.8306L25.3639 24.6871L24.1442 22.8574L20.4849 25.8306Z",
  fill: "url(#paint27_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 43,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.6821 24.6865L13.395 28.1934C13.6237 28.4221 13.8524 28.5745 14.0811 28.8032C15.3009 29.8705 16.5207 30.8616 17.588 31.7002L20.4849 25.8301L15.6821 24.6865Z",
  fill: "url(#paint28_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 44,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M16.8257 22.8574L15.6821 24.6871L20.485 25.8306L16.8257 22.8574Z",
  fill: "url(#paint29_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 45,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 33.6824C20.4849 33.6824 23.3818 31.6241 23.458 31.5479L20.4849 32.3864V33.6824Z",
  fill: "url(#paint30_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 46,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 25.8301V32.3863L23.458 31.5477L20.4849 25.8301Z",
  fill: "url(#paint31_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 47,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4848 32.3863V25.8301L17.5879 31.7002L20.4848 32.3863Z",
  fill: "url(#paint32_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 48,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 32.3863L17.5879 31.7002C17.5117 31.7002 17.6642 31.7002 17.5879 31.7002C19.1889 32.92 20.4849 33.6823 20.4849 33.6823V32.3863Z",
  fill: "url(#paint33_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 49,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M34.9695 14.5475C34.9695 14.3188 34.8933 14.0901 34.8933 13.7852L34.0547 14.8525L34.9695 14.5475Z",
  fill: "url(#paint34_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 50,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M31.92 8.67676L31.2339 10.7351L33.0635 15.0805L34.0546 14.8518L34.8932 13.7845C34.4358 11.7262 33.3685 9.89653 31.92 8.67676Z",
  fill: "url(#paint35_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 51,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M6 14.5474L6.99106 14.8143L6.15247 13.8613C6.15247 14.09 6.07624 14.3187 6 14.5474Z",
  fill: "url(#paint36_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 52,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M9.12553 8.67676C7.60082 9.89653 6.53352 11.7262 6.15234 13.8608L6.99093 14.8137L7.982 15.0805L9.81165 10.8114L9.12553 8.67676Z",
  fill: "url(#paint37_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 53,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M17.5879 14.8525H23.3818L25.8976 18.4356L23.3818 14.8525H17.5879Z",
  fill: "url(#paint38_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 54,
    columnNumber: 5
  }
}), __jsx("defs", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 55,
    columnNumber: 5
  }
}, __jsx("linearGradient", {
  id: "paint0_linear_4200_38074",
  x1: "8.96463",
  y1: "-8.50143",
  x2: "14.899",
  y2: "17.3558",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 56,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 57,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 58,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 59,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 60,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 61,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 62,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint1_linear_4200_38074",
  x1: "28.7318",
  y1: "-0.285983",
  x2: "27.542",
  y2: "20.1834",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 64,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 65,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 66,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 67,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 68,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 69,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 70,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint2_linear_4200_38074",
  x1: "23.5674",
  y1: "-10.8733",
  x2: "16.4364",
  y2: "16.0163",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 72,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 73,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 74,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3685",
  stopColor: "#F69D9D",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 75,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4447",
  stopColor: "#F27072",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 76,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5179",
  stopColor: "#F04C50",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 77,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5865",
  stopColor: "#EE3338",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 78,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6485",
  stopColor: "#EC2329",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 79,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6983",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 80,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 81,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint3_linear_4200_38074",
  x1: "21.4037",
  y1: "-7.19612",
  x2: "23.9557",
  y2: "18.1904",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 83,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 84,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 85,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 86,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 87,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 88,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 89,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint4_linear_4200_38074",
  x1: "-4.689",
  y1: "35.4566",
  x2: "21.6369",
  y2: "19.2897",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 91,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 92,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F6BE95",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 93,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4173",
  stopColor: "#F4A684",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 94,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5734",
  stopColor: "#F16858",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 95,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 96,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 97,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint5_linear_4200_38074",
  x1: "33.6822",
  y1: "33.4185",
  x2: "25.2681",
  y2: "19.1997",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 99,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 100,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 101,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 102,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 103,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 104,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 105,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint6_linear_4200_38074",
  x1: "-11.9912",
  y1: "3.17463",
  x2: "30.1177",
  y2: "24.4822",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 107,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 108,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 109,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 110,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 111,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 112,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#8E0329",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 113,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint7_linear_4200_38074",
  x1: "-9.19569",
  y1: "-6.26985",
  x2: "26.8153",
  y2: "26.5106",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 115,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 116,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 117,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4015",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 118,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5231",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 119,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6271",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 120,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 121,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint8_linear_4200_38074",
  x1: "3.18066",
  y1: "16.6678",
  x2: "12.7504",
  y2: "17.6205",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 123,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.2064",
  stopColor: "#F9D19B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 124,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.285",
  stopColor: "#F7B98B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 125,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4516",
  stopColor: "#F37B62",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 126,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6764",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 127,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 128,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint9_linear_4200_38074",
  x1: "-3.72392",
  y1: "18.4059",
  x2: "12.04",
  y2: "14.9502",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 130,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 131,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 132,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4576",
  stopColor: "#F4A669",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 133,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6976",
  stopColor: "#ED682F",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 134,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC5C24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 135,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 136,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint10_linear_4200_38074",
  x1: "33.0342",
  y1: "6.93361",
  x2: "18.7771",
  y2: "29.9288",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 138,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.1104",
  stopColor: "#F6A9A7",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 139,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 140,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 141,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 142,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 143,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 144,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint11_linear_4200_38074",
  x1: "43.0505",
  y1: "19.1859",
  x2: "29.2201",
  y2: "14.4605",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 146,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 147,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 148,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 149,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 150,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 151,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 152,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint12_linear_4200_38074",
  x1: "40.3247",
  y1: "17.8383",
  x2: "25.715",
  y2: "15.654",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 154,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 155,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.0335",
  stopColor: "#DA7079",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 156,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.1635",
  stopColor: "#EA9195",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 157,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.2715",
  stopColor: "#F3A6A7",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 158,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 159,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 160,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 161,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 162,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 163,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint13_linear_4200_38074",
  x1: "-11.5524",
  y1: "18.4735",
  x2: "21.9622",
  y2: "18.4735",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 165,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 166,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 167,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4173",
  stopColor: "#F5A672",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 168,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5734",
  stopColor: "#F1684E",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 169,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 170,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 171,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint14_linear_4200_38074",
  x1: "-15.0809",
  y1: "28.3478",
  x2: "17.3263",
  y2: "23.4712",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 173,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 174,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 175,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4182",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 176,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.575",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 177,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.709",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 178,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 179,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint15_linear_4200_38074",
  x1: "-1.79767",
  y1: "24.3522",
  x2: "14.8874",
  y2: "17.4733",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 181,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.2064",
  stopColor: "#F9A11B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 182,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3102",
  stopColor: "#F7891D",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 183,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5284",
  stopColor: "#F04B21",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 184,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6764",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 185,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 186,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint16_linear_4200_38074",
  x1: "-9.46447",
  y1: "28.8716",
  x2: "23.6853",
  y2: "19.1163",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 188,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 189,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 190,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3818",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 191,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4621",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 192,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5307",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 193,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 194,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint17_linear_4200_38074",
  x1: "-10.2666",
  y1: "39.7405",
  x2: "19.9025",
  y2: "20.065",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 196,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 197,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 198,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 199,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 200,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 201,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 202,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint18_linear_4200_38074",
  x1: "-4.43171",
  y1: "37.827",
  x2: "30.405",
  y2: "18.978",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 204,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 205,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 206,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 207,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 208,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 209,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 210,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint19_linear_4200_38074",
  x1: "45.5948",
  y1: "41.7705",
  x2: "21.3349",
  y2: "17.7063",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 212,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 213,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 214,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 215,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 216,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 217,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 218,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint20_linear_4200_38074",
  x1: "35.4465",
  y1: "42.2947",
  x2: "28.257",
  y2: "14.5053",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 220,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 221,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 222,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5299",
  stopColor: "#F16366",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 223,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6723",
  stopColor: "#ED3136",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 224,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 225,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 226,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint21_linear_4200_38074",
  x1: "36.4731",
  y1: "32.861",
  x2: "29.7145",
  y2: "14.0336",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 228,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 229,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 230,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3897",
  stopColor: "#F59A95",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 231,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4869",
  stopColor: "#F16857",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 232,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4961",
  stopColor: "#F16351",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 233,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 234,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 235,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint22_linear_4200_38074",
  x1: "26.7672",
  y1: "2.3395",
  x2: "32.1957",
  y2: "30.5479",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 237,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 238,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 239,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 240,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 241,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 242,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 243,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint23_linear_4200_38074",
  x1: "20.4232",
  y1: "-4.93066",
  x2: "20.496",
  y2: "18.4281",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 245,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 246,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 247,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 248,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 249,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 250,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 251,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint24_linear_4200_38074",
  x1: "21.2847",
  y1: "-2.08147",
  x2: "15.8053",
  y2: "18.292",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 253,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 254,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.2435",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 255,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3153",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 256,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.466",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 257,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5948",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 258,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 259,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint25_linear_4200_38074",
  x1: "16.94",
  y1: "2.06056",
  x2: "28.0195",
  y2: "17.7462",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 261,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 262,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 263,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 264,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 265,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 266,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 267,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint26_linear_4200_38074",
  x1: "26.9444",
  y1: "45.1545",
  x2: "23.1644",
  y2: "21.3015",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 269,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 270,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 271,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3978",
  stopColor: "#F59697",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 272,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5614",
  stopColor: "#F05659",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 273,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6807",
  stopColor: "#ED2D33",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 274,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 275,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 276,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint27_linear_4200_38074",
  x1: "22.167",
  y1: "6.8481",
  x2: "23.1375",
  y2: "30.3963",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 278,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 279,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 280,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 281,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 282,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 283,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 284,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint28_linear_4200_38074",
  x1: "-24.6526",
  y1: "32.2569",
  x2: "27.3569",
  y2: "27.1381",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 286,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 287,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 288,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4227",
  stopColor: "#F5A672",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 289,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5903",
  stopColor: "#F1684E",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 290,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7717",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 291,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 292,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint29_linear_4200_38074",
  x1: "1.78233",
  y1: "35.3858",
  x2: "24.775",
  y2: "20.3404",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 294,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 295,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 296,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 297,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 298,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 299,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 300,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint30_linear_4200_38074",
  x1: "26.3934",
  y1: "45.1942",
  x2: "19.4254",
  y2: "25.3726",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 302,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 303,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 304,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 305,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 306,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 307,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 308,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint31_linear_4200_38074",
  x1: "43.3362",
  y1: "33.7202",
  x2: "16.2564",
  y2: "28.2544",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 310,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 311,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 312,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 313,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 314,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 315,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 316,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint32_linear_4200_38074",
  x1: "-1.39507",
  y1: "25.9823",
  x2: "25.5119",
  y2: "29.8262",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 318,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 319,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 320,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 321,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 322,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 323,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 324,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint33_linear_4200_38074",
  x1: "10.0833",
  y1: "42.9511",
  x2: "21.5102",
  y2: "29.8402",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 326,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 327,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 328,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4133",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 329,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5598",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 330,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6849",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 331,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 332,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint34_linear_4200_38074",
  x1: "42.7377",
  y1: "14.6631",
  x2: "27.4303",
  y2: "14.0254",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 334,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 335,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 336,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 337,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 338,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 339,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 340,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint35_linear_4200_38074",
  x1: "40.2334",
  y1: "4.22902",
  x2: "24.0763",
  y2: "21.0308",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 342,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 343,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 344,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 345,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 346,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 347,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 348,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint36_linear_4200_38074",
  x1: "2.64587",
  y1: "13.7997",
  x2: "10.0687",
  y2: "14.8172",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 350,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 351,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 352,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4576",
  stopColor: "#F4A669",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 353,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6976",
  stopColor: "#ED682F",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 354,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC5C24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 355,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 356,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint37_linear_4200_38074",
  x1: "4.89194",
  y1: "9.94753",
  x2: "13.3631",
  y2: "14.7572",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 358,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.2388",
  stopColor: "#F9DAC9",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 359,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3198",
  stopColor: "#F7C2B4",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 360,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4914",
  stopColor: "#F3847D",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 361,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7382",
  stopColor: "#EC2126",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 362,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7446",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 363,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 364,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint38_linear_4200_38074",
  x1: "22.8618",
  y1: "14.5016",
  x2: "22.2275",
  y2: "15.716",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 366,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 367,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4777",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 368,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7593",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 369,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 370,
    columnNumber: 9
  }
}))));
const DiamondSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 20 20",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 377,
    columnNumber: 3
  }
}, __jsx("g", {
  clipPath: "url(#a)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 378,
    columnNumber: 5
  }
}, __jsx("path", {
  fill: "url(#b)",
  d: "m6.791 3.267-3.96 4.747h3.173l3.96-5.146-3.173.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 379,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#c)",
  d: "m9.964 2.868-3.96 5.146h7.92l-3.96-5.146Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 380,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#d)",
  d: "m13.136 3.267 3.96 4.76h-3.173l-3.96-5.16 3.173.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 381,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#e)",
  d: "M9.964 17.132 2.83 8.014h3.173l3.96 9.118Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 382,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#f)",
  d: "M13.923 8.014h-7.92l3.96 9.118 3.96-9.118Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 383,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#g)",
  d: "m9.964 17.132 7.132-9.118h-3.173l-3.96 9.118Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 384,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "m6.79 3.255-3.97 4.76h3.173l3.971-5.16-3.172.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 385,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "m9.963 2.855-3.972 5.16h7.932l-3.96-5.16Zm3.173.4 3.972 4.76h-3.173l-3.972-5.16 3.173.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 386,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "M9.963 17.145 2.82 8.014h3.173l3.971 9.13Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 387,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "M13.935 8.014H5.991l3.972 9.13 3.972-9.13Zm-3.972 9.131 7.145-9.13h-3.173l-3.972 9.13Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 388,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#h)",
  fillRule: "evenodd",
  d: "m9.927 17.12 3.96-9.118.06.024L10 17.145l-.073-.025Z",
  clipRule: "evenodd",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 389,
    columnNumber: 7
  }
})), __jsx("defs", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 391,
    columnNumber: 5
  }
}, __jsx("linearGradient", {
  id: "b",
  x1: "10.058",
  x2: "2.926",
  y1: "2.996",
  y2: "8.148",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 392,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 393,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 394,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#64B5F6",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 395,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "c",
  x1: "9.964",
  x2: "9.964",
  y1: "2.866",
  y2: "8.018",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 397,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#B2EBF2",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 398,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#B3E5FC",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 399,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 400,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "d",
  x1: "9.87",
  x2: "17.003",
  y1: "2.996",
  y2: "8.147",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 402,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 403,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 404,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#64B5F6",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 405,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "e",
  x1: "3.846",
  x2: "10.979",
  y1: "7.257",
  y2: "16.767",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 407,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#0288D1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 408,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#0288D1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 409,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 410,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "f",
  x1: "9.964",
  x2: "9.01",
  y1: "8.018",
  y2: "17.437",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 412,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 413,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 414,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#64B5F6",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 415,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "g",
  x1: "16.082",
  x2: "8.95",
  y1: "7.257",
  y2: "16.767",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 417,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#0288D1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 418,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".333",
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 419,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 420,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "h",
  x1: "13.928",
  x2: "9.962",
  y1: "8.018",
  y2: "17.131",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 422,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 423,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 424,
    columnNumber: 9
  }
})), __jsx("clipPath", {
  id: "a",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 426,
    columnNumber: 7
  }
}, __jsx("path", {
  fill: "#fff",
  d: "M2.25 2.25h15.5v15.5H2.25z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 427,
    columnNumber: 9
  }
}))));
const ModelSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 434,
    columnNumber: 3
  }
}, __jsx("path", {
  id: "call-center-agent",
  d: "M51.14,20.906a9.759,9.759,0,0,0,1.414-5.048V9.672c-.536-12.9-18.913-12.891-19.444,0v6.187a9.759,9.759,0,0,0,1.414,5.048,8.085,8.085,0,0,0-4.949,7.443V30H56.089V28.35A8.085,8.085,0,0,0,51.14,20.906ZM34.877,9.672c.438-10.555,15.475-10.547,15.909,0v6.187a7.859,7.859,0,0,1-1.417,4.533,8.09,8.09,0,0,0-1.352-.114h-1.65v-2a6.184,6.184,0,0,0,2.651-5.074V10.6l-.787-.087a7.06,7.06,0,0,1-6.209-6L41.87,3.468l-1,.335a6.18,6.18,0,0,0-4.223,5.868v3.535a6.213,6.213,0,0,0,.063.884H34.877V9.672Zm7.954,7.954A4.415,4.415,0,0,1,39.3,15.858h0a2.55,2.55,0,0,1-.537-.841c-.3-.867-.261-.927-.261-.927h0a4.422,4.422,0,0,1-.089-.884V9.672a4.415,4.415,0,0,1,2.1-3.766,8.832,8.832,0,0,0,6.735,6.24v1.061A4.424,4.424,0,0,1,42.831,17.626Zm0,1.768a6.168,6.168,0,0,0,1.768-.258v1.142a1.768,1.768,0,0,1-3.535,0V19.136A6.166,6.166,0,0,0,42.831,19.394ZM39.96,26.762,37.908,24.71l1.712-1.642Zm1.477-3.236a3.556,3.556,0,0,0,2.787,0l-.431,4.705H41.87Zm4.6-.458,1.714,1.642L45.7,26.763Zm-11.164-7.21h2.365A6.229,6.229,0,0,0,39.3,18.281v2h-1.65a8.09,8.09,0,0,0-1.352.114A7.859,7.859,0,0,1,34.877,15.858Zm2.769,6.187h.487l-2.752,2.638,3.549,3.549H31.343A6.312,6.312,0,0,1,37.646,22.045Zm9.087,6.187,3.549-3.549-2.753-2.638h.488a6.312,6.312,0,0,1,6.3,6.187Z",
  transform: "translate(-26.574 1)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 435,
    columnNumber: 5
  }
}));
const HomeSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 440,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M29,13.82a1,1,0,0,0-.37-.77l-12-9.82a1,1,0,0,0-1.26,0l-12,9.82a1,1,0,0,0-.37.77,1,1,0,0,0,1,1,.94.94,0,0,0,.63-.23L6,13.47V24.2A2.81,2.81,0,0,0,8.8,27h2.9a2.81,2.81,0,0,0,2.8-2.8V22.8a.8.8,0,0,1,.8-.8h1.4a.8.8,0,0,1,.8.8v1.4A2.81,2.81,0,0,0,20.3,27h2.9A2.81,2.81,0,0,0,26,24.2V13.47l1.37,1.12a.94.94,0,0,0,.63.23A1,1,0,0,0,29,13.82ZM24,24.2a.8.8,0,0,1-.8.8H20.3a.8.8,0,0,1-.8-.8V22.8A2.81,2.81,0,0,0,16.7,20H15.3a2.81,2.81,0,0,0-2.8,2.8v1.4a.8.8,0,0,1-.8.8H8.8a.8.8,0,0,1-.8-.8V11.84l8-6.55,8,6.55Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 441,
    columnNumber: 5
  }
}));
const PlusSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 446,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M21,15H17V11a1,1,0,0,0-2,0v4H11a1,1,0,0,0,0,2h4v4a1,1,0,0,0,2,0V17h4a1,1,0,0,0,0-2ZM23,5H9A4,4,0,0,0,5,9V23a4,4,0,0,0,4,4H23a4,4,0,0,0,4-4V9A4,4,0,0,0,23,5Zm2,18a2,2,0,0,1-2,2H9a2,2,0,0,1-2-2V9A2,2,0,0,1,9,7H23a2,2,0,0,1,2,2Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 447,
    columnNumber: 5
  }
}));
const MessageSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 30 30",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 452,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M21,5H11a6,6,0,0,0-6,6V28.5a1,1,0,0,0,.81,1l.19,0a1,1,0,0,0,.93-.63A3,3,0,0,1,9.69,27H21a6,6,0,0,0,6-6V11A6,6,0,0,0,21,5Zm4,16a4,4,0,0,1-4,4H9.69A4.9,4.9,0,0,0,7,25.79V11a4,4,0,0,1,4-4H21a4,4,0,0,1,4,4Zm-6-8H13a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Zm-3,4H13a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 453,
    columnNumber: 5
  }
}));
const UserSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 458,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Zm0,22a10.17,10.17,0,0,1-2.66-.37,3,3,0,0,1,5.32,0A10.17,10.17,0,0,1,16,26Zm4.52-1.09a5,5,0,0,0-9,0,10,10,0,1,1,9,0ZM16,12a4,4,0,1,0,4,4A4,4,0,0,0,16,12Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,16,18Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 459,
    columnNumber: 5
  }
}));
const TickSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "14",
  height: "15",
  viewBox: "0 0 14 15",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 464,
    columnNumber: 3
  }
}, __jsx("g", {
  clipPath: "url(#clip0_4928_7811)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 465,
    columnNumber: 5
  }
}, __jsx("mask", {
  id: "mask0_4928_7811",
  maskUnits: "userSpaceOnUse",
  x: "0",
  y: "0",
  width: "14",
  height: "15",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 466,
    columnNumber: 7
  }
}, __jsx("rect", {
  y: "0.5",
  width: "14",
  height: "14",
  fill: "#D9D9D9",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 467,
    columnNumber: 9
  }
})), __jsx("g", {
  mask: "url(#mask0_4928_7811)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 469,
    columnNumber: 7
  }
}, __jsx("path", {
  d: "M5.06037 13.4498L3.96662 11.6415L1.91037 11.1748L2.09995 9.0748L0.699951 7.4998L2.09995 5.9248L1.91037 3.8248L3.96662 3.35814L5.06037 1.5498L6.99995 2.38105L8.93954 1.5498L10.0333 3.35814L12.0895 3.8248L11.9 5.9248L13.3 7.4998L11.9 9.0748L12.0895 11.1748L10.0333 11.6415L8.93954 13.4498L6.99995 12.6186L5.06037 13.4498ZM6.2562 9.5998L9.72704 6.14355L8.98329 5.3998L6.2562 8.1123L5.01662 6.8873L4.27287 7.63105L6.2562 9.5998Z",
  fill: "white",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 470,
    columnNumber: 9
  }
}))), __jsx("defs", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 473,
    columnNumber: 5
  }
}, __jsx("clipPath", {
  id: "clip0_4928_7811",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 474,
    columnNumber: 7
  }
}, __jsx("rect", {
  width: "14",
  height: "14",
  fill: "white",
  transform: "translate(0 0.5)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 475,
    columnNumber: 9
  }
}))));
const ShareSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 24 24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 482,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M20 14a1 1 0 00-1 1v3a1 1 0 01-1 1H6a1 1 0 01-1-1V6a1 1 0 011-1h4a1 1 0 000-2H6a3 3 0 00-3 3v12a3 3 0 003 3h12a3 3 0 003-3v-3a1 1 0 00-1-1zm-1.41-8H17a9 9 0 00-9 9 1 1 0 002 0 7 7 0 017-7h1.59l-2.3 2.29A1 1 0 0016 11a1 1 0 001 1 1 1 0 00.71-.29L22.41 7l-4.7-4.71A1 1 0 0017 2a1 1 0 00-1 1 1 1 0 00.29.71z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 483,
    columnNumber: 5
  }
}));
const LiveIconSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  height: "1em",
  viewBox: "-16 0 512 512.00113",
  width: "1em",
  fill: "currentColor",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 488,
    columnNumber: 3
  }
}, __jsx("g", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 489,
    columnNumber: 5
  }
}, __jsx("path", {
  d: "m262.84375 140.558594c-12.699219 12.671875-33.28125 12.671875-45.980469 0-12.695312-12.671875-12.695312-33.21875 0-45.890625 12.699219-12.671875 33.28125-12.671875 45.980469 0 12.695312 12.671875 12.695312 33.21875 0 45.890625zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 490,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m307.257812 189.726562c-3.960937 0-7.921874-1.511718-10.9375-4.539062-6.03125-6.039062-6.019531-15.824219.019532-21.851562 12.238281-12.214844 18.976562-28.453126 18.976562-45.722657s-6.738281-33.507812-18.976562-45.722656c-6.039063-6.03125-6.050782-15.8125-.019532-21.855469 6.027344-6.039062 15.8125-6.050781 21.851563-.019531 18.089844 18.054687 28.050781 42.058594 28.050781 67.597656 0 25.535157-9.960937 49.542969-28.050781 67.597657-3.015625 3.011718-6.964844 4.515624-10.914063 4.515624zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 491,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m342.210938 235.222656c-3.960938 0-7.921876-1.511718-10.9375-4.535156-6.03125-6.042969-6.019532-15.824219.019531-21.855469 24.414062-24.367187 37.863281-56.761719 37.863281-91.21875s-13.449219-66.851562-37.863281-91.21875c-6.039063-6.03125-6.050781-15.8125-.019531-21.855469 6.03125-6.039062 15.8125-6.050781 21.851562-.019531 30.265625 30.207031 46.9375 70.371094 46.933594 113.09375 0 42.722657-16.667969 82.890625-46.933594 113.097657-3.015625 3.007812-6.964844 4.511718-10.914062 4.511718zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 492,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m172.371094 189.726562c-3.949219 0-7.898438-1.503906-10.917969-4.515624-18.089844-18.054688-28.050781-42.0625-28.050781-67.597657 0-25.539062 9.960937-49.542969 28.050781-67.597656 6.039063-6.03125 15.824219-6.023437 21.851563.019531 6.03125 6.039063 6.019531 15.824219-.019532 21.855469-12.238281 12.214844-18.976562 28.453125-18.976562 45.722656s6.738281 33.507813 18.976562 45.722657c6.039063 6.027343 6.050782 15.8125.019532 21.851562-3.015626 3.023438-6.976563 4.539062-10.933594 4.539062zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 493,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m137.417969 235.222656c-3.953125 0-7.902344-1.503906-10.917969-4.515625-30.265625-30.207031-46.933594-70.371093-46.933594-113.09375 0-42.726562 16.667969-82.890625 46.933594-113.097656 6.039062-6.027344 15.824219-6.019531 21.851562.023437 6.03125 6.039063 6.019532 15.820313-.019531 21.851563-24.414062 24.367187-37.863281 56.761719-37.863281 91.21875s13.449219 66.855469 37.863281 91.222656c6.039063 6.03125 6.050781 15.8125.019531 21.855469-3.015624 3.023438-6.976562 4.535156-10.933593 4.535156zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 494,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m443.480469 261.9375h-407.332031c-19.964844 0-36.148438 16.183594-36.148438 36.144531v177.769531c0 19.964844 16.183594 36.148438 36.148438 36.148438h407.328124c19.964844 0 36.148438-16.183594 36.148438-36.148438v-177.769531c0-19.960937-16.183594-36.144531-36.144531-36.144531zm-324.609375 203.683594h-56.933594c-8.53125 0-15.449219-6.917969-15.449219-15.453125v-126.398438c0-8.53125 6.917969-15.453125 15.449219-15.453125 8.535156 0 15.453125 6.917969 15.453125 15.453125v110.945313h41.480469c8.535156 0 15.453125 6.917968 15.453125 15.453125 0 8.535156-6.917969 15.453125-15.453125 15.453125zm63.328125-15.453125c0 8.535156-6.917969 15.453125-15.453125 15.453125s-15.453125-6.917969-15.453125-15.453125v-126.398438c0-8.53125 6.917969-15.453125 15.453125-15.453125s15.453125 6.917969 15.453125 15.453125zm130.015625-121.929688-38.160156 126.394531c-.003907.011719-.007813.023438-.011719.035157-4.144531 14.144531-25.273438 13.796875-29.5625 0-.003907-.011719-.007813-.023438-.011719-.035157l-38.160156-126.394531c-2.464844-8.171875 2.15625-16.792969 10.328125-19.261719 8.164062-2.464843 16.792969 2.15625 19.257812 10.328126l23.367188 77.394531 23.367187-77.394531c2.46875-8.171876 11.089844-12.796876 19.261719-10.328126 8.167969 2.46875 12.792969 11.089844 10.324219 19.261719zm95.066406 35.320313c8.535156 0 15.453125 6.917968 15.453125 15.453125 0 8.53125-6.917969 15.453125-15.453125 15.453125h-43.851562v40.25h52.175781c8.535156 0 15.453125 6.917968 15.453125 15.453125 0 8.535156-6.917969 15.453125-15.453125 15.453125h-67.628907c-8.535156 0-15.453124-6.917969-15.453124-15.453125v-126.398438c0-8.53125 6.917968-15.453125 15.453124-15.453125h69.710938c8.53125 0 15.453125 6.917969 15.453125 15.453125 0 8.535157-6.921875 15.453125-15.453125 15.453125h-54.261719v24.335938zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 495,
    columnNumber: 7
  }
})));
const WalletSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  version: "1.0",
  width: "183.000000pt",
  height: "160.000000pt",
  viewBox: "0 0 183.000000 160.000000",
  preserveAspectRatio: "xMidYMid meet",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 501,
    columnNumber: 3
  }
}, __jsx("g", {
  transform: "translate(0.000000,160.000000) scale(0.100000,-0.100000)",
  fill: "currentColor",
  stroke: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 502,
    columnNumber: 5
  }
}, __jsx("path", {
  d: "M860 1319 c-118 -72 -248 -151 -287 -176 -69 -42 -86 -64 -63 -78 6 -4 135 69 286 161 217 130 278 163 286 153 5 -8 15 -26 23 -41 l15 -27 -171 -103 c-94 -56 -174 -108 -176 -116 -3 -7 -1 -18 5 -24 8 -8 62 20 186 96 96 58 177 106 179 106 3 0 33 -47 67 -105 42 -71 68 -105 78 -103 8 2 17 8 19 13 4 13 -208 368 -222 372 -5 1 -107 -56 -225 -128z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 503,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "M376 1220 c-40 -13 -74 -47 -86 -89 -6 -21 -10 -191 -10 -404 0 -398 1 -408 55 -457 l27 -25 484 -3 c535 -3 525 -4 564 61 15 24 20 50 20 110 0 42 3 77 8 78 106 9 102 1 102 195 0 163 0 164 -25 180 -27 18 -55 13 -55 -10 0 -8 9 -18 21 -21 29 -10 18 -30 -17 -30 l-29 0 -5 170 c-4 143 -8 174 -23 197 -22 33 -102 67 -119 50 -15 -15 -2 -42 21 -42 11 0 32 -11 48 -24 24 -21 28 -32 31 -95 2 -39 2 -71 -1 -71 -2 0 -21 7 -40 15 -31 13 -111 15 -502 15 l-466 0 -24 25 c-27 26 -31 54 -13 88 20 39 40 46 124 47 60 0 83 4 87 14 3 7 0 19 -6 25 -13 13 -128 13 -171 1z m483 -250 l470 0 28 -24 c24 -21 27 -31 28 -82 l0 -59 -118 -5 c-90 -4 -120 -9 -127 -20 -5 -8 -10 -70 -10 -136 0 -101 3 -124 17 -135 11 -10 50 -15 127 -16 l111 -2 3 -60 c3 -71 -19 -129 -52 -136 -35 -7 -34 -7 -504 -6 l-453 1 -24 25 -25 24 0 331 0 331 30 -16 c25 -13 97 -15 499 -15z m639 -317 l-3 -108 -160 0 -160 0 -3 94 c-1 52 -1 100 2 108 4 10 42 13 166 13 l161 0 -3 -107z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 504,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "M747 874 c-4 -4 -7 -15 -7 -25 0 -10 -8 -20 -18 -23 -29 -9 -61 -49 -68 -82 -6 -34 23 -80 62 -94 22 -9 24 -16 24 -70 0 -33 -4 -60 -8 -60 -14 0 -42 35 -42 53 0 10 -8 17 -20 17 -15 0 -20 -7 -20 -28 0 -36 22 -66 59 -82 18 -7 31 -21 33 -33 4 -30 42 -30 46 0 2 13 13 24 28 27 95 24 98 157 4 196 -28 11 -30 16 -30 62 0 56 14 60 40 14 8 -16 19 -28 23 -27 4 0 12 1 17 1 32 0 -8 83 -49 100 -18 7 -31 21 -33 33 -3 22 -28 34 -41 21z m-7 -139 c0 -46 -7 -54 -28 -33 -15 15 -15 51 0 66 21 21 28 13 28 -33z m90 -125 c11 -11 20 -25 20 -31 0 -19 -20 -48 -40 -59 -19 -10 -20 -7 -20 50 0 64 8 72 40 40z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 505,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "M1250 690 c0 -11 6 -20 14 -20 21 0 30 -20 17 -33 -9 -9 -16 -6 -30 12 -12 16 -24 22 -35 18 -40 -15 3 -80 53 -80 54 0 83 70 43 106 -26 24 -62 22 -62 -3z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 506,
    columnNumber: 7
  }
})));
const MuteSvg = () => __jsx("svg", {
  width: "1.2em",
  height: "1.2em",
  viewBox: "-4 0 32 32",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  fill: "currentColor",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 512,
    columnNumber: 3
  }
}, __jsx("g", {
  id: "icomoon-ignore",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 513,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M24.3 4.592l-0.742-0.742-7.142 7.143v-5.822l-7.687 6.127h-5.949v4.743l-0.003 0.003 0.003 0.003v4.693h3.889l-6.668 6.668 0.742 0.742 7.41-7.41h0.027l1.003-1.002-0.015-0.012 6.202-6.202v0.027l1.049-1.049v-0.027l7.883-7.883zM3.828 19.691v-7.343h5.268l6.271-4.998v3.949l0.001 0.743-7.65 7.649h-3.889z",
  fill: "#fff",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 514,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.368 19.691h-0.001v4.901l-5.355-4.202-0.747 0.747 7.151 5.611v-6.008h0.001v-6.755l-1.049 1.049z",
  fill: "#fff",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 515,
    columnNumber: 5
  }
}));
const TopSvg = () => __jsx("svg", {
  width: "1.2em",
  height: "1.2em",
  viewBox: "0 0 64 64",
  xmlns: "http://www.w3.org/2000/svg",
  strokeWidth: "3",
  stroke: "white",
  fill: "currentColor",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 520,
    columnNumber: 3
  }
}, __jsx("g", {
  id: "SVGRepo_bgCarrier",
  strokeWidth: "0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 521,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_tracerCarrier",
  strokeLinecap: "round",
  strokeLinejoin: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 522,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_iconCarrier",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 523,
    columnNumber: 5
  }
}, __jsx("circle", {
  cx: "33.52",
  cy: "39.9",
  r: "20.42",
  strokeLinecap: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 524,
    columnNumber: 7
  }
}), __jsx("path", {
  color: "white",
  d: "M33.65,27.91l3.64,7.38a.12.12,0,0,0,.1.07l8.15,1.19a.13.13,0,0,1,.07.23l-5.89,5.74a.11.11,0,0,0,0,.12l1.39,8.12a.14.14,0,0,1-.2.14l-7.28-3.83a.15.15,0,0,0-.13,0L26.18,50.9a.14.14,0,0,1-.2-.14l1.39-8.12a.14.14,0,0,0,0-.12l-5.89-5.74a.13.13,0,0,1,.07-.23l8.15-1.19a.12.12,0,0,0,.1-.07l3.64-7.38A.14.14,0,0,1,33.65,27.91Z",
  strokeLinecap: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 525,
    columnNumber: 7
  }
}), __jsx("polyline", {
  points: "21.48 23.75 9.89 3.67 19.97 3.67 29.04 19.38 19.97 3.67",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 526,
    columnNumber: 7
  }
}), __jsx("polyline", {
  points: "44.82 22.89 55.92 3.67 45.79 3.67 36.77 19.38",
  strokeLinecap: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 527,
    columnNumber: 7
  }
})));
const HandShakeSvg = () => __jsx("svg", {
  width: "1.2em",
  height: "1.2em",
  fill: "currentColor",
  viewBox: "0 -64 640 640",
  xmlns: "http://www.w3.org/2000/svg",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 533,
    columnNumber: 3
  }
}, __jsx("g", {
  id: "SVGRepo_bgCarrier",
  strokeWidth: "0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 534,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_tracerCarrier",
  strokeLinecap: "round",
  strokeLinejoin: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 535,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_iconCarrier",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 536,
    columnNumber: 5
  }
}, __jsx("path", {
  d: "M519.2 127.9l-47.6-47.6A56.252 56.252 0 0 0 432 64H205.2c-14.8 0-29.1 5.9-39.6 16.3L118 127.9H0v255.7h64c17.6 0 31.8-14.2 31.9-31.7h9.1l84.6 76.4c30.9 25.1 73.8 25.7 105.6 3.8 12.5 10.8 26 15.9 41.1 15.9 18.2 0 35.3-7.4 48.8-24 22.1 8.7 48.2 2.6 64-16.8l26.2-32.3c5.6-6.9 9.1-14.8 10.9-23h57.9c.1 17.5 14.4 31.7 31.9 31.7h64V127.9H519.2zM48 351.6c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16zm390-6.9l-26.1 32.2c-2.8 3.4-7.8 4-11.3 1.2l-23.9-19.4-30 36.5c-6 7.3-15 4.8-18 2.4l-36.8-31.5-15.6 19.2c-13.9 17.1-39.2 19.7-55.3 6.6l-97.3-88H96V175.8h41.9l61.7-61.6c2-.8 3.7-1.5 5.7-2.3H262l-38.7 35.5c-29.4 26.9-31.1 72.3-4.4 101.3 14.8 16.2 61.2 41.2 101.5 4.4l8.2-7.5 108.2 87.8c3.4 2.8 3.9 7.9 1.2 11.3zm106-40.8h-69.2c-2.3-2.8-4.9-5.4-7.7-7.7l-102.7-83.4 12.5-11.4c6.5-6 7-16.1 1-22.6L367 167.1c-6-6.5-16.1-6.9-22.6-1l-55.2 50.6c-9.5 8.7-25.7 9.4-34.6 0-9.3-9.9-8.5-25.1 1.2-33.9l65.6-60.1c7.4-6.8 17-10.5 27-10.5l83.7-.2c2.1 0 4.1.8 5.5 2.3l61.7 61.6H544v128zm48 47.7c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 537,
    columnNumber: 7
  }
})));
const CameraSvg = ({
  color = '#121212'
}) => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    fill: "none",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 544,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_4872_39001)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 551,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_4872_39001",
    style: {
      maskType: "alpha"
    },
    width: "21",
    height: "20",
    x: "0",
    y: "0",
    maskUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 552,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#D9D9D9",
    d: "M0.667 0H20.667V20H0.667z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 561,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_39001)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 563,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: color,
    d: "M10.667 14.5c1 0 1.833-.34 2.5-1.02.666-.681 1-1.508 1-2.48 0-.958-.334-1.781-1-2.469-.667-.687-1.5-1.031-2.5-1.031s-1.834.344-2.5 1.031c-.667.688-1 1.514-1 2.48 0 .965.333 1.788 1 2.468.666.68 1.5 1.021 2.5 1.021zm0-1.5c-.584 0-1.063-.195-1.438-.586-.375-.39-.562-.869-.562-1.435 0-.554.187-1.022.562-1.405.375-.383.854-.574 1.438-.574.583 0 1.062.191 1.437.574.375.383.563.851.563 1.405 0 .566-.188 1.044-.563 1.435-.375.39-.854.586-1.437.586zm-6.5 4a1.44 1.44 0 01-1.052-.448 1.44 1.44 0 01-.448-1.052v-9c0-.403.149-.753.448-1.052A1.44 1.44 0 014.167 5h2.5l1.5-2h5l1.5 2h2.5c.412 0 .765.15 1.059.448.294.299.44.65.44 1.052v9c0 .403-.146.753-.44 1.052a1.433 1.433 0 01-1.06.448h-13zm0-1.5h13v-9h-3.25l-1.502-2H8.917l-1.5 2h-3.25v9z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 564,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 570,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_4872_39001",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 571,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0H20V20H0z",
    transform: "translate(.667)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 572,
      columnNumber: 11
    }
  }))));
};
const GiftIcon = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    fill: "#000000",
    stroke: "#000000",
    strokeWidth: "0",
    viewBox: "0 0 512 512",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 585,
      columnNumber: 5
    }
  }, __jsx("path", {
    fill: "none",
    strokeLinecap: "round",
    strokeMiterlimit: "10",
    strokeWidth: "32",
    d: "M256 104v56h56a56 56 0 1 0-56-56zm0 0v56h-56a56 56 0 1 1 56-56z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 594,
      columnNumber: 5
    }
  }), __jsx("rect", {
    width: "384",
    height: "112",
    x: "64",
    y: "160",
    fill: "none",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "32",
    rx: "32",
    ry: "32",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 601,
      columnNumber: 5
    }
  }), __jsx("path", {
    fill: "none",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "32",
    d: "M416 272v144a48 48 0 0 1-48 48H144a48 48 0 0 1-48-48V272m160-112v304",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 613,
      columnNumber: 5
    }
  }));
};
const VideoSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    fill: "none",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 626,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_4872_3440)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 633,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_4872_3440",
    style: {
      maskType: "alpha"
    },
    width: "21",
    height: "20",
    x: "0",
    y: "0",
    maskUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 634,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#D9D9D9",
    d: "M0.5 0H20.5V20H0.5z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 643,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_3440)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 645,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#121212",
    d: "M6.5 13h6v-.438c0-.542-.275-.98-.825-1.313-.55-.333-1.275-.499-2.175-.499-.889 0-1.611.166-2.167.5-.555.332-.833.77-.833 1.313V13zm3.01-3c.41 0 .76-.15 1.052-.448.292-.299.438-.653.438-1.062 0-.41-.146-.76-.438-1.052A1.434 1.434 0 009.51 7c-.41 0-.763.146-1.062.438A1.418 1.418 0 008 8.49c0 .41.15.763.448 1.062.299.299.653.448 1.062.448zM5 16a1.44 1.44 0 01-1.052-.448A1.44 1.44 0 013.5 14.5v-9c0-.412.15-.766.448-1.06C4.247 4.148 4.598 4 5 4h9c.412 0 .766.147 1.06.44.293.294.44.647.44 1.06V9l3-3v8l-3-3v3.5c0 .403-.147.754-.44 1.052A1.433 1.433 0 0114 16H5zm0-1.5h9v-9H5v9z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 646,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 652,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_4872_3440",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 653,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0H20V20H0z",
    transform: "translate(.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 654,
      columnNumber: 11
    }
  }))));
};
const TrofeoSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    fill: "none",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 663,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_4872_29491)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 670,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_4872_29491",
    style: {
      maskType: "alpha"
    },
    width: "21",
    height: "20",
    x: "0",
    y: "0",
    maskUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 671,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#D9D9D9",
    d: "M0.833 0H20.833V20H0.833z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 680,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_29491)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 682,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#121212",
    d: "M6.833 17v-1.5h3.25v-2.583a4.032 4.032 0 01-1.614-.698 3.55 3.55 0 01-1.115-1.26c-1.014-.126-1.854-.56-2.52-1.303a3.79 3.79 0 01-1-2.614V6.5c0-.412.146-.766.44-1.06.294-.293.647-.44 1.06-.44h1.5V3h8v2h1.504c.413 0 .766.147 1.058.44.291.294.437.647.437 1.06V7c0 1-.333 1.878-1 2.635a3.883 3.883 0 01-2.52 1.323 3.55 3.55 0 01-1.115 1.26 4.032 4.032 0 01-1.615.699V15.5h3.25V17h-8zm0-7.75V6.5h-1.5V7c0 .514.132.969.396 1.365.264.395.632.69 1.104.885zm4 2.25c.695 0 1.285-.243 1.771-.73a2.41 2.41 0 00.73-1.77V4.5h-5V9c0 .694.242 1.285.728 1.77.487.487 1.077.73 1.771.73zm4-2.25c.473-.194.84-.49 1.104-.885.264-.396.396-.851.396-1.365v-.5h-1.5v2.75z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 683,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 689,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_4872_29491",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 690,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0H20V20H0z",
    transform: "translate(.833)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 691,
      columnNumber: 11
    }
  }))));
};
const FilterSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 704,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_4872_39044",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 705,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 706,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_39044)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 708,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M9.5 17V12H11V13.75H17V15.25H11V17H9.5ZM3 15.25V13.75H8V15.25H3ZM6 12.5V10.75H3V9.25H6V7.5H7.5V12.5H6ZM9 10.75V9.25H17V10.75H9ZM12 8V3H13.5V4.75H17V6.25H13.5V8H12ZM3 6.25V4.75H11V6.25H3Z",
    fill: "#ADADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 709,
      columnNumber: 9
    }
  })));
};
const PlaySvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "50",
    height: "50",
    viewBox: "0 0 50 50",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 717,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5034_12878",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "50",
    height: "50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 718,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "50",
    height: "50",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 719,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5034_12878)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 721,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M20.3125 33.4135L33.4134 25.0001L20.3125 16.5867V33.4135ZM25.0035 44.7917C22.2661 44.7917 19.6931 44.2723 17.2845 43.2334C14.8759 42.1945 12.7807 40.7846 10.999 39.0037C9.21726 37.2228 7.80673 35.1285 6.76738 32.7209C5.72804 30.3134 5.20837 27.741 5.20837 25.0036C5.20837 22.2662 5.72782 19.6933 6.76671 17.2846C7.8056 14.876 9.21549 12.7808 10.9964 10.9991C12.7773 9.21739 14.8716 7.80685 17.2792 6.76751C19.6867 5.72817 22.2591 5.2085 24.9965 5.2085C27.7339 5.2085 30.3069 5.72794 32.7155 6.76683C35.1241 7.80572 37.2193 9.21561 39.001 10.9965C40.7827 12.7775 42.1933 14.8717 43.2326 17.2793C44.2719 19.6868 44.7916 22.2593 44.7916 24.9966C44.7916 27.734 44.2722 30.307 43.2333 32.7156C42.1944 35.1242 40.7845 37.2194 39.0036 39.0011C37.2226 40.7828 35.1284 42.1934 32.7208 43.2327C30.3133 44.2721 27.7408 44.7917 25.0035 44.7917ZM25 41.6668C29.6528 41.6668 33.5937 40.0522 36.8229 36.823C40.0521 33.5939 41.6667 29.6529 41.6667 25.0001C41.6667 20.3473 40.0521 16.4064 36.8229 13.1772C33.5937 9.94803 29.6528 8.33345 25 8.33345C20.3472 8.33345 16.4062 9.94803 13.1771 13.1772C9.94791 16.4064 8.33332 20.3473 8.33332 25.0001C8.33332 29.6529 9.94791 33.5939 13.1771 36.823C16.4062 40.0522 20.3472 41.6668 25 41.6668Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 722,
      columnNumber: 9
    }
  })));
};
const SearchInputSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 730,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5035_38668",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 731,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 732,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5035_38668)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 734,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M15.9375 17L10.9583 12.0208C10.5417 12.3264 10.0848 12.566 9.58767 12.7396C9.09056 12.9132 8.56158 13 8.00073 13C6.61135 13 5.43056 12.5139 4.45833 11.5417C3.48611 10.5694 3 9.38889 3 8C3 6.61111 3.48611 5.43056 4.45833 4.45833C5.43056 3.48611 6.61111 3 8 3C9.38889 3 10.5694 3.48611 11.5417 4.45833C12.5139 5.43056 13 6.61135 13 8.00073C13 8.56158 12.9132 9.09056 12.7396 9.58767C12.566 10.0848 12.3264 10.5417 12.0208 10.9583L17 15.9375L15.9375 17ZM8 11.5C8.97222 11.5 9.79861 11.1597 10.4792 10.4792C11.1597 9.79861 11.5 8.97222 11.5 8C11.5 7.02778 11.1597 6.20139 10.4792 5.52083C9.79861 4.84028 8.97222 4.5 8 4.5C7.02778 4.5 6.20139 4.84028 5.52083 5.52083C4.84028 6.20139 4.5 7.02778 4.5 8C4.5 8.97222 4.84028 9.79861 5.52083 10.4792C6.20139 11.1597 7.02778 11.5 8 11.5Z",
    fill: "#212121",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 735,
      columnNumber: 9
    }
  })));
};
const HashtagSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 743,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_5081_24079)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 744,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_5081_24079",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 745,
      columnNumber: 9
    }
  }, __jsx("rect", {
    x: "0.166641",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 746,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_5081_24079)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 748,
      columnNumber: 9
    }
  }, __jsx("path", {
    d: "M5.66664 16L6.29164 13.5H3.16664L3.54164 12H6.66664L7.54164 8.5H4.16664L4.54164 7H7.91664L8.66664 4H10.1666L9.41664 7H12.4166L13.1666 4H14.6666L13.9166 7H17.1666L16.7916 8.5H13.5416L12.6666 12H16.1666L15.7916 13.5H12.2916L11.6666 16H10.1666L10.7916 13.5H7.79164L7.16664 16H5.66664ZM8.16664 12H11.1666L12.0416 8.5H9.04164L8.16664 12Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 749,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 752,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_5081_24079",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 753,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    transform: "translate(0.166641)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 754,
      columnNumber: 11
    }
  }))));
};
const ProfileSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 763,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7559",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 764,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 765,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7559)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 767,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M10.5 10C9.66667 10 8.95833 9.70833 8.375 9.125C7.79167 8.54167 7.5 7.83333 7.5 7C7.5 6.16667 7.79167 5.45833 8.375 4.875C8.95833 4.29167 9.66667 4 10.5 4C11.3333 4 12.0417 4.29167 12.625 4.875C13.2083 5.45833 13.5 6.16667 13.5 7C13.5 7.83333 13.2083 8.54167 12.625 9.125C12.0417 9.70833 11.3333 10 10.5 10ZM4.5 16V14C4.5 13.6806 4.58681 13.3785 4.76042 13.0938C4.93403 12.809 5.17361 12.5694 5.47917 12.375C6.24306 11.9306 7.05208 11.5903 7.90625 11.3542C8.76042 11.1181 9.625 11 10.5 11C11.375 11 12.2396 11.1181 13.0938 11.3542C13.9479 11.5903 14.7569 11.9306 15.5208 12.375C15.8264 12.5556 16.066 12.7917 16.2396 13.0833C16.4132 13.375 16.5 13.6806 16.5 14V16H4.5Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 768,
      columnNumber: 9
    }
  })));
};
const SaveBookSvg = ({
  color = '#121212'
}) => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 776,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7588",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 777,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 778,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7588)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 780,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M5.5 20.2499V5.3077C5.5 4.80257 5.675 4.375 6.025 4.025C6.375 3.675 6.80257 3.5 7.3077 3.5H16.6922C17.1974 3.5 17.625 3.675 17.975 4.025C18.325 4.375 18.5 4.80257 18.5 5.3077V20.2499L12 17.4615L5.5 20.2499ZM6.99997 17.95L12 15.8L17 17.95V5.3077C17 5.23077 16.9679 5.16024 16.9038 5.09613C16.8397 5.03203 16.7692 4.99998 16.6922 4.99998H7.3077C7.23077 4.99998 7.16024 5.03203 7.09613 5.09613C7.03202 5.16024 6.99997 5.23077 6.99997 5.3077V17.95Z",
    fill: color,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 781,
      columnNumber: 9
    }
  })));
};
const CommentsSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 789,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7592",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 790,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 791,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7592)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 793,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M7.99998 10.8846C8.24484 10.8846 8.45349 10.7984 8.62593 10.6259C8.79836 10.4535 8.88458 10.2448 8.88458 9.99998C8.88458 9.75511 8.79836 9.54646 8.62593 9.37402C8.45349 9.20159 8.24484 9.11538 7.99998 9.11538C7.75511 9.11538 7.54646 9.20159 7.37403 9.37402C7.20159 9.54646 7.11538 9.75511 7.11538 9.99998C7.11538 10.2448 7.20159 10.4535 7.37403 10.6259C7.54646 10.7984 7.75511 10.8846 7.99998 10.8846ZM12 10.8846C12.2448 10.8846 12.4535 10.7984 12.6259 10.6259C12.7984 10.4535 12.8846 10.2448 12.8846 9.99998C12.8846 9.75511 12.7984 9.54646 12.6259 9.37402C12.4535 9.20159 12.2448 9.11538 12 9.11538C11.7551 9.11538 11.5465 9.20159 11.374 9.37402C11.2016 9.54646 11.1154 9.75511 11.1154 9.99998C11.1154 10.2448 11.2016 10.4535 11.374 10.6259C11.5465 10.7984 11.7551 10.8846 12 10.8846ZM16 10.8846C16.2448 10.8846 16.4535 10.7984 16.6259 10.6259C16.7984 10.4535 16.8846 10.2448 16.8846 9.99998C16.8846 9.75511 16.7984 9.54646 16.6259 9.37402C16.4535 9.20159 16.2448 9.11538 16 9.11538C15.7551 9.11538 15.5465 9.20159 15.374 9.37402C15.2016 9.54646 15.1154 9.75511 15.1154 9.99998C15.1154 10.2448 15.2016 10.4535 15.374 10.6259C15.5465 10.7984 15.7551 10.8846 16 10.8846ZM2.5 21.0384V4.3077C2.5 3.80257 2.675 3.375 3.025 3.025C3.375 2.675 3.80257 2.5 4.3077 2.5H19.6923C20.1974 2.5 20.625 2.675 20.975 3.025C21.325 3.375 21.5 3.80257 21.5 4.3077V15.6923C21.5 16.1974 21.325 16.625 20.975 16.975C20.625 17.325 20.1974 17.5 19.6923 17.5H6.03845L2.5 21.0384ZM5.4 16H19.6923C19.7692 16 19.8397 15.9679 19.9038 15.9038C19.9679 15.8397 20 15.7692 20 15.6923V4.3077C20 4.23077 19.9679 4.16024 19.9038 4.09613C19.8397 4.03203 19.7692 3.99998 19.6923 3.99998H4.3077C4.23077 3.99998 4.16024 4.03203 4.09613 4.09613C4.03202 4.16024 3.99998 4.23077 3.99998 4.3077V17.3846L5.4 16Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 794,
      columnNumber: 9
    }
  })));
};
const ImageSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "25",
    viewBox: "0 0 24 25",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 802,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7597",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "25",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 803,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "25",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 804,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7597)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 806,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M5.3077 21.3538C4.80257 21.3538 4.375 21.1715 4.025 20.8069C3.675 20.4423 3.5 19.997 3.5 19.4708V5.52853C3.5 5.00235 3.675 4.55697 4.025 4.19238C4.375 3.8278 4.80257 3.64551 5.3077 3.64551H18.6923C19.1974 3.64551 19.625 3.8278 19.975 4.19238C20.325 4.55697 20.5 5.00235 20.5 5.52853V19.4708C20.5 19.997 20.325 20.4423 19.975 20.8069C19.625 21.1715 19.1974 21.3538 18.6923 21.3538H5.3077ZM5.3077 19.7913H18.6923C18.7692 19.7913 18.8397 19.7579 18.9038 19.6912C18.9679 19.6244 19 19.5509 19 19.4708V5.52853C19 5.44839 18.9679 5.37493 18.9038 5.30814C18.8397 5.24137 18.7692 5.20798 18.6923 5.20798H5.3077C5.23077 5.20798 5.16024 5.24137 5.09612 5.30814C5.03202 5.37493 4.99997 5.44839 4.99997 5.52853V19.4708C4.99997 19.5509 5.03202 19.6244 5.09612 19.6912C5.16024 19.7579 5.23077 19.7913 5.3077 19.7913ZM6.75003 17.4475H17.3269L14.0384 12.8803L11.2308 16.6863L9.23075 14.0221L6.75003 17.4475Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 807,
      columnNumber: 9
    }
  })));
};
const CautionSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "25",
    height: "24",
    viewBox: "0 0 25 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 815,
      columnNumber: 5
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    transform: "translate(0.5)",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 816,
      columnNumber: 7
    }
  }), __jsx("mask", {
    id: "mask0_5641_90864",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "25",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 817,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 818,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5641_90864)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 820,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M4.96758 20.5009C3.81199 20.5009 3.09041 19.2492 3.66953 18.2492L11.202 5.24242C11.7798 4.24471 13.2203 4.24472 13.7981 5.24242L21.3306 18.2492C21.9097 19.2492 21.1881 20.5009 20.0326 20.5009H4.96758ZM12.5001 17.8086C12.7289 17.8086 12.9207 17.7312 13.0755 17.5764C13.2303 17.4216 13.3077 17.2298 13.3077 17.0009C13.3077 16.7721 13.2303 16.5803 13.0755 16.4255C12.9207 16.2707 12.7289 16.1933 12.5001 16.1933C12.2712 16.1933 12.0794 16.2707 11.9246 16.4255C11.7698 16.5803 11.6924 16.7721 11.6924 17.0009C11.6924 17.2298 11.7698 17.4216 11.9246 17.5764C12.0794 17.7312 12.2712 17.8086 12.5001 17.8086ZM11.7501 15.1933H13.25V10.1933H11.7501V15.1933Z",
    fill: "#DC1C1C",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 821,
      columnNumber: 9
    }
  })));
};
const RubySmallSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "17",
    height: "16",
    viewBox: "0 0 17 16",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 829,
      columnNumber: 5
    }
  }, __jsx("path", {
    d: "M6.47767 4.04495L7.02657 3.04473C6.66064 2.89226 6.2947 2.80078 5.89828 2.80078C5.22741 2.80078 4.58703 3.04474 4.09912 3.47165L4.37357 4.32549L6.47767 4.04495Z",
    fill: "url(#paint0_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 830,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.9427 4.295L13.2171 3.47165C12.6987 3.04473 12.0888 2.80078 11.4179 2.80078C11.0215 2.80078 10.6099 2.89226 10.2744 3.04473L10.8386 4.05104L12.9427 4.295Z",
    fill: "url(#paint1_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 831,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.30113 3.1669C7.20964 3.10591 7.14866 3.08456 7.02668 3.04492L6.47778 4.04513L8.64287 4.7221C8.36842 4.05123 7.88052 3.53283 7.30113 3.1669Z",
    fill: "url(#paint2_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 832,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M9.98457 3.1669C9.40518 3.50234 8.91727 4.05123 8.64282 4.7221L10.8384 4.05123L10.2743 3.04492C10.1828 3.10591 10.0882 3.10286 9.98457 3.1669Z",
    fill: "url(#paint3_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 833,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M5.19706 10.7282C5.38002 10.9112 5.62397 11.0941 5.80694 11.2771L4.92261 8.74609L5.19706 10.7282Z",
    fill: "url(#paint4_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 834,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M11.5093 11.2771C11.7227 11.0941 11.9057 10.8807 12.0887 10.7282L12.3631 8.74609L11.5093 11.2771Z",
    fill: "url(#paint5_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 835,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64287 10.3326L10.1066 9.1433L10.808 7.37463L9.80165 5.94141H7.48409L6.47778 7.37463L7.17915 9.1433L8.64287 10.3326Z",
    fill: "url(#paint6_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 836,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.47781 7.37489L7.48412 5.94166L6.47781 4.04492L4.37371 4.32547L3.64185 6.03315L6.47781 7.37489Z",
    fill: "url(#paint7_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 837,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.2453 5.92509L2.84888 5.81836C2.84888 5.94034 2.84888 6.09281 2.84888 6.24528C2.84888 6.73319 2.97085 7.25159 3.15382 7.76999L3.39777 6.88566L3.2453 5.92509Z",
    fill: "url(#paint8_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 838,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.24536 5.92578L3.39783 6.88635L3.64179 6.03251L3.24536 5.92578Z",
    fill: "url(#paint9_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 839,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.8081 7.37465L13.6745 6.03291L12.9427 4.29474L10.8386 4.05078L9.80176 5.94142L10.8081 7.37465Z",
    fill: "url(#paint10_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 840,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.6743 6.03289L13.8878 6.88673L14.0707 5.94141L13.6743 6.03289Z",
    fill: "url(#paint11_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 841,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.8879 6.88566L14.1624 7.76999C14.3454 7.25159 14.4368 6.73319 14.4368 6.24528C14.4368 6.09281 14.4673 5.97083 14.4368 5.81836L14.0709 5.94034L13.8879 6.88566Z",
    fill: "url(#paint12_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 842,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.64166 6.0332L3.39771 6.88704L4.92242 8.74719L6.47762 7.37495L3.64166 6.0332Z",
    fill: "url(#paint13_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 843,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.99243 9.32548C4.20589 9.63043 4.4346 9.93537 4.67855 10.2098C4.83102 10.3928 5.01399 10.5453 5.19695 10.7282L4.92251 8.74609L3.99243 9.32548Z",
    fill: "url(#paint14_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 844,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.39776 6.88672L3.15381 7.77105C3.36727 8.28945 3.62647 8.80785 3.9924 9.32626L4.92247 8.74687L3.39776 6.88672Z",
    fill: "url(#paint15_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 845,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.47781 7.375L4.92261 8.74724L6.72177 9.87553L7.17918 9.14366L6.47781 7.375Z",
    fill: "url(#paint16_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 846,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.72177 9.87438L4.92261 8.74609L5.80694 11.2771L6.72177 9.87438Z",
    fill: "url(#paint17_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 847,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.1067 9.14366L10.5946 9.87553L12.3633 8.74724L10.8081 7.375L10.1067 9.14366Z",
    fill: "url(#paint18_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 848,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.5945 9.87438L11.5093 11.2771L12.3631 8.74609L10.5945 9.87438Z",
    fill: "url(#paint19_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 849,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.0889 10.7282C12.2718 10.5453 12.4548 10.3928 12.6073 10.2098C12.9427 9.81339 13.2781 9.41697 13.5221 9.02054L12.3633 8.74609L12.0889 10.7282Z",
    fill: "url(#paint20_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 850,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.888 6.88672L12.3633 8.74687L13.5221 9.02131C13.7965 8.59439 14.01 8.19797 14.1624 7.77105L13.888 6.88672Z",
    fill: "url(#paint21_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 851,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.8079 7.37495L12.3631 8.74719L13.8878 6.88704L13.6743 6.0332L10.8079 7.37495Z",
    fill: "url(#paint22_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 852,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M9.80169 5.94047L8.64291 4.7207L7.48413 5.94047H9.80169Z",
    fill: "url(#paint23_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 853,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64287 4.72189L6.47778 4.04492L7.48409 5.94166L8.64287 4.72189Z",
    fill: "url(#paint24_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 854,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.8384 4.05078L8.64282 4.72165L9.8016 5.94142L10.8384 4.05078Z",
    fill: "url(#paint25_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 855,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.5945 9.875L8.64282 10.3324L9.8321 12.6195C10.259 12.284 10.7469 11.9181 11.2043 11.5217C11.2958 11.4302 11.4178 11.3692 11.5093 11.2777L10.5945 9.875Z",
    fill: "url(#paint26_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 856,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64282 10.3319L10.5945 9.87444L10.1065 9.14258L8.64282 10.3319Z",
    fill: "url(#paint27_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 857,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.72171 9.875L5.80688 11.2777C5.89837 11.3692 5.98985 11.4302 6.08133 11.5217C6.56924 11.9486 7.05715 12.345 7.48407 12.6805L8.64285 10.3324L6.72171 9.875Z",
    fill: "url(#paint28_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 858,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.17934 9.14258L6.72192 9.87444L8.64306 10.3319L7.17934 9.14258Z",
    fill: "url(#paint29_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 859,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64282 13.473C8.64282 13.473 9.8016 12.6496 9.8321 12.6191L8.64282 12.9546V13.473Z",
    fill: "url(#paint30_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 860,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64282 10.332V12.9545L9.8321 12.6191L8.64282 10.332Z",
    fill: "url(#paint31_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 861,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64291 12.9545V10.332L7.48413 12.6801L8.64291 12.9545Z",
    fill: "url(#paint32_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 862,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64293 12.9541L7.48414 12.6797C7.45365 12.6797 7.51464 12.6797 7.48414 12.6797C8.12452 13.1676 8.64293 13.4725 8.64293 13.4725V12.9541Z",
    fill: "url(#paint33_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 863,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M14.4367 5.81861C14.4367 5.72713 14.4062 5.63565 14.4062 5.51367L14.0708 5.94059L14.4367 5.81861Z",
    fill: "url(#paint34_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 864,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.2171 3.4707L12.9426 4.29405L13.6745 6.03222L14.0709 5.94074L14.4064 5.51382C14.2234 4.69047 13.7965 3.95861 13.2171 3.4707Z",
    fill: "url(#paint35_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 865,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M2.84888 5.81937L3.2453 5.9261L2.90987 5.54492C2.90987 5.6364 2.87937 5.72789 2.84888 5.81937Z",
    fill: "url(#paint36_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 866,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M4.09919 3.4707C3.4893 3.95861 3.06238 4.69047 2.90991 5.54431L3.24535 5.92549L3.64177 6.03222L4.37363 4.32454L4.09919 3.4707Z",
    fill: "url(#paint37_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 867,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.48413 5.94141H9.80169L10.808 7.37463L9.80169 5.94141H7.48413Z",
    fill: "url(#paint38_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 868,
      columnNumber: 7
    }
  }), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 869,
      columnNumber: 7
    }
  }, __jsx("linearGradient", {
    id: "paint0_linear_5641_63339",
    x1: "4.03478",
    y1: "-3.39979",
    x2: "6.40854",
    y2: "6.94309",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 870,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 871,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 872,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 873,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 874,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 875,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 876,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint1_linear_5641_63339",
    x1: "11.9417",
    y1: "-0.113612",
    x2: "11.4658",
    y2: "8.07415",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 878,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 879,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 880,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 881,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 882,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 883,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 884,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint2_linear_5641_63339",
    x1: "9.87585",
    y1: "-4.34855",
    x2: "7.02345",
    y2: "6.40731",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 886,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 887,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 888,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3685",
    "stop-color": "#F69D9D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 889,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4447",
    "stop-color": "#F27072",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 890,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5179",
    "stop-color": "#F04C50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 891,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5865",
    "stop-color": "#EE3338",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 892,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6485",
    "stop-color": "#EC2329",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 893,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6983",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 894,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 895,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint3_linear_5641_63339",
    x1: "9.01034",
    y1: "-2.87767",
    x2: "10.0312",
    y2: "7.27694",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 897,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 898,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 899,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 900,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 901,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 902,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 903,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint4_linear_5641_63339",
    x1: "-1.42662",
    y1: "14.1822",
    x2: "9.10373",
    y2: "7.71548",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 905,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 906,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F6BE95",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 907,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4173",
    "stop-color": "#F4A684",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 908,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5734",
    "stop-color": "#F16858",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 909,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 910,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 911,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint5_linear_5641_63339",
    x1: "13.9218",
    y1: "13.367",
    x2: "10.5562",
    y2: "7.6795",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 913,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 914,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 915,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 916,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 917,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 918,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 919,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint6_linear_5641_63339",
    x1: "-4.3476",
    y1: "1.27024",
    x2: "12.496",
    y2: "9.79325",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 921,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 922,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 923,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 924,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 925,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 926,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#8E0329",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 927,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint7_linear_5641_63339",
    x1: "-3.2292",
    y1: "-2.50716",
    x2: "11.1752",
    y2: "10.605",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 929,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 930,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 931,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4015",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 932,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5231",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 933,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6271",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 934,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 935,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint8_linear_5641_63339",
    x1: "1.72114",
    y1: "6.66674",
    x2: "5.54905",
    y2: "7.04779",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 937,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.2064",
    "stop-color": "#F9D19B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 938,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.285",
    "stop-color": "#F7B98B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 939,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4516",
    "stop-color": "#F37B62",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 940,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6764",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 941,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 942,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint9_linear_5641_63339",
    x1: "-1.04069",
    y1: "7.36236",
    x2: "5.26487",
    y2: "5.98006",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 944,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 945,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 946,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4576",
    "stop-color": "#F4A669",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 947,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6976",
    "stop-color": "#ED682F",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 948,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC5C24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 949,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 950,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint10_linear_5641_63339",
    x1: "13.6627",
    y1: "2.77384",
    x2: "7.95988",
    y2: "11.9719",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 952,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.1104",
    "stop-color": "#F6A9A7",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 953,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 954,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 955,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 956,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 957,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 958,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint11_linear_5641_63339",
    x1: "17.6691",
    y1: "7.67476",
    x2: "12.137",
    y2: "5.78461",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 960,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 961,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 962,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 963,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 964,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 965,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 966,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint12_linear_5641_63339",
    x1: "16.579",
    y1: "7.13495",
    x2: "10.7351",
    y2: "6.26123",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 968,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 969,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.0335",
    "stop-color": "#DA7079",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 970,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.1635",
    "stop-color": "#EA9195",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 971,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.2715",
    "stop-color": "#F3A6A7",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 972,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 973,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 974,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 975,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 976,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 977,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint13_linear_5641_63339",
    x1: "-4.17209",
    y1: "7.3902",
    x2: "9.23375",
    y2: "7.3902",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 979,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 980,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 981,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4173",
    "stop-color": "#F5A672",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 982,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5734",
    "stop-color": "#F1684E",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 983,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 984,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 985,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint14_linear_5641_63339",
    x1: "-5.58348",
    y1: "11.3387",
    x2: "7.37939",
    y2: "9.38809",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 987,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 988,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 989,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4182",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 990,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.575",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 991,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.709",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 992,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 993,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint15_linear_5641_63339",
    x1: "-0.270143",
    y1: "9.74125",
    x2: "6.40388",
    y2: "6.9897",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 995,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.2064",
    "stop-color": "#F9A11B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 996,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3102",
    "stop-color": "#F7891D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 997,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5284",
    "stop-color": "#F04B21",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 998,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6764",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 999,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1000,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint16_linear_5641_63339",
    x1: "-3.33681",
    y1: "11.5494",
    x2: "9.92311",
    y2: "7.64729",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1002,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1003,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1004,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3818",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1005,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4621",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1006,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5307",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1007,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1008,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint17_linear_5641_63339",
    x1: "-3.65767",
    y1: "15.8958",
    x2: "8.40996",
    y2: "8.02561",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1010,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1011,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1012,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1013,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1014,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1015,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1016,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint18_linear_5641_63339",
    x1: "-1.32361",
    y1: "15.1316",
    x2: "12.6111",
    y2: "7.59197",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1018,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1019,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1020,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1021,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1022,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1023,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1024,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint19_linear_5641_63339",
    x1: "18.6869",
    y1: "16.7078",
    x2: "8.98293",
    y2: "7.08211",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1026,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1027,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1028,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1029,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1030,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1031,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1032,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint20_linear_5641_63339",
    x1: "14.6276",
    y1: "16.9175",
    x2: "11.7518",
    y2: "5.80172",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1034,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1035,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1036,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5299",
    "stop-color": "#F16366",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1037,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6723",
    "stop-color": "#ED3136",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1038,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1039,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1040,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint21_linear_5641_63339",
    x1: "15.0383",
    y1: "13.1448",
    x2: "12.3348",
    y2: "5.61383",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1042,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1043,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1044,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3897",
    "stop-color": "#F59A95",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1045,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4869",
    "stop-color": "#F16857",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1046,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4961",
    "stop-color": "#F16351",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1047,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1048,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1049,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint22_linear_5641_63339",
    x1: "11.1558",
    y1: "0.936583",
    x2: "13.3271",
    y2: "12.22",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1051,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1052,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1053,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1054,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1055,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1056,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1057,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint23_linear_5641_63339",
    x1: "8.61827",
    y1: "-1.97266",
    x2: "8.64736",
    y2: "7.37086",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1059,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1060,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1061,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1062,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1063,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1064,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1065,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint24_linear_5641_63339",
    x1: "8.96276",
    y1: "-0.831805",
    x2: "6.77098",
    y2: "7.31756",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1067,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1068,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.2435",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1069,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3153",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1070,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.466",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1071,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5948",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1072,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1073,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint25_linear_5641_63339",
    x1: "7.22487",
    y1: "0.824615",
    x2: "11.6567",
    y2: "7.09886",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1075,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1076,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1077,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1078,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1079,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1080,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1081,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint26_linear_5641_63339",
    x1: "11.2266",
    y1: "18.0622",
    x2: "9.71463",
    y2: "8.521",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1083,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1084,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1085,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3978",
    "stop-color": "#F59697",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1086,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5614",
    "stop-color": "#F05659",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1087,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6807",
    "stop-color": "#ED2D33",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1088,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1089,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1090,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint27_linear_5641_63339",
    x1: "9.31568",
    y1: "2.73885",
    x2: "9.70387",
    y2: "12.1581",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1092,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1093,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1094,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1095,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1096,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1097,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1098,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint28_linear_5641_63339",
    x1: "-9.41217",
    y1: "12.9031",
    x2: "11.3916",
    y2: "10.8556",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1100,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1101,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1102,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4227",
    "stop-color": "#F5A672",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1103,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5903",
    "stop-color": "#F1684E",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1104,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7717",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1105,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1106,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint29_linear_5641_63339",
    x1: "1.162",
    y1: "14.1539",
    x2: "10.3591",
    y2: "8.13578",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1108,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1109,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1110,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1111,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1112,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1113,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1114,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint30_linear_5641_63339",
    x1: "11.0062",
    y1: "18.0777",
    x2: "8.21904",
    y2: "10.149",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1116,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1117,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1118,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1119,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1120,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1121,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1122,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint31_linear_5641_63339",
    x1: "17.7833",
    y1: "13.4881",
    x2: "6.95143",
    y2: "11.3018",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1124,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1125,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1126,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1127,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1128,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1129,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1130,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint32_linear_5641_63339",
    x1: "-0.109052",
    y1: "10.3929",
    x2: "10.6537",
    y2: "11.9305",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1132,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1133,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1134,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1135,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1136,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1137,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1138,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint33_linear_5641_63339",
    x1: "4.48229",
    y1: "17.1801",
    x2: "9.05307",
    y2: "11.9357",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1140,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1141,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1142,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4133",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1143,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5598",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1144,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6849",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1145,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1146,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint34_linear_5641_63339",
    x1: "17.544",
    y1: "5.86484",
    x2: "11.421",
    y2: "5.60976",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1148,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1149,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1150,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1151,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1152,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1153,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1154,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint35_linear_5641_63339",
    x1: "16.5424",
    y1: "1.69161",
    x2: "10.0796",
    y2: "8.41233",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1156,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1157,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1158,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1159,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1160,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1161,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1162,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint36_linear_5641_63339",
    x1: "1.50722",
    y1: "5.52025",
    x2: "4.47635",
    y2: "5.92726",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1164,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1165,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1166,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4576",
    "stop-color": "#F4A669",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1167,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6976",
    "stop-color": "#ED682F",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1168,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC5C24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1169,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1170,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint37_linear_5641_63339",
    x1: "2.40575",
    y1: "3.97901",
    x2: "5.79421",
    y2: "5.90286",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1172,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.2388",
    "stop-color": "#F9DAC9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1173,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3198",
    "stop-color": "#F7C2B4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1174,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4914",
    "stop-color": "#F3847D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1175,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7382",
    "stop-color": "#EC2126",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1176,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7446",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1177,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1178,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint38_linear_5641_63339",
    x1: "9.59369",
    y1: "5.80101",
    x2: "9.33998",
    y2: "6.28678",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1180,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1181,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4777",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1182,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7593",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1183,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1184,
      columnNumber: 11
    }
  }))));
};
const WarningSvg = () => {
  return __jsx("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1193,
      columnNumber: 5
    }
  }, __jsx("path", {
    id: "info",
    d: "M10.7894 5.00001H9.21055V11.0526H10.7894V5.00001ZM10 12.8542C9.75911 12.8542 9.55718 12.9357 9.39424 13.0987C9.23129 13.2616 9.14981 13.4635 9.14981 13.7044C9.14981 13.9453 9.23129 14.1472 9.39424 14.3102C9.55718 14.4731 9.75911 14.5546 10 14.5546C10.2409 14.5546 10.4428 14.4731 10.6058 14.3102C10.7687 14.1472 10.8502 13.9453 10.8502 13.7044C10.8502 13.4635 10.7687 13.2616 10.6058 13.0987C10.4428 12.9357 10.2409 12.8542 10 12.8542ZM9.99824 0C11.3813 0 12.6814 0.262457 13.8984 0.787371C15.1154 1.31228 16.174 2.02465 17.0742 2.92448C17.9745 3.82433 18.6871 4.88248 19.2123 6.09894C19.7374 7.31538 20 8.61515 20 9.99824C20 11.3813 19.7375 12.6814 19.2126 13.8984C18.6877 15.1154 17.9753 16.174 17.0755 17.0742C16.1757 17.9744 15.1175 18.6871 13.9011 19.2123C12.6846 19.7374 11.3849 20 10.0018 20C8.61867 20 7.31863 19.7375 6.10165 19.2126C4.88464 18.6877 3.82603 17.9753 2.9258 17.0755C2.02555 16.1757 1.31285 15.1175 0.787712 13.9011C0.262571 12.6846 0 11.3849 0 10.0018C0 8.61867 0.262457 7.31863 0.787371 6.10165C1.31228 4.88465 2.02465 3.82603 2.92448 2.9258C3.82433 2.02555 4.88248 1.31285 6.09894 0.787712C7.31538 0.262571 8.61515 0 9.99824 0Z",
    fill: "#DFA102",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1194,
      columnNumber: 7
    }
  }));
};
const CheckedSvg = () => {
  return __jsx("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1201,
      columnNumber: 5
    }
  }, __jsx("path", {
    id: "check_circle",
    d: "M8.50607 14.4777L15.583 7.40081L14.4737 6.29152L8.50607 12.2591L5.50607 9.25913L4.39677 10.3684L8.50607 14.4777ZM10.0018 20C8.61867 20 7.31863 19.7375 6.10165 19.2126C4.88464 18.6877 3.82603 17.9753 2.9258 17.0755C2.02555 16.1757 1.31285 15.1175 0.787713 13.9011C0.262571 12.6846 0 11.3849 0 10.0018C0 8.61867 0.262457 7.31863 0.787371 6.10165C1.31228 4.88464 2.02465 3.82603 2.92448 2.9258C3.82433 2.02555 4.88248 1.31286 6.09894 0.787714C7.31538 0.262572 8.61514 0 9.99824 0C11.3813 0 12.6814 0.262458 13.8984 0.787372C15.1154 1.31229 16.174 2.02465 17.0742 2.92448C17.9745 3.82433 18.6871 4.88248 19.2123 6.09894C19.7374 7.31538 20 8.61515 20 9.99824C20 11.3813 19.7375 12.6814 19.2126 13.8984C18.6877 15.1154 17.9753 16.174 17.0755 17.0742C16.1757 17.9745 15.1175 18.6871 13.9011 19.2123C12.6846 19.7374 11.3849 20 10.0018 20Z",
    fill: "#24A148",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1202,
      columnNumber: 7
    }
  }));
};
const NoVerifiedSvg = () => {
  return __jsx("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1209,
      columnNumber: 5
    }
  }, __jsx("g", {
    id: "Icon/ID state",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1210,
      columnNumber: 7
    }
  }, __jsx("path", {
    id: "cancel",
    d: "M8.32812 17L12 13.3281L15.6719 17L17 15.6719L13.3281 12L17 8.32812L15.6719 7L12 10.6719L8.32812 7L7 8.32812L10.6719 12L7 15.6719L8.32812 17ZM12 22C10.6285 22 9.33507 21.7396 8.11979 21.2188C6.90451 20.6979 5.84115 19.9818 4.92969 19.0703C4.01823 18.1589 3.30208 17.0955 2.78125 15.8802C2.26042 14.6649 2 13.3715 2 12C2 10.6111 2.26042 9.31337 2.78125 8.10677C3.30208 6.90017 4.01823 5.84115 4.92969 4.92969C5.84115 4.01823 6.90451 3.30208 8.11979 2.78125C9.33507 2.26042 10.6285 2 12 2C13.3889 2 14.6866 2.26042 15.8932 2.78125C17.0998 3.30208 18.1589 4.01823 19.0703 4.92969C19.9818 5.84115 20.6979 6.90017 21.2188 8.10677C21.7396 9.31337 22 10.6111 22 12C22 13.3715 21.7396 14.6649 21.2188 15.8802C20.6979 17.0955 19.9818 18.1589 19.0703 19.0703C18.1589 19.9818 17.0998 20.6979 15.8932 21.2188C14.6866 21.7396 13.3889 22 12 22Z",
    fill: "#DC1C1C",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1211,
      columnNumber: 7
    }
  })));
};
const NoVerifiedIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: NoVerifiedSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1218,
    columnNumber: 3
  }
});
const CheckedIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: CheckedSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1222,
    columnNumber: 3
  }
});
const WarningIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: WarningSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1226,
    columnNumber: 3
  }
});
const RubyIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: RubySvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1230,
    columnNumber: 3
  }
});
const RubySmallIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: RubySmallSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1234,
    columnNumber: 3
  }
});
const CautionIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: CautionSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1238,
    columnNumber: 3
  }
});
const DiamondIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: DiamondSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1242,
    columnNumber: 3
  }
});
const ModelIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: ModelSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1248,
    columnNumber: 3
  }
});
const HomeIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: HomeSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1254,
    columnNumber: 3
  }
});
const PlusIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: PlusSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1260,
    columnNumber: 3
  }
});
const MessageIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: MessageSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1266,
    columnNumber: 3
  }
});
const UserIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: UserSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1272,
    columnNumber: 3
  }
});
const TickIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: TickSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1278,
    columnNumber: 3
  }
});
const ShareIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: ShareSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1284,
    columnNumber: 3
  }
});
const LiveIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: LiveIconSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1290,
    columnNumber: 3
  }
});
const MuteIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: MuteSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1296,
    columnNumber: 3
  }
});
const TopIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: TopSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1302,
    columnNumber: 3
  }
});
const ShakeHandIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: HandShakeSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1308,
    columnNumber: 3
  }
});
const TrofeoIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: TrofeoSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1314,
    columnNumber: 3
  }
});
const VideoIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: VideoSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1320,
    columnNumber: 3
  }
});
const CameraIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: CameraSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1326,
    columnNumber: 3
  }
});
const SearchFilterIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: FilterSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1332,
    columnNumber: 3
  }
});
const SearchInputIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: SearchInputSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1338,
    columnNumber: 3
  }
});
const PlayIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: PlaySvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1344,
    columnNumber: 3
  }
});
const HashtagIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: HashtagSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1350,
    columnNumber: 3
  }
});
const ProfileIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: ProfileSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1356,
    columnNumber: 3
  }
});
const SaveBookIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: SaveBookSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1362,
    columnNumber: 3
  }
});
const CommentsIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: CommentsSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1368,
    columnNumber: 3
  }
});
const ImageIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: ImageSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1374,
    columnNumber: 3
  }
});

/***/ }),

/***/ "./src/lib/date.ts":
/*!*************************!*\
  !*** ./src/lib/date.ts ***!
  \*************************/
/*! exports provided: formatDate, formatDateFromnow, dobToAge, formatLocaleDate, formatDateNew, formatDateToMMMDDYYYY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return formatDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDateFromnow", function() { return formatDateFromnow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dobToAge", function() { return dobToAge; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatLocaleDate", function() { return formatLocaleDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDateNew", function() { return formatDateNew; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatDateToMMMDDYYYY", function() { return formatDateToMMMDDYYYY; });
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);

function formatDate(date, format = 'MMM/DD/YYYY') {
  return moment__WEBPACK_IMPORTED_MODULE_0___default()(date).format(format);
}
function formatDateFromnow(date, format = 'MMM-DD-YYYY') {
  if (moment__WEBPACK_IMPORTED_MODULE_0___default()().diff(moment__WEBPACK_IMPORTED_MODULE_0___default()(date), 'years') > 0) {
    return moment__WEBPACK_IMPORTED_MODULE_0___default()(date).format(format);
  }
  return moment__WEBPACK_IMPORTED_MODULE_0___default()(date).fromNow();
}
function dobToAge(date) {
  return moment__WEBPACK_IMPORTED_MODULE_0___default()().diff(moment__WEBPACK_IMPORTED_MODULE_0___default()(date), 'years') > 0 && `${moment__WEBPACK_IMPORTED_MODULE_0___default()().diff(moment__WEBPACK_IMPORTED_MODULE_0___default()(date), 'years')}+`;
}
function formatLocaleDate(dateString) {
  const date = new Date(dateString);
  return date.toLocaleDateString('pt-BR', {
    day: '2-digit',
    month: '2-digit',
    year: 'numeric'
  });
}
function formatDateNew(date) {
  const d = new Date(date);
  const month = String(d.getMonth() + 1).padStart(2, '0');
  const day = String(d.getDate()).padStart(2, '0');
  const year = d.getFullYear();
  return `${month}/${day}/${year}`;
}
function formatDateToMMMDDYYYY(dateInput) {
  if (!dateInput) {
    throw new Error("Invalid date input. Please provide a valid Date object or a valid date string.");
  }
  const date = new Date(dateInput);
  if (isNaN(date.getTime())) {
    throw new Error("Invalid date input. Unable to parse the date.");
  }
  const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
  const day = String(date.getDate()).padStart(2, "0");
  const month = months[date.getMonth()];
  const year = date.getFullYear();
  return `${month}/${day}/${year}`;
}

/***/ }),

/***/ "./src/lib/duration.ts":
/*!*****************************!*\
  !*** ./src/lib/duration.ts ***!
  \*****************************/
/*! exports provided: videoDuration */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "videoDuration", function() { return videoDuration; });
function videoDuration(s) {
  if (!s) {
    return '00:00';
  }
  const secNum = parseInt(s, 10); // don't forget the second param
  let hours = Math.floor(secNum / 3600);
  let minutes = Math.floor((secNum - hours * 3600) / 60);
  let seconds = secNum - hours * 3600 - minutes * 60;
  if (hours < 10) hours = `0${hours}`;
  if (minutes < 10) minutes = `0${minutes}`;
  if (seconds < 10) seconds = `0${seconds}`;
  return `${(hours !== '00' ? `${hours}:` : '') + minutes}:${seconds}`;
}

/***/ }),

/***/ "./src/lib/index.ts":
/*!**************************!*\
  !*** ./src/lib/index.ts ***!
  \**************************/
/*! exports provided: isHasInternetConnection, createSagas, createAction, createAsyncAction, createAsyncActions, createSelectorsA, handleActions, createReducers, createSelectors, createSelector, createJSSelectors, isUrl, capitalizeFirstLetter, isEmail, generateUuid, checkHeadTitle, formatDate, formatDateFromnow, dobToAge, formatLocaleDate, formatDateNew, formatDateToMMMDDYYYY, validateMessages, videoDuration, arrayToTree, pathMatchRegexp, queryAncestors, getResponseError, delay, redirect404, shortenLargeNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./internet */ "./src/lib/internet.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isHasInternetConnection", function() { return _internet__WEBPACK_IMPORTED_MODULE_0__["isHasInternetConnection"]; });

/* harmony import */ var _redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./redux */ "./src/lib/redux.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSagas", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createSagas"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAction", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createAction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsyncAction", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createAsyncAction"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createAsyncActions", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createAsyncActions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSelectorsA", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createSelectorsA"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "handleActions", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["handleActions"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createReducers", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSelectors", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createSelectors"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSelector", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createSelector"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createJSSelectors", function() { return _redux__WEBPACK_IMPORTED_MODULE_1__["createJSSelectors"]; });

/* harmony import */ var _string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./string */ "./src/lib/string.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isUrl", function() { return _string__WEBPACK_IMPORTED_MODULE_2__["isUrl"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "capitalizeFirstLetter", function() { return _string__WEBPACK_IMPORTED_MODULE_2__["capitalizeFirstLetter"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isEmail", function() { return _string__WEBPACK_IMPORTED_MODULE_2__["isEmail"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "generateUuid", function() { return _string__WEBPACK_IMPORTED_MODULE_2__["generateUuid"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "checkHeadTitle", function() { return _string__WEBPACK_IMPORTED_MODULE_2__["checkHeadTitle"]; });

/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./date */ "./src/lib/date.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDate", function() { return _date__WEBPACK_IMPORTED_MODULE_3__["formatDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDateFromnow", function() { return _date__WEBPACK_IMPORTED_MODULE_3__["formatDateFromnow"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "dobToAge", function() { return _date__WEBPACK_IMPORTED_MODULE_3__["dobToAge"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatLocaleDate", function() { return _date__WEBPACK_IMPORTED_MODULE_3__["formatLocaleDate"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDateNew", function() { return _date__WEBPACK_IMPORTED_MODULE_3__["formatDateNew"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "formatDateToMMMDDYYYY", function() { return _date__WEBPACK_IMPORTED_MODULE_3__["formatDateToMMMDDYYYY"]; });

/* harmony import */ var _message__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./message */ "./src/lib/message.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "validateMessages", function() { return _message__WEBPACK_IMPORTED_MODULE_4__["validateMessages"]; });

/* harmony import */ var _duration__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./duration */ "./src/lib/duration.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "videoDuration", function() { return _duration__WEBPACK_IMPORTED_MODULE_5__["videoDuration"]; });

/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ "./src/lib/utils.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "arrayToTree", function() { return _utils__WEBPACK_IMPORTED_MODULE_6__["arrayToTree"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pathMatchRegexp", function() { return _utils__WEBPACK_IMPORTED_MODULE_6__["pathMatchRegexp"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "queryAncestors", function() { return _utils__WEBPACK_IMPORTED_MODULE_6__["queryAncestors"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getResponseError", function() { return _utils__WEBPACK_IMPORTED_MODULE_6__["getResponseError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return _utils__WEBPACK_IMPORTED_MODULE_6__["delay"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "redirect404", function() { return _utils__WEBPACK_IMPORTED_MODULE_6__["redirect404"]; });

/* harmony import */ var _number__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./number */ "./src/lib/number.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shortenLargeNumber", function() { return _number__WEBPACK_IMPORTED_MODULE_7__["shortenLargeNumber"]; });










/***/ }),

/***/ "./src/lib/internet.ts":
/*!*****************************!*\
  !*** ./src/lib/internet.ts ***!
  \*****************************/
/*! exports provided: isHasInternetConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHasInternetConnection", function() { return isHasInternetConnection; });
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_0__);

const INTERNET_CHECK_URL = 'https://google.com';
const isHasInternetConnection = async () => {
  try {
    const res = await fetch(INTERNET_CHECK_URL, {
      headers: {
        'Cache-Control': 'no-cache, no-store, must-revalidate',
        Pragma: 'no-cache',
        Expires: 0
      }
    });
    if (res.status === 404 || res.status === 401 || res.status === 403 || res.status === 500 || res.status >= 200 && res.status <= 300) {
      return true;
    }
  } catch (exception) {
    antd__WEBPACK_IMPORTED_MODULE_0__["message"].error(exception);
  }
  return false;
};

/***/ }),

/***/ "./src/lib/message.ts":
/*!****************************!*\
  !*** ./src/lib/message.ts ***!
  \****************************/
/*! exports provided: validateMessages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "validateMessages", function() { return validateMessages; });
/* eslint-disable no-template-curly-in-string */
const validateMessages = {
  required: 'This field is required!',
  types: {
    email: 'Not a validate email!',
    number: 'Not a validate number!'
  },
  number: {
    range: 'Must be between ${min} and ${max}'
  }
};

/***/ }),

/***/ "./src/lib/number.ts":
/*!***************************!*\
  !*** ./src/lib/number.ts ***!
  \***************************/
/*! exports provided: shortenLargeNumber */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shortenLargeNumber", function() { return shortenLargeNumber; });
function shortenLargeNumber(num) {
  if (num >= 1000000000) {
    return `${(num / 1000000000).toFixed(1).replace(/\.0$/, '')}B`;
  }
  if (num >= 1000000) {
    return `${(num / 1000000).toFixed(1).replace(/\.0$/, '')}M`;
  }
  if (num >= 1000) {
    return `${(num / 1000).toFixed(1).replace(/\.0$/, '')}K`;
  }
  return num;
}

/***/ }),

/***/ "./src/lib/redux.ts":
/*!**************************!*\
  !*** ./src/lib/redux.ts ***!
  \**************************/
/*! exports provided: createSagas, createAction, createAsyncAction, createAsyncActions, createSelectorsA, handleActions, createReducers, createSelectors, createSelector, createJSSelectors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSagas", function() { return createSagas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAction", function() { return createAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsyncAction", function() { return createAsyncAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsyncActions", function() { return createAsyncActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelectorsA", function() { return createSelectorsA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handleActions", function() { return handleActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReducers", function() { return createReducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelectors", function() { return createSelectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createJSSelectors", function() { return createJSSelectors; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! reselect */ "reselect");
/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(reselect__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSelector", function() { return reselect__WEBPACK_IMPORTED_MODULE_1__["createSelector"]; });

/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! redux-actions */ "redux-actions");
/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(redux_actions__WEBPACK_IMPORTED_MODULE_3__);
/* eslint-disable no-param-reassign */
/* eslint-disable func-names */




function createAction(type) {
  const action = Object(redux_actions__WEBPACK_IMPORTED_MODULE_3__["createAction"])(type);
  action.is = aType => action.toString() === aType;
  return action;
}

/* tslint:disable-next-line */
function createAsyncAction(action, type) {
  return {
    [action]: createAction(type),
    [`${action}Success`]: createAction(`${type}_SUCCESS`),
    [`${action}Fail`]: createAction(`${type}_FAIL`)
  };
}
function createAsyncActions(type) {
  return [createAction(type), createAction(`${type}_SUCCESS`), createAction(`${type}_FAIL`)];
}

/* tslint:disable */
function handleActions(actions, initialState) {
  return Object(redux_actions__WEBPACK_IMPORTED_MODULE_3__["handleActions"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(actions, (reducer, handler, action) => {
    reducer[action] = (state, act) => handler(state.set('action', action), act);
    return reducer;
  }, {}), initialState);
}
function createReducers(stateContext, reducers, initialState, preventResetting = false) {
  return {
    [stateContext]: Object(redux_actions__WEBPACK_IMPORTED_MODULE_3__["handleActions"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])(reducers), (reducer, action) => {
      if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(action.on)) {
        action.on.forEach(act => {
          reducer[act] = action.reducer;
        });
      } else reducer[action.on] = action.reducer;
      return reducer;
    }, preventResetting ? {} : {
      APP_STATE_RESET: () => initialState
    }), initialState)
  };
}
function createSagas(sagas) {
  return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])(sagas).map(saga => {
    const {
      on,
      effect = redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["takeLatest"],
      worker
    } = saga;
    return function* () {
      yield effect(on, function* (action) {
        yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["delay"])(0);
        yield worker(action);
      });
    };
  });
}
function createSelectorsA(context, keys = []) {
  const stateSelector = state => state[context];
  if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(keys)) return stateSelector;
  return keys.map(key => state => Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(key) ? stateSelector(state).getIn(key) : stateSelector(state).get(key));
}
function createSelectors(context, keys) {
  const stateSelector = state => state[context];
  return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(keys, (selectors, key) => {
    selectors[`${key}Selector`] = state => stateSelector(state).get(key);
    return selectors;
  }, {});
}
function createJSSelectors(context, keys) {
  const stateSelector = state => state[context];
  return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(keys, (selectors, key) => {
    selectors[`${key}Selector`] = state => stateSelector(state)[key];
    return selectors;
  }, {});
}


/***/ }),

/***/ "./src/lib/string.ts":
/*!***************************!*\
  !*** ./src/lib/string.ts ***!
  \***************************/
/*! exports provided: isUrl, capitalizeFirstLetter, isEmail, generateUuid, checkHeadTitle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUrl", function() { return isUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "capitalizeFirstLetter", function() { return capitalizeFirstLetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmail", function() { return isEmail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateUuid", function() { return generateUuid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkHeadTitle", function() { return checkHeadTitle; });
/* eslint-disable no-useless-escape */
function isUrl(url) {
  const regex = /(http|https):\/\/(\w+:{0,1}\w*)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%!\-\/]))?/;
  return regex.test(url);
}
function capitalizeFirstLetter(str) {
  return (str === null || str === void 0 ? void 0 : str.charAt(0).toUpperCase()) + (str === null || str === void 0 ? void 0 : str.slice(1));
}
function isEmail(email) {
  return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(email);
}
const generateUuid = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
  /* eslint-disable */
  const r = Math.random() * 16 | 0;
  const v = c === 'x' ? r : r & 0x3 | 0x8;
  return v.toString(16);
});
function checkHeadTitle(tab) {
  switch (tab) {
    case 'video':
      return 'Discover Videos';
    case 'photo':
      return 'Discover Photos';
    case 'hashtag':
      return 'Discover HashTags';
    default:
      break;
  }
}

/***/ }),

/***/ "./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/*! exports provided: arrayToTree, pathMatchRegexp, queryAncestors, getResponseError, delay, redirect404 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayToTree", function() { return arrayToTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathMatchRegexp", function() { return pathMatchRegexp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryAncestors", function() { return queryAncestors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getResponseError", function() { return getResponseError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "redirect404", function() { return redirect404; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path-to-regexp */ "path-to-regexp");
/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path_to_regexp__WEBPACK_IMPORTED_MODULE_2__);




/**
 * Convert an array to a tree-structured array.
 * @param   {array}     array     The Array need to Converted.
 * @param   {string}    id        The alias of the unique ID of the object in the array.
 * @param   {string}    parentId       The alias of the parent ID of the object in the array.
 * @param   {string}    children  The alias of children of the object in the array.
 * @return  {array}    Return a tree-structured array.
 */
function arrayToTree(array, id = 'id', parentId = 'pid', children = 'children') {
  const result = [];
  const hash = {};
  const data = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["cloneDeep"])(array);
  data.forEach((item, index) => {
    hash[data[index][id]] = data[index];
  });
  data.forEach(item => {
    const hashParent = hash[item[parentId]];
    if (hashParent) {
      !hashParent[children] && (hashParent[children] = []);
      hashParent[children].push(item);
    } else {
      result.push(item);
    }
  });
  return result;
}

/**
 * Whether the path matches the regexp if the language prefix is ignored, https://github.com/pillarjs/path-to-regexp.
 * @param   {string|regexp|array}     regexp     Specify a string, array of strings, or a regular expression.
 * @param   {string}                  pathname   Specify the pathname to match.
 * @return  {array|null}              Return the result of the match or null.
 */
function pathMatchRegexp(regexp, pathname) {
  return path_to_regexp__WEBPACK_IMPORTED_MODULE_2__["pathToRegexp"](regexp).exec(pathname);
}

/**
 * In an array of objects, specify an object that traverses the objects whose parent ID matches.
 * @param   {array}     array     The Array need to Converted.
 * @param   {string}    current   Specify the object that needs to be queried.
 * @param   {string}    parentId  The alias of the parent ID of the object in the array.
 * @param   {string}    id        The alias of the unique ID of the object in the array.
 * @return  {array}    Return a key array.
 */
function queryAncestors(array, current, parentId, id = 'id') {
  const result = [current];
  const hashMap = new Map();
  array.forEach(item => hashMap.set(item[id], item));
  const getPath = pr => {
    const currentParentId = hashMap.get(pr[id])[parentId];
    if (currentParentId) {
      result.push(hashMap.get(currentParentId));
      getPath(hashMap.get(currentParentId));
    }
  };
  getPath(current);
  return result;
}
function getResponseError(data) {
  if (!data) {
    return '';
  }
  if (Array.isArray(data.message)) {
    const item = data.message[0];
    if (!item.constraints) {
      return data.error || 'Bad request!';
    }
    return Object.values(item.constraints)[0];
  }

  // TODO - parse for langauge or others
  return typeof data.message === 'string' ? data.message : 'Bad request!';
}
function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
function redirect404(ctx = null) {
  if (false) {}
  if (!ctx) return {};
  ctx.res.writeHead && ctx.res.writeHead(302, {
    Location: '/404'
  });
  ctx.res.end && ctx.res.end();
  // getInitialProps should not return undefined
  return {};
}

/***/ }),

/***/ "./src/redux/feed/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/feed/actions.ts ***!
  \***********************************/
/*! exports provided: getFeeds, getFeedsSuccess, getFeedsFail, moreFeeds, moreFeedsSuccess, moreFeedsFail, getFollowingFeeds, getFollowingFeedsSuccess, getFollowingFeedsFail, moreFollowingFeeds, moreFollowingFeedsSuccess, moreFollowingFeedsFail, getRecommendFeeds, getRecommendFeedsSuccess, getRecommendFeedsFail, moreRecommendFeeds, moreRecommendFeedsSuccess, moreRecommendFeedsFail, getTrendingFeeds, getTrendingFeedsSuccess, getTrendingFeedsFail, moreTrendingFeeds, moreTrendingFeedsSuccess, moreTrendingFeedsFail, getHashTagFeeds, getHashTagFeedsSuccess, getHashTagFeedsFail, moreHashTagFeeds, moreHashTagFeedsSuccess, moreHashTagFeedsFail, getVideoFeeds, getVideoFeedsSuccess, getVideoFeedsFail, moreVideoFeeds, moreVideoFeedsSuccess, moreVideoFeedsFail, getPhotoFeeds, getPhotoFeedsSuccess, getPhotoFeedsFail, morePhotoFeeds, morePhotoFeedsSuccess, morePhotoFeedsFail, getRelatedFeedsSuccess, removeFeedSuccess, removeTrendingFeedSuccess, resetFeeds, setMetaThumbnail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeeds", function() { return getFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeedsSuccess", function() { return getFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeedsFail", function() { return getFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFeeds", function() { return moreFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFeedsSuccess", function() { return moreFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFeedsFail", function() { return moreFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFollowingFeeds", function() { return getFollowingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFollowingFeedsSuccess", function() { return getFollowingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFollowingFeedsFail", function() { return getFollowingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFollowingFeeds", function() { return moreFollowingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFollowingFeedsSuccess", function() { return moreFollowingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFollowingFeedsFail", function() { return moreFollowingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecommendFeeds", function() { return getRecommendFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecommendFeedsSuccess", function() { return getRecommendFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecommendFeedsFail", function() { return getRecommendFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreRecommendFeeds", function() { return moreRecommendFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreRecommendFeedsSuccess", function() { return moreRecommendFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreRecommendFeedsFail", function() { return moreRecommendFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendingFeeds", function() { return getTrendingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendingFeedsSuccess", function() { return getTrendingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendingFeedsFail", function() { return getTrendingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreTrendingFeeds", function() { return moreTrendingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreTrendingFeedsSuccess", function() { return moreTrendingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreTrendingFeedsFail", function() { return moreTrendingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHashTagFeeds", function() { return getHashTagFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHashTagFeedsSuccess", function() { return getHashTagFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHashTagFeedsFail", function() { return getHashTagFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreHashTagFeeds", function() { return moreHashTagFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreHashTagFeedsSuccess", function() { return moreHashTagFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreHashTagFeedsFail", function() { return moreHashTagFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideoFeeds", function() { return getVideoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideoFeedsSuccess", function() { return getVideoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideoFeedsFail", function() { return getVideoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFeeds", function() { return moreVideoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFeedsSuccess", function() { return moreVideoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFeedsFail", function() { return moreVideoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotoFeeds", function() { return getPhotoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotoFeedsSuccess", function() { return getPhotoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotoFeedsFail", function() { return getPhotoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "morePhotoFeeds", function() { return morePhotoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "morePhotoFeedsSuccess", function() { return morePhotoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "morePhotoFeedsFail", function() { return morePhotoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedFeedsSuccess", function() { return getRelatedFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFeedSuccess", function() { return removeFeedSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeTrendingFeedSuccess", function() { return removeTrendingFeedSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetFeeds", function() { return resetFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMetaThumbnail", function() { return setMetaThumbnail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getFeeds,
  getFeedsSuccess,
  getFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getFeeds', 'GET_FEEDS');
const {
  moreFeeds,
  moreFeedsSuccess,
  moreFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreFeeds', 'GET_MODE_FEEDS');
const {
  getFollowingFeeds,
  getFollowingFeedsSuccess,
  getFollowingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getFollowingFeeds', 'GET_FOLLOWING_FEEDS');
const {
  moreFollowingFeeds,
  moreFollowingFeedsSuccess,
  moreFollowingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreFollowingFeeds', 'GET_MODE_FOLLOWING_FEEDS');
const {
  getRecommendFeeds,
  getRecommendFeedsSuccess,
  getRecommendFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRecommendFeeds', 'GET_RECOMMEND_FEEDS');
const {
  moreRecommendFeeds,
  moreRecommendFeedsSuccess,
  moreRecommendFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreRecommendFeeds', 'GET_MODE_RECOMMEND_FEEDS');
const {
  getTrendingFeeds,
  getTrendingFeedsSuccess,
  getTrendingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getTrendingFeeds', 'GET_TRENDING_FEEDS');
const {
  moreTrendingFeeds,
  moreTrendingFeedsSuccess,
  moreTrendingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreTrendingFeeds', 'GET_MODE_TRENDING_FEEDS');
const {
  getHashTagFeeds,
  getHashTagFeedsSuccess,
  getHashTagFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getHashTagFeeds', 'GET_HASHTAG_FEEDS');
const {
  moreHashTagFeeds,
  moreHashTagFeedsSuccess,
  moreHashTagFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreHashTagFeeds', 'GET_MORE_HASHTAG_FEEDS');
const {
  getVideoFeeds,
  getVideoFeedsSuccess,
  getVideoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getVideoFeeds', 'GET_VIDEO_FEEDS');
const {
  moreVideoFeeds,
  moreVideoFeedsSuccess,
  moreVideoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreVideoFeeds', 'GET_MODE_VIDEO_FEEDS');
const {
  getPhotoFeeds,
  getPhotoFeedsSuccess,
  getPhotoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getPhotoFeeds', 'GET_PHOTO_FEEDS');
const {
  morePhotoFeeds,
  morePhotoFeedsSuccess,
  morePhotoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('morePhotoFeeds', 'GET_MODE_PHOTO_FEEDS');
const {
  getRelatedFeedsSuccess
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRelatedFeeds', 'GET_RELATED_FEEDS');
const removeFeedSuccess = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('removeFeedSuccess');
const removeTrendingFeedSuccess = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('removeTrendingFeedSuccess');
const resetFeeds = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('resetFeeds');
const setMetaThumbnail = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('setMetaThumbnail');

/***/ }),

/***/ "./src/redux/gallery/actions.ts":
/*!**************************************!*\
  !*** ./src/redux/gallery/actions.ts ***!
  \**************************************/
/*! exports provided: getGalleries, getGalleriesSuccess, getGalleriesFail, moreGalleries, moreGalleriesSuccess, moreGalleriesFail, getRelatedGalleries, getRelatedGalleriesSuccess, getRelatedGalleriesFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGalleries", function() { return getGalleries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGalleriesSuccess", function() { return getGalleriesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGalleriesFail", function() { return getGalleriesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGalleries", function() { return moreGalleries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGalleriesSuccess", function() { return moreGalleriesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGalleriesFail", function() { return moreGalleriesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedGalleries", function() { return getRelatedGalleries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedGalleriesSuccess", function() { return getRelatedGalleriesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedGalleriesFail", function() { return getRelatedGalleriesFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getGalleries,
  getGalleriesSuccess,
  getGalleriesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getGalleries', 'GET_GALLERIES');
const {
  moreGalleries,
  moreGalleriesSuccess,
  moreGalleriesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreGalleries', 'MORE_GALLERIES');
const {
  getRelatedGalleries,
  getRelatedGalleriesSuccess,
  getRelatedGalleriesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRelatedGalleries', 'GET_RELATED_GALLERIES');

/***/ }),

/***/ "./src/redux/modals/actions.ts":
/*!*************************************!*\
  !*** ./src/redux/modals/actions.ts ***!
  \*************************************/
/*! exports provided: updateModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateModals", function() { return updateModals; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const updateModals = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateModals');

/***/ }),

/***/ "./src/redux/performer/actions.ts":
/*!****************************************!*\
  !*** ./src/redux/performer/actions.ts ***!
  \****************************************/
/*! exports provided: getList, getListSuccess, getListFail, getProfile, getProfileSuccess, getProfileFail, onFollow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getList", function() { return getList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getListSuccess", function() { return getListSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getListFail", function() { return getListFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfile", function() { return getProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfileSuccess", function() { return getProfileSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfileFail", function() { return getProfileFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onFollow", function() { return onFollow; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getList,
  getListSuccess,
  getListFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getList', 'GET_LIST');
const {
  getProfile,
  getProfileSuccess,
  getProfileFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getProfile', 'GET_PROFILE');
const onFollow = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('onFollow');

/***/ }),

/***/ "./src/redux/product/actions.ts":
/*!**************************************!*\
  !*** ./src/redux/product/actions.ts ***!
  \**************************************/
/*! exports provided: listProducts, listProductsSuccess, listProductsFail, moreProduct, moreProductSuccess, moreProductFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listProducts", function() { return listProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listProductsSuccess", function() { return listProductsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listProductsFail", function() { return listProductsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreProduct", function() { return moreProduct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreProductSuccess", function() { return moreProductSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreProductFail", function() { return moreProductFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  listProducts,
  listProductsSuccess,
  listProductsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('listProducts', 'LIST_PRODUCT');
const {
  moreProduct,
  moreProductSuccess,
  moreProductFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreProduct', 'MORE_PRODUCT');

/***/ }),

/***/ "./src/redux/user/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/user/actions.ts ***!
  \***********************************/
/*! exports provided: updateCurrentUser, updateCurrentUserAvatar, updateCurrentUserCover, updateUser, updateUserSuccess, updateUserFail, updatePerformer, setUpdating, updatePassword, updatePasswordSuccess, updatePasswordFail, updateBanking, updateBankingSuccess, updateBankingFail, setUpdatingBanking, updateBlockCountries, updateBalance, updateStatsView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCurrentUser", function() { return updateCurrentUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCurrentUserAvatar", function() { return updateCurrentUserAvatar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCurrentUserCover", function() { return updateCurrentUserCover; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUser", function() { return updateUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUserSuccess", function() { return updateUserSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUserFail", function() { return updateUserFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePerformer", function() { return updatePerformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUpdating", function() { return setUpdating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePassword", function() { return updatePassword; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePasswordSuccess", function() { return updatePasswordSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePasswordFail", function() { return updatePasswordFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBanking", function() { return updateBanking; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBankingSuccess", function() { return updateBankingSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBankingFail", function() { return updateBankingFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUpdatingBanking", function() { return setUpdatingBanking; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBlockCountries", function() { return updateBlockCountries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBalance", function() { return updateBalance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateStatsView", function() { return updateStatsView; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const updateCurrentUser = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateCurrentUser');
const updateCurrentUserAvatar = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateCurrentUserAvatar');
const updateCurrentUserCover = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateCurrentUserCover');
const {
  updateUser,
  updateUserSuccess,
  updateUserFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updateUser', 'UPDATE_USER');
const {
  updatePerformer
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updatePerformer', 'UPDATE_PERFORMER');
const setUpdating = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updatingUser');
const {
  updatePassword,
  updatePasswordSuccess,
  updatePasswordFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updatePassword', 'UPDATE_PASSWORD');
const {
  updateBanking,
  updateBankingSuccess,
  updateBankingFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updateBanking', 'UPDATE_BANKING');
const setUpdatingBanking = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updatingBanking');
const updateBlockCountries = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateBlockCountries');
const updateBalance = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateBalance');
const updateStatsView = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateStatsView');

/***/ }),

/***/ "./src/redux/video/actions.ts":
/*!************************************!*\
  !*** ./src/redux/video/actions.ts ***!
  \************************************/
/*! exports provided: getVideos, getVideosSuccess, getVideosFail, getVods, getVodsSuccess, getVodsFail, moreVideo, moreVideoSuccess, moreVideoFail, moreVod, moreVodSuccess, moreVodFail, getRelated, getRelatedSuccess, getRelatedFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideos", function() { return getVideos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideosSuccess", function() { return getVideosSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideosFail", function() { return getVideosFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVods", function() { return getVods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVodsSuccess", function() { return getVodsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVodsFail", function() { return getVodsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideo", function() { return moreVideo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoSuccess", function() { return moreVideoSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFail", function() { return moreVideoFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVod", function() { return moreVod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVodSuccess", function() { return moreVodSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVodFail", function() { return moreVodFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelated", function() { return getRelated; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedSuccess", function() { return getRelatedSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedFail", function() { return getRelatedFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getVideos,
  getVideosSuccess,
  getVideosFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getVideos', 'GET_VIDEOS');
const {
  getVods,
  getVodsSuccess,
  getVodsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getVods', 'GET_VODS');
const {
  moreVideo,
  moreVideoSuccess,
  moreVideoFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreVideo', 'LOAD_MORE');
const {
  moreVod,
  moreVodSuccess,
  moreVodFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreVod', 'MORE_VOD');
const {
  getRelated,
  getRelatedSuccess,
  getRelatedFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRelated', 'GET_RELATED');

/***/ }),

/***/ "./src/services/api-request.ts":
/*!*************************************!*\
  !*** ./src/services/api-request.ts ***!
  \*************************************/
/*! exports provided: TOKEN, APIRequest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOKEN", function() { return TOKEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIRequest", function() { return APIRequest; });
/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-unfetch */ "isomorphic-unfetch");
/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-cookie */ "js-cookie");
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lib/string */ "./src/lib/string.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable indent */





const TOKEN = 'token';
class APIRequest {
  setAuthHeaderToken(token) {
    APIRequest.token = token;
  }

  /**
   * Parses the JSON returned by a network request
   *
   * @param  {object} response A response from a network request
   *x
   * @return {object}          The parsed JSON from the request
   */
  parseJSON(response) {
    if ((response === null || response === void 0 ? void 0 : response.status) === 204 || (response === null || response === void 0 ? void 0 : response.status) === 205) {
      return null;
    }
    return response === null || response === void 0 ? void 0 : response.json();
  }

  /**
   * Checks if a network request came back fine, and throws an error if not
   *
   * @param  {object} response   A response from a network request
   *
   * @return {object|undefined} Returns either the response, or throws an error
   */
  checkStatus(response) {
    if ((response === null || response === void 0 ? void 0 : response.status) >= 200 && (response === null || response === void 0 ? void 0 : response.status) < 300) {
      return response;
    }
    if ((response === null || response === void 0 ? void 0 : response.status) === 401) {
      if (false) {}

      // throw new Error('Please login!');
    }

    // if (response.status === 403) {
    //   throw new Error('Please login!');
    // }

    // const error = new Error(response.statusText) as any;
    // error.response = response;
    // throw error;
    throw response.clone().json();
  }
  request(url, method, body, headers) {
    const verb = (method || 'get').toUpperCase();
    const updatedHeader = _objectSpread({
      'Content-Type': 'application/json',
      // TODO - check me
      Authorization: APIRequest.token || js_cookie__WEBPACK_IMPORTED_MODULE_2___default.a.get(TOKEN) || null
    }, headers || {});
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_4__["getGlobalConfig"])();
    return isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default()(Object(_lib_string__WEBPACK_IMPORTED_MODULE_3__["isUrl"])(url) ? url : `${process.env.API_ENDPOINT || "https://caster-api.staging.domandtom.com"}${url}`, {
      method: verb,
      headers: updatedHeader,
      body: body ? JSON.stringify(body) : null
    }).then(this.checkStatus).then(this.parseJSON);
  }
  buildUrl(baseUrl, params) {
    if (!params) {
      return baseUrl;
    }
    const queryString = Object.keys(params).map(k => {
      if (Array.isArray(params[k])) {
        return params[k].map(param => `${encodeURIComponent(k)}=${encodeURIComponent(param)}`).join('&');
      }
      return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;
    }).join('&');
    return `${baseUrl}?${queryString}`;
  }
  get(url, headers) {
    return this.request(url, 'get', null, headers);
  }
  post(url, data, headers) {
    return this.request(url, 'post', data, headers);
  }
  put(url, data, headers) {
    return this.request(url, 'put', data, headers);
  }
  del(url, data, headers) {
    return this.request(url, 'delete', data, headers);
  }
  upload(url, files, options = {
    onProgress() {},
    method: 'POST'
  }) {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_4__["getGlobalConfig"])();
    const uploadUrl = Object(_lib_string__WEBPACK_IMPORTED_MODULE_3__["isUrl"])(url) ? url : `${process.env.API_ENDPOINT || "https://caster-api.staging.domandtom.com"}${url}`;
    return new Promise((resolve, reject) => {
      const req = new XMLHttpRequest();
      req.upload.addEventListener('progress', event => {
        if (event.lengthComputable) {
          options.onProgress({
            percentage: event.loaded / event.total * 100
          });
        }
      });
      req.addEventListener('load', () => {
        const success = req.status >= 200 && req.status < 300;
        const {
          response
        } = req;
        if (!success) {
          return reject(response);
        }
        return resolve(response);
      });
      req.upload.addEventListener('error', () => {
        reject(req.response);
      });
      const formData = new FormData();
      files.forEach(f => formData.append(f.fieldname, f.file, f.file.name));
      options.customData && Object.keys(options.customData).forEach(fieldname => {
        if (typeof options.customData[fieldname] !== 'undefined' && !Array.isArray(options.customData[fieldname])) formData.append(fieldname, options.customData[fieldname]);
        if (typeof options.customData[fieldname] !== 'undefined' && Array.isArray(options.customData[fieldname])) {
          if (options.customData[fieldname].length) {
            for (let i = 0; i < options.customData[fieldname].length; i += 1) {
              formData.append(fieldname, options.customData[fieldname][i]);
            }
          }
        }
      });
      req.responseType = 'json';
      req.open(options.method || 'POST', uploadUrl);
      const token = APIRequest.token || js_cookie__WEBPACK_IMPORTED_MODULE_2___default.a.get(TOKEN);
      req.setRequestHeader('Authorization', token || '');
      req.send(formData);
    });
  }
  async uploadUrl({
    url,
    body,
    file,
    type,
    fieldName = 'file',
    onProgress = () => {},
    fileMetadata = null
  }) {
    // load file metadata if needed
    const {
      data
    } = await this.post(url, _objectSpread(_objectSpread({}, body || {}), {}, {
      type
    }));
    const {
        uploadUrl,
        fields = [],
        method = 'POST',
        fileId
      } = data,
      rests = _objectWithoutProperties(data, ["uploadUrl", "fields", "method", "fileId"]);
    // overwrite / update metadata if provided
    if (fileMetadata && fileId) {
      await this.put(`/files/${data.fileId}/metadata`, fileMetadata);
    }
    return new Promise((resolve, reject) => {
      const req = new XMLHttpRequest();
      req.upload.addEventListener('progress', event => {
        if (event.lengthComputable) {
          onProgress({
            percentage: event.loaded / event.total * 100
          });
        }
      });
      req.addEventListener('load', () => {
        const success = req.status >= 200 && req.status < 300;
        const {
          response
        } = req;
        if (!success) {
          return reject(response);
        }
        return resolve(_objectSpread(_objectSpread({}, rests), {}, {
          fileId,
          status: success
        }));
      });
      req.upload.addEventListener('error', () => {
        reject(req.response);
      });
      const formData = new FormData();
      if (fields && Object.keys(fields).length) {
        Object.keys(fields).forEach(key => {
          formData.append(key, fields[key]);
        });
      }
      // append file at last is required for AWS upload
      formData.append(fieldName, file, file.name);
      req.responseType = 'json';
      req.open(method || 'POST', uploadUrl);
      req.send(formData);
    });
  }
  async uploadFileAndGetUrl({
    url,
    body,
    file,
    type
  }) {
    const formData = new FormData();

    // Append the file to the formData object
    if (file) {
      formData.append('file', file);
    }

    // Append other body fields to the formData
    for (const key in body) {
      if (body.hasOwnProperty(key)) {
        formData.append(key, body[key]);
      }
    }

    // Append type if needed
    formData.append('type', type);
    let Headers = {
      Authorization: APIRequest.token || js_cookie__WEBPACK_IMPORTED_MODULE_2___default.a.get(TOKEN) || null
    };
    const response = await isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default()(Object(_lib_string__WEBPACK_IMPORTED_MODULE_3__["isUrl"])(url) ? url : `${process.env.API_ENDPOINT || "https://caster-api.staging.domandtom.com"}${url}`, {
      method: 'POST',
      headers: Headers,
      body: formData
    });
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return await response.json();
  }
}
_defineProperty(APIRequest, "token", '');

/***/ }),

/***/ "./src/services/auth.service.ts":
/*!**************************************!*\
  !*** ./src/services/auth.service.ts ***!
  \**************************************/
/*! exports provided: AuthService, authService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "authService", function() { return authService; });
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ "js-cookie");
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


class AuthService extends _api_request__WEBPACK_IMPORTED_MODULE_1__["APIRequest"] {
  async login(data) {
    return this.post('/auth/login', data);
  }
  async loginTwitter() {
    return this.get(this.buildUrl('/auth/twitter/login'));
  }
  async loginGoogle(data) {
    return this.post('/auth/google/login', data);
  }
  async callbackLoginTwitter(data) {
    return this.get(this.buildUrl('/auth/twitter/callback', data));
  }
  async verifyEmail(data) {
    return this.post('/auth/email-verification', data);
  }
  setToken(token, remember = true) {
    const expired = {
      expires: !remember ? 1 : 365
    };
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set(_api_request__WEBPACK_IMPORTED_MODULE_1__["TOKEN"], token, expired);
    this.setAuthHeaderToken(token);
  }
  getToken() {
    return js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get(_api_request__WEBPACK_IMPORTED_MODULE_1__["TOKEN"]);
  }
  setTwitterToken(data, role) {
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set('oauthToken', data.oauthToken, {
      expires: 1
    });
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set('oauthTokenSecret', data.oauthTokenSecret, {
      expires: 1
    });
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set('role', role, {
      expires: 1
    });
  }
  getTwitterToken() {
    const oauthToken = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get('oauthToken');
    const oauthTokenSecret = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get('oauthTokenSecret');
    const role = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get('role');
    return {
      oauthToken,
      oauthTokenSecret,
      role
    };
  }
  removeToken() {
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.remove(_api_request__WEBPACK_IMPORTED_MODULE_1__["TOKEN"]);
  }
  updatePassword(data) {
    return this.put('/auth/users/me/password', data);
  }
  resetPassword(data) {
    return this.post('/auth/users/forgot', data);
  }
  updateForgotPassword(data, token) {
    return this.post(`/auth/password-change?token=${token}`, _objectSpread(_objectSpread({}, data), {}, {
      source: 'user'
    }));
  }
  register(data) {
    return this.post('/auth/users/register', data);
  }
  registerPerformer(documents, data, onProgress) {
    return this.upload('/auth/performers/register', documents, {
      onProgress,
      customData: data
    });
  }
  userSwitchToPerformer(userId) {
    return this.post(`/auth/users/${userId}/switch-to-performer`);
  }
}
const authService = new AuthService();

/***/ }),

/***/ "./src/services/banner.service.ts":
/*!****************************************!*\
  !*** ./src/services/banner.service.ts ***!
  \****************************************/
/*! exports provided: BannerService, bannerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BannerService", function() { return BannerService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bannerService", function() { return bannerService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class BannerService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/site-promo/search', query));
  }
}
const bannerService = new BannerService();

/***/ }),

/***/ "./src/services/block.service.ts":
/*!***************************************!*\
  !*** ./src/services/block.service.ts ***!
  \***************************************/
/*! exports provided: BlockService, blockService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlockService", function() { return BlockService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blockService", function() { return blockService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class BlockService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  blockCountries(payload) {
    return this.post('/performer-blocks/countries', payload);
  }
  blockUser(payload) {
    return this.post('/performer-blocks/user', payload);
  }
  unBlockUser(id) {
    this.del(`/performer-blocks/user/${id}`);
  }
  getBlockListUsers(query) {
    return this.get(this.buildUrl('/performer-blocks/users', query));
  }
  checkCountryBlock() {
    return this.get('/country-block/check');
  }
}
const blockService = new BlockService();

/***/ }),

/***/ "./src/services/cart.service.ts":
/*!**************************************!*\
  !*** ./src/services/cart.service.ts ***!
  \**************************************/
/*! exports provided: CartService, cartService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartService", function() { return CartService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartService", function() { return cartService; });
class CartService {
  getCartByUser(userId) {
    let existCart = localStorage.getItem(`cart_${userId}`);
    existCart = existCart && existCart.length ? JSON.parse(existCart) : [];
    return existCart;
  }
}
const cartService = new CartService();

/***/ }),

/***/ "./src/services/comment.service.ts":
/*!*****************************************!*\
  !*** ./src/services/comment.service.ts ***!
  \*****************************************/
/*! exports provided: CommentService, commentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentService", function() { return CommentService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commentService", function() { return commentService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class CommentService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/comments', payload);
  }
  update(id, payload) {
    return this.upload(`/comments/${id}`, payload);
  }
  search(query) {
    return this.get(this.buildUrl('/comments/search', query));
  }
  delete(id) {
    return this.del(`/comments/${id}`);
  }
}
const commentService = new CommentService();

/***/ }),

/***/ "./src/services/config.ts":
/*!********************************!*\
  !*** ./src/services/config.ts ***!
  \********************************/
/*! exports provided: setGlobalConfig, getGlobalConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setGlobalConfig", function() { return setGlobalConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGlobalConfig", function() { return getGlobalConfig; });
let globalConfig = {};
const setGlobalConfig = config => {
  globalConfig = config;
};
const getGlobalConfig = () => globalConfig;

/***/ }),

/***/ "./src/services/cookies.service.ts":
/*!*****************************************!*\
  !*** ./src/services/cookies.service.ts ***!
  \*****************************************/
/*! exports provided: CookieService, cookieService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CookieService", function() { return CookieService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cookieService", function() { return cookieService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class CookieService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  setCookie(cname, cvalue, exTime) {
    const d = new Date();
    d.setTime(d.getTime() + exTime * 60 * 1000);
    const expires = `expires=${d.toUTCString()}`;
    document.cookie = `${cname}=${cvalue};${expires};path=/`;
  }
  getCookie(cname) {
    const name = `${cname}=`;
    const decodedCookie = decodeURIComponent(document.cookie);
    const ca = decodedCookie.split(';');
    for (let i = 0; i < ca.length; i += 1) {
      let c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
}
const cookieService = new CookieService();

/***/ }),

/***/ "./src/services/earning.service.ts":
/*!*****************************************!*\
  !*** ./src/services/earning.service.ts ***!
  \*****************************************/
/*! exports provided: EarningService, earningService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return EarningService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "earningService", function() { return earningService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class EarningService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  performerStats(param) {
    return this.get(this.buildUrl('/earning/performer/stats', param));
  }
  performerSearch(param) {
    return this.get(this.buildUrl('/earning/performer/search', param));
  }
}
const earningService = new EarningService();

/***/ }),

/***/ "./src/services/feed.service.ts":
/*!**************************************!*\
  !*** ./src/services/feed.service.ts ***!
  \**************************************/
/*! exports provided: FeedService, feedService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedService", function() { return FeedService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feedService", function() { return feedService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class FeedService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/feeds/performers', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/feeds/users', query));
  }
  userRecommendSearch(query) {
    return this.get(this.buildUrl('/feeds/users/search/recommended', query));
  }
  followingSearch(query) {
    return this.get(this.buildUrl('/feeds/users/search/following', query));
  }
  trendingSearch(query) {
    return this.get(this.buildUrl('/feeds/users/search/trending', query));
  }
  userHomeFeeds(query) {
    if (query.q === '') {
      return this.get(this.buildUrl('/feeds/users/home-feeds', query));
    }
    return this.get(this.buildUrl('/feeds/users', query));
  }
  delete(id) {
    return this.del(`/feeds/performers/${id}`);
  }
  findById(id, headers) {
    return this.get(`/feeds/performers/${id}`, headers);
  }
  findByHashtag(hashtag, headers) {
    return this.get(`/feeds/users/?hashTag=${hashtag}`, headers);
  }
  findOne(id, headers) {
    return this.get(`/feeds/users/${id}`, headers);
  }
  update(id, payload) {
    return this.put(`/feeds/performers/${id}`, payload);
  }
  create(data) {
    return this.post('/feeds/performers', data);
  }
  uploadPhoto(file, payload, onProgress) {
    return this.upload('/feeds/performers/photo/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadThumbnail(file, payload, onProgress) {
    return this.upload('/feeds/performers/thumbnail/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadVideo(file, payload, onProgress) {
    return this.upload('/feeds/performers/video/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadTeaser(file, payload, onProgress) {
    return this.upload('/feeds/performers/teaser/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadFile(file, body, onProgress, fileMetadata) {
    return this.uploadFileAndGetUrl({
      type: file !== null && file !== void 0 && file.type.includes('video') ? 'video' : 'image',
      file,
      url: '/feeds/performers/upload-url',
      body,
      onProgress: onProgress || function next() {},
      fileMetadata
    });
  }
  addPoll(payload) {
    return this.post('/feeds/performers/polls', payload);
  }
  votePoll(pollId) {
    return this.post(`/feeds/users/vote/${pollId}`);
  }
  getBookmark(payload) {
    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));
  }
  addView(id) {
    return this.post(`/feeds/users/${id}/view`);
  }
  getTrendingHashtag(type, payload) {
    return this.get(this.buildUrl(`/feed-hashtags/trending/${type}`, payload));
  }
  getHashtagAlphabet(payload) {
    return this.get(this.buildUrl('/feed-hashtags/alphabetically', payload));
  }
  userGetHashtagAlphabet(type) {
    return this.get(this.buildUrl(`/feed-hashtags/user/alphabetically/${type}`));
  }
}
const feedService = new FeedService();

/***/ }),

/***/ "./src/services/file.service.ts":
/*!**************************************!*\
  !*** ./src/services/file.service.ts ***!
  \**************************************/
/*! exports provided: FileService, fileService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileService", function() { return FileService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fileService", function() { return fileService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class FileService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  getSignUrlById(payload) {
    return this.post('/files/sign-url', payload);
  }
  getPublicInfo(payload) {
    return this.post('/files/public-info', payload);
  }
  getSignUrlsByIds(payload) {
    return this.post('/files/sign-urls', payload);
  }
}
const fileService = new FileService();

/***/ }),

/***/ "./src/services/follow.service.ts":
/*!****************************************!*\
  !*** ./src/services/follow.service.ts ***!
  \****************************************/
/*! exports provided: FollowService, followService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FollowService", function() { return FollowService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "followService", function() { return followService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class FollowService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(type, query) {
    return this.get(this.buildUrl(`/follow/search/${type}`, query));
  }
  create(payload) {
    return this.post('/follow', payload);
  }
  delete(performerId) {
    return this.del(`/follow/${performerId}`);
  }
}
const followService = new FollowService();

/***/ }),

/***/ "./src/services/gallery.service.ts":
/*!*****************************************!*\
  !*** ./src/services/gallery.service.ts ***!
  \*****************************************/
/*! exports provided: galleryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "galleryService", function() { return galleryService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class GalleryService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/performer/performer-assets/galleries', payload);
  }
  search(param) {
    return this.get(this.buildUrl('/performer/performer-assets/galleries/search', param));
  }
  userSearch(param) {
    return this.get(this.buildUrl('/user/performer-assets/galleries/search', param));
  }
  update(id, payload) {
    return this.put(`/performer/performer-assets/galleries/${id}`, payload);
  }
  findById(id) {
    return this.get(`/performer/performer-assets/galleries/${id}/view`);
  }
  userViewDetails(id, headers) {
    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);
  }
  delete(id) {
    return this.del(`/performer/performer-assets/galleries/${id}`);
  }
  getBookmarks(payload) {
    return this.get(this.buildUrl('/reactions/galleries/bookmark', payload));
  }
}
const galleryService = new GalleryService();

/***/ }),

/***/ "./src/services/gift.service.ts":
/*!**************************************!*\
  !*** ./src/services/gift.service.ts ***!
  \**************************************/
/*! exports provided: GiftService, giftService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftService", function() { return GiftService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "giftService", function() { return giftService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class GiftService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/gifts/all', query));
  }
  favoriteGift() {
    return this.get(this.buildUrl('/gifts/favorite'));
  }
  addfavoriteGift(payload) {
    return this.post('/gifts/add-to-favorite', payload);
  }
}
const giftService = new GiftService();

/***/ }),

/***/ "./src/services/index.ts":
/*!*******************************!*\
  !*** ./src/services/index.ts ***!
  \*******************************/
/*! exports provided: AuthService, authService, UserService, userService, FeedService, feedService, PerformerService, performerService, ProductService, productService, CommentService, commentService, ReactionService, reactionService, PaymentService, paymentService, UtilsService, utilsService, isMobile, BannerService, bannerService, EarningService, earningService, CartService, cartService, MessageService, messageService, subscriptionService, OrderService, orderService, SettingService, settingService, PostService, postService, PostCategoryService, postCategoryService, streamService, SearchService, searchService, VideoService, videoService, galleryService, TokenPackageService, tokenPackageService, PhotoService, photoService, TokenTransctionService, tokenTransctionService, payoutRequestService, BlockService, blockService, ReportService, reportService, CookieService, cookieService, FollowService, followService, GiftService, giftService, paymentTokenService, notificationService, FileService, fileService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth.service */ "./src/services/auth.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return _auth_service__WEBPACK_IMPORTED_MODULE_0__["AuthService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "authService", function() { return _auth_service__WEBPACK_IMPORTED_MODULE_0__["authService"]; });

/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user.service */ "./src/services/user.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return _user_service__WEBPACK_IMPORTED_MODULE_1__["UserService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "userService", function() { return _user_service__WEBPACK_IMPORTED_MODULE_1__["userService"]; });

/* harmony import */ var _feed_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feed.service */ "./src/services/feed.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedService", function() { return _feed_service__WEBPACK_IMPORTED_MODULE_2__["FeedService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "feedService", function() { return _feed_service__WEBPACK_IMPORTED_MODULE_2__["feedService"]; });

/* harmony import */ var _performer_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./performer.service */ "./src/services/performer.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PerformerService", function() { return _performer_service__WEBPACK_IMPORTED_MODULE_3__["PerformerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "performerService", function() { return _performer_service__WEBPACK_IMPORTED_MODULE_3__["performerService"]; });

/* harmony import */ var _product_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./product.service */ "./src/services/product.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProductService", function() { return _product_service__WEBPACK_IMPORTED_MODULE_4__["ProductService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "productService", function() { return _product_service__WEBPACK_IMPORTED_MODULE_4__["productService"]; });

/* harmony import */ var _comment_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comment.service */ "./src/services/comment.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CommentService", function() { return _comment_service__WEBPACK_IMPORTED_MODULE_5__["CommentService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "commentService", function() { return _comment_service__WEBPACK_IMPORTED_MODULE_5__["commentService"]; });

/* harmony import */ var _reaction_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reaction.service */ "./src/services/reaction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReactionService", function() { return _reaction_service__WEBPACK_IMPORTED_MODULE_6__["ReactionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reactionService", function() { return _reaction_service__WEBPACK_IMPORTED_MODULE_6__["reactionService"]; });

/* harmony import */ var _payment_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./payment.service */ "./src/services/payment.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentService", function() { return _payment_service__WEBPACK_IMPORTED_MODULE_7__["PaymentService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "paymentService", function() { return _payment_service__WEBPACK_IMPORTED_MODULE_7__["paymentService"]; });

/* harmony import */ var _utils_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils.service */ "./src/services/utils.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UtilsService", function() { return _utils_service__WEBPACK_IMPORTED_MODULE_8__["UtilsService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utilsService", function() { return _utils_service__WEBPACK_IMPORTED_MODULE_8__["utilsService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMobile", function() { return _utils_service__WEBPACK_IMPORTED_MODULE_8__["isMobile"]; });

/* harmony import */ var _banner_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./banner.service */ "./src/services/banner.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BannerService", function() { return _banner_service__WEBPACK_IMPORTED_MODULE_9__["BannerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bannerService", function() { return _banner_service__WEBPACK_IMPORTED_MODULE_9__["bannerService"]; });

/* harmony import */ var _earning_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./earning.service */ "./src/services/earning.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return _earning_service__WEBPACK_IMPORTED_MODULE_10__["EarningService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "earningService", function() { return _earning_service__WEBPACK_IMPORTED_MODULE_10__["earningService"]; });

/* harmony import */ var _cart_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cart.service */ "./src/services/cart.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CartService", function() { return _cart_service__WEBPACK_IMPORTED_MODULE_11__["CartService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cartService", function() { return _cart_service__WEBPACK_IMPORTED_MODULE_11__["cartService"]; });

/* harmony import */ var _message_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./message.service */ "./src/services/message.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageService", function() { return _message_service__WEBPACK_IMPORTED_MODULE_12__["MessageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "messageService", function() { return _message_service__WEBPACK_IMPORTED_MODULE_12__["messageService"]; });

/* harmony import */ var _subscription_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./subscription.service */ "./src/services/subscription.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subscriptionService", function() { return _subscription_service__WEBPACK_IMPORTED_MODULE_13__["subscriptionService"]; });

/* harmony import */ var _order_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./order.service */ "./src/services/order.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrderService", function() { return _order_service__WEBPACK_IMPORTED_MODULE_14__["OrderService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orderService", function() { return _order_service__WEBPACK_IMPORTED_MODULE_14__["orderService"]; });

/* harmony import */ var _setting_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./setting.service */ "./src/services/setting.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SettingService", function() { return _setting_service__WEBPACK_IMPORTED_MODULE_15__["SettingService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "settingService", function() { return _setting_service__WEBPACK_IMPORTED_MODULE_15__["settingService"]; });

/* harmony import */ var _post_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./post.service */ "./src/services/post.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostService", function() { return _post_service__WEBPACK_IMPORTED_MODULE_16__["PostService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "postService", function() { return _post_service__WEBPACK_IMPORTED_MODULE_16__["postService"]; });

/* harmony import */ var _post_category_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./post-category.service */ "./src/services/post-category.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCategoryService", function() { return _post_category_service__WEBPACK_IMPORTED_MODULE_17__["PostCategoryService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "postCategoryService", function() { return _post_category_service__WEBPACK_IMPORTED_MODULE_17__["postCategoryService"]; });

/* harmony import */ var _stream_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./stream.service */ "./src/services/stream.service.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "streamService", function() { return _stream_service__WEBPACK_IMPORTED_MODULE_18__["streamService"]; });

/* harmony import */ var _search_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./search.service */ "./src/services/search.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SearchService", function() { return _search_service__WEBPACK_IMPORTED_MODULE_19__["SearchService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "searchService", function() { return _search_service__WEBPACK_IMPORTED_MODULE_19__["searchService"]; });

/* harmony import */ var _video_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./video.service */ "./src/services/video.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VideoService", function() { return _video_service__WEBPACK_IMPORTED_MODULE_20__["VideoService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "videoService", function() { return _video_service__WEBPACK_IMPORTED_MODULE_20__["videoService"]; });

/* harmony import */ var _gallery_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./gallery.service */ "./src/services/gallery.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "galleryService", function() { return _gallery_service__WEBPACK_IMPORTED_MODULE_21__["galleryService"]; });

/* harmony import */ var _token_package_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./token-package.service */ "./src/services/token-package.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TokenPackageService", function() { return _token_package_service__WEBPACK_IMPORTED_MODULE_22__["TokenPackageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tokenPackageService", function() { return _token_package_service__WEBPACK_IMPORTED_MODULE_22__["tokenPackageService"]; });

/* harmony import */ var _photo_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./photo.service */ "./src/services/photo.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PhotoService", function() { return _photo_service__WEBPACK_IMPORTED_MODULE_23__["PhotoService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "photoService", function() { return _photo_service__WEBPACK_IMPORTED_MODULE_23__["photoService"]; });

/* harmony import */ var _token_transaction_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./token-transaction.service */ "./src/services/token-transaction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TokenTransctionService", function() { return _token_transaction_service__WEBPACK_IMPORTED_MODULE_24__["TokenTransctionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tokenTransctionService", function() { return _token_transaction_service__WEBPACK_IMPORTED_MODULE_24__["tokenTransctionService"]; });

/* harmony import */ var _payout_request_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./payout-request.service */ "./src/services/payout-request.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "payoutRequestService", function() { return _payout_request_service__WEBPACK_IMPORTED_MODULE_25__["payoutRequestService"]; });

/* harmony import */ var _block_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./block.service */ "./src/services/block.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockService", function() { return _block_service__WEBPACK_IMPORTED_MODULE_26__["BlockService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blockService", function() { return _block_service__WEBPACK_IMPORTED_MODULE_26__["blockService"]; });

/* harmony import */ var _report_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./report.service */ "./src/services/report.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReportService", function() { return _report_service__WEBPACK_IMPORTED_MODULE_27__["ReportService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reportService", function() { return _report_service__WEBPACK_IMPORTED_MODULE_27__["reportService"]; });

/* harmony import */ var _cookies_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./cookies.service */ "./src/services/cookies.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CookieService", function() { return _cookies_service__WEBPACK_IMPORTED_MODULE_28__["CookieService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cookieService", function() { return _cookies_service__WEBPACK_IMPORTED_MODULE_28__["cookieService"]; });

/* harmony import */ var _follow_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./follow.service */ "./src/services/follow.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FollowService", function() { return _follow_service__WEBPACK_IMPORTED_MODULE_29__["FollowService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "followService", function() { return _follow_service__WEBPACK_IMPORTED_MODULE_29__["followService"]; });

/* harmony import */ var _gift_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./gift.service */ "./src/services/gift.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GiftService", function() { return _gift_service__WEBPACK_IMPORTED_MODULE_30__["GiftService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "giftService", function() { return _gift_service__WEBPACK_IMPORTED_MODULE_30__["giftService"]; });

/* harmony import */ var _payment_token_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./payment-token.service */ "./src/services/payment-token.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "paymentTokenService", function() { return _payment_token_service__WEBPACK_IMPORTED_MODULE_31__["paymentTokenService"]; });

/* harmony import */ var _notification_service__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./notification.service */ "./src/services/notification.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notificationService", function() { return _notification_service__WEBPACK_IMPORTED_MODULE_32__["notificationService"]; });

/* harmony import */ var _file_service__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./file.service */ "./src/services/file.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FileService", function() { return _file_service__WEBPACK_IMPORTED_MODULE_33__["FileService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fileService", function() { return _file_service__WEBPACK_IMPORTED_MODULE_33__["fileService"]; });




































/***/ }),

/***/ "./src/services/message.service.ts":
/*!*****************************************!*\
  !*** ./src/services/message.service.ts ***!
  \*****************************************/
/*! exports provided: MessageService, messageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageService", function() { return MessageService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "messageService", function() { return messageService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");


class MessageService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  getConversations(query) {
    return this.get(this.buildUrl('/conversations', query));
  }
  searchConversations(query) {
    return this.get(this.buildUrl('/conversations/search', query));
  }
  createConversation(data) {
    return this.post('/conversations', data);
  }
  getConversationDetail(id) {
    return this.get(`/conversations/${id}`);
  }
  getMessages(conversationId, query) {
    return this.get(this.buildUrl(`/messages/conversations/${conversationId}`, query));
  }
  loadMuteUsers(query) {
    return this.get(this.buildUrl('/messages/mute-users', query));
  }
  sendMessage(conversationId, data) {
    return this.post(`/messages/conversations/${conversationId}`, data);
  }
  countTotalNotRead() {
    return this.get('/messages/counting-not-read-messages');
  }
  readAllInConversation(conversationId) {
    return this.post(`/messages/read-all/${conversationId}`);
  }
  getMessageUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/messages/private/file`;
  }
  getConversationByStreamId(streamId) {
    return this.get(`/conversations/stream/${streamId}`);
  }
  getPublicMessages(conversationId, query) {
    return this.get(this.buildUrl(`/messages/conversations/public/${conversationId}`, query));
  }
  sendStreamMessage(conversationId, data) {
    return this.post(`/messages/stream/conversations/${conversationId}`, data);
  }
  sendPublicStreamMessage(conversationId, data) {
    return this.post(`/messages/stream/public/conversations/${conversationId}`, data);
  }
  findPublicConversationPerformer(performerId) {
    return this.get(`/conversations/stream/public/${performerId}`);
  }
  deleteMessage(id) {
    return this.del(`/messages/${id}`);
  }
  deleteAllMessageInConversation(conversationId) {
    return this.del(`/messages/${conversationId}/remove-all-message`);
  }
  updateConversationName(conversationId, data) {
    return this.put(`/conversations/${conversationId}/update`, data);
  }
  muteUser(conversationId, data) {
    return this.post(`/messages/mute-user/${conversationId}`, data);
  }
  checkMuteUser(performerId) {
    return this.get(this.buildUrl(`/messages/check-mute-chat/${performerId}`));
  }
  unMuteUser(id) {
    return this.del(`/messages/mute-user/${id}`);
  }
  deleteConversation(conversationId) {
    return this.del(`/conversations/${conversationId}`);
  }
}
const messageService = new MessageService();

/***/ }),

/***/ "./src/services/notification.service.ts":
/*!**********************************************!*\
  !*** ./src/services/notification.service.ts ***!
  \**********************************************/
/*! exports provided: notificationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notificationService", function() { return notificationService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class NotificationService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/notification', query));
  }
  countUnread() {
    return this.get('/notification/total-unread');
  }
  readAll() {
    return this.put('/notification/read-all');
  }
  read(id) {
    return this.put(`/notification/${id}/read`);
  }
  hasHolderId(id) {
    return NotificationService.HOLDER_IDS.includes(id);
  }
  addHolderId(id) {
    NotificationService.HOLDER_IDS.push(id);
  }
}
_defineProperty(NotificationService, "HOLDER_IDS", []);
const notificationService = new NotificationService();

/***/ }),

/***/ "./src/services/order.service.ts":
/*!***************************************!*\
  !*** ./src/services/order.service.ts ***!
  \***************************************/
/*! exports provided: OrderService, orderService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderService", function() { return OrderService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orderService", function() { return orderService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class OrderService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  performerSearch(payload) {
    return this.get(this.buildUrl('/orders/search', payload));
  }
  userSearch(payload) {
    return this.get(this.buildUrl('/orders/users/search', payload));
  }
  findById(id) {
    return this.get(`/orders/${id}`);
  }
  update(id, data) {
    return this.put(`/orders/${id}/update`, data);
  }
  getDownloadLinkDigital(productId) {
    return this.get(`/user/performer-assets/products/${productId}/download-link`);
  }
}
const orderService = new OrderService();

/***/ }),

/***/ "./src/services/payment-token.service.ts":
/*!***********************************************!*\
  !*** ./src/services/payment-token.service.ts ***!
  \***********************************************/
/*! exports provided: paymentTokenService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paymentTokenService", function() { return paymentTokenService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PaymentTokenService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(param) {
    return this.get(this.buildUrl('/payment-token/user/search', param));
  }
  sendTip(performerId, data) {
    return this.post(`/payment-token/send-tip-token/${performerId}`, data);
  }
}
const paymentTokenService = new PaymentTokenService();

/***/ }),

/***/ "./src/services/payment.service.ts":
/*!*****************************************!*\
  !*** ./src/services/payment.service.ts ***!
  \*****************************************/
/*! exports provided: PaymentService, paymentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentService", function() { return PaymentService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paymentService", function() { return paymentService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PaymentService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  subscribePerformer(payload) {
    return this.post('/payment/subscribe/performers', payload);
  }
  userSearch(payload) {
    return this.get(this.buildUrl('/transactions/user/search', payload));
  }
  purchaseTokenPackage(id) {
    return this.post(`/payment/purchase-tokens/${id}`, {
      paymentGateway: "paypal"
    });
  }
  applyCoupon(code) {
    return this.post(`/coupons/${code}/apply-coupon`);
  }
  connectStripeAccount() {
    return this.post('/stripe/accounts');
  }
  getStripeCards() {
    return this.get('/stripe/user/cards');
  }
  addStripeCard(payload) {
    return this.post('/stripe/user/cards', payload);
  }
  removeStripeCard(id) {
    return this.del(`/stripe/user/cards/${id}`);
  }
  retrieveStripeAccount() {
    return this.get('/stripe/accounts/me');
  }
  loginLink() {
    return this.get('/stripe/accounts/me/login-link');
  }
  getCards(req) {
    return this.get(this.buildUrl('/payment-cards', req));
  }
  addCard(gateway, payload) {
    return this.post(`/${gateway}/cards`, payload);
  }
  removeCard(id) {
    return this.del(`/payment-cards/${id}`);
  }
  sendSavePaypalCredentials({
    performerId,
    email
  }) {
    return this.post(`/performers/payment-gateway-settings`, {
      performerId,
      key: 'paypal',
      status: 'active',
      value: email
    });
  }
  tradeDiamond(amount) {
    return this.post('/payment/trade-diamonds', {
      amount
    });
  }
  paypalCallback(paypalOrderId) {
    return this.post(`/paypal/cheking/${paypalOrderId}`);
  }
  paypalCallhook({
    eventType,
    orderId
  }) {
    return this.post(`/payment/paypal/callhook`, {
      event_type: eventType,
      resource: {
        id: orderId
      }
    });
  }
}
const paymentService = new PaymentService();

/***/ }),

/***/ "./src/services/payout-request.service.ts":
/*!************************************************!*\
  !*** ./src/services/payout-request.service.ts ***!
  \************************************************/
/*! exports provided: payoutRequestService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "payoutRequestService", function() { return payoutRequestService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PayoutRequestService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  calculate() {
    return this.post('/payout-requests/performer/calculate');
  }
  search(query) {
    return this.get(this.buildUrl('/payout-requests/performer/search', query));
  }
  create(body) {
    return this.post('/payout-requests/performer', body);
  }
  update(id, body) {
    return this.put(`/payout-requests/performer/${id}`, body);
  }
  detail(id, headers) {
    return this.get(`/payout-requests/performer/${id}/view`, headers);
  }
}
const payoutRequestService = new PayoutRequestService();

/***/ }),

/***/ "./src/services/performer.service.ts":
/*!*******************************************!*\
  !*** ./src/services/performer.service.ts ***!
  \*******************************************/
/*! exports provided: PerformerService, performerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PerformerService", function() { return PerformerService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "performerService", function() { return performerService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");


class PerformerService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/performers/user/search', query));
  }
  randomSearch(query) {
    return this.get(this.buildUrl('/performers/search/random', query));
  }
  me(headers) {
    return this.get('/performers/me', headers);
  }
  findOne(id, headers) {
    return this.get(`/performers/${id}`, headers);
  }
  findByEmail(email, headers) {
    return this.get(`/performers/findbyEmail/${email}`, headers);
  }

  // getAvatarUploadUrl(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {
  //   return this.uploadUrl({
  //     type: file?.type.includes('video') ? 'video' : 'image',
  //     file,
  //     url: '/performers/avatar/upload',
  //     body,
  //     onProgress: onProgress || function next() {},
  //     fileMetadata
  //   });
  // }

  getAvatarUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/avatar/upload`;
  }
  getCoverUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/cover/upload`;
  }
  getVideoUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/welcome-video/upload`;
  }
  getDocumentUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/documents/upload`;
  }
  updateMe(id, payload) {
    return this.put(`/performers/${id}`, payload);
  }
  getTopPerformer(query) {
    return this.get(this.buildUrl('/performers/top', query));
  }
  updateBanking(id, payload) {
    return this.put(`/performers/${id}/banking-settings`, payload);
  }
  updatePaymentGateway(id, payload) {
    return this.put(`/performers/${id}/payment-gateway-settings`, payload);
  }
  getBookmarked(payload) {
    return this.get(this.buildUrl('/reactions/performers/bookmark', payload));
  }
  uploadDocumentFiles(file, body, onProgress, type) {
    return this.uploadFileAndGetUrl({
      file: file,
      url: '/performers/documents/upload-url',
      body,
      onProgress: onProgress || function next() {},
      type
    });
  }
  uploadAvatarFiles(file, body, onProgress, fileMetadata) {
    return this.uploadUrl({
      file,
      url: '/performers/avatar/upload-url',
      body,
      onProgress: onProgress || function next() {},
      fileMetadata
    });
  }
  uploadCoverFiles(file, body, onProgress, fileMetadata) {
    return this.uploadUrl({
      file,
      url: '/performers/cover/upload-url',
      body,
      onProgress: onProgress || function next() {},
      fileMetadata
    });
  }
  uploadDocument(payload) {
    return this.post('/performers/documents/upload', payload);
  }
  updateNotificationSetting(id, payload) {
    return this.put(`/performers/${id}/notification-settings`, payload);
  }
  setInternalProfile() {
    return this.post('/internal-profile/detect-login');
  }
  getRanking() {
    return this.get('/users/ranking');
  }
  getBoardCasterAnalytics(type, payload) {
    return this.get(this.buildUrl(`/performer/performer-analytics/${type}`, payload));
  }
  getNextSupportedRanking(performerId) {
    return this.get(`/performer/performer-analytics/ruby-to-nextRank/${performerId}`);
  }
  checkRole(payload) {
    return this.get(this.buildUrl('/performers/check-role', payload));
  }
  getMileStones() {
    return this.get(this.buildUrl('/performers/me/roles'));
  }
  getDocumentCheckStatus() {
    return this.get(this.buildUrl('/documents/auth/check'));
  }
}
const performerService = new PerformerService();

/***/ }),

/***/ "./src/services/photo.service.ts":
/*!***************************************!*\
  !*** ./src/services/photo.service.ts ***!
  \***************************************/
/*! exports provided: PhotoService, photoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhotoService", function() { return PhotoService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "photoService", function() { return photoService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PhotoService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  searchByUser(query) {
    const {
      performerId
    } = query;
    return this.get(this.buildUrl(`/user/performer-assets/photos/${performerId}`, query));
  }
  searchByPerformer(query) {
    return this.get(this.buildUrl('/performer/performer-assets/photos/search', query));
  }
  update(id, payload) {
    return this.put(`/performer/performer-assets/photos/${id}`, payload);
  }
  setCoverGallery(id) {
    return this.post(`/performer/performer-assets/photos/set-cover/${id}`);
  }
  delete(id) {
    return this.del(`/performer/performer-assets/photos/${id}`);
  }
  uploadImages(file, payload, onProgress) {
    return this.upload('/performer/performer-assets/photos/upload', [{
      fieldname: 'photo',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  searchPhotosInGallery(payload) {
    return this.get(this.buildUrl('/performer/performer-assets/photos/search', payload));
  }
  userSearch(payload) {
    return this.get(this.buildUrl('/user/performer-assets/photos', payload));
  }
}
const photoService = new PhotoService();

/***/ }),

/***/ "./src/services/post-category.service.ts":
/*!***********************************************!*\
  !*** ./src/services/post-category.service.ts ***!
  \***********************************************/
/*! exports provided: PostCategoryService, postCategoryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostCategoryService", function() { return PostCategoryService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "postCategoryService", function() { return postCategoryService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PostCategoryService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/post-categories', payload);
  }
  search(query) {
    return this.get(this.buildUrl('/post-categories', query));
  }
  findById(id) {
    return this.get(`/post-categories/${id}`);
  }
  update(id, payload) {
    return this.put(`/post-categories/${id}`, payload);
  }
  delete(id) {
    return this.del(`/post-categories/${id}`);
  }
}
const postCategoryService = new PostCategoryService();

/***/ }),

/***/ "./src/services/post.service.ts":
/*!**************************************!*\
  !*** ./src/services/post.service.ts ***!
  \**************************************/
/*! exports provided: PostService, postService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostService", function() { return PostService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "postService", function() { return postService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PostService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/posts', query));
  }
  findById(id) {
    return this.get(`/posts/${id}`);
  }
}
const postService = new PostService();

/***/ }),

/***/ "./src/services/product.service.ts":
/*!*****************************************!*\
  !*** ./src/services/product.service.ts ***!
  \*****************************************/
/*! exports provided: ProductService, productService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductService", function() { return ProductService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "productService", function() { return productService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class ProductService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  createProduct(files, payload, onProgress) {
    return this.upload('/performer/performer-assets/products', files, {
      onProgress,
      customData: payload
    });
  }
  update(id, files, payload, onProgress) {
    return this.upload(`/performer/performer-assets/products/${id}`, files, {
      onProgress,
      customData: payload,
      method: 'PUT'
    });
  }
  search(query) {
    return this.get(this.buildUrl('/performer/performer-assets/products/search', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/user/performer-assets/products/search', query));
  }
  userView(productId, headers) {
    return this.get(`/user/performer-assets/products/${productId}`, headers);
  }
  findById(id) {
    return this.get(`/performer/performer-assets/products/${id}/view`);
  }
  delete(id) {
    return this.del(`/performer/performer-assets/products/${id}`);
  }
  getBookmarked(payload) {
    return this.get(this.buildUrl('/reactions/products/bookmark', payload));
  }
}
const productService = new ProductService();

/***/ }),

/***/ "./src/services/reaction.service.ts":
/*!******************************************!*\
  !*** ./src/services/reaction.service.ts ***!
  \******************************************/
/*! exports provided: ReactionService, reactionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReactionService", function() { return ReactionService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reactionService", function() { return reactionService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class ReactionService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/reactions', payload);
  }
  delete(payload) {
    return this.del('/reactions', payload);
  }
  search(query) {
    return this.get(this.buildUrl('/reactions/search', query));
  }
}
const reactionService = new ReactionService();

/***/ }),

/***/ "./src/services/report.service.ts":
/*!****************************************!*\
  !*** ./src/services/report.service.ts ***!
  \****************************************/
/*! exports provided: ReportService, reportService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportService", function() { return ReportService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reportService", function() { return reportService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class ReportService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/reports', payload);
  }
}
const reportService = new ReportService();

/***/ }),

/***/ "./src/services/search.service.ts":
/*!****************************************!*\
  !*** ./src/services/search.service.ts ***!
  \****************************************/
/*! exports provided: SearchService, searchService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchService", function() { return SearchService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchService", function() { return searchService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class SearchService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  searchByKeyword(payload) {
    return this.post('/search/keywords', payload);
  }
  listByKeyword(query) {
    return this.get(this.buildUrl('/search/list/keywords', query));
  }
}
const searchService = new SearchService();

/***/ }),

/***/ "./src/services/setting.service.ts":
/*!*****************************************!*\
  !*** ./src/services/setting.service.ts ***!
  \*****************************************/
/*! exports provided: SettingService, settingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingService", function() { return SettingService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "settingService", function() { return settingService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class SettingService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_settings", {});
  }
  async all(group = '', forceReload = false) {
    const settingGroup = group || 'all';
    if (this._settings[settingGroup] && !forceReload) {
      return this._settings[settingGroup];
    }
    const resp = await this.get(this.buildUrl('/settings/public', {
      group
    }));
    this._settings[settingGroup] = resp;
    return resp;
  }
  contact(data) {
    return this.post('/contact', data);
  }
}
const settingService = new SettingService();

/***/ }),

/***/ "./src/services/stream.service.tsx":
/*!*****************************************!*\
  !*** ./src/services/stream.service.tsx ***!
  \*****************************************/
/*! exports provided: streamService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "streamService", function() { return streamService; });
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* eslint-disable @typescript-eslint/no-unused-vars */





class StreamService extends _api_request__WEBPACK_IMPORTED_MODULE_3__["APIRequest"] {
  getSessionId(id, type) {
    return this.get(`/streaming/session/${id}/${type}`);
  }
  goLive() {
    return this.post('/streaming/live');
  }
  joinPublicChat(performerId) {
    return this.post(`/streaming/join/${performerId}`);
  }
  requestPrivateChat(performerId) {
    return this.post(`/streaming/private-chat/${performerId}`);
  }
  acceptPrivateChat(id) {
    return this.get(`/streaming/private-chat/${id}`);
  }
  startGroupChat() {
    return this.post('/streaming/group-chat');
  }
  joinGroupChat(id) {
    return this.get(`/streaming/group-chat/${id}`);
  }
  generateOneTimeToken(data) {
    return this.post('/streaming/token', data);
  }
  async getPublishToken(options, expireDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().add(1, 'd').toDate().getTime()) {
    try {
      const {
        settings,
        streamId
      } = options;
      const {
        secureOption
      } = settings;
      if (secureOption) {
        const resp = await this.generateOneTimeToken({
          id: streamId,
          type: 'publish',
          expireDate
        });
        return resp.data.tokenId;
      }
      return null;
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["getResponseError"])(error));
      return null;
    }
  }
  async getSubscriberToken(options, expireDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().add(1, 'd').toDate().getTime()) {
    try {
      const {
        settings,
        streamId
      } = options;
      const {
        secureOption
      } = settings;
      if (secureOption) {
        const resp = await this.generateOneTimeToken({
          id: streamId,
          type: 'play',
          expireDate
        });
        return resp.data.tokenId;
      }
      return null;
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["getResponseError"])(error));
      return null;
    }
  }
  async getLiveStreamOrVodURL(options, expireDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().add(1, 'd').toDate().getTime(), _player = 'hls') {
    // http://[IP_Address]/<Application_Name>/streams/streamID.mp4?token=tokenId
    // http://[IP_Address]/<Application_Name>/streams/streamID.m3u8?token=tokenId
    // http://[IP_Address]/<Application_Name>/play.html?name=streamID&playOrder=hls&token=tokenId
    try {
      // const src = `https://${viewerURL}:5443/${appName}/streams/${streamId}.m3u8${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;
      // eslint-disable-next-line no-shadow
      const {
        appName,
        settings,
        streamId
      } = options;
      const {
        secureOption,
        viewerURL
      } = settings;
      const extension = _player === 'hls' ? 'm3u8' : 'mp4';
      if (!viewerURL || !appName) {
        return '';
      }
      let oneTimeToken = '';
      if (secureOption) {
        const resp = await this.generateOneTimeToken({
          id: streamId,
          type: 'play',
          expireDate
        });
        oneTimeToken = resp.data.tokenId;
      }
      const {
        protocol
      } = window.location;
      return `https://${viewerURL}/${appName}/streams/${streamId}.${extension}${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["getResponseError"])(error));
      return '';
    }
  }
  togglePrivateChatStatus() {
    return this.put('/streaming/private-chat/toggle-status').then(resp => resp.data);
  }
  cancelPrivateChat(conversationId) {
    return this.post(`/streaming/private-chat/cancel/${conversationId}`).then(resp => resp.data);
  }
  timeOutPrivateChat(conversationId, performerId) {
    return this.post(`/streaming/private-chat/timeout/${conversationId}/${performerId}`).then(resp => resp.data);
  }
  getLiveStreaming(performerId) {
    return this.get(`/streaming/live/${performerId}`);
  }
  adminRemoveStream(conversationId) {
    return this.del(`/admin/streaming/remove/${conversationId}`);
  }
  getPublicStreams(isStreaming = true) {
    return this.get(`/streaming/list/public?isStreaming=${isStreaming}`);
  }
}
const streamService = new StreamService();

/***/ }),

/***/ "./src/services/subscription.service.ts":
/*!**********************************************!*\
  !*** ./src/services/subscription.service.ts ***!
  \**********************************************/
/*! exports provided: subscriptionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscriptionService", function() { return subscriptionService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class SubscriptionService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/subscriptions/performer/search', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/subscriptions/user/search', query));
  }
  cancelSubscription(id, gateway) {
    return this.post(`/payment/${gateway}/cancel-subscription/${id}`);
  }
}
const subscriptionService = new SubscriptionService();

/***/ }),

/***/ "./src/services/token-package.service.ts":
/*!***********************************************!*\
  !*** ./src/services/token-package.service.ts ***!
  \***********************************************/
/*! exports provided: TokenPackageService, tokenPackageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenPackageService", function() { return TokenPackageService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenPackageService", function() { return tokenPackageService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* eslint-disable linebreak-style */
/* eslint-disable indent */

class TokenPackageService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/package/token/search', query));
  }
}
const tokenPackageService = new TokenPackageService();

/***/ }),

/***/ "./src/services/token-transaction.service.ts":
/*!***************************************************!*\
  !*** ./src/services/token-transaction.service.ts ***!
  \***************************************************/
/*! exports provided: TokenTransctionService, tokenTransctionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenTransctionService", function() { return TokenTransctionService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenTransctionService", function() { return tokenTransctionService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class TokenTransctionService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  sendTip(performerId, payload) {
    return this.post(`/token-transactions/tip/${performerId}`, payload);
  }
  sendGift(performerId, payload) {
    return this.post(`/token-transactions/gifts/${performerId}`, payload);
  }
  sendPaidToken(conversationId, payload) {
    return this.post(`/token-transactions/pay-token/${conversationId}`, payload);
  }
  purchaseFeed(id, payload) {
    return this.post(`/token-transactions/feed/${id}`, payload);
  }
  purchaseProduct(id, payload) {
    return this.post(`/token-transactions/product/${id}`, payload);
  }
  purchaseVideo(id, payload) {
    return this.post(`/token-transactions/video/${id}`, payload);
  }
  purchaseGallery(id, payload) {
    return this.post(`/token-transactions/gallery/${id}`, payload);
  }
  purchaseMessage(id, payload) {
    return this.post(`/token-transactions/message/${id}`, payload);
  }
  purchaseStream(id) {
    return this.post(`/token-transactions/stream/${id}`);
  }
  boostPromotion(bracketId, payload) {
    return this.post(`/token-transactions/booking-cross-promotion/${bracketId}`, payload);
  }
  userSearch(query) {
    return this.get(this.buildUrl('/token-transactions/user/search', query));
  }
  userTransactions(query) {
    return this.get(this.buildUrl('/transactions/user/search', query));
  }
}
const tokenTransctionService = new TokenTransctionService();

/***/ }),

/***/ "./src/services/user.service.ts":
/*!**************************************!*\
  !*** ./src/services/user.service.ts ***!
  \**************************************/
/*! exports provided: UserService, userService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "userService", function() { return userService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");


class UserService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  me(headers) {
    return this.get('/users/me', headers);
  }
  updateMe(payload) {
    return this.put('/users', payload);
  }
  getAvatarUploadUrl(userId) {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    if (userId) {
      return `${config.NEXT_PUBLIC_API_ENDPOINT}/users/${userId}/avatar/upload`;
    }
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/users/avatar/upload`;
  }
  search(query) {
    return this.get(this.buildUrl('/users/search', query));
  }
  findById(id) {
    return this.get(`/users/view/${id}`);
  }
}
const userService = new UserService();

/***/ }),

/***/ "./src/services/utils.service.ts":
/*!***************************************!*\
  !*** ./src/services/utils.service.ts ***!
  \***************************************/
/*! exports provided: UtilsService, utilsService, isMobile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UtilsService", function() { return UtilsService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utilsService", function() { return utilsService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMobile", function() { return isMobile; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class UtilsService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_countries", []);
  }
  async countriesList() {
    if (this._countries.length) {
      return this._countries;
    }
    const resp = await this.get('/countries/list');
    this._countries = resp;
    return resp;
  }
  languagesList() {
    return this.get('/languages/list');
  }
  phoneCodesList() {
    return this.get('/phone-codes/list');
  }
  bodyInfo() {
    return this.get('/user-additional');
  }
  verifyRecaptcha(token) {
    return this.post('/re-captcha/verify', {
      token
    });
  }
  statesList(countryCode) {
    return this.get(`/states/${countryCode}`);
  }
  citiesList(countryCode, state) {
    return this.get(`/cities/${countryCode}/${state}`);
  }
}
const utilsService = new UtilsService();
function isMobile() {
  let check = false;
  (function checkMobile(a) {
    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i.test(a.substr(0, 4))) check = true;
  })(navigator.userAgent || navigator.vendor);
  return check;
}

/***/ }),

/***/ "./src/services/video.service.ts":
/*!***************************************!*\
  !*** ./src/services/video.service.ts ***!
  \***************************************/
/*! exports provided: VideoService, videoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoService", function() { return VideoService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "videoService", function() { return videoService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class VideoService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/performer/performer-assets/videos/search', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/user/performer-assets/videos/search', query));
  }
  delete(id) {
    return this.del(`/performer/performer-assets/videos/${id}`);
  }
  findById(id, headers) {
    return this.get(`/performer/performer-assets/videos/${id}/view`, headers);
  }
  findOne(id, headers) {
    return this.get(`/user/performer-assets/videos/${id}`, headers);
  }
  update(id, files, payload, onProgress) {
    return this.upload(`/performer/performer-assets/videos/edit/${id}`, files, {
      onProgress,
      customData: payload,
      method: 'PUT'
    });
  }
  deleteFile(id, type) {
    return this.del(`/performer/performer-assets/videos/remove-file/${id}`, {
      type
    });
  }
  uploadVideo(files, payload, onProgress) {
    return this.upload('/performer/performer-assets/videos/upload', files, {
      onProgress,
      customData: payload
    });
  }
  getBookmarks(payload) {
    return this.get(this.buildUrl('/reactions/videos/bookmark', payload));
  }
}
const videoService = new VideoService();

/***/ }),

/***/ "@ant-design/icons":
/*!************************************!*\
  !*** external "@ant-design/icons" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@ant-design/icons");

/***/ }),

/***/ "@hookform/resolvers/yup":
/*!******************************************!*\
  !*** external "@hookform/resolvers/yup" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@hookform/resolvers/yup");

/***/ }),

/***/ "antd":
/*!***********************!*\
  !*** external "antd" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("antd");

/***/ }),

/***/ "class-variance-authority":
/*!*******************************************!*\
  !*** external "class-variance-authority" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("class-variance-authority");

/***/ }),

/***/ "isomorphic-unfetch":
/*!*************************************!*\
  !*** external "isomorphic-unfetch" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("isomorphic-unfetch");

/***/ }),

/***/ "js-cookie":
/*!****************************!*\
  !*** external "js-cookie" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("js-cookie");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("moment");

/***/ }),

/***/ "next/dynamic":
/*!*******************************!*\
  !*** external "next/dynamic" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dynamic");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/head");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/router");

/***/ }),

/***/ "path-to-regexp":
/*!*********************************!*\
  !*** external "path-to-regexp" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("path-to-regexp");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ "react-copy-to-clipboard":
/*!******************************************!*\
  !*** external "react-copy-to-clipboard" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-copy-to-clipboard");

/***/ }),

/***/ "react-hook-form":
/*!**********************************!*\
  !*** external "react-hook-form" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-hook-form");

/***/ }),

/***/ "react-infinite-scroll-component":
/*!**************************************************!*\
  !*** external "react-infinite-scroll-component" ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-infinite-scroll-component");

/***/ }),

/***/ "react-is":
/*!***************************!*\
  !*** external "react-is" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-is");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-redux");

/***/ }),

/***/ "redux-actions":
/*!********************************!*\
  !*** external "redux-actions" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-actions");

/***/ }),

/***/ "redux-saga/effects":
/*!*************************************!*\
  !*** external "redux-saga/effects" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-saga/effects");

/***/ }),

/***/ "reselect":
/*!***************************!*\
  !*** external "reselect" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("reselect");

/***/ }),

/***/ "yup":
/*!**********************!*\
  !*** external "yup" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("yup");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,