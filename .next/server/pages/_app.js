module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../ssr-module-cache.js');
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "0" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		"pages/_app": 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var promises = [];
/******/
/******/
/******/ 		// require() chunk loading for javascript
/******/
/******/ 		// "0" is the signal for "already loaded"
/******/ 		if(installedChunks[chunkId] !== 0) {
/******/ 			var chunk = require("../" + ({}[chunkId]||chunkId) + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 0;
/******/ 		}
/******/ 		return Promise.all(promises);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// uncaught error handler for webpack runtime
/******/ 	__webpack_require__.oe = function(err) {
/******/ 		process.nextTick(function() {
/******/ 			throw err; // catch this error by using import().catch()
/******/ 		});
/******/ 	};
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../next-server/lib/router-context":
/*!**************************************************************!*\
  !*** external "next/dist/next-server/lib/router-context.js" ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/router-context.js");

/***/ }),

/***/ "../next-server/lib/utils":
/*!*****************************************************!*\
  !*** external "next/dist/next-server/lib/utils.js" ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/utils.js");

/***/ }),

/***/ "./node_modules/next/app.js":
/*!**********************************!*\
  !*** ./node_modules/next/app.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/pages/_app */ "./node_modules/next/dist/pages/_app.js")


/***/ }),

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");
exports.__esModule = true;
exports.default = void 0;
var _react = _interopRequireWildcard(__webpack_require__(/*! react */ "react"));
var _router = __webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js");
var _router2 = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");
let cachedObserver;
const listeners = new Map();
const IntersectionObserver = false ? undefined : null;
const prefetched = {};
function getObserver() {
  // Return shared instance of IntersectionObserver if already created
  if (cachedObserver) {
    return cachedObserver;
  } // Only create shared IntersectionObserver if supported in browser
  if (!IntersectionObserver) {
    return undefined;
  }
  return cachedObserver = new IntersectionObserver(entries => {
    entries.forEach(entry => {
      if (!listeners.has(entry.target)) {
        return;
      }
      const cb = listeners.get(entry.target);
      if (entry.isIntersecting || entry.intersectionRatio > 0) {
        cachedObserver.unobserve(entry.target);
        listeners.delete(entry.target);
        cb();
      }
    });
  }, {
    rootMargin: '200px'
  });
}
const listenToIntersections = (el, cb) => {
  const observer = getObserver();
  if (!observer) {
    return () => {};
  }
  observer.observe(el);
  listeners.set(el, cb);
  return () => {
    try {
      observer.unobserve(el);
    } catch (err) {
      console.error(err);
    }
    listeners.delete(el);
  };
};
function prefetch(router, href, as, options) {
  if (true) return;
  if (!(0, _router.isLocalURL)(href)) return; // Prefetch the JSON page if asked (only in the client)
  // We need to handle a prefetch error here since we may be
  // loading with priority which can reject but we don't
  // want to force navigation since this is only a prefetch
  router.prefetch(href, as, options).catch(err => {
    if (true) {
      // rethrow to show invalid URL errors
      throw err;
    }
  }); // Join on an invalid URI character
  prefetched[href + '%' + as] = true;
}
function isModifiedEvent(event) {
  const {
    target
  } = event.currentTarget;
  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey ||
  // triggers resource download
  event.nativeEvent && event.nativeEvent.which === 2;
}
function linkClicked(e, router, href, as, replace, shallow, scroll) {
  const {
    nodeName
  } = e.currentTarget;
  if (nodeName === 'A' && (isModifiedEvent(e) || !(0, _router.isLocalURL)(href))) {
    // ignore click for browserâ€™s default behavior
    return;
  }
  e.preventDefault(); //  avoid scroll for urls with anchor refs
  if (scroll == null) {
    scroll = as.indexOf('#') < 0;
  } // replace state instead of push if prop is present
  router[replace ? 'replace' : 'push'](href, as, {
    shallow
  }).then(success => {
    if (!success) return;
    if (scroll) {
      window.scrollTo(0, 0);
      document.body.focus();
    }
  });
}
function Link(props) {
  if (true) {
    function createPropError(args) {
      return new Error(`Failed prop type: The prop \`${args.key}\` expects a ${args.expected} in \`<Link>\`, but got \`${args.actual}\` instead.` + (false ? undefined : ''));
    } // TypeScript trick for type-guarding:
    const requiredPropsGuard = {
      href: true
    };
    const requiredProps = Object.keys(requiredPropsGuard);
    requiredProps.forEach(key => {
      if (key === 'href') {
        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {
          throw createPropError({
            key,
            expected: '`string` or `object`',
            actual: props[key] === null ? 'null' : typeof props[key]
          });
        }
      } else {
        // TypeScript trick for type-guarding:
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _ = key;
      }
    }); // TypeScript trick for type-guarding:
    const optionalPropsGuard = {
      as: true,
      replace: true,
      scroll: true,
      shallow: true,
      passHref: true,
      prefetch: true
    };
    const optionalProps = Object.keys(optionalPropsGuard);
    optionalProps.forEach(key => {
      if (key === 'as') {
        if (props[key] && typeof props[key] !== 'string' && typeof props[key] !== 'object') {
          throw createPropError({
            key,
            expected: '`string` or `object`',
            actual: typeof props[key]
          });
        }
      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {
        if (props[key] != null && typeof props[key] !== 'boolean') {
          throw createPropError({
            key,
            expected: '`boolean`',
            actual: typeof props[key]
          });
        }
      } else {
        // TypeScript trick for type-guarding:
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _ = key;
      }
    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const hasWarned = _react.default.useRef(false);
    if (props.prefetch && !hasWarned.current) {
      hasWarned.current = true;
      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated');
    }
  }
  const p = props.prefetch !== false;
  const [childElm, setChildElm] = _react.default.useState();
  const router = (0, _router2.useRouter)();
  const pathname = router && router.pathname || '/';
  const {
    href,
    as
  } = _react.default.useMemo(() => {
    const [resolvedHref, resolvedAs] = (0, _router.resolveHref)(pathname, props.href, true);
    return {
      href: resolvedHref,
      as: props.as ? (0, _router.resolveHref)(pathname, props.as) : resolvedAs || resolvedHref
    };
  }, [pathname, props.href, props.as]);
  _react.default.useEffect(() => {
    if (p && IntersectionObserver && childElm && childElm.tagName && (0, _router.isLocalURL)(href)) {
      // Join on an invalid URI character
      const isPrefetched = prefetched[href + '%' + as];
      if (!isPrefetched) {
        return listenToIntersections(childElm, () => {
          prefetch(router, href, as);
        });
      }
    }
  }, [p, childElm, href, as, router]);
  let {
    children,
    replace,
    shallow,
    scroll
  } = props; // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag
  if (typeof children === 'string') {
    children = /*#__PURE__*/_react.default.createElement("a", null, children);
  } // This will return the first child, if multiple are provided it will throw an error
  const child = _react.Children.only(children);
  const childProps = {
    ref: el => {
      if (el) setChildElm(el);
      if (child && typeof child === 'object' && child.ref) {
        if (typeof child.ref === 'function') child.ref(el);else if (typeof child.ref === 'object') {
          child.ref.current = el;
        }
      }
    },
    onClick: e => {
      if (child.props && typeof child.props.onClick === 'function') {
        child.props.onClick(e);
      }
      if (!e.defaultPrevented) {
        linkClicked(e, router, href, as, replace, shallow, scroll);
      }
    }
  };
  if (p) {
    childProps.onMouseEnter = e => {
      if (!(0, _router.isLocalURL)(href)) return;
      if (child.props && typeof child.props.onMouseEnter === 'function') {
        child.props.onMouseEnter(e);
      }
      prefetch(router, href, as, {
        priority: true
      });
    };
  } // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is
  // defined, we specify the current 'href', so that repetition is not needed by the user
  if (props.passHref || child.type === 'a' && !('href' in child.props)) {
    childProps.href = (0, _router.addBasePath)((0, _router.addLocale)(as, router && router.locale, router && router.defaultLocale));
  }
  return /*#__PURE__*/_react.default.cloneElement(child, childProps);
}
var _default = Link;
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.removePathTrailingSlash = removePathTrailingSlash;
exports.normalizePathTrailingSlash = void 0; /**
                                             * Removes the trailing slash of a path if there is one. Preserves the root path `/`.
                                             */
function removePathTrailingSlash(path) {
  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;
} /**
  * Normalizes the trailing slash of a path according to the `trailingSlash` option
  * in `next.config.js`.
  */
const normalizePathTrailingSlash =  false ? undefined : removePathTrailingSlash;
exports.normalizePathTrailingSlash = normalizePathTrailingSlash;

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireWildcard = __webpack_require__(/*! @babel/runtime/helpers/interopRequireWildcard */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js");
var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");
exports.__esModule = true;
exports.useRouter = useRouter;
exports.makePublicRouterInstance = makePublicRouterInstance;
exports.createRouter = exports.withRouter = exports.default = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));
var _router2 = _interopRequireWildcard(__webpack_require__(/*! ../next-server/lib/router/router */ "./node_modules/next/dist/next-server/lib/router/router.js"));
exports.Router = _router2.default;
exports.NextRouter = _router2.NextRouter;
var _routerContext = __webpack_require__(/*! ../next-server/lib/router-context */ "../next-server/lib/router-context");
var _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ "./node_modules/next/dist/client/with-router.js"));
exports.withRouter = _withRouter.default; /* global window */
const singletonRouter = {
  router: null,
  // holds the actual router instance
  readyCallbacks: [],
  ready(cb) {
    if (this.router) return cb();
    if (false) {}
  }
}; // Create public properties and methods of the router in the singletonRouter
const urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale'];
const routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];
const coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it
Object.defineProperty(singletonRouter, 'events', {
  get() {
    return _router2.default.events;
  }
});
urlPropertyFields.forEach(field => {
  // Here we need to use Object.defineProperty because, we need to return
  // the property assigned to the actual router
  // The value might get changed as we change routes and this is the
  // proper way to access it
  Object.defineProperty(singletonRouter, field, {
    get() {
      const router = getRouter();
      return router[field];
    }
  });
});
coreMethodFields.forEach(field => {
  // We don't really know the types here, so we add them later instead
  ;
  singletonRouter[field] = (...args) => {
    const router = getRouter();
    return router[field](...args);
  };
});
routerEvents.forEach(event => {
  singletonRouter.ready(() => {
    _router2.default.events.on(event, (...args) => {
      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;
      const _singletonRouter = singletonRouter;
      if (_singletonRouter[eventField]) {
        try {
          _singletonRouter[eventField](...args);
        } catch (err) {
          console.error(`Error when running the Router event: ${eventField}`);
          console.error(`${err.message}\n${err.stack}`);
        }
      }
    });
  });
});
function getRouter() {
  if (!singletonRouter.router) {
    const message = 'No router instance found.\n' + 'You should only use "next/router" inside the client side of your app.\n';
    throw new Error(message);
  }
  return singletonRouter.router;
} // Export the singletonRouter and this is the public API.
var _default = singletonRouter; // Reexport the withRoute HOC
exports.default = _default;
function useRouter() {
  return _react.default.useContext(_routerContext.RouterContext);
} // INTERNAL APIS
// -------------
// (do not use following exports inside the app)
// Create a router and assign it as the singleton instance.
// This is used in client side when we are initilizing the app.
// This should **not** use inside the server.
const createRouter = (...args) => {
  singletonRouter.router = new _router2.default(...args);
  singletonRouter.readyCallbacks.forEach(cb => cb());
  singletonRouter.readyCallbacks = [];
  return singletonRouter.router;
}; // This function is used to create the `withRouter` router instance
exports.createRouter = createRouter;
function makePublicRouterInstance(router) {
  const _router = router;
  const instance = {};
  for (const property of urlPropertyFields) {
    if (typeof _router[property] === 'object') {
      instance[property] = Object.assign(Array.isArray(_router[property]) ? [] : {}, _router[property]); // makes sure query is not stateful
      continue;
    }
    instance[property] = _router[property];
  } // Events is a static property on the router, the router doesn't have to be initialized to use it
  instance.events = _router2.default.events;
  coreMethodFields.forEach(field => {
    instance[field] = (...args) => {
      return _router[field](...args);
    };
  });
  return instance;
}

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");
exports.__esModule = true;
exports.default = withRouter;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));
var _router = __webpack_require__(/*! ./router */ "./node_modules/next/dist/client/router.js");
function withRouter(ComposedComponent) {
  function WithRouterWrapper(props) {
    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({
      router: (0, _router.useRouter)()
    }, props));
  }
  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps // This is needed to allow checking for custom getInitialProps in _app
  ;
  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;
  if (true) {
    const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';
    WithRouterWrapper.displayName = `withRouter(${name})`;
  }
  return WithRouterWrapper;
}

/***/ }),

/***/ "./node_modules/next/dist/compiled/path-to-regexp/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/path-to-regexp/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Tokenize input string.
 */
function lexer(str) {
    var tokens = [];
    var i = 0;
    while (i < str.length) {
        var char = str[i];
        if (char === "*" || char === "+" || char === "?") {
            tokens.push({ type: "MODIFIER", index: i, value: str[i++] });
            continue;
        }
        if (char === "\\") {
            tokens.push({ type: "ESCAPED_CHAR", index: i++, value: str[i++] });
            continue;
        }
        if (char === "{") {
            tokens.push({ type: "OPEN", index: i, value: str[i++] });
            continue;
        }
        if (char === "}") {
            tokens.push({ type: "CLOSE", index: i, value: str[i++] });
            continue;
        }
        if (char === ":") {
            var name = "";
            var j = i + 1;
            while (j < str.length) {
                var code = str.charCodeAt(j);
                if (
                // `0-9`
                (code >= 48 && code <= 57) ||
                    // `A-Z`
                    (code >= 65 && code <= 90) ||
                    // `a-z`
                    (code >= 97 && code <= 122) ||
                    // `_`
                    code === 95) {
                    name += str[j++];
                    continue;
                }
                break;
            }
            if (!name)
                throw new TypeError("Missing parameter name at " + i);
            tokens.push({ type: "NAME", index: i, value: name });
            i = j;
            continue;
        }
        if (char === "(") {
            var count = 1;
            var pattern = "";
            var j = i + 1;
            if (str[j] === "?") {
                throw new TypeError("Pattern cannot start with \"?\" at " + j);
            }
            while (j < str.length) {
                if (str[j] === "\\") {
                    pattern += str[j++] + str[j++];
                    continue;
                }
                if (str[j] === ")") {
                    count--;
                    if (count === 0) {
                        j++;
                        break;
                    }
                }
                else if (str[j] === "(") {
                    count++;
                    if (str[j + 1] !== "?") {
                        throw new TypeError("Capturing groups are not allowed at " + j);
                    }
                }
                pattern += str[j++];
            }
            if (count)
                throw new TypeError("Unbalanced pattern at " + i);
            if (!pattern)
                throw new TypeError("Missing pattern at " + i);
            tokens.push({ type: "PATTERN", index: i, value: pattern });
            i = j;
            continue;
        }
        tokens.push({ type: "CHAR", index: i, value: str[i++] });
    }
    tokens.push({ type: "END", index: i, value: "" });
    return tokens;
}
/**
 * Parse a string for the raw tokens.
 */
function parse(str, options) {
    if (options === void 0) { options = {}; }
    var tokens = lexer(str);
    var _a = options.prefixes, prefixes = _a === void 0 ? "./" : _a;
    var defaultPattern = "[^" + escapeString(options.delimiter || "/#?") + "]+?";
    var result = [];
    var key = 0;
    var i = 0;
    var path = "";
    var tryConsume = function (type) {
        if (i < tokens.length && tokens[i].type === type)
            return tokens[i++].value;
    };
    var mustConsume = function (type) {
        var value = tryConsume(type);
        if (value !== undefined)
            return value;
        var _a = tokens[i], nextType = _a.type, index = _a.index;
        throw new TypeError("Unexpected " + nextType + " at " + index + ", expected " + type);
    };
    var consumeText = function () {
        var result = "";
        var value;
        // tslint:disable-next-line
        while ((value = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR"))) {
            result += value;
        }
        return result;
    };
    while (i < tokens.length) {
        var char = tryConsume("CHAR");
        var name = tryConsume("NAME");
        var pattern = tryConsume("PATTERN");
        if (name || pattern) {
            var prefix = char || "";
            if (prefixes.indexOf(prefix) === -1) {
                path += prefix;
                prefix = "";
            }
            if (path) {
                result.push(path);
                path = "";
            }
            result.push({
                name: name || key++,
                prefix: prefix,
                suffix: "",
                pattern: pattern || defaultPattern,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        var value = char || tryConsume("ESCAPED_CHAR");
        if (value) {
            path += value;
            continue;
        }
        if (path) {
            result.push(path);
            path = "";
        }
        var open = tryConsume("OPEN");
        if (open) {
            var prefix = consumeText();
            var name_1 = tryConsume("NAME") || "";
            var pattern_1 = tryConsume("PATTERN") || "";
            var suffix = consumeText();
            mustConsume("CLOSE");
            result.push({
                name: name_1 || (pattern_1 ? key++ : ""),
                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
                prefix: prefix,
                suffix: suffix,
                modifier: tryConsume("MODIFIER") || ""
            });
            continue;
        }
        mustConsume("END");
    }
    return result;
}
exports.parse = parse;
/**
 * Compile a string to a template function for the path.
 */
function compile(str, options) {
    return tokensToFunction(parse(str, options), options);
}
exports.compile = compile;
/**
 * Expose a method for transforming tokens into the path function.
 */
function tokensToFunction(tokens, options) {
    if (options === void 0) { options = {}; }
    var reFlags = flags(options);
    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;
    // Compile all the tokens into regexps.
    var matches = tokens.map(function (token) {
        if (typeof token === "object") {
            return new RegExp("^(?:" + token.pattern + ")$", reFlags);
        }
    });
    return function (data) {
        var path = "";
        for (var i = 0; i < tokens.length; i++) {
            var token = tokens[i];
            if (typeof token === "string") {
                path += token;
                continue;
            }
            var value = data ? data[token.name] : undefined;
            var optional = token.modifier === "?" || token.modifier === "*";
            var repeat = token.modifier === "*" || token.modifier === "+";
            if (Array.isArray(value)) {
                if (!repeat) {
                    throw new TypeError("Expected \"" + token.name + "\" to not repeat, but got an array");
                }
                if (value.length === 0) {
                    if (optional)
                        continue;
                    throw new TypeError("Expected \"" + token.name + "\" to not be empty");
                }
                for (var j = 0; j < value.length; j++) {
                    var segment = encode(value[j], token);
                    if (validate && !matches[i].test(segment)) {
                        throw new TypeError("Expected all \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                    }
                    path += token.prefix + segment + token.suffix;
                }
                continue;
            }
            if (typeof value === "string" || typeof value === "number") {
                var segment = encode(String(value), token);
                if (validate && !matches[i].test(segment)) {
                    throw new TypeError("Expected \"" + token.name + "\" to match \"" + token.pattern + "\", but got \"" + segment + "\"");
                }
                path += token.prefix + segment + token.suffix;
                continue;
            }
            if (optional)
                continue;
            var typeOfMessage = repeat ? "an array" : "a string";
            throw new TypeError("Expected \"" + token.name + "\" to be " + typeOfMessage);
        }
        return path;
    };
}
exports.tokensToFunction = tokensToFunction;
/**
 * Create path match function from `path-to-regexp` spec.
 */
function match(str, options) {
    var keys = [];
    var re = pathToRegexp(str, keys, options);
    return regexpToFunction(re, keys, options);
}
exports.match = match;
/**
 * Create a path match function from `path-to-regexp` output.
 */
function regexpToFunction(re, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;
    return function (pathname) {
        var m = re.exec(pathname);
        if (!m)
            return false;
        var path = m[0], index = m.index;
        var params = Object.create(null);
        var _loop_1 = function (i) {
            // tslint:disable-next-line
            if (m[i] === undefined)
                return "continue";
            var key = keys[i - 1];
            if (key.modifier === "*" || key.modifier === "+") {
                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {
                    return decode(value, key);
                });
            }
            else {
                params[key.name] = decode(m[i], key);
            }
        };
        for (var i = 1; i < m.length; i++) {
            _loop_1(i);
        }
        return { path: path, index: index, params: params };
    };
}
exports.regexpToFunction = regexpToFunction;
/**
 * Escape a regular expression string.
 */
function escapeString(str) {
    return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
/**
 * Get the flags for a regexp from the options.
 */
function flags(options) {
    return options && options.sensitive ? "" : "i";
}
/**
 * Pull out keys from a regexp.
 */
function regexpToRegexp(path, keys) {
    if (!keys)
        return path;
    // Use a negative lookahead to match only capturing groups.
    var groups = path.source.match(/\((?!\?)/g);
    if (groups) {
        for (var i = 0; i < groups.length; i++) {
            keys.push({
                name: i,
                prefix: "",
                suffix: "",
                modifier: "",
                pattern: ""
            });
        }
    }
    return path;
}
/**
 * Transform an array into a regexp.
 */
function arrayToRegexp(paths, keys, options) {
    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });
    return new RegExp("(?:" + parts.join("|") + ")", flags(options));
}
/**
 * Create a path regexp from string input.
 */
function stringToRegexp(path, keys, options) {
    return tokensToRegexp(parse(path, options), keys, options);
}
/**
 * Expose a function for taking tokens and returning a RegExp.
 */
function tokensToRegexp(tokens, keys, options) {
    if (options === void 0) { options = {}; }
    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;
    var endsWith = "[" + escapeString(options.endsWith || "") + "]|$";
    var delimiter = "[" + escapeString(options.delimiter || "/#?") + "]";
    var route = start ? "^" : "";
    // Iterate over the tokens and create our regexp string.
    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
        var token = tokens_1[_i];
        if (typeof token === "string") {
            route += escapeString(encode(token));
        }
        else {
            var prefix = escapeString(encode(token.prefix));
            var suffix = escapeString(encode(token.suffix));
            if (token.pattern) {
                if (keys)
                    keys.push(token);
                if (prefix || suffix) {
                    if (token.modifier === "+" || token.modifier === "*") {
                        var mod = token.modifier === "*" ? "?" : "";
                        route += "(?:" + prefix + "((?:" + token.pattern + ")(?:" + suffix + prefix + "(?:" + token.pattern + "))*)" + suffix + ")" + mod;
                    }
                    else {
                        route += "(?:" + prefix + "(" + token.pattern + ")" + suffix + ")" + token.modifier;
                    }
                }
                else {
                    route += "(" + token.pattern + ")" + token.modifier;
                }
            }
            else {
                route += "(?:" + prefix + suffix + ")" + token.modifier;
            }
        }
    }
    if (end) {
        if (!strict)
            route += delimiter + "?";
        route += !options.endsWith ? "$" : "(?=" + endsWith + ")";
    }
    else {
        var endToken = tokens[tokens.length - 1];
        var isEndDelimited = typeof endToken === "string"
            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1
            : // tslint:disable-next-line
                endToken === undefined;
        if (!strict) {
            route += "(?:" + delimiter + "(?=" + endsWith + "))?";
        }
        if (!isEndDelimited) {
            route += "(?=" + delimiter + "|" + endsWith + ")";
        }
    }
    return new RegExp(route, flags(options));
}
exports.tokensToRegexp = tokensToRegexp;
/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 */
function pathToRegexp(path, keys, options) {
    if (path instanceof RegExp)
        return regexpToRegexp(path, keys);
    if (Array.isArray(path))
        return arrayToRegexp(path, keys, options);
    return stringToRegexp(path, keys, options);
}
exports.pathToRegexp = pathToRegexp;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/mitt.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/mitt.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = mitt; /*
                        MIT License
                        Copyright (c) Jason Miller (https://jasonformat.com/)
                        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
                        The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
                        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                        */ // This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js
// It's been edited for the needs of this script
// See the LICENSE at the top of the file
function mitt() {
  const all = Object.create(null);
  return {
    on(type, handler) {
      ;
      (all[type] || (all[type] = [])).push(handler);
    },
    off(type, handler) {
      if (all[type]) {
        all[type].splice(all[type].indexOf(handler) >>> 0, 1);
      }
    },
    emit(type, ...evts) {
      // eslint-disable-next-line array-callback-return
      ;
      (all[type] || []).slice().map(handler => {
        handler(...evts);
      });
    }
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/router.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/router.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.addLocale = addLocale;
exports.delLocale = delLocale;
exports.hasBasePath = hasBasePath;
exports.addBasePath = addBasePath;
exports.delBasePath = delBasePath;
exports.isLocalURL = isLocalURL;
exports.interpolateAs = interpolateAs;
exports.resolveHref = resolveHref;
exports.markLoadingError = markLoadingError;
exports.default = void 0;
var _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");
var _denormalizePagePath = __webpack_require__(/*! ../../server/denormalize-page-path */ "./node_modules/next/dist/next-server/server/denormalize-page-path.js");
var _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ "./node_modules/next/dist/next-server/lib/mitt.js"));
var _utils = __webpack_require__(/*! ../utils */ "./node_modules/next/dist/next-server/lib/utils.js");
var _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js");
var _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");
var _querystring = __webpack_require__(/*! ./utils/querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
var _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js"));
var _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js");
var _routeRegex = __webpack_require__(/*! ./utils/route-regex */ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js");
var _escapePathDelimiters = _interopRequireDefault(__webpack_require__(/*! ./utils/escape-path-delimiters */ "./node_modules/next/dist/next-server/lib/router/utils/escape-path-delimiters.js"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
} /* global __NEXT_DATA__ */ // tslint:disable:no-console
const basePath =  false || '';
function buildCancellationError() {
  return Object.assign(new Error('Route Cancelled'), {
    cancelled: true
  });
}
function addPathPrefix(path, prefix) {
  return prefix && path.startsWith('/') ? path === '/' ? (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(prefix) : `${prefix}${path}` : path;
}
function addLocale(path, locale, defaultLocale) {
  if (false) {}
  return path;
}
function delLocale(path, locale) {
  if (false) {}
  return path;
}
function hasBasePath(path) {
  return path === basePath || path.startsWith(basePath + '/');
}
function addBasePath(path) {
  // we only add the basepath on relative urls
  return addPathPrefix(path, basePath);
}
function delBasePath(path) {
  return path.slice(basePath.length) || '/';
} /**
  * Detects whether a given url is routable by the Next.js router (browser only).
  */
function isLocalURL(url) {
  if (url.startsWith('/')) return true;
  try {
    // absolute urls can be local if they are on the same origin
    const locationOrigin = (0, _utils.getLocationOrigin)();
    const resolved = new URL(url, locationOrigin);
    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);
  } catch (_) {
    return false;
  }
}
function interpolateAs(route, asPathname, query) {
  let interpolatedRoute = '';
  const dynamicRegex = (0, _routeRegex.getRouteRegex)(route);
  const dynamicGroups = dynamicRegex.groups;
  const dynamicMatches =
  // Try to match the dynamic route against the asPath
  (asPathname !== route ? (0, _routeMatcher.getRouteMatcher)(dynamicRegex)(asPathname) : '') ||
  // Fall back to reading the values from the href
  // TODO: should this take priority; also need to change in the router.
  query;
  interpolatedRoute = route;
  const params = Object.keys(dynamicGroups);
  if (!params.every(param => {
    let value = dynamicMatches[param] || '';
    const {
      repeat,
      optional
    } = dynamicGroups[param]; // support single-level catch-all
    // TODO: more robust handling for user-error (passing `/`)
    let replaced = `[${repeat ? '...' : ''}${param}]`;
    if (optional) {
      replaced = `${!value ? '/' : ''}[${replaced}]`;
    }
    if (repeat && !Array.isArray(value)) value = [value];
    return (optional || param in dynamicMatches) && (
    // Interpolate group into data URL if present
    interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map(_escapePathDelimiters.default).join('/') : (0, _escapePathDelimiters.default)(value)) || '/');
  })) {
    interpolatedRoute = ''; // did not satisfy all requirements
    // n.b. We ignore this error because we handle warning for this case in
    // development in the `<Link>` component directly.
  }
  return {
    params,
    result: interpolatedRoute
  };
}
function omitParmsFromQuery(query, params) {
  const filteredQuery = {};
  Object.keys(query).forEach(key => {
    if (!params.includes(key)) {
      filteredQuery[key] = query[key];
    }
  });
  return filteredQuery;
} /**
  * Resolves a given hyperlink with a certain router state (basePath not included).
  * Preserves absolute urls.
  */
function resolveHref(currentPath, href, resolveAs) {
  // we use a dummy base url for relative urls
  const base = new URL(currentPath, 'http://n');
  const urlAsString = typeof href === 'string' ? href : (0, _utils.formatWithValidation)(href);
  try {
    const finalUrl = new URL(urlAsString, base);
    finalUrl.pathname = (0, _normalizeTrailingSlash.normalizePathTrailingSlash)(finalUrl.pathname);
    let interpolatedAs = '';
    if ((0, _isDynamic.isDynamicRoute)(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {
      const query = (0, _querystring.searchParamsToUrlQuery)(finalUrl.searchParams);
      const {
        result,
        params
      } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);
      if (result) {
        interpolatedAs = (0, _utils.formatWithValidation)({
          pathname: result,
          hash: finalUrl.hash,
          query: omitParmsFromQuery(query, params)
        });
      }
    } // if the origin didn't change, it means we received a relative href
    const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;
    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;
  } catch (_) {
    return resolveAs ? [urlAsString] : urlAsString;
  }
}
const PAGE_LOAD_ERROR = Symbol('PAGE_LOAD_ERROR');
function markLoadingError(err) {
  return Object.defineProperty(err, PAGE_LOAD_ERROR, {});
}
function prepareUrlAs(router, url, as) {
  // If url and as provided as an object representation,
  // we'll format them into the string version here.
  return {
    url: addBasePath(resolveHref(router.pathname, url)),
    as: as ? addBasePath(resolveHref(router.pathname, as)) : as
  };
}
const manualScrollRestoration =  false && false;
function fetchRetry(url, attempts) {
  return fetch(url, {
    // Cookies are required to be present for Next.js' SSG "Preview Mode".
    // Cookies may also be required for `getServerSideProps`.
    //
    // > `fetch` wonâ€™t send cookies, unless you set the credentials init
    // > option.
    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch
    //
    // > For maximum browser compatibility when it comes to sending &
    // > receiving cookies, always supply the `credentials: 'same-origin'`
    // > option instead of relying on the default.
    // https://github.com/github/fetch#caveats
    credentials: 'same-origin'
  }).then(res => {
    if (!res.ok) {
      if (attempts > 1 && res.status >= 500) {
        return fetchRetry(url, attempts - 1);
      }
      throw new Error(`Failed to load static props`);
    }
    return res.json();
  });
}
function fetchNextData(dataHref, isServerRender) {
  return fetchRetry(dataHref, isServerRender ? 3 : 1).catch(err => {
    // We should only trigger a server-side transition if this was caused
    // on a client-side transition. Otherwise, we'd get into an infinite
    // loop.
    if (!isServerRender) {
      markLoadingError(err);
    }
    throw err;
  });
}
class Router {
  /**
  * Map of all components loaded in `Router`
  */ // Static Data Cache
  constructor(_pathname, _query, _as, {
    initialProps,
    pageLoader,
    App,
    wrapApp,
    Component,
    initialStyleSheets,
    err,
    subscription,
    isFallback,
    locale,
    locales,
    defaultLocale
  }) {
    this.route = void 0;
    this.pathname = void 0;
    this.query = void 0;
    this.asPath = void 0;
    this.basePath = void 0;
    this.components = void 0;
    this.sdc = {};
    this.sub = void 0;
    this.clc = void 0;
    this.pageLoader = void 0;
    this._bps = void 0;
    this.events = void 0;
    this._wrapApp = void 0;
    this.isSsr = void 0;
    this.isFallback = void 0;
    this._inFlightRoute = void 0;
    this._shallow = void 0;
    this.locale = void 0;
    this.locales = void 0;
    this.defaultLocale = void 0;
    this.onPopState = e => {
      const state = e.state;
      if (!state) {
        // We get state as undefined for two reasons.
        //  1. With older safari (< 8) and older chrome (< 34)
        //  2. When the URL changed with #
        //
        // In the both cases, we don't need to proceed and change the route.
        // (as it's already changed)
        // But we can simply replace the state with the new changes.
        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.
        // So, doing the following for (1) does no harm.
        const {
          pathname,
          query
        } = this;
        this.changeState('replaceState', (0, _utils.formatWithValidation)({
          pathname: addBasePath(pathname),
          query
        }), (0, _utils.getURL)());
        return;
      }
      if (!state.__N) {
        return;
      }
      const {
        url,
        as,
        options
      } = state;
      const {
        pathname
      } = (0, _parseRelativeUrl.parseRelativeUrl)(url); // Make sure we don't re-render on initial load,
      // can be caused by navigating back from an external site
      if (this.isSsr && as === this.asPath && pathname === this.pathname) {
        return;
      } // If the downstream application returns falsy, return.
      // They will then be responsible for handling the event.
      if (this._bps && !this._bps(state)) {
        return;
      }
      this.change('replaceState', url, as, Object.assign({}, options, {
        shallow: options.shallow && this._shallow
      }));
    }; // represents the current component key
    this.route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(_pathname); // set up the component cache (by route keys)
    this.components = {}; // We should not keep the cache, if there's an error
    // Otherwise, this cause issues when when going back and
    // come again to the errored page.
    if (_pathname !== '/_error') {
      this.components[this.route] = {
        Component,
        styleSheets: initialStyleSheets,
        props: initialProps,
        err,
        __N_SSG: initialProps && initialProps.__N_SSG,
        __N_SSP: initialProps && initialProps.__N_SSP
      };
    }
    this.components['/_app'] = {
      Component: App,
      styleSheets: [/* /_app does not need its stylesheets managed */]
    }; // Backwards compat for Router.router.events
    // TODO: Should be remove the following major version as it was never documented
    this.events = Router.events;
    this.pageLoader = pageLoader;
    this.pathname = _pathname;
    this.query = _query; // if auto prerendered and dynamic route wait to update asPath
    // until after mount to prevent hydration mismatch
    this.asPath =
    // @ts-ignore this is temporarily global (attached to window)
    (0, _isDynamic.isDynamicRoute)(_pathname) && __NEXT_DATA__.autoExport ? _pathname : _as;
    this.basePath = basePath;
    this.sub = subscription;
    this.clc = null;
    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating
    // back from external site
    this.isSsr = true;
    this.isFallback = isFallback;
    if (false) {}
    if (false) {}
  }
  reload() {
    window.location.reload();
  } /**
    * Go back in history
    */
  back() {
    window.history.back();
  } /**
    * Performs a `pushState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */
  push(url, as = url, options = {}) {
    ;
    ({
      url,
      as
    } = prepareUrlAs(this, url, as));
    return this.change('pushState', url, as, options);
  } /**
    * Performs a `replaceState` with arguments
    * @param url of the route
    * @param as masks `url` for the browser
    * @param options object you can define `shallow` and other options
    */
  replace(url, as = url, options = {}) {
    ;
    ({
      url,
      as
    } = prepareUrlAs(this, url, as));
    return this.change('replaceState', url, as, options);
  }
  async change(method, url, as, options) {
    if (!isLocalURL(url)) {
      window.location.href = url;
      return false;
    }
    if (!options._h) {
      this.isSsr = false;
    } // marking route changes as a navigation start entry
    if (_utils.ST) {
      performance.mark('routeChange');
    }
    if (this._inFlightRoute) {
      this.abortComponentLoad(this._inFlightRoute);
    }
    as = addLocale(as, this.locale, this.defaultLocale);
    const cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, this.locale);
    this._inFlightRoute = as; // If the url change is only related to a hash change
    // We should not proceed. We should only change the state.
    // WARNING: `_h` is an internal option for handing Next.js client-side
    // hydration. Your app should _never_ use this property. It may change at
    // any time without notice.
    if (!options._h && this.onlyAHashChange(cleanedAs)) {
      this.asPath = cleanedAs;
      Router.events.emit('hashChangeStart', as); // TODO: do we need the resolved href when only a hash change?
      this.changeState(method, url, as, options);
      this.scrollToHash(cleanedAs);
      this.notify(this.components[this.route]);
      Router.events.emit('hashChangeComplete', as);
      return true;
    } // The build manifest needs to be loaded before auto-static dynamic pages
    // get their query parameters to allow ensuring they can be parsed properly
    // when rewritten to
    const pages = await this.pageLoader.getPageList();
    const {
      __rewrites: rewrites
    } = await this.pageLoader.promisedBuildManifest;
    let parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
    let {
      pathname,
      query
    } = parsed;
    parsed = this._resolveHref(parsed, pages);
    if (parsed.pathname !== pathname) {
      pathname = parsed.pathname;
      url = (0, _utils.formatWithValidation)(parsed);
    } // url and as should always be prefixed with basePath by this
    // point by either next/link or router.push/replace so strip the
    // basePath from the pathname to match the pages dir 1-to-1
    pathname = pathname ? (0, _normalizeTrailingSlash.removePathTrailingSlash)(delBasePath(pathname)) : pathname; // If asked to change the current URL we should reload the current page
    // (not location.reload() but reload getInitialProps and other Next.js stuffs)
    // We also need to set the method = replaceState always
    // as this should not go into the history (That's how browsers work)
    // We should compare the new asPath to the current asPath, not the url
    if (!this.urlIsNew(cleanedAs)) {
      method = 'replaceState';
    }
    let route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
    const {
      shallow = false
    } = options; // we need to resolve the as value using rewrites for dynamic SSG
    // pages to allow building the data URL correctly
    let resolvedAs = as;
    if (true) {
      resolvedAs = (0, _resolveRewrites.default)((0, _parseRelativeUrl.parseRelativeUrl)(as).pathname, pages, basePath, rewrites, query, p => this._resolveHref({
        pathname: p
      }, pages).pathname);
      if (resolvedAs !== as) {
        const potentialHref = (0, _normalizeTrailingSlash.removePathTrailingSlash)(this._resolveHref(Object.assign({}, parsed, {
          pathname: resolvedAs
        }), pages, false).pathname); // if this directly matches a page we need to update the href to
        // allow the correct page chunk to be loaded
        if (pages.includes(potentialHref)) {
          route = potentialHref;
          pathname = potentialHref;
          parsed.pathname = pathname;
          url = (0, _utils.formatWithValidation)(parsed);
        }
      }
    }
    resolvedAs = delLocale(delBasePath(resolvedAs), this.locale);
    if ((0, _isDynamic.isDynamicRoute)(route)) {
      const parsedAs = (0, _parseRelativeUrl.parseRelativeUrl)(resolvedAs);
      const asPathname = parsedAs.pathname;
      const routeRegex = (0, _routeRegex.getRouteRegex)(route);
      const routeMatch = (0, _routeMatcher.getRouteMatcher)(routeRegex)(asPathname);
      const shouldInterpolate = route === asPathname;
      const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};
      if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {
        const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);
        if (missingParams.length > 0) {
          if (true) {
            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \`as\` and \`href\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \`href\`'s \`query\``);
          }
          throw new Error((shouldInterpolate ? `The provided \`href\` (${url}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \`as\` value (${asPathname}) is incompatible with the \`href\` value (${route}). `) + `Read more: https://err.sh/vercel/next.js/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);
        }
      } else if (shouldInterpolate) {
        as = (0, _utils.formatWithValidation)(Object.assign({}, parsedAs, {
          pathname: interpolatedAs.result,
          query: omitParmsFromQuery(query, interpolatedAs.params)
        }));
      } else {
        // Merge params into `query`, overwriting any specified in search
        Object.assign(query, routeMatch);
      }
    }
    Router.events.emit('routeChangeStart', as);
    try {
      const routeInfo = await this.getRouteInfo(route, pathname, query, as, shallow);
      let {
        error,
        props,
        __N_SSG,
        __N_SSP
      } = routeInfo; // handle redirect on client-transition
      if ((__N_SSG || __N_SSP) && props && props.pageProps && props.pageProps.__N_REDIRECT) {
        const destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt
        // client-navigation if it is falling back to hard navigation if
        // it's not
        if (destination.startsWith('/')) {
          const parsedHref = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
          this._resolveHref(parsedHref, pages);
          if (pages.includes(parsedHref.pathname)) {
            return this.change('replaceState', destination, destination, options);
          }
        }
        window.location.href = destination;
        return new Promise(() => {});
      }
      Router.events.emit('beforeHistoryChange', as);
      this.changeState(method, url, addLocale(as, this.locale, this.defaultLocale), options);
      if (true) {
        const appComp = this.components['/_app'].Component;
        window.next.isPrerendered = appComp.getInitialProps === appComp.origGetInitialProps && !routeInfo.Component.getInitialProps;
      }
      await this.set(route, pathname, query, cleanedAs, routeInfo).catch(e => {
        if (e.cancelled) error = error || e;else throw e;
      });
      if (error) {
        Router.events.emit('routeChangeError', error, cleanedAs);
        throw error;
      }
      if (false) {}
      Router.events.emit('routeChangeComplete', as);
      return true;
    } catch (err) {
      if (err.cancelled) {
        return false;
      }
      throw err;
    }
  }
  changeState(method, url, as, options = {}) {
    if (true) {
      if (typeof window.history === 'undefined') {
        console.error(`Warning: window.history is not available.`);
        return;
      }
      if (typeof window.history[method] === 'undefined') {
        console.error(`Warning: window.history.${method} is not available`);
        return;
      }
    }
    if (method !== 'pushState' || (0, _utils.getURL)() !== as) {
      this._shallow = options.shallow;
      window.history[method]({
        url,
        as,
        options,
        __N: true
      },
      // Most browsers currently ignores this parameter, although they may use it in the future.
      // Passing the empty string here should be safe against future changes to the method.
      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState
      '', as);
    }
  }
  async handleRouteInfoError(err, pathname, query, as, loadErrorFail) {
    if (err.cancelled) {
      // bubble up cancellation errors
      throw err;
    }
    if (PAGE_LOAD_ERROR in err || loadErrorFail) {
      Router.events.emit('routeChangeError', err, as); // If we can't load the page it could be one of following reasons
      //  1. Page doesn't exists
      //  2. Page does exist in a different zone
      //  3. Internal error while loading the page
      // So, doing a hard reload is the proper way to deal with this.
      window.location.href = as; // Changing the URL doesn't block executing the current code path.
      // So let's throw a cancellation error stop the routing logic.
      throw buildCancellationError();
    }
    try {
      const {
        page: Component,
        styleSheets
      } = await this.fetchComponent('/_error');
      const routeInfo = {
        Component,
        styleSheets,
        err,
        error: err
      };
      try {
        routeInfo.props = await this.getInitialProps(Component, {
          err,
          pathname,
          query
        });
      } catch (gipErr) {
        console.error('Error in error page `getInitialProps`: ', gipErr);
        routeInfo.props = {};
      }
      return routeInfo;
    } catch (routeInfoErr) {
      return this.handleRouteInfoError(routeInfoErr, pathname, query, as, true);
    }
  }
  async getRouteInfo(route, pathname, query, as, shallow = false) {
    try {
      const cachedRouteInfo = this.components[route];
      if (shallow && cachedRouteInfo && this.route === route) {
        return cachedRouteInfo;
      }
      const routeInfo = cachedRouteInfo ? cachedRouteInfo : await this.fetchComponent(route).then(res => ({
        Component: res.page,
        styleSheets: res.styleSheets,
        __N_SSG: res.mod.__N_SSG,
        __N_SSP: res.mod.__N_SSP
      }));
      const {
        Component,
        __N_SSG,
        __N_SSP
      } = routeInfo;
      if (true) {
        const {
          isValidElementType
        } = __webpack_require__(/*! react-is */ "react-is");
        if (!isValidElementType(Component)) {
          throw new Error(`The default export is not a React Component in page: "${pathname}"`);
        }
      }
      let dataHref;
      if (__N_SSG || __N_SSP) {
        dataHref = this.pageLoader.getDataHref((0, _utils.formatWithValidation)({
          pathname,
          query
        }), delBasePath(as), __N_SSG, this.locale, this.defaultLocale);
      }
      const props = await this._getData(() => __N_SSG ? this._getStaticData(dataHref) : __N_SSP ? this._getServerData(dataHref) : this.getInitialProps(Component,
      // we provide AppTree later so this needs to be `any`
      {
        pathname,
        query,
        asPath: as
      }));
      routeInfo.props = props;
      this.components[route] = routeInfo;
      return routeInfo;
    } catch (err) {
      return this.handleRouteInfoError(err, pathname, query, as);
    }
  }
  set(route, pathname, query, as, data) {
    this.isFallback = false;
    this.route = route;
    this.pathname = pathname;
    this.query = query;
    this.asPath = as;
    return this.notify(data);
  } /**
    * Callback to execute before replacing router state
    * @param cb callback to be executed
    */
  beforePopState(cb) {
    this._bps = cb;
  }
  onlyAHashChange(as) {
    if (!this.asPath) return false;
    const [oldUrlNoHash, oldHash] = this.asPath.split('#');
    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same
    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {
      return true;
    } // If the urls are change, there's more than a hash change
    if (oldUrlNoHash !== newUrlNoHash) {
      return false;
    } // If the hash has changed, then it's a hash only change.
    // This check is necessary to handle both the enter and
    // leave hash === '' cases. The identity case falls through
    // and is treated as a next reload.
    return oldHash !== newHash;
  }
  scrollToHash(as) {
    const [, hash] = as.split('#'); // Scroll to top if the hash is just `#` with no value
    if (hash === '') {
      window.scrollTo(0, 0);
      return;
    } // First we check if the element by id is found
    const idEl = document.getElementById(hash);
    if (idEl) {
      idEl.scrollIntoView();
      return;
    } // If there's no element with the id, we check the `name` property
    // To mirror browsers
    const nameEl = document.getElementsByName(hash)[0];
    if (nameEl) {
      nameEl.scrollIntoView();
    }
  }
  urlIsNew(asPath) {
    return this.asPath !== asPath;
  }
  _resolveHref(parsedHref, pages, applyBasePath = true) {
    const {
      pathname
    } = parsedHref;
    const cleanPathname = (0, _normalizeTrailingSlash.removePathTrailingSlash)((0, _denormalizePagePath.denormalizePagePath)(applyBasePath ? delBasePath(pathname) : pathname));
    if (cleanPathname === '/404' || cleanPathname === '/_error') {
      return parsedHref;
    } // handle resolving href for dynamic routes
    if (!pages.includes(cleanPathname)) {
      // eslint-disable-next-line array-callback-return
      pages.some(page => {
        if ((0, _isDynamic.isDynamicRoute)(page) && (0, _routeRegex.getRouteRegex)(page).re.test(cleanPathname)) {
          parsedHref.pathname = applyBasePath ? addBasePath(page) : page;
          return true;
        }
      });
    }
    return parsedHref;
  } /**
    * Prefetch page code, you may wait for the data during page rendering.
    * This feature only works in production!
    * @param url the href of prefetched page
    * @param asPath the as path of the prefetched page
    */
  async prefetch(url, asPath = url, options = {}) {
    let parsed = (0, _parseRelativeUrl.parseRelativeUrl)(url);
    let {
      pathname
    } = parsed;
    const pages = await this.pageLoader.getPageList();
    parsed = this._resolveHref(parsed, pages);
    if (parsed.pathname !== pathname) {
      pathname = parsed.pathname;
      url = (0, _utils.formatWithValidation)(parsed);
    } // Prefetch is not supported in development mode because it would trigger on-demand-entries
    if (true) {
      return;
    }
    const route = (0, _normalizeTrailingSlash.removePathTrailingSlash)(pathname);
    await Promise.all([this.pageLoader.prefetchData(url, asPath, this.locale, this.defaultLocale), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);
  }
  async fetchComponent(route) {
    let cancelled = false;
    const cancel = this.clc = () => {
      cancelled = true;
    };
    const componentResult = await this.pageLoader.loadPage(route);
    if (cancelled) {
      const error = new Error(`Abort fetching component for route: "${route}"`);
      error.cancelled = true;
      throw error;
    }
    if (cancel === this.clc) {
      this.clc = null;
    }
    return componentResult;
  }
  _getData(fn) {
    let cancelled = false;
    const cancel = () => {
      cancelled = true;
    };
    this.clc = cancel;
    return fn().then(data => {
      if (cancel === this.clc) {
        this.clc = null;
      }
      if (cancelled) {
        const err = new Error('Loading initial props cancelled');
        err.cancelled = true;
        throw err;
      }
      return data;
    });
  }
  _getStaticData(dataHref) {
    const {
      href: cacheKey
    } = new URL(dataHref, window.location.href);
    if (false) {}
    return fetchNextData(dataHref, this.isSsr).then(data => {
      this.sdc[cacheKey] = data;
      return data;
    });
  }
  _getServerData(dataHref) {
    return fetchNextData(dataHref, this.isSsr);
  }
  getInitialProps(Component, ctx) {
    const {
      Component: App
    } = this.components['/_app'];
    const AppTree = this._wrapApp(App);
    ctx.AppTree = AppTree;
    return (0, _utils.loadGetInitialProps)(App, {
      AppTree,
      Component,
      router: this,
      ctx
    });
  }
  abortComponentLoad(as) {
    if (this.clc) {
      Router.events.emit('routeChangeError', buildCancellationError(), as);
      this.clc();
      this.clc = null;
    }
  }
  notify(data) {
    return this.sub(data, this.components['/_app'].Component);
  }
}
exports.default = Router;
Router.events = (0, _mitt.default)();

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/escape-path-delimiters.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/escape-path-delimiters.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = escapePathDelimiters; // escape delimiters used by path-to-regexp
function escapePathDelimiters(segment) {
  return segment.replace(/[/#?]/g, char => encodeURIComponent(char));
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/format-url.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.formatUrl = formatUrl;
var querystring = _interopRequireWildcard(__webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js"));
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function () {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
} // Format function modified from nodejs
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
const slashedProtocols = /https?|ftp|gopher|file/;
function formatUrl(urlObj) {
  let {
    auth,
    hostname
  } = urlObj;
  let protocol = urlObj.protocol || '';
  let pathname = urlObj.pathname || '';
  let hash = urlObj.hash || '';
  let query = urlObj.query || '';
  let host = false;
  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : '';
  if (urlObj.host) {
    host = auth + urlObj.host;
  } else if (hostname) {
    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname);
    if (urlObj.port) {
      host += ':' + urlObj.port;
    }
  }
  if (query && typeof query === 'object') {
    query = String(querystring.urlQueryToSearchParams(query));
  }
  let search = urlObj.search || query && `?${query}` || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':';
  if (urlObj.slashes || (!protocol || slashedProtocols.test(protocol)) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname[0] !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }
  if (hash && hash[0] !== '#') hash = '#' + hash;
  if (search && search[0] !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, encodeURIComponent);
  search = search.replace('#', '%23');
  return `${protocol}${host}${pathname}${search}${hash}`;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.isDynamicRoute = isDynamicRoute; // Identify /[param]/ in route string
const TEST_ROUTE = /\/\[[^/]+?\](?=\/|$)/;
function isDynamicRoute(route) {
  return TEST_ROUTE.test(route);
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.parseRelativeUrl = parseRelativeUrl;
var _utils = __webpack_require__(/*! ../../utils */ "./node_modules/next/dist/next-server/lib/utils.js");
var _querystring = __webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
const DUMMY_BASE = new URL(true ? 'http://n' : undefined); /**
                                                                                 * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative
                                                                                 * (e.g. `./hello`) then at least base must be.
                                                                                 * Absolute urls are rejected with one exception, in the browser, absolute urls that are on
                                                                                 * the current origin will be parsed as relative
                                                                                 */
function parseRelativeUrl(url, base) {
  const resolvedBase = base ? new URL(base, DUMMY_BASE) : DUMMY_BASE;
  const {
    pathname,
    searchParams,
    search,
    hash,
    href,
    origin,
    protocol
  } = new URL(url, resolvedBase);
  if (origin !== DUMMY_BASE.origin || protocol !== 'http:' && protocol !== 'https:') {
    throw new Error('invariant: invalid relative URL');
  }
  return {
    pathname,
    query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
    search,
    hash,
    href: href.slice(DUMMY_BASE.origin.length)
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/path-match.js":
/*!***************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/path-match.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
exports.__esModule = true;
exports.pathToRegexp = exports.default = exports.customRouteMatcherOptions = exports.matcherOptions = void 0;
var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "./node_modules/next/dist/compiled/path-to-regexp/index.js"));
exports.pathToRegexp = pathToRegexp;
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function () {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
const matcherOptions = {
  sensitive: false,
  delimiter: '/'
};
exports.matcherOptions = matcherOptions;
const customRouteMatcherOptions = _objectSpread(_objectSpread({}, matcherOptions), {}, {
  strict: true
});
exports.customRouteMatcherOptions = customRouteMatcherOptions;
var _default = (customRoute = false) => {
  return path => {
    const keys = [];
    const matcherRegex = pathToRegexp.pathToRegexp(path, keys, customRoute ? customRouteMatcherOptions : matcherOptions);
    const matcher = pathToRegexp.regexpToFunction(matcherRegex, keys);
    return (pathname, params) => {
      const res = pathname == null ? false : matcher(pathname);
      if (!res) {
        return false;
      }
      if (customRoute) {
        for (const key of keys) {
          // unnamed params should be removed as they
          // are not allowed to be used in the destination
          if (typeof key.name === 'number') {
            delete res.params[key.name];
          }
        }
      }
      return _objectSpread(_objectSpread({}, params), res.params);
    };
  };
};
exports.default = _default;

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
exports.__esModule = true;
exports.default = prepareDestination;
var _querystring = __webpack_require__(/*! ./querystring */ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js");
var _parseRelativeUrl = __webpack_require__(/*! ./parse-relative-url */ "./node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js");
var pathToRegexp = _interopRequireWildcard(__webpack_require__(/*! next/dist/compiled/path-to-regexp */ "./node_modules/next/dist/compiled/path-to-regexp/index.js"));
function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();
  _getRequireWildcardCache = function () {
    return cache;
  };
  return cache;
}
function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache();
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function prepareDestination(destination, params, query, appendParamsToQuery, basePath) {
  let parsedDestination = {};
  if (destination.startsWith('/')) {
    parsedDestination = (0, _parseRelativeUrl.parseRelativeUrl)(destination);
  } else {
    const {
      pathname,
      searchParams,
      hash,
      hostname,
      port,
      protocol,
      search,
      href
    } = new URL(destination);
    parsedDestination = {
      pathname,
      query: (0, _querystring.searchParamsToUrlQuery)(searchParams),
      hash,
      protocol,
      hostname,
      port,
      search,
      href
    };
  }
  const destQuery = parsedDestination.query;
  const destPath = `${parsedDestination.pathname}${parsedDestination.hash || ''}`;
  const destPathParamKeys = [];
  pathToRegexp.pathToRegexp(destPath, destPathParamKeys);
  const destPathParams = destPathParamKeys.map(key => key.name);
  let destinationCompiler = pathToRegexp.compile(destPath,
  // we don't validate while compiling the destination since we should
  // have already validated before we got to this point and validating
  // breaks compiling destinations with named pattern params from the source
  // e.g. /something:hello(.*) -> /another/:hello is broken with validation
  // since compile validation is meant for reversing and not for inserting
  // params from a separate path-regex into another
  {
    validate: false
  });
  let newUrl; // update any params in query values
  for (const [key, strOrArray] of Object.entries(destQuery)) {
    let value = Array.isArray(strOrArray) ? strOrArray[0] : strOrArray;
    if (value) {
      // the value needs to start with a forward-slash to be compiled
      // correctly
      value = `/${value}`;
      const queryCompiler = pathToRegexp.compile(value, {
        validate: false
      });
      value = queryCompiler(params).substr(1);
    }
    destQuery[key] = value;
  } // add path params to query if it's not a redirect and not
  // already defined in destination query or path
  const paramKeys = Object.keys(params);
  if (appendParamsToQuery && !paramKeys.some(key => destPathParams.includes(key))) {
    for (const key of paramKeys) {
      if (!(key in destQuery)) {
        destQuery[key] = params[key];
      }
    }
  }
  const shouldAddBasePath = destination.startsWith('/') && basePath;
  try {
    newUrl = `${shouldAddBasePath ? basePath : ''}${destinationCompiler(params)}`;
    const [pathname, hash] = newUrl.split('#');
    parsedDestination.pathname = pathname;
    parsedDestination.hash = `${hash ? '#' : ''}${hash || ''}`;
    delete parsedDestination.search;
  } catch (err) {
    if (err.message.match(/Expected .*? to not repeat, but got an array/)) {
      throw new Error(`To use a multi-match in the destination you must add \`*\` at the end of the param name to signify it should repeat. https://err.sh/vercel/next.js/invalid-multi-match`);
    }
    throw err;
  } // Query merge order lowest priority to highest
  // 1. initial URL query values
  // 2. path segment values
  // 3. destination specified query values
  parsedDestination.query = _objectSpread(_objectSpread({}, query), parsedDestination.query);
  return {
    newUrl,
    parsedDestination
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/querystring.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/querystring.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.searchParamsToUrlQuery = searchParamsToUrlQuery;
exports.urlQueryToSearchParams = urlQueryToSearchParams;
exports.assign = assign;
function searchParamsToUrlQuery(searchParams) {
  const query = {};
  searchParams.forEach((value, key) => {
    if (typeof query[key] === 'undefined') {
      query[key] = value;
    } else if (Array.isArray(query[key])) {
      ;
      query[key].push(value);
    } else {
      query[key] = [query[key], value];
    }
  });
  return query;
}
function stringifyUrlQueryParam(param) {
  if (typeof param === 'string' || typeof param === 'number' && !isNaN(param) || typeof param === 'boolean') {
    return String(param);
  } else {
    return '';
  }
}
function urlQueryToSearchParams(urlQuery) {
  const result = new URLSearchParams();
  Object.entries(urlQuery).forEach(([key, value]) => {
    if (Array.isArray(value)) {
      value.forEach(item => result.append(key, stringifyUrlQueryParam(item)));
    } else {
      result.set(key, stringifyUrlQueryParam(value));
    }
  });
  return result;
}
function assign(target, ...searchParamsList) {
  searchParamsList.forEach(searchParams => {
    Array.from(searchParams.keys()).forEach(key => target.delete(key));
    searchParams.forEach((value, key) => target.append(key, value));
  });
  return target;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/resolve-rewrites.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.default = resolveRewrites;
var _pathMatch = _interopRequireDefault(__webpack_require__(/*! ./path-match */ "./node_modules/next/dist/next-server/lib/router/utils/path-match.js"));
var _prepareDestination = _interopRequireDefault(__webpack_require__(/*! ./prepare-destination */ "./node_modules/next/dist/next-server/lib/router/utils/prepare-destination.js"));
var _normalizeTrailingSlash = __webpack_require__(/*! ../../../../client/normalize-trailing-slash */ "./node_modules/next/dist/client/normalize-trailing-slash.js");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
const customRouteMatcher = (0, _pathMatch.default)(true);
function resolveRewrites(asPath, pages, basePath, rewrites, query, resolveHref) {
  if (!pages.includes(asPath)) {
    for (const rewrite of rewrites) {
      const matcher = customRouteMatcher(rewrite.source);
      const params = matcher(asPath);
      if (params) {
        if (!rewrite.destination) {
          // this is a proxied rewrite which isn't handled on the client
          break;
        }
        const destRes = (0, _prepareDestination.default)(rewrite.destination, params, query, true, rewrite.basePath === false ? '' : basePath);
        asPath = destRes.parsedDestination.pathname;
        Object.assign(query, destRes.parsedDestination.query);
        if (pages.includes((0, _normalizeTrailingSlash.removePathTrailingSlash)(asPath))) {
          // check if we now match a page as this means we are done
          // resolving the rewrites
          break;
        } // check if we match a dynamic-route, if so we break the rewrites chain
        const resolvedHref = resolveHref(asPath);
        if (resolvedHref !== asPath && pages.includes(resolvedHref)) {
          break;
        }
      }
    }
  }
  return asPath;
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteMatcher = getRouteMatcher;
function getRouteMatcher(routeRegex) {
  const {
    re,
    groups
  } = routeRegex;
  return pathname => {
    const routeMatch = re.exec(pathname);
    if (!routeMatch) {
      return false;
    }
    const decode = param => {
      try {
        return decodeURIComponent(param);
      } catch (_) {
        const err = new Error('failed to decode param');
        err.code = 'DECODE_FAILED';
        throw err;
      }
    };
    const params = {};
    Object.keys(groups).forEach(slugName => {
      const g = groups[slugName];
      const m = routeMatch[g.pos];
      if (m !== undefined) {
        params[slugName] = ~m.indexOf('/') ? m.split('/').map(entry => decode(entry)) : g.repeat ? [decode(m)] : decode(m);
      }
    });
    return params;
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/router/utils/route-regex.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/router/utils/route-regex.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.getRouteRegex = getRouteRegex; // this isn't importing the escape-string-regex module
// to reduce bytes
function escapeRegex(str) {
  return str.replace(/[|\\{}()[\]^$+*?.-]/g, '\\$&');
}
function parseParameter(param) {
  const optional = param.startsWith('[') && param.endsWith(']');
  if (optional) {
    param = param.slice(1, -1);
  }
  const repeat = param.startsWith('...');
  if (repeat) {
    param = param.slice(3);
  }
  return {
    key: param,
    repeat,
    optional
  };
}
function getRouteRegex(normalizedRoute) {
  const segments = (normalizedRoute.replace(/\/$/, '') || '/').slice(1).split('/');
  const groups = {};
  let groupIndex = 1;
  const parameterizedRoute = segments.map(segment => {
    if (segment.startsWith('[') && segment.endsWith(']')) {
      const {
        key,
        optional,
        repeat
      } = parseParameter(segment.slice(1, -1));
      groups[key] = {
        pos: groupIndex++,
        repeat,
        optional
      };
      return repeat ? optional ? '(?:/(.+?))?' : '/(.+?)' : '/([^/]+?)';
    } else {
      return `/${escapeRegex(segment)}`;
    }
  }).join(''); // dead code eliminate for browser since it's only needed
  // while generating routes-manifest
  if (true) {
    let routeKeyCharCode = 97;
    let routeKeyCharLength = 1; // builds a minimal routeKey using only a-z and minimal number of characters
    const getSafeRouteKey = () => {
      let routeKey = '';
      for (let i = 0; i < routeKeyCharLength; i++) {
        routeKey += String.fromCharCode(routeKeyCharCode);
        routeKeyCharCode++;
        if (routeKeyCharCode > 122) {
          routeKeyCharLength++;
          routeKeyCharCode = 97;
        }
      }
      return routeKey;
    };
    const routeKeys = {};
    let namedParameterizedRoute = segments.map(segment => {
      if (segment.startsWith('[') && segment.endsWith(']')) {
        const {
          key,
          optional,
          repeat
        } = parseParameter(segment.slice(1, -1)); // replace any non-word characters since they can break
        // the named regex
        let cleanedKey = key.replace(/\W/g, '');
        let invalidKey = false; // check if the key is still invalid and fallback to using a known
        // safe key
        if (cleanedKey.length === 0 || cleanedKey.length > 30) {
          invalidKey = true;
        }
        if (!isNaN(parseInt(cleanedKey.substr(0, 1)))) {
          invalidKey = true;
        }
        if (invalidKey) {
          cleanedKey = getSafeRouteKey();
        }
        routeKeys[cleanedKey] = key;
        return repeat ? optional ? `(?:/(?<${cleanedKey}>.+?))?` : `/(?<${cleanedKey}>.+?)` : `/(?<${cleanedKey}>[^/]+?)`;
      } else {
        return `/${escapeRegex(segment)}`;
      }
    }).join('');
    return {
      re: new RegExp(`^${parameterizedRoute}(?:/)?$`),
      groups,
      routeKeys,
      namedRegex: `^${namedParameterizedRoute}(?:/)?$`
    };
  }
  return {
    re: new RegExp(`^${parameterizedRoute}(?:/)?$`),
    groups
  };
}

/***/ }),

/***/ "./node_modules/next/dist/next-server/lib/utils.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/next-server/lib/utils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;
exports.execOnce = execOnce;
exports.getLocationOrigin = getLocationOrigin;
exports.getURL = getURL;
exports.getDisplayName = getDisplayName;
exports.isResSent = isResSent;
exports.loadGetInitialProps = loadGetInitialProps;
exports.formatWithValidation = formatWithValidation;
exports.ST = exports.SP = exports.urlObjectKeys = void 0;
var _formatUrl = __webpack_require__(/*! ./router/utils/format-url */ "./node_modules/next/dist/next-server/lib/router/utils/format-url.js"); /**
                                                       * Utils
                                                       */
function execOnce(fn) {
  let used = false;
  let result;
  return (...args) => {
    if (!used) {
      used = true;
      result = fn(...args);
    }
    return result;
  };
}
function getLocationOrigin() {
  const {
    protocol,
    hostname,
    port
  } = window.location;
  return `${protocol}//${hostname}${port ? ':' + port : ''}`;
}
function getURL() {
  const {
    href
  } = window.location;
  const origin = getLocationOrigin();
  return href.substring(origin.length);
}
function getDisplayName(Component) {
  return typeof Component === 'string' ? Component : Component.displayName || Component.name || 'Unknown';
}
function isResSent(res) {
  return res.finished || res.headersSent;
}
async function loadGetInitialProps(App, ctx) {
  if (true) {
    var _App$prototype;
    if ((_App$prototype = App.prototype) == null ? void 0 : _App$prototype.getInitialProps) {
      const message = `"${getDisplayName(App)}.getInitialProps()" is defined as an instance method - visit https://err.sh/vercel/next.js/get-initial-props-as-an-instance-method for more information.`;
      throw new Error(message);
    }
  } // when called from _app `ctx` is nested in `ctx`
  const res = ctx.res || ctx.ctx && ctx.ctx.res;
  if (!App.getInitialProps) {
    if (ctx.ctx && ctx.Component) {
      // @ts-ignore pageProps default
      return {
        pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx)
      };
    }
    return {};
  }
  const props = await App.getInitialProps(ctx);
  if (res && isResSent(res)) {
    return props;
  }
  if (!props) {
    const message = `"${getDisplayName(App)}.getInitialProps()" should resolve to an object. But found "${props}" instead.`;
    throw new Error(message);
  }
  if (true) {
    if (Object.keys(props).length === 0 && !ctx.ctx) {
      console.warn(`${getDisplayName(App)} returned an empty object from \`getInitialProps\`. This de-optimizes and prevents automatic static optimization. https://err.sh/vercel/next.js/empty-object-getInitialProps`);
    }
  }
  return props;
}
const urlObjectKeys = ['auth', 'hash', 'host', 'hostname', 'href', 'path', 'pathname', 'port', 'protocol', 'query', 'search', 'slashes'];
exports.urlObjectKeys = urlObjectKeys;
function formatWithValidation(url) {
  if (true) {
    if (url !== null && typeof url === 'object') {
      Object.keys(url).forEach(key => {
        if (urlObjectKeys.indexOf(key) === -1) {
          console.warn(`Unknown key passed via urlObject into url.format: ${key}`);
        }
      });
    }
  }
  return (0, _formatUrl.formatUrl)(url);
}
const SP = typeof performance !== 'undefined';
exports.SP = SP;
const ST = SP && typeof performance.mark === 'function' && typeof performance.measure === 'function';
exports.ST = ST;

/***/ }),

/***/ "./node_modules/next/dist/next-server/server/denormalize-page-path.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/next-server/server/denormalize-page-path.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
exports.__esModule=true;exports.normalizePathSep=normalizePathSep;exports.denormalizePagePath=denormalizePagePath;function normalizePathSep(path){return path.replace(/\\/g,'/');}function denormalizePagePath(page){page=normalizePathSep(page);if(page.startsWith('/index/')){page=page.slice(6);}else if(page==='/index'){page='/';}return page;}
//# sourceMappingURL=denormalize-page-path.js.map

/***/ }),

/***/ "./node_modules/next/dist/pages/_app.js":
/*!**********************************************!*\
  !*** ./node_modules/next/dist/pages/_app.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js");
exports.__esModule = true;
exports.Container = Container;
exports.createUrl = createUrl;
exports.default = void 0;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "react"));
var _utils = __webpack_require__(/*! ../next-server/lib/utils */ "../next-server/lib/utils");
exports.AppInitialProps = _utils.AppInitialProps;
exports.NextWebVitalsMetric = _utils.NextWebVitalsMetric; /**
                                                          * `App` component is used for initialize of pages. It allows for overwriting and full control of the `page` initialization.
                                                          * This allows for keeping state between navigation, custom error handling, injecting additional data.
                                                          */
async function appGetInitialProps({
  Component,
  ctx
}) {
  const pageProps = await (0, _utils.loadGetInitialProps)(Component, ctx);
  return {
    pageProps
  };
}
class App extends _react.default.Component {
  // Kept here for backwards compatibility.
  // When someone ended App they could call `super.componentDidCatch`.
  // @deprecated This method is no longer needed. Errors are caught at the top level
  componentDidCatch(error, _errorInfo) {
    throw error;
  }
  render() {
    const {
      router,
      Component,
      pageProps,
      __N_SSG,
      __N_SSP
    } = this.props;
    return /*#__PURE__*/_react.default.createElement(Component, Object.assign({}, pageProps,
    // we don't add the legacy URL prop if it's using non-legacy
    // methods like getStaticProps and getServerSideProps
    !(__N_SSG || __N_SSP) ? {
      url: createUrl(router)
    } : {}));
  }
}
exports.default = App;
App.origGetInitialProps = appGetInitialProps;
App.getInitialProps = appGetInitialProps;
let warnContainer;
let warnUrl;
if (true) {
  warnContainer = (0, _utils.execOnce)(() => {
    console.warn(`Warning: the \`Container\` in \`_app\` has been deprecated and should be removed. https://err.sh/vercel/next.js/app-container-deprecated`);
  });
  warnUrl = (0, _utils.execOnce)(() => {
    console.error(`Warning: the 'url' property is deprecated. https://err.sh/vercel/next.js/url-deprecated`);
  });
} // @deprecated noop for now until removal
function Container(p) {
  if (true) warnContainer();
  return p.children;
}
function createUrl(router) {
  // This is to make sure we don't references the router object at call time
  const {
    pathname,
    asPath,
    query
  } = router;
  return {
    get query() {
      if (true) warnUrl();
      return query;
    },
    get pathname() {
      if (true) warnUrl();
      return pathname;
    },
    get asPath() {
      if (true) warnUrl();
      return asPath;
    },
    back: () => {
      if (true) warnUrl();
      router.back();
    },
    push: (url, as) => {
      if (true) warnUrl();
      return router.push(url, as);
    },
    pushTo: (href, as) => {
      if (true) warnUrl();
      const pushRoute = as ? href : '';
      const pushUrl = as || href;
      return router.push(pushRoute, pushUrl);
    },
    replace: (url, as) => {
      if (true) warnUrl();
      return router.replace(url, as);
    },
    replaceTo: (href, as) => {
      if (true) warnUrl();
      const replaceRoute = as ? href : '';
      const replaceUrl = as || href;
      return router.replace(replaceRoute, replaceUrl);
    }
  };
}

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./dist/client/link */ "./node_modules/next/dist/client/link.js")


/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

module.exports = _interopRequireDefault;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/interopRequireWildcard.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ../helpers/typeof */ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js");

function _getRequireWildcardCache() {
  if (typeof WeakMap !== "function") return null;
  var cache = new WeakMap();

  _getRequireWildcardCache = function _getRequireWildcardCache() {
    return cache;
  };

  return cache;
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  }

  if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
    return {
      "default": obj
    };
  }

  var cache = _getRequireWildcardCache();

  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }

  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;

      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }

  newObj["default"] = obj;

  if (cache) {
    cache.set(obj, newObj);
  }

  return newObj;
}

module.exports = _interopRequireWildcard;

/***/ }),

/***/ "./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/node_modules/@babel/runtime/helpers/typeof.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;

/***/ }),

/***/ "./node_modules/tailwindcss/tailwind.css":
/*!***********************************************!*\
  !*** ./node_modules/tailwindcss/tailwind.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./node_modules/video.js/dist/video-js.css":
/*!*************************************************!*\
  !*** ./node_modules/video.js/dist/video-js.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./pages/_app.tsx":
/*!************************!*\
  !*** ./pages/_app.tsx ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/app */ "./node_modules/next/app.js");
/* harmony import */ var next_app__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_app__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next-cookies */ "next-cookies");
/* harmony import */ var next_cookies__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_cookies__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_withReduxSaga__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @redux/withReduxSaga */ "./src/redux/withReduxSaga.ts");
/* harmony import */ var _layouts_base_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @layouts/base-layout */ "./src/layouts/base-layout.tsx");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_auth_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/auth/actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var _redux_user_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @redux/user/actions */ "./src/redux/user/actions.ts");
/* harmony import */ var _redux_ui_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @redux/ui/actions */ "./src/redux/ui/actions.ts");
/* harmony import */ var src_socket__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/socket */ "./src/socket/index.ts");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/head */ "next/head");
/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var src_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/constants */ "./src/constants.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var _redux_streaming_actions__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @redux/streaming/actions */ "./src/redux/streaming/actions.ts");
/* harmony import */ var _redux_settings_actions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @redux/settings/actions */ "./src/redux/settings/actions.ts");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../style/index.less */ "./style/index.less");
/* harmony import */ var _style_index_less__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_style_index_less__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _services_config__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @services/config */ "./src/services/config.ts");
/* harmony import */ var _services_notification_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @services/notification.service */ "./src/services/notification.service.ts");
/* harmony import */ var tailwindcss_tailwind_css__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! tailwindcss/tailwind.css */ "./node_modules/tailwindcss/tailwind.css");
/* harmony import */ var tailwindcss_tailwind_css__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(tailwindcss_tailwind_css__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _style_global_css__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../style/global.css */ "./style/global.css");
/* harmony import */ var _style_global_css__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_style_global_css__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _redux_notification_actions__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @redux/notification/actions */ "./src/redux/notification/actions.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\pages\\_app.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }























function redirectLogin(ctx) {
  if (false) {}

  // fix for production build
  ctx.res.clearCookie && ctx.res.clearCookie('token');
  ctx.res.clearCookie && ctx.res.clearCookie('role');
  ctx.res.writeHead && ctx.res.writeHead(302, {
    Location: '/'
  });
  ctx.res.end && ctx.res.end();
}
async function auth(ctx, noredirect, onlyPerformer) {
  try {
    const {
      store
    } = ctx;
    const state = store.getState();
    const {
      token
    } = next_cookies__WEBPACK_IMPORTED_MODULE_3___default()(ctx);
    if (state.auth && state.auth.loggedIn) {
      return;
    }
    if (token) {
      _services_index__WEBPACK_IMPORTED_MODULE_6__["authService"].setToken(token);
      const user = await _services_index__WEBPACK_IMPORTED_MODULE_6__["userService"].me({
        Authorization: token
      });
      if (!user.data || !user.data._id) {
        redirectLogin(ctx);
        return;
      }
      if (!user.data.isPerformer && onlyPerformer && !noredirect) {
        redirectLogin(ctx);
        return;
      }
      store.dispatch(Object(_redux_auth_actions__WEBPACK_IMPORTED_MODULE_8__["loginSuccess"])());
      store.dispatch(Object(_redux_user_actions__WEBPACK_IMPORTED_MODULE_9__["updateCurrentUser"])(user.data));
      return;
    }
    !noredirect && redirectLogin(ctx);
  } catch (e) {
    redirectLogin(ctx);
  }
}
async function updateSettingsStore(ctx, settings) {
  const {
    store
  } = ctx;
  store.dispatch(Object(_redux_ui_actions__WEBPACK_IMPORTED_MODULE_10__["updateUIValue"])({
    logo: settings.logoUrl || '',
    siteName: settings.siteName || '',
    favicon: settings.favicon || '',
    loginPlaceholderImage: settings.loginPlaceholderImage || '',
    menus: settings.menus || [],
    footerContent: settings.footerContent || '',
    countries: settings.countries || [],
    userBenefit: settings.userBenefit || '',
    modelBenefit: settings.modelBenefit || ''
  }));
  store.dispatch(Object(_redux_streaming_actions__WEBPACK_IMPORTED_MODULE_15__["updateLiveStreamSettings"])(Object(lodash__WEBPACK_IMPORTED_MODULE_14__["pick"])(settings, [src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].VIEWER_URL, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].PUBLISHER_URL, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].SUBSCRIBER_URL, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].OPTION_FOR_BROADCAST, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].OPTION_FOR_PRIVATE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].SECURE_OPTION, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].ANT_MEDIA_APPNAME, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].AGORA_APPID, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].AGORA_ENABLE])));
  store.dispatch(Object(_redux_settings_actions__WEBPACK_IMPORTED_MODULE_16__["updateSettings"])(Object(lodash__WEBPACK_IMPORTED_MODULE_14__["pick"])(settings, [src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].REQUIRE_EMAIL_VERIFICATION, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].TOKEN_CONVERSION_RATE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].STRIPE_PUBLISHABLE_KEY, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].STRIPE_ENABLE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].PAYPAL_ENABLE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].GOOGLE_RECAPTCHA_SITE_KEY, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].ENABLE_GOOGLE_RECAPTCHA, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].GOOGLE_CLIENT_ID, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].TWITTER_CLIENT_ID, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].CCBILL_ENABLE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].META_KEYWORDS, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].META_DESCRIPTION, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].TOTAL_FOLLOWER_FOR_LIVE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].TOTAL_FOLLOWER_FOR_PRIVATE_CHAT, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].CROSS_PROMOTION_DESCRIPTIONS, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].EXCHANGE_RATE_WEB_VALUE, src_constants__WEBPACK_IMPORTED_MODULE_13__["SETTING_KEYS"].SALES_RUBY_HEADER_PAGE])));
}
const publicConfig = {};
class Application extends next_app__WEBPACK_IMPORTED_MODULE_0___default.a {
  // TODO - consider if we need to use get static props in children component instead?
  // or check in render?
  static async getInitialProps({
    Component,
    ctx
  }) {
    // load configuration from ENV and put to config
    if (true) {
      // eslint-disable-next-line global-require
      const dotenv = __webpack_require__(/*! dotenv */ "dotenv");
      const myEnv = dotenv.config().parsed;

      // publish to server config with app
      Object(_services_config__WEBPACK_IMPORTED_MODULE_18__["setGlobalConfig"])(myEnv);

      // load public config and api-endpoint?
      Object.keys(myEnv).forEach(key => {
        if (key.indexOf('NEXT_PUBLIC_') === 0) {
          publicConfig[key] = myEnv[key];
        }
      });
    }

    // won't check auth for un-authenticated page such as login, register
    // use static field in the component
    const {
      noredirect,
      onlyPerformer,
      authenticate
    } = Component;
    if (authenticate !== false) {
      await auth(ctx, noredirect, onlyPerformer);
    }
    const {
      token
    } = next_cookies__WEBPACK_IMPORTED_MODULE_3___default()(ctx);
    ctx.token = token || '';
    // server side to load settings, once time only
    let settings = {};
    if (true) {
      const [setting] = await Promise.all([_services_index__WEBPACK_IMPORTED_MODULE_6__["settingService"].all('all', true)]);
      settings = _objectSpread({}, setting.data);
      await updateSettingsStore(ctx, settings);
    }
    let pageProps = {};
    if (Component.getInitialProps) {
      pageProps = await Component.getInitialProps({
        ctx
      });
    }
    return {
      settings,
      pageProps,
      layout: Component.layout,
      config: publicConfig
    };
  }
  constructor(props) {
    super(props);
    _defineProperty(this, "handleRouteChange", () => {
      this.checkNotifications();
    });
    _defineProperty(this, "checkNotifications", async () => {
      var _this$props$store$get, _this$props$store$get2, _this$props$store$get3;
      const user = (_this$props$store$get = this.props.store.getState()) === null || _this$props$store$get === void 0 ? void 0 : (_this$props$store$get2 = _this$props$store$get.user) === null || _this$props$store$get2 === void 0 ? void 0 : (_this$props$store$get3 = _this$props$store$get2.current) === null || _this$props$store$get3 === void 0 ? void 0 : _this$props$store$get3._id;
      if (user) {
        const {
          data
        } = await _services_notification_service__WEBPACK_IMPORTED_MODULE_19__["notificationService"].countUnread();
        this.props.store.dispatch(Object(_redux_notification_actions__WEBPACK_IMPORTED_MODULE_22__["setUnreadsNotification"])(data > 0 ? true : false));
      }
    });
    Object(_services_config__WEBPACK_IMPORTED_MODULE_18__["setGlobalConfig"])(this.props.config);
  }
  componentDidMount() {
    this.checkNotifications();
    next_router__WEBPACK_IMPORTED_MODULE_7___default.a.events.on("routeChangeComplete", this.handleRouteChange);
  }
  componentWillUnmount() {
    next_router__WEBPACK_IMPORTED_MODULE_7___default.a.events.off("routeChangeComplete", this.handleRouteChange);
  }
  render() {
    const {
      Component,
      pageProps,
      store,
      settings
    } = this.props;
    const {
      layout
    } = Component;
    return __jsx(react_redux__WEBPACK_IMPORTED_MODULE_2__["Provider"], {
      store: store,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 247,
        columnNumber: 7
      }
    }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_12___default.a, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 248,
        columnNumber: 9
      }
    }, __jsx("title", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 249,
        columnNumber: 11
      }
    }, settings === null || settings === void 0 ? void 0 : settings.siteName), __jsx("meta", {
      name: "viewport",
      content: "width=device-width, initial-scale=1, maximum-scale=1",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 250,
        columnNumber: 11
      }
    }), settings && settings.gaCode && [__jsx("script", {
      async: true,
      src: `https://www.googletagmanager.com/gtag/js?id=${settings.gaCode}`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 253,
        columnNumber: 13
      }
    }), __jsx("script", {
      // eslint-disable-next-line react/no-danger
      dangerouslySetInnerHTML: {
        __html: `
                 window.dataLayer = window.dataLayer || [];
                 function gtag(){dataLayer.push(arguments);}
                 gtag('js', new Date());
                 gtag('config', '${settings.gaCode}');
             `
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 254,
        columnNumber: 13
      }
    })], settings && settings.headerScript &&
    // eslint-disable-next-line react/no-danger
    __jsx("div", {
      dangerouslySetInnerHTML: {
        __html: settings.headerScript
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 269,
        columnNumber: 13
      }
    })), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_11__["Socket"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 272,
        columnNumber: 9
      }
    }, __jsx(_layouts_base_layout__WEBPACK_IMPORTED_MODULE_5__["default"], {
      layout: layout,
      maintenance: settings.maintenanceMode,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 273,
        columnNumber: 11
      }
    }, __jsx(Component, _extends({}, pageProps, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 274,
        columnNumber: 13
      }
    })))), settings && settings.afterBodyScript &&
    // eslint-disable-next-line react/no-danger
    __jsx("div", {
      dangerouslySetInnerHTML: {
        __html: settings.afterBodyScript
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 279,
        columnNumber: 11
      }
    }));
  }
}
/* harmony default export */ __webpack_exports__["default"] = (Object(_redux_withReduxSaga__WEBPACK_IMPORTED_MODULE_4__["default"])(Application));

/***/ }),

/***/ "./src/components/comment/comment-form.tsx":
/*!*************************************************!*\
  !*** ./src/components/comment/comment-form.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CommentForm; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _comment_less__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./comment.less */ "./src/components/comment/comment.less");
/* harmony import */ var _comment_less__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_comment_less__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\comment\\comment-form.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/require-default-props */





class CommentForm extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "formRef", void 0);
    _defineProperty(this, "state", {
      text: ''
    });
  }
  onFinish(values) {
    const {
      onSubmit: handleComment,
      objectId,
      objectType,
      creator
    } = this.props;
    const data = values;
    if (!creator || !creator._id) {
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Please login!');
      return next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push('/');
    }
    if (!data.content) {
      return antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Please add a comment!');
    }
    if (data.content.length > 150) {
      return antd__WEBPACK_IMPORTED_MODULE_1__["message"].error('Comment is over 150 characters');
    }
    data.objectId = objectId;
    data.objectType = objectType || 'video';
    this.formRef.resetFields(['content']);
    return handleComment(data);
  }
  async onEmojiClick(emoji) {
    const {
      creator
    } = this.props;
    if (!creator || !creator._id) return;
    const {
      text
    } = this.state;
    const instance = this.formRef;
    instance.setFieldsValue({
      content: `${instance.getFieldValue('content')} ${emoji} `
    });
    this.setState({
      text: `${text} ${emoji} `
    });
  }
  render() {
    const {
      creator,
      isReply,
      siteName,
      objectId
    } = this.props;
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Form"], {
      ref: ref => {
        this.formRef = ref;
      },
      name: "comment-form",
      onFinish: this.onFinish.bind(this),
      initialValues: {
        content: ''
      },
      style: {
        width: '100%',
        margin: 'auto'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72,
        columnNumber: 7
      }
    }, __jsx("div", {
      className: "flex flex-col items-stretch",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 83,
        columnNumber: 9
      }
    }, __jsx("div", {
      className: "relative pb-4",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 84,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Form"].Item, {
      className: "m-0",
      name: "content",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 85,
        columnNumber: 13
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Input"], {
      className: "rounded-full p-2",
      onPressEnter: e => {
        if (e.target.value.length < 2) return;
        this.formRef.submit();
      },
      disabled: !creator || !creator._id,
      maxLength: 150,
      minLength: 2,
      placeholder: !isReply ? 'Add a comment here' : 'Add a reply here',
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 86,
        columnNumber: 15
      }
    }))), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_4__["AppButton"], {
      style: {
        fontSize: '12px'
      },
      className: '',
      type: "submit",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 117,
        columnNumber: 11
      }
    }, !isReply ? 'Post' : 'Reply')));
  }
}

/***/ }),

/***/ "./src/components/comment/comment-item.tsx":
/*!*************************************************!*\
  !*** ./src/components/comment/comment-item.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_comment_comment_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/comment/comment-form */ "./src/components/comment/comment-form.tsx");
/* harmony import */ var _components_comment_list_comments__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/comment/list-comments */ "./src/components/comment/list-comments.tsx");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_comment_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/comment/actions */ "./src/redux/comment/actions.ts");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_10__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\comment\\comment-item.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/require-default-props */
/* eslint-disable no-prototype-builtins */











const VerifiedEmailForm = next_dynamic__WEBPACK_IMPORTED_MODULE_10___default()(() => __webpack_require__.e(/*! import() */ 3).then(__webpack_require__.bind(null, /*! @components/performer/verified-email-form */ "./src/components/performer/verified-email-form.tsx")), {
  ssr: false,
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/performer/verified-email-form */ "./src/components/performer/verified-email-form.tsx")],
    modules: ['@components/performer/verified-email-form']
  }
});
class CommentItem extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      isLiked: false,
      isOpenComment: false,
      isFirstLoadComment: true,
      openVerifiedEmailModal: false,
      itemPerPage: 12,
      commentPage: 0,
      isReply: false,
      totalReply: 0,
      totalLike: 0
    });
  }
  componentDidMount() {
    const {
      item
    } = this.props;
    if (item) {
      this.setState({
        isLiked: !!item.isLiked,
        totalLike: item.totalLike || 0,
        totalReply: item.totalReply ? item.totalReply : 0
      });
    }
  }
  async handleComment(values) {
    const {
      createComment: handleCreate,
      user
    } = this.props;
    if (!user.verifiedEmail) {
      return this.setState({
        openVerifiedEmailModal: true
      });
    }
    const {
      totalReply
    } = this.state;
    handleCreate(values);
    await this.setState({
      totalReply: totalReply + 1
    });
    this.onOpenComment();
    return true;
  }
  async onOpenComment() {
    const {
      item,
      getComments: handleGetComment
    } = this.props;
    const {
      isOpenComment,
      isFirstLoadComment,
      itemPerPage,
      commentPage
    } = this.state;
    this.setState({
      isOpenComment: !isOpenComment
    });
    if (isFirstLoadComment) {
      await this.setState({
        isFirstLoadComment: false
      });
      handleGetComment({
        objectId: item._id,
        objectType: 'comment',
        limit: itemPerPage,
        offset: commentPage
      });
    }
  }
  async likeComment(comment) {
    const {
      isLiked,
      totalLike
    } = this.state;
    try {
      if (!isLiked) {
        await _services_index__WEBPACK_IMPORTED_MODULE_3__["reactionService"].create({
          objectId: comment._id,
          action: 'like',
          objectType: 'comment'
        });
        this.setState({
          isLiked: true,
          totalLike: totalLike + 1
        });
      }
    } catch (e) {
      const error = await e;
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(error.message || 'Error occured, please try again later');
    }
  }
  async unLikeComment(comment) {
    const {
      isLiked,
      totalLike
    } = this.state;
    try {
      if (isLiked) {
        await _services_index__WEBPACK_IMPORTED_MODULE_3__["reactionService"].delete({
          objectId: comment._id,
          action: 'like',
          objectType: 'comment'
        });
        this.setState({
          isLiked: false,
          totalLike: totalLike - 1
        });
      }
    } catch (e) {
      const error = await e;
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(error.message || 'Error occured, please try again later');
    }
  }
  async moreComment() {
    const {
      item,
      moreComment: handleLoadMore
    } = this.props;
    const {
      commentPage,
      itemPerPage
    } = this.state;
    await this.setState({
      commentPage: commentPage + 1
    });
    handleLoadMore({
      limit: itemPerPage,
      objectType: 'comment',
      offset: (commentPage + 1) * itemPerPage,
      objectId: item._id
    });
  }
  async deleteComment(item) {
    const {
      deleteComment: handleDelete
    } = this.props;
    if (!window.confirm('Are you sure to remove this comment?')) return;
    handleDelete(item._id);
  }
  render() {
    var _item$creator, _item$creator2, _item$creator3, _item$creator4, _item$creator5, _item$creator6;
    const {
      item,
      user,
      canReply,
      onDelete,
      commentMapping,
      siteName,
      feedOwnerId
    } = this.props;
    const fetchingComment = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].requesting : false;
    const comments = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].items : [];
    const totalComments = commentMapping.hasOwnProperty(item._id) ? commentMapping[item._id].total : 0;
    const {
      isLiked,
      isOpenComment,
      isReply,
      totalReply,
      totalLike,
      openVerifiedEmailModal
    } = this.state;
    return __jsx("div", {
      className: "pb-4",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 157,
        columnNumber: 7
      }
    }, __jsx("div", {
      className: "cmt-item",
      key: item._id,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 158,
        columnNumber: 9
      }
    }, __jsx("div", {
      className: "flex flex-col items-center justify-center gap-2",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 159,
        columnNumber: 11
      }
    }, __jsx("button", {
      onClick: this.likeComment.bind(this, item),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 160,
        columnNumber: 13
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 161,
        columnNumber: 13
      }
    }, __jsx("mask", {
      id: "mask0_3047_82820",
      maskUnits: "userSpaceOnUse",
      x: "0",
      y: "0",
      width: "20",
      height: "20",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 162,
        columnNumber: 17
      }
    }, __jsx("rect", {
      width: "20",
      height: "20",
      fill: "#D9D9D9",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 163,
        columnNumber: 19
      }
    })), __jsx("g", {
      mask: "url(#mask0_3047_82820)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 165,
        columnNumber: 17
      }
    }, __jsx("path", {
      d: "M7 17V11.2083H3L10 2L17 11.2083H13V17H7ZM8.5 15.5H11.5V9.70833H13.9375L10 4.4375L6.0625 9.70833H8.5V15.5Z",
      fill: "#121212",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 166,
        columnNumber: 19
      }
    })))), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 170,
        columnNumber: 13
      }
    }, totalLike), __jsx("button", {
      onClick: this.unLikeComment.bind(this, item),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 173,
        columnNumber: 13
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "20",
      height: "20",
      viewBox: "0 0 20 20",
      fill: "none",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 174,
        columnNumber: 13
      }
    }, __jsx("g", {
      clipPath: "url(#clip0_3047_82822)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 175,
        columnNumber: 15
      }
    }, __jsx("mask", {
      id: "mask0_3047_82822",
      maskUnits: "userSpaceOnUse",
      x: "0",
      y: "0",
      width: "20",
      height: "20",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 176,
        columnNumber: 17
      }
    }, __jsx("rect", {
      width: "20",
      height: "20",
      fill: "#D9D9D9",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 177,
        columnNumber: 19
      }
    })), __jsx("g", {
      mask: "url(#mask0_3047_82822)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 179,
        columnNumber: 17
      }
    }, __jsx("path", {
      d: "M13 3.16211L13 8.95378L17 8.95378L10 18.1621L3 8.95377L7 8.95377L7 3.16211L13 3.16211ZM11.5 4.66211L8.5 4.66211L8.5 10.4538L6.0625 10.4538L10 15.7246L13.9375 10.4538L11.5 10.4538L11.5 4.66211Z",
      fill: "#121212",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 180,
        columnNumber: 19
      }
    }))), __jsx("defs", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 183,
        columnNumber: 15
      }
    }, __jsx("clipPath", {
      id: "clip0_3047_82822",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 184,
        columnNumber: 17
      }
    }, __jsx("rect", {
      width: "20",
      height: "20",
      fill: "white",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 185,
        columnNumber: 19
      }
    })))))), __jsx("img", {
      alt: "creator-avt",
      src: (item === null || item === void 0 ? void 0 : (_item$creator = item.creator) === null || _item$creator === void 0 ? void 0 : _item$creator.avatar) || '/static/no-avatar.png',
      className: "avatar",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 191,
        columnNumber: 11
      }
    }), __jsx("div", {
      className: "cmt-content",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 192,
        columnNumber: 11
      }
    }, __jsx("div", {
      className: "cmt-text",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 193,
        columnNumber: 13
      }
    }, item !== null && item !== void 0 && (_item$creator2 = item.creator) !== null && _item$creator2 !== void 0 && _item$creator2._id ? __jsx(next_link__WEBPACK_IMPORTED_MODULE_9___default.a, {
      href: {
        pathname: '/model/profile',
        query: {
          username: (item === null || item === void 0 ? void 0 : (_item$creator3 = item.creator) === null || _item$creator3 === void 0 ? void 0 : _item$creator3.username) || (item === null || item === void 0 ? void 0 : (_item$creator4 = item.creator) === null || _item$creator4 === void 0 ? void 0 : _item$creator4._id) || 'N/A'
        }
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 195,
        columnNumber: 17
      }
    }, __jsx("a", {
      "aria-hidden": true,
      href: "/model/profile",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 203,
        columnNumber: 19
      }
    }, (item === null || item === void 0 ? void 0 : (_item$creator5 = item.creator) === null || _item$creator5 === void 0 ? void 0 : _item$creator5.name) || (item === null || item === void 0 ? void 0 : (_item$creator6 = item.creator) === null || _item$creator6 === void 0 ? void 0 : _item$creator6.username) || 'N/A')) : __jsx("p", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 207,
        columnNumber: 19
      }
    }, "N/A"), __jsx("div", {
      className: "cmt-user",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 208,
        columnNumber: 15
      }
    }, __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 209,
        columnNumber: 17
      }
    }, __jsx("span", {
      className: "cmt-time",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 210,
        columnNumber: 19
      }
    }, moment__WEBPACK_IMPORTED_MODULE_7___default()(item.createdAt).fromNow())), (user._id === item.createdBy || user._id === feedOwnerId) && __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Dropdown"], {
      overlay: __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"], {
        key: `menu_cmt_${item._id}`,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 215,
          columnNumber: 23
        }
      }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
        key: `delete_cmt_${item._id}`,
        onClick: () => onDelete(item),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 216,
          columnNumber: 25
        }
      }, __jsx("a", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 217,
          columnNumber: 27
        }
      }, "Report")), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Menu"].Item, {
        key: `delete_cmt_${item._id}`,
        onClick: () => onDelete(item),
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 219,
          columnNumber: 25
        }
      }, __jsx("a", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 220,
          columnNumber: 27
        }
      }, "Delete"))),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 213,
        columnNumber: 19
      }
    }, __jsx("a", {
      "aria-hidden": true,
      className: "ant-dropdown-link",
      onClick: e => e.preventDefault(),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 225,
        columnNumber: 21
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__["MoreOutlined"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 226,
        columnNumber: 23
      }
    }))))), __jsx("div", {
      className: "cmt-text",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 232,
        columnNumber: 13
      }
    }, item.content), __jsx("div", {
      className: "cmt-action",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 235,
        columnNumber: 13
      }
    }, canReply && __jsx("a", {
      "aria-hidden": true,
      className: !isReply ? 'cmt-reply' : 'cmt-reply active',
      onClick: () => {
        this.setState({
          isReply: !isReply
        }, () => this.onOpenComment());
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 237,
        columnNumber: 17
      }
    }, `${totalReply || ''} Reply`)))), isOpenComment && __jsx("div", {
      className: "reply-bl-list",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 249,
        columnNumber: 11
      }
    }, __jsx("div", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 250,
        columnNumber: 13
      }
    }, __jsx(_components_comment_list_comments__WEBPACK_IMPORTED_MODULE_6__["default"], {
      key: `list_comments_${item._id}_${comments.length}`,
      requesting: fetchingComment,
      comments: comments,
      onDelete: this.deleteComment.bind(this),
      user: user,
      canReply: false,
      isReply: isReply,
      feedOwnerId: feedOwnerId,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 251,
        columnNumber: 15
      }
    }), comments.length < totalComments && __jsx("p", {
      className: "text-center",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 262,
        columnNumber: 17
      }
    }, __jsx("a", {
      "aria-hidden": true,
      onClick: this.moreComment.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 263,
        columnNumber: 19
      }
    }, "more...")))), isReply ? __jsx(_components_comment_comment_form__WEBPACK_IMPORTED_MODULE_5__["default"], {
      creator: user,
      onSubmit: this.handleComment.bind(this),
      objectId: item._id,
      objectType: "comment",
      isReply: true,
      siteName: siteName,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 272,
        columnNumber: 13
      }
    }) : null, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Modal"], {
      key: "verified_email",
      className: "subscription-modal",
      title: "Please verify your email address",
      visible: openVerifiedEmailModal,
      footer: null,
      destroyOnClose: true,
      onCancel: () => this.setState({
        openVerifiedEmailModal: false
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 281,
        columnNumber: 9
      }
    }, __jsx(VerifiedEmailForm, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 290,
        columnNumber: 11
      }
    })));
  }
}
const mapStates = state => {
  const {
    commentMapping,
    comment
  } = state.comment;
  return {
    commentMapping,
    comment,
    siteName: state.ui.siteName
  };
};
const mapDispatch = {
  getComments: _redux_comment_actions__WEBPACK_IMPORTED_MODULE_8__["getComments"],
  moreComment: _redux_comment_actions__WEBPACK_IMPORTED_MODULE_8__["moreComment"],
  createComment: _redux_comment_actions__WEBPACK_IMPORTED_MODULE_8__["createComment"],
  deleteComment: _redux_comment_actions__WEBPACK_IMPORTED_MODULE_8__["deleteComment"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapStates, mapDispatch)(CommentItem));

/***/ }),

/***/ "./src/components/comment/comment.less":
/*!*********************************************!*\
  !*** ./src/components/comment/comment.less ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/components/comment/list-comments.tsx":
/*!**************************************************!*\
  !*** ./src/components/comment/list-comments.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return ListComments; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_comment_comment_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @components/comment/comment-item */ "./src/components/comment/comment-item.tsx");
/* harmony import */ var react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-infinite-scroll-component */ "react-infinite-scroll-component");
/* harmony import */ var react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_3__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\comment\\list-comments.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
/* eslint-disable react/require-default-props */




class ListComments extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  render() {
    const {
      comments,
      requesting,
      user,
      onDelete,
      canReply,
      canLoadmore,
      loadMore,
      isReply,
      feedOwnerId
    } = this.props;
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, !requesting && !comments.length ? __jsx("div", {
      className: "text-center",
      style: {
        padding: '5px'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 28,
        columnNumber: 46
      }
    }) : __jsx("div", {
      id: "scrollableModal",
      className: isReply ? 'cmt-list' : 'cmt-list reply',
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 30,
        columnNumber: 13
      }
    }, __jsx(react_infinite_scroll_component__WEBPACK_IMPORTED_MODULE_3___default.a, {
      dataLength: comments.length,
      hasMore: canLoadmore,
      loader: null,
      next: loadMore,
      endMessage: null,
      scrollThreshold: 0.7,
      scrollableTarget: "scrollableModal",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 31,
        columnNumber: 15
      }
    }, comments.map(comment => __jsx(_components_comment_comment_item__WEBPACK_IMPORTED_MODULE_2__["default"], {
      feedOwnerId: feedOwnerId,
      canReply: canReply,
      key: comment._id,
      item: comment,
      user: user,
      onDelete: onDelete,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 40,
        columnNumber: 54
      }
    })), requesting && __jsx("div", {
      className: "text-center",
      style: {
        margin: 20
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 32
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Spin"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 84
      }
    })))));
  }
}

/***/ }),

/***/ "./src/components/common/breadcrumb.tsx":
/*!**********************************************!*\
  !*** ./src/components/common/breadcrumb.tsx ***!
  \**********************************************/
/*! exports provided: BreadcrumbComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreadcrumbComponent", function() { return BreadcrumbComponent; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\breadcrumb.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;




class BreadcrumbComponent extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  render() {
    const {
      breadcrumbs
    } = this.props;
    return __jsx("div", {
      style: {
        margin: '15px 0'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 19,
        columnNumber: 7
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Breadcrumb"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 20,
        columnNumber: 9
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Breadcrumb"].Item, {
      href: "/home",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 21,
        columnNumber: 11
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__["HomeOutlined"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 13
      }
    })), breadcrumbs && breadcrumbs.length > 0 && breadcrumbs.map(b => __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Breadcrumb"].Item, {
      key: b.title,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 27,
        columnNumber: 15
      }
    }, b.href ? __jsx(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
      href: b.href,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 29,
        columnNumber: 19
      }
    }, __jsx("a", {
      href: b.href,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 30,
        columnNumber: 21
      }
    }, b.title)) : b.title))));
  }
}

/***/ }),

/***/ "./src/components/common/collectData.tsx":
/*!***********************************************!*\
  !*** ./src/components/common/collectData.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_page_visibility__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-page-visibility */ "react-page-visibility");
/* harmony import */ var react_page_visibility__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_page_visibility__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _services_performer_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/performer.service */ "./src/services/performer.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\collectData.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;




// let interval: any;

const CollectData = ({
  children,
  loggedIn
}) => {
  const [rotate, setRotate] = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true);
  const timeout = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const sendRequest = async () => {
    if (timeout.current) clearTimeout(timeout.current);
    if (!loggedIn || !rotate) return;
    await _services_performer_service__WEBPACK_IMPORTED_MODULE_3__["performerService"].setInternalProfile();
    timeout.current = setTimeout(() => {
      sendRequest();
    }, 10 * 60 * 1000);
  };
  const cancelSendRequest = () => {
    timeout.current && clearTimeout(timeout.current);
  };
  const handleVisibilityChange = isVisible => {
    setRotate(isVisible);
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (!loggedIn || !rotate) return cancelSendRequest();
    sendRequest();
    return () => {
      cancelSendRequest();
    };
  }, [loggedIn, rotate]);
  return __jsx(react_page_visibility__WEBPACK_IMPORTED_MODULE_2___default.a, {
    onChange: handleVisibilityChange,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 5
    }
  }, react__WEBPACK_IMPORTED_MODULE_0__["Children"].only(children));
};
const mapStates = state => ({
  loggedIn: state.auth.loggedIn
});
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__["connect"])(mapStates, null)(CollectData));

/***/ }),

/***/ "./src/components/common/index.tsx":
/*!*****************************************!*\
  !*** ./src/components/common/index.tsx ***!
  \*****************************************/
/*! exports provided: SearchFilter, BreadcrumbComponent, GoogleReCaptcha, VideoPlayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _search_filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./search-filter */ "./src/components/common/search-filter.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SearchFilter", function() { return _search_filter__WEBPACK_IMPORTED_MODULE_0__["SearchFilter"]; });

/* harmony import */ var _breadcrumb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./breadcrumb */ "./src/components/common/breadcrumb.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BreadcrumbComponent", function() { return _breadcrumb__WEBPACK_IMPORTED_MODULE_1__["BreadcrumbComponent"]; });

/* harmony import */ var _recaptcha__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recaptcha */ "./src/components/common/recaptcha.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GoogleReCaptcha", function() { return _recaptcha__WEBPACK_IMPORTED_MODULE_2__["GoogleReCaptcha"]; });

/* harmony import */ var _video_player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./video-player */ "./src/components/common/video-player.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VideoPlayer", function() { return _video_player__WEBPACK_IMPORTED_MODULE_3__["VideoPlayer"]; });






/***/ }),

/***/ "./src/components/common/layout/footer.less":
/*!**************************************************!*\
  !*** ./src/components/common/layout/footer.less ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/components/common/layout/footer.tsx":
/*!*************************************************!*\
  !*** ./src/components/common/layout/footer.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _footer_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./footer.less */ "./src/components/common/layout/footer.less");
/* harmony import */ var _footer_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_footer_less__WEBPACK_IMPORTED_MODULE_4__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\layout\\footer.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/no-danger */





class Footer extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  render() {
    const {
      currentUser,
      ui
    } = this.props;
    return __jsx("div", {
      className: "main-footer",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 17,
        columnNumber: 7
      }
    }, __jsx("ul", {
      className: "footer-ul",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 18,
        columnNumber: 9
      }
    }, !currentUser._id ? __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
      className: "help-user",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 21,
        columnNumber: 15
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
      href: "/help",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 22,
        columnNumber: 17
      }
    }, __jsx("div", {
      className: "ant-btn",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 23,
        columnNumber: 19
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__["QuestionOutlined"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 24,
        columnNumber: 21
      }
    }), ' ', "Help & Support"))), ui.footerContent ? __jsx("div", {
      className: "help-media-c sun-editor-editable",
      style: {
        display: 'contents'
      },
      dangerouslySetInnerHTML: {
        __html: ui.footerContent
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 33,
        columnNumber: 17
      }
    }) : __jsx("div", {
      className: "help-media-c",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 39,
        columnNumber: 17
      }
    }, "\xA9 2023 Caster Media LLC")) : __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
      className: "help-user",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61,
        columnNumber: 15
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
      href: "/help",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 62,
        columnNumber: 17
      }
    }, __jsx("div", {
      className: "ant-btn",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 63,
        columnNumber: 19
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__["QuestionOutlined"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 64,
        columnNumber: 21
      }
    }), ' ', "Help & Support"))))));
  }
}
const mapState = state => ({
  currentUser: state.user.current,
  ui: _objectSpread({}, state.ui)
});
const mapDispatch = {};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(Footer));

/***/ }),

/***/ "./src/components/common/layout/sidebar-layout/index.less":
/*!****************************************************************!*\
  !*** ./src/components/common/layout/sidebar-layout/index.less ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/components/common/layout/sidebar-layout/stream-sidebar.tsx":
/*!************************************************************************!*\
  !*** ./src/components/common/layout/sidebar-layout/stream-sidebar.tsx ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_common_layout_footer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/common/layout/footer */ "./src/components/common/layout/footer.tsx");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_comment_comment_form__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/comment/comment-form */ "./src/components/comment/comment-form.tsx");
/* harmony import */ var _components_comment_list_comments__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/comment/list-comments */ "./src/components/comment/list-comments.tsx");
/* harmony import */ var _redux_auth_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../redux/auth/actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./index.less */ "./src/components/common/layout/sidebar-layout/index.less");
/* harmony import */ var _index_less__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_index_less__WEBPACK_IMPORTED_MODULE_8__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\layout\\sidebar-layout\\stream-sidebar.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;









const PerformerInfoBox = ({
  user
}) => {
  var _user$stats, _user$stats2;
  return __jsx("div", {
    className: "performer-info",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 3
    }
  }, __jsx("div", {
    className: "infomation",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "buttons",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 7
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Button"], {
    className: "btn-follow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 9
    }
  }, "+ Follow"), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 9
    }
  }, user === null || user === void 0 ? void 0 : (_user$stats = user.stats) === null || _user$stats === void 0 ? void 0 : _user$stats.subscribers, ' ', "Fans"), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Button"], {
    className: "btn-live",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 9
    }
  }, __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 11
    }
  }, "LIVE CAST"), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 11
    }
  }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__["EyeOutlined"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 17
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 11
    }
  }, "(", (user === null || user === void 0 ? void 0 : (_user$stats2 = user.stats) === null || _user$stats2 === void 0 ? void 0 : _user$stats2.views) || 0, ")"))), __jsx("div", {
    className: "user-name",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 7
    }
  }, __jsx("img", {
    width: 50,
    height: 50,
    src: user.avatar || '',
    alt: "#",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  }), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 9
    }
  }, user.name))));
};
const GiftMessageBox = ({
  user
}) => __jsx("div", {
  className: "gift-message-box",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 52,
    columnNumber: 3
  }
}, __jsx("div", {
  className: "notification-1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 53,
    columnNumber: 5
  }
}, __jsx("div", {
  className: "avt",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 54,
    columnNumber: 7
  }
}, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__["UserAddOutlined"], {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 55,
    columnNumber: 9
  }
})), __jsx("div", {
  className: "content",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 57,
    columnNumber: 7
  }
}, __jsx("h5", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 58,
    columnNumber: 9
  }
}, (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.name)), __jsx("p", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 59,
    columnNumber: 9
  }
}, "Sent Jet x2"))), __jsx("div", {
  className: "notification-2",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 62,
    columnNumber: 5
  }
}, __jsx("div", {
  className: "avt",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 63,
    columnNumber: 7
  }
}, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__["UserAddOutlined"], {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 64,
    columnNumber: 9
  }
})), __jsx("div", {
  className: "content",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 66,
    columnNumber: 7
  }
}, __jsx("h5", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 67,
    columnNumber: 9
  }
}, (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.name)), __jsx("p", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 68,
    columnNumber: 9
  }
}, "Sent Jet x2"))), __jsx("div", {
  className: "notification-3",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 71,
    columnNumber: 5
  }
}, __jsx("div", {
  className: "avt",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 72,
    columnNumber: 7
  }
}, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__["UserOutlined"], {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 73,
    columnNumber: 9
  }
})), __jsx("div", {
  className: "content",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 75,
    columnNumber: 7
  }
}, __jsx("h5", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 76,
    columnNumber: 9
  }
}, (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.name)), __jsx("p", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 77,
    columnNumber: 9
  }
}, "Sent Jet x2"))));
const GiftListBox = ({
  user
}) => {
  const {
    0: confirmSendGift,
    1: setConfirm
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const giftList = [1, 5, 10, 15, 20, 50, 100];
  return __jsx("div", {
    className: "gift-list-box",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "gift-list",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 7
    }
  }, giftList === null || giftList === void 0 ? void 0 : giftList.map(list => __jsx("div", {
    className: "tetete",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 11
    }
  }, __jsx("img", {
    src: user === null || user === void 0 ? void 0 : user.avatar,
    width: 50,
    height: 50,
    alt: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 13
    }
  }), __jsx("div", {
    className: "price",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 13
    }
  }, list)))), __jsx("div", {
    className: "conform-send-gift",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 7
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Button"], {
    className: "send-gift",
    disabled: !confirmSendGift,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 9
    }
  }, "Send gift"), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Checkbox"], {
    onChange: () => setConfirm(!confirmSendGift),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 9
    }
  }, "Confirm")), __jsx("div", {
    className: "total-tokens",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 7
    }
  }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Button"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 9
    }
  }, "(", (user === null || user === void 0 ? void 0 : user.rubyBalance) || 0, ") Ruby")));
};
const CommentBox = ({
  user,
  siteName
}) => __jsx("div", {
  className: "comment-box",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 115,
    columnNumber: 3
  }
}, __jsx(_components_comment_list_comments__WEBPACK_IMPORTED_MODULE_6__["default"], {
  requesting: false,
  comments: [],
  onDelete: () => {},
  user: user,
  canReply: true,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 116,
    columnNumber: 5
  }
}), __jsx(_components_comment_comment_form__WEBPACK_IMPORTED_MODULE_5__["default"], {
  creator: user,
  onSubmit: () => {},
  objectId: null,
  objectType: "feed"
  // requesting={commenting}
  ,
  siteName: siteName,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 123,
    columnNumber: 5
  }
}), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Checkbox"], {
  className: "check-comment",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 131,
    columnNumber: 5
  }
}, "Only Mods and Host"));
function StreamPageSidebar({
  loggedIn,
  user,
  login: onLogin
}) {
  const handleLogin = data => {
    onLogin(data);
  };
  return __jsx("div", {
    className: "sidebar-container",
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 5
    }
  }, __jsx(PerformerInfoBox, {
    loggedIn: loggedIn,
    user: user,
    handleLogin: handleLogin,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 7
    }
  }), __jsx(GiftMessageBox, {
    user: user,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 7
    }
  }), __jsx(GiftListBox, {
    user: user,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 7
    }
  }), __jsx(CommentBox, {
    user: user,
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 7
    }
  }), __jsx(_components_common_layout_footer__WEBPACK_IMPORTED_MODULE_1__["default"], {
    __self: this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 7
    }
  }));
}
const mapSState = state => {
  const {
    commentMapping,
    comment
  } = state.comment;
  return {
    comment,
    commentMapping,
    siteName: state.ui.siteName,
    loggedIn: state.auth.loggedIn,
    user: state.user.current
  };
};
const mapdispatch = {
  login: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_7__["login"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_4__["connect"])(mapSState, mapdispatch)(StreamPageSidebar));

/***/ }),

/***/ "./src/components/common/recaptcha.tsx":
/*!*********************************************!*\
  !*** ./src/components/common/recaptcha.tsx ***!
  \*********************************************/
/*! exports provided: GoogleReCaptcha */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GoogleReCaptcha", function() { return GoogleReCaptcha; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_google_recaptcha__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-google-recaptcha */ "react-google-recaptcha");
/* harmony import */ var react_google_recaptcha__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_google_recaptcha__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\recaptcha.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



class GoogleReCaptcha extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "recaptchaRef", void 0);
  }
  componentDidMount() {
    if (!this.recaptchaRef) {
      this.recaptchaRef = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__["createRef"])();
    }
  }
  async handleVerifyCapcha(token) {
    const {
      handleVerify
    } = this.props;
    if (token) {
      const resp = await _services_index__WEBPACK_IMPORTED_MODULE_2__["utilsService"].verifyRecaptcha(token);
      handleVerify(resp);
    } else {
      handleVerify({
        success: false
      });
    }
  }
  render() {
    const {
      settings
    } = this.props;
    if (!this.recaptchaRef) {
      this.recaptchaRef = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__["createRef"])();
    }
    return __jsx("div", {
      className: "recaptcha-box",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 36,
        columnNumber: 7
      }
    }, (settings === null || settings === void 0 ? void 0 : settings.enableGoogleReCaptcha) && __jsx(react_google_recaptcha__WEBPACK_IMPORTED_MODULE_1___default.a, {
      ref: this.recaptchaRef,
      sitekey: settings === null || settings === void 0 ? void 0 : settings.googleReCaptchaSiteKey,
      onChange: this.handleVerifyCapcha.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 38,
        columnNumber: 9
      }
    }));
  }
}

/***/ }),

/***/ "./src/components/common/search-filter.tsx":
/*!*************************************************!*\
  !*** ./src/components/common/search-filter.tsx ***!
  \*************************************************/
/*! exports provided: SearchFilter */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchFilter", function() { return SearchFilter; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_performer_common_select_performer_dropdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @components/performer/common/select-performer-dropdown */ "./src/components/performer/common/select-performer-dropdown.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\search-filter.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
/* eslint-disable react/require-default-props */



const {
  RangePicker
} = antd__WEBPACK_IMPORTED_MODULE_1__["DatePicker"];
class SearchFilter extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  render() {
    const {
      statuses = [],
      type = [],
      searchWithPerformer,
      searchWithKeyword,
      dateRange,
      isFree,
      onSubmit
    } = this.props;
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Row"], {
      className: "search-filter",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 37,
        columnNumber: 7
      }
    }, searchWithKeyword && __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      lg: 8,
      md: 8,
      xs: 24,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 39,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Input"], {
      placeholder: "Enter keyword",
      onChange: evt => this.setState({
        q: evt.target.value
      }),
      onPressEnter: () => onSubmit(this.state),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 40,
        columnNumber: 13
      }
    })), statuses && statuses.length ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      lg: 8,
      md: 8,
      xs: 24,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      onChange: val => this.setState({
        status: val
      }, () => onSubmit(this.state)),
      style: {
        width: '100%'
      },
      placeholder: "Select status",
      defaultValue: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 49,
        columnNumber: 13
      }
    }, statuses.map(s => __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: s.key,
      value: s.key,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 56,
        columnNumber: 17
      }
    }, s.text || s.key)))) : null, type && type.length ? __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      lg: 8,
      md: 8,
      xs: 24,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 64,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      onChange: val => this.setState({
        type: val
      }, () => onSubmit(this.state)),
      style: {
        width: '100%'
      },
      placeholder: "Select type",
      defaultValue: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 65,
        columnNumber: 13
      }
    }, type.map(s => __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: s.key,
      value: s.key,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72,
        columnNumber: 17
      }
    }, s.text || s.key)))) : null, searchWithPerformer && __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      lg: 8,
      md: 8,
      xs: 24,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 80,
        columnNumber: 11
      }
    }, __jsx(_components_performer_common_select_performer_dropdown__WEBPACK_IMPORTED_MODULE_2__["SelectPerformerDropdown"], {
      style: {
        width: '100%'
      },
      onSelect: val => this.setState({
        performerId: val || ''
      }, () => onSubmit(this.state)),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 81,
        columnNumber: 13
      }
    })), dateRange && __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      lg: 8,
      md: 8,
      xs: 24,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88,
        columnNumber: 11
      }
    }, __jsx(RangePicker, {
      style: {
        width: '100%'
      },
      onChange: (dates, dateStrings) => this.setState({
        fromDate: dateStrings[0],
        toDate: dateStrings[1]
      }, () => onSubmit(this.state)),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 89,
        columnNumber: 13
      }
    })), isFree && __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Col"], {
      lg: 8,
      md: 8,
      xs: 24,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 99,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      onChange: val => this.setState({
        isFree: val
      }, () => onSubmit(this.state)),
      style: {
        width: '100%'
      },
      placeholder: "Select type",
      defaultValue: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 100,
        columnNumber: 13
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: "",
      value: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 106,
        columnNumber: 15
      }
    }, "All Type"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: "free",
      value: "true",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 109,
        columnNumber: 15
      }
    }, "Free"), __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      key: "paid",
      value: "false",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 112,
        columnNumber: 15
      }
    }, "Paid"))));
  }
}

/***/ }),

/***/ "./src/components/common/video-player.tsx":
/*!************************************************!*\
  !*** ./src/components/common/video-player.tsx ***!
  \************************************************/
/*! exports provided: VideoPlayer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoPlayer", function() { return VideoPlayer; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var video_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! video.js */ "video.js");
/* harmony import */ var video_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(video_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var node_modules_video_js_dist_video_js_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node_modules/video.js/dist/video-js.css */ "./node_modules/video.js/dist/video-js.css");
/* harmony import */ var node_modules_video_js_dist_video_js_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_modules_video_js_dist_video_js_css__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_intersection_observer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-intersection-observer */ "react-intersection-observer");
/* harmony import */ var react_intersection_observer__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_intersection_observer__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\common\\video-player.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





class VideoPlayer extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "videoNode", void 0);
    _defineProperty(this, "player", void 0);
    _defineProperty(this, "mounted", false);
    _defineProperty(this, "state", {
      isPlayed: false,
      inView: false
    });
    _defineProperty(this, "handleOnPlay", () => {
      const {
        isPlayed
      } = this.state;
      const {
        onPlay
      } = this.props;
      if (isPlayed) return;
      !isPlayed && this.setState({
        isPlayed: true
      });
      onPlay && onPlay();
    });
  }
  componentDidMount() {
    this.mounted = true;
    this.player = video_js__WEBPACK_IMPORTED_MODULE_1___default()(this.videoNode, _objectSpread({}, this.props));
    this.player.on('play', this.handleOnPlay);
  }
  componentDidUpdate(_, prevStates) {
    const {
      inView
    } = this.state;
    const {
      playOnScroll
    } = this.props;
    if (inView !== prevStates.inView) {
      if (inView && playOnScroll && this.player) {
        this.playOnScroll();
      } else {
        this.pauseVideo();
      }
    }
  }

  // destroy player on unmount
  componentWillUnmount() {
    this.mounted = false;
    if (this.player) {
      this.player.dispose();
      this.player.off('play', this.handleOnPlay);
    }
  }
  onEnded() {
    this.setState({
      isPlayed: false
    }, () => {
      this.pauseVideo();
      // if (playLoop) this.playOnScroll();
    });
  }
  pauseVideo() {
    if (!this.player.paused()) {
      this.player.pause();
    }
  }
  async playOnScroll() {
    const {
      isPlayed,
      inView
    } = this.state;
    await Object(_lib_utils__WEBPACK_IMPORTED_MODULE_4__["delay"])(150);
    if (inView && this.mounted) {
      !isPlayed && this.player && this.player.paused() && this.player.play();
    }
  }
  render() {
    return __jsx("div", {
      className: "videojs-player",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 77,
        columnNumber: 7
      }
    }, __jsx("div", {
      "data-vjs-player": true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 78,
        columnNumber: 9
      }
    }, __jsx(react_intersection_observer__WEBPACK_IMPORTED_MODULE_3__["InView"], {
      threshold: 1,
      onChange: inView => this.setState({
        inView
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 79,
        columnNumber: 11
      }
    }, __jsx("video", {
      onContextMenu: event => {
        event.preventDefault();
      },
      disablePictureInPicture: true,
      "data-setup": "{\"controlBar\": {\"pictureInPictureToggle\": false}}",
      ref: node => {
        this.videoNode = node;
      },
      className: "video-js",
      onEnded: () => this.onEnded(),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 80,
        columnNumber: 13
      }
    }))));
  }
}

/***/ }),

/***/ "./src/components/create-feed/create-thumbnail-video-preview.tsx":
/*!***********************************************************************!*\
  !*** ./src/components/create-feed/create-thumbnail-video-preview.tsx ***!
  \***********************************************************************/
/*! exports provided: CreateThumbnailVideoPreview */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CreateThumbnailVideoPreview", function() { return CreateThumbnailVideoPreview; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _rajesh896_video_thumbnails_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @rajesh896/video-thumbnails-generator */ "@rajesh896/video-thumbnails-generator");
/* harmony import */ var _rajesh896_video_thumbnails_generator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_rajesh896_video_thumbnails_generator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\create-feed\\create-thumbnail-video-preview.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;



const CreateThumbnailVideoPreview = ({
  videoPreviewUrl,
  videoFile,
  handleThumbnail
}) => {
  const {
    0: thumbnailImages,
    1: setThumbnailImages
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const {
    0: selectedThumbnail,
    1: setSelectedThumbnail
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const {
    0: selectedIndexProgress,
    1: setSeletedIndexProgress
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0);
  const handleGenerateThumbnailsFromVideoFile = () => {
    Object(_rajesh896_video_thumbnails_generator__WEBPACK_IMPORTED_MODULE_1__["generateVideoThumbnails"])(videoFile, 30, videoFile.type).then(thumbnailArray => {
      // Process each base64 thumbnail to convert it into a File object
      const thumbnails = thumbnailArray.map((thumbBase64, index) => {
        const byteString = atob(thumbBase64.split(',')[1]);
        const mimeString = thumbBase64.split(',')[0].split(':')[1].split(';')[0];
        const ab = new ArrayBuffer(byteString.length);
        const ia = new Uint8Array(ab);
        for (let i = 0; i < byteString.length; i++) {
          ia[i] = byteString.charCodeAt(i);
        }
        const blob = new Blob([ab], {
          type: mimeString
        });
        const file = new File([blob], `thumbnail_${index}.png`, {
          type: mimeString
        });
        return {
          imgUrl: thumbBase64,
          imgFile: file
        };
      });
      setThumbnailImages(thumbnails);
      setSelectedThumbnail(thumbnails[0]);
    }).catch(err => {
      console.error('Error generating thumbnails:', err);
    });
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    handleGenerateThumbnailsFromVideoFile();
  }, [videoPreviewUrl, videoFile]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    selectedThumbnail && handleThumbnail(selectedThumbnail.imgFile);
  }, [selectedThumbnail]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    setSelectedThumbnail(thumbnailImages[selectedIndexProgress]);
  }, [selectedIndexProgress]);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    className: "w-full bg-gray-200 relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 7
    }
  }, selectedThumbnail ? __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("img", {
    src: selectedThumbnail.imgUrl,
    alt: 'Thumbnail Selected',
    className: "w-full max-w-[260px] m-auto rounded",
    style: {
      aspectRatio: '4 / 6',
      objectFit: 'cover'
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 13
    }
  }), __jsx("input", {
    className: "w-full max-w-[380px] m-auto absolute left-0 right-0 bottom-4 progressBarThumbnail",
    type: "range",
    max: thumbnailImages.length - 1,
    onChange: e => setSeletedIndexProgress(Number(e.target.value)),
    value: selectedIndexProgress,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 13
    }
  })) : __jsx("video", {
    style: {
      aspectRatio: '4 / 6',
      objectFit: 'cover'
    },
    className: "w-full max-w-[260px] m-auto rounded",
    src: videoPreviewUrl,
    controls: true,
    autoPlay: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 13
    }
  })), __jsx("div", {
    className: "w-full pl-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 7
    }
  }, __jsx("h4", {
    className: "text-black pb-2 pt-4 bg-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 9
    }
  }, "Select a thumbnail by moving the slider"), __jsx("div", {
    className: "flex items-center justify-start w-full bg-white overflow-x-scroll pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 9
    }
  }, !thumbnailImages.length && __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Spin"], {
    className: "m-auto pt-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 39
    }
  }), thumbnailImages.map((thumbImg, index) => __jsx("div", {
    key: index,
    onClick: () => setSelectedThumbnail(thumbImg),
    className: `h-32 w-32 flex-none bg-black rounded cursor-pointer ${thumbImg === selectedThumbnail ? 'border-2 border-blue-800' : ''}`,
    style: {
      backgroundImage: `url(${thumbImg.imgUrl})`,
      backgroundSize: 'cover',
      backgroundPosition: 'center'
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 13
    }
  })))));
};

/***/ }),

/***/ "./src/components/create-feed/toggle-photo-and-video-create-post.tsx":
/*!***************************************************************************!*\
  !*** ./src/components/create-feed/toggle-photo-and-video-create-post.tsx ***!
  \***************************************************************************/
/*! exports provided: TogglePhotoAndVideoCreatePost */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TogglePhotoAndVideoCreatePost", function() { return TogglePhotoAndVideoCreatePost; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\create-feed\\toggle-photo-and-video-create-post.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const TogglePhotoAndVideoCreatePost = ({
  modals
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const {
    0: isDropdown,
    1: setIsDropdown
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  return __jsx("li", {
    className: "relative z-10",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 13,
      columnNumber: 5
    }
  }, __jsx("button", {
    onClick: () => setIsDropdown(!isDropdown),
    className: "flex items-center justify-center w-full h-10 gap-2 px-4 my-5 text-sm text-white transition bg-purple-800 border hover:bg-purple-700 rounded-3xl focus:outline-none focus:ring-2 focus:ring-offset-2 focus:z-10 focus:ring-purple-800",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 7
    }
  }, __jsx("svg", {
    className: "w-5 h-5",
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    fill: "none",
    viewBox: "0 0 20 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15,
      columnNumber: 9
    }
  }, __jsx("g", {
    clipPath: "url(#a)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 16,
      columnNumber: 11
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M11 5H9v4H5v2h4v4h2v-4h4V9h-4V5Z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 13
    }
  })), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 11
    }
  }, __jsx("clipPath", {
    id: "a",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 13
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0h20v20H0z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 15
    }
  })))), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 9
    }
  }, " Add video/photo")), isDropdown ? __jsx("div", {
    className: "bg-white absolute top-[101%] left-0 right-0 m-auto flex flex-col items-center justify-center rounded-lg border z-50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 9
    }
  }, __jsx("button", {
    className: "px-2 py-3 hover:bg-purple-200 w-full rounded-t-lg",
    onClick: () => {
      setIsDropdown(false);
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_1__["updateModals"])({
        uploadPhotoModal: _objectSpread(_objectSpread({}, modals.uploadPhotoModal), {}, {
          isOpen: true
        })
      }));
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 30,
      columnNumber: 11
    }
  }, "Add Photo"), __jsx("button", {
    className: "px-2 py-3 hover:bg-purple-200 w-full rounded-b-lg",
    onClick: () => {
      setIsDropdown(false);
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_1__["updateModals"])({
        uploadVideoModal: _objectSpread(_objectSpread({}, modals.uploadVideoModal), {}, {
          isOpen: true
        })
      }));
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 11
    }
  }, "Add Video")) : null);
};

/***/ }),

/***/ "./src/components/file/list-media.tsx":
/*!********************************************!*\
  !*** ./src/components/file/list-media.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return UploadList; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _components_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @components/common */ "./src/components/common/index.tsx");
/* harmony import */ var _post_index_less__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../post/index.less */ "./src/components/post/index.less");
/* harmony import */ var _post_index_less__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_post_index_less__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _services_config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @services/config */ "./src/services/config.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\file\\list-media.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/require-default-props */






class UploadList extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      isShowPreview: false,
      previewUrl: ''
    });
  }
  beforeUpload(file, fileList) {
    const config = Object(_services_config__WEBPACK_IMPORTED_MODULE_5__["getGlobalConfig"])();
    const {
      type
    } = this.props;
    if (type === 'photo' && (file.type.indexOf('video') > -1 || file.size / 1024 / 1024 > (config.NEXT_PUBLIC_MAX_SIZE_IMAGE || 5))) {
      return false;
    }
    if (type === 'video' && file.type.indexOf('image') > -1) {
      return false;
    }
    const {
      onAddMore: handleAddMore
    } = this.props;
    return handleAddMore(file, fileList);
  }
  render() {
    const {
      files,
      remove: handleRemove,
      uploading,
      type
    } = this.props;
    const {
      isShowPreview,
      previewUrl
    } = this.state;
    const config = Object(_services_config__WEBPACK_IMPORTED_MODULE_5__["getGlobalConfig"])();
    return __jsx("div", {
      className: "f-upload-list",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 7
      }
    }, files && files.map(file => __jsx("div", {
      className: "f-upload-item",
      key: file._id || file.uid,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 49,
        columnNumber: 11
      }
    }, __jsx("div", {
      className: "f-upload-thumb",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 13
      }
    }, file.type.includes('feed-photo') || file.type.includes('image') ? __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Image"], {
      placeholder: true,
      alt: "img",
      src: file.url ? file.url : file.thumbnail,
      width: "100%",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53,
        columnNumber: 19
      }
    }) : file.type.includes('video') ? __jsx("span", {
      className: "f-thumb-vid",
      "aria-hidden": true,
      onClick: () => this.setState({
        isShowPreview: true,
        previewUrl: file === null || file === void 0 ? void 0 : file.url
      }),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 55,
        columnNumber: 19
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__["PlayCircleOutlined"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 56,
        columnNumber: 21
      }
    })) : __jsx("img", {
      alt: "img",
      src: "/static/no-image.jpg",
      width: "100%",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 58,
        columnNumber: 21
      }
    })), __jsx("div", {
      className: "f-upload-name",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60,
        columnNumber: 13
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Tooltip"], {
      title: file.name,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61,
        columnNumber: 15
      }
    }, file.name)), __jsx("div", {
      className: "f-upload-size",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 63,
        columnNumber: 13
      }
    }, (file.size / (1024 * 1024)).toFixed(2), ' ', "MB"), file.status !== 'uploading' && __jsx("span", {
      className: "f-remove",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 70,
        columnNumber: 15
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Button"], {
      type: "primary",
      onClick: handleRemove.bind(this, file),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 71,
        columnNumber: 17
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__["DeleteOutlined"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 72,
        columnNumber: 19
      }
    }))), file.percent && __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Progress"], {
      percent: Math.round(file.percent),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 76,
        columnNumber: 30
      }
    }))), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Modal"], {
      width: 767,
      footer: null,
      onOk: () => this.setState({
        isShowPreview: false
      }),
      onCancel: () => this.setState({
        isShowPreview: false
      }),
      visible: isShowPreview,
      destroyOnClose: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 80,
        columnNumber: 9
      }
    }, __jsx(_components_common__WEBPACK_IMPORTED_MODULE_3__["VideoPlayer"], {
      autoplay: true,
      controls: true,
      playsinline: true,
      fluid: true,
      sources: [{
        src: previewUrl,
        type: 'video/mp4'
      }],
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 88,
        columnNumber: 11
      }
    })));
  }
}

//  {(type === 'photo' || (type === 'video' && !files.length)) && (
//   <div className="add-more">
//   <Upload
//     customRequest={() => true}
//     accept={type === 'photo' ? config.NEXT_PUBLIC_IMAGE_ACCPET : 'video/*'}
//     beforeUpload={this.beforeUpload.bind(this)}
//     multiple={false}
//     showUploadList={false}
//     disabled={uploading}
//     listType="picture"
//   >
//     <PlusOutlined />
//     {' '}
//     Add
//     {' '}
//     {/* eslint-disable-next-line no-nested-ternary */}
//     {type === 'photo' ? 'photos' : type === 'video' ? 'video' : 'files'}
//   </Upload>
// </div>
// )}

/***/ }),

/***/ "./src/components/modals/addCommentModal.tsx":
/*!***************************************************!*\
  !*** ./src/components/modals/addCommentModal.tsx ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\addCommentModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }










const schema = yup__WEBPACK_IMPORTED_MODULE_1__["object"]({
  comment: yup__WEBPACK_IMPORTED_MODULE_1__["string"]().required()
});
const AddCommentModal = ({
  isOpen,
  onClose
}) => {
  var _errors$comment;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["useDispatch"])();
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_2__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = data => {
    try {} catch (error) {
      console.error(error);
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_8__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full m-auto max-w-3xl min-h-[420px] overflow-x-hidden bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 11
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 13
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 15
    }
  }, "Add a comment")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 13
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 15
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 17
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 15
    }
  }, "Close modal"))), __jsx("div", {
    className: "px-6 py-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "mb-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 13
    }
  }, __jsx("form", {
    noValidate: true,
    onSubmit: handleSubmit(onSubmit),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex items-baseline gap-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex-grow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 19
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_4__["AppInput"], _extends({
    size: "sm"
  }, register("comment"), {
    type: "text",
    id: "add-comment-modal-comment",
    rounded: "full",
    placeholder: "Add a comment",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$comment = errors.comment) === null || _errors$comment === void 0 ? void 0 : _errors$comment.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 21
    }
  }))), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["AppButton"], {
    className: "w-20",
    type: "submit",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 19
    }
  }, "Post")))), __jsx("div", {
    className: "py-4 border-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 17
    }
  }, "200 comments"), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 17
    }
  }, __jsx("select", {
    defaultValue: 'top',
    className: "inline-flex items-center w-full text-purple-800 border-gray-300 rounded-lg sm:text-sm focus:outline-purple",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 19
    }
  }, __jsx("option", {
    value: "top",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 21
    }
  }, "Sort by: Top comments"), __jsx("option", {
    value: "recents",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 21
    }
  }, " Sort by: Most Recent"))))), __jsx("div", {
    className: "space-y-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 13
    }
  }, __jsx("article", {
    className: "flex text-base bg-white rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex flex-col items-center self-start justify-center gap-1 mr-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 17
    }
  }, __jsx("label", {
    className: "cursor-pointer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 19
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 21
    }
  }), __jsx("svg", {
    className: "text-black pointer-events-none peer-checked:text-purple-800",
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 21
    }
  }, __jsx("mask", {
    id: "mask0_2916_43095",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 23
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 25
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43095)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 23
    }
  }, __jsx("path", {
    d: "M7.5 17V11.2083H3.5L10.5 2L17.5 11.2083H13.5V17H7.5ZM9 15.5H12V9.70833H14.4375L10.5 4.4375L6.5625 9.70833H9V15.5Z",
    className: "fill-current",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 25
    }
  })))), __jsx("span", {
    className: "text-xs text-black peer-checked:text-xl",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 19
    }
  }, " 5 "), __jsx("label", {
    className: "cursor-pointer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 19
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 21
    }
  }), __jsx("svg", {
    className: "text-black pointer-events-none peer-checked:text-purple-800",
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 21
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_2916_43097)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 23
    }
  }, __jsx("mask", {
    id: "mask0_2916_43097",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 25
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 27
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43097)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M13.5 3.16162L13.5 8.95329L17.5 8.95329L10.5 18.1616L3.5 8.95329L7.5 8.95329L7.5 3.16162L13.5 3.16162ZM12 4.66162L9 4.66162L9 10.4533L6.5625 10.4533L10.5 15.7241L14.4375 10.4533L12 10.4533L12 4.66162Z",
    className: "fill-current",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 27
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 23
    }
  }, __jsx("clipPath", {
    id: "clip0_2916_43097",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 25
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    transform: "translate(0.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 27
    }
  })))))), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135,
      columnNumber: 17
    }
  }, __jsx("footer", {
    className: "flex flex-wrap items-center justify-end mb-2 gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center mr-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "inline-flex items-center mr-1 text-sm text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 23
    }
  }, __jsx("img", {
    className: "w-10 h-10 mr-2 rounded-full",
    src: "https://flowbite.com/docs/images/people/profile-picture-2.jpg",
    alt: "Michael Gough",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 25
    }
  }), "Michael Gough"), __jsx("svg", {
    className: "w-4 h-4",
    xmlns: "http://www.w3.org/2000/svg",
    width: "15",
    height: "14",
    viewBox: "0 0 15 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 23
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_2916_43107)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 25
    }
  }, __jsx("mask", {
    id: "mask0_2916_43107",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "15",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 146,
      columnNumber: 27
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 29
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43107)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M5.56061 12.9498L4.46686 11.1415L2.41061 10.6748L2.6002 8.5748L1.2002 6.9998L2.6002 5.4248L2.41061 3.3248L4.46686 2.85814L5.56061 1.0498L7.5002 1.88105L9.43978 1.0498L10.5335 2.85814L12.5898 3.3248L12.4002 5.4248L13.8002 6.9998L12.4002 8.5748L12.5898 10.6748L10.5335 11.1415L9.43978 12.9498L7.5002 12.1186L5.56061 12.9498ZM6.75645 9.0998L10.2273 5.64355L9.48353 4.8998L6.75645 7.6123L5.51686 6.3873L4.77311 7.13105L6.75645 9.0998Z",
    fill: "#2CB1EC",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 29
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 153,
      columnNumber: 25
    }
  }, __jsx("clipPath", {
    id: "clip0_2916_43107",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "white",
    transform: "translate(0.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 29
    }
  }))))), __jsx("div", {
    className: "relative flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "text-xs text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 162,
      columnNumber: 23
    }
  }, __jsx("time", {
    dateTime: "2022-02-08",
    title: "February 8th, 2022",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 163,
      columnNumber: 25
    }
  }, "10 hours ago")), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 23
    }
  }, __jsx("label", {
    className: "inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg cursor-pointer hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 168,
      columnNumber: 25
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 169,
      columnNumber: 27
    }
  }), __jsx("svg", {
    className: "w-4 h-4 rotate-90",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    viewBox: "0 0 16 3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 170,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M2 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm6.041 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM14 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 29
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 173,
      columnNumber: 27
    }
  }, "Comment settings"), __jsx("div", {
    className: "absolute z-10 hidden translate-x-1/2 bg-white divide-y divide-gray-100 rounded shadow peer-checked:block -left-full top-9 w-36",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 175,
      columnNumber: 27
    }
  }, __jsx("ul", {
    className: "py-1 text-sm text-gray-700",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 29
    }
  }, __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 178,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 33
    }
  }, "Edit")), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 183,
      columnNumber: 33
    }
  }, "Remove")), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 186,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187,
      columnNumber: 33
    }
  }, "Report")))))))), __jsx("p", {
    className: "text-sm text-black t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 19
    }
  }, "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium dolor emque laudantium, totam rem aperiam, eaque ipsa quae ab ill"), __jsx("div", {
    className: "flex items-center mt-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 19
    }
  }, __jsx("button", {
    type: "button",
    className: "mr-4 text-sm font-semibold text-base-600 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 202,
      columnNumber: 21
    }
  }, "Reply"), __jsx("div", {
    className: "w-6 h-px mr-2 bg-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 206,
      columnNumber: 21
    }
  }), __jsx("button", {
    type: "button",
    className: "text-sm text-base-600 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 208,
      columnNumber: 21
    }
  }, "View replies")))), __jsx("article", {
    className: "flex ml-6 text-base bg-white rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex flex-col items-center self-start justify-center gap-1 mr-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 17
    }
  }, __jsx("label", {
    className: "cursor-pointer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 19
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 218,
      columnNumber: 21
    }
  }), __jsx("svg", {
    className: "text-black pointer-events-none peer-checked:text-purple-800",
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 220,
      columnNumber: 21
    }
  }, __jsx("mask", {
    id: "mask0_2916_43095",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 221,
      columnNumber: 23
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 222,
      columnNumber: 25
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43095)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 23
    }
  }, __jsx("path", {
    d: "M7.5 17V11.2083H3.5L10.5 2L17.5 11.2083H13.5V17H7.5ZM9 15.5H12V9.70833H14.4375L10.5 4.4375L6.5625 9.70833H9V15.5Z",
    className: "fill-current",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 225,
      columnNumber: 25
    }
  })))), __jsx("span", {
    className: "text-xs text-black peer-checked:text-xl",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 230,
      columnNumber: 19
    }
  }, " 5 "), __jsx("label", {
    className: "cursor-pointer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 232,
      columnNumber: 19
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 233,
      columnNumber: 21
    }
  }), __jsx("svg", {
    className: "text-black pointer-events-none peer-checked:text-purple-800",
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 234,
      columnNumber: 21
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_2916_43097)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 23
    }
  }, __jsx("mask", {
    id: "mask0_2916_43097",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 236,
      columnNumber: 25
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 237,
      columnNumber: 27
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43097)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 239,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M13.5 3.16162L13.5 8.95329L17.5 8.95329L10.5 18.1616L3.5 8.95329L7.5 8.95329L7.5 3.16162L13.5 3.16162ZM12 4.66162L9 4.66162L9 10.4533L6.5625 10.4533L10.5 15.7241L14.4375 10.4533L12 10.4533L12 4.66162Z",
    className: "fill-current",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 27
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 243,
      columnNumber: 23
    }
  }, __jsx("clipPath", {
    id: "clip0_2916_43097",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 25
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    transform: "translate(0.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 245,
      columnNumber: 27
    }
  })))))), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 252,
      columnNumber: 17
    }
  }, __jsx("footer", {
    className: "flex flex-wrap items-center justify-end mb-2 gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 253,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center mr-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "inline-flex items-center mr-1 text-sm text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 23
    }
  }, __jsx("img", {
    className: "w-10 h-10 mr-2 rounded-full",
    src: "https://flowbite.com/docs/images/people/profile-picture-2.jpg",
    alt: "Michael Gough",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 256,
      columnNumber: 25
    }
  }), "Michael Gough"), __jsx("svg", {
    className: "w-4 h-4",
    xmlns: "http://www.w3.org/2000/svg",
    width: "15",
    height: "14",
    viewBox: "0 0 15 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 261,
      columnNumber: 23
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_2916_43107)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 262,
      columnNumber: 25
    }
  }, __jsx("mask", {
    id: "mask0_2916_43107",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "15",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 263,
      columnNumber: 27
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 264,
      columnNumber: 29
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43107)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M5.56061 12.9498L4.46686 11.1415L2.41061 10.6748L2.6002 8.5748L1.2002 6.9998L2.6002 5.4248L2.41061 3.3248L4.46686 2.85814L5.56061 1.0498L7.5002 1.88105L9.43978 1.0498L10.5335 2.85814L12.5898 3.3248L12.4002 5.4248L13.8002 6.9998L12.4002 8.5748L12.5898 10.6748L10.5335 11.1415L9.43978 12.9498L7.5002 12.1186L5.56061 12.9498ZM6.75645 9.0998L10.2273 5.64355L9.48353 4.8998L6.75645 7.6123L5.51686 6.3873L4.77311 7.13105L6.75645 9.0998Z",
    fill: "#2CB1EC",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267,
      columnNumber: 29
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 270,
      columnNumber: 25
    }
  }, __jsx("clipPath", {
    id: "clip0_2916_43107",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 271,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "white",
    transform: "translate(0.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 272,
      columnNumber: 29
    }
  }))))), __jsx("div", {
    className: "relative flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 278,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "text-xs text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 279,
      columnNumber: 23
    }
  }, __jsx("time", {
    dateTime: "2022-02-08",
    title: "February 8th, 2022",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 280,
      columnNumber: 25
    }
  }, "10 hours ago")), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 284,
      columnNumber: 23
    }
  }, __jsx("label", {
    className: "inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg cursor-pointer hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 285,
      columnNumber: 25
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 286,
      columnNumber: 27
    }
  }), __jsx("svg", {
    className: "w-4 h-4 rotate-90",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    viewBox: "0 0 16 3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 287,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M2 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm6.041 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM14 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 288,
      columnNumber: 29
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 290,
      columnNumber: 27
    }
  }, "Comment settings"), __jsx("div", {
    className: "absolute z-10 hidden translate-x-1/2 bg-white divide-y divide-gray-100 rounded shadow peer-checked:block -left-full top-9 w-36",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 292,
      columnNumber: 27
    }
  }, __jsx("ul", {
    className: "py-1 text-sm text-gray-700",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 294,
      columnNumber: 29
    }
  }, __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 295,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 296,
      columnNumber: 33
    }
  }, "Edit")), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 299,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 300,
      columnNumber: 33
    }
  }, "Remove")), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 303,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 304,
      columnNumber: 33
    }
  }, "Report")))))))), __jsx("p", {
    className: "text-sm text-black t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 314,
      columnNumber: 19
    }
  }, "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium dolor emque laudantium, totam rem aperiam, eaque ipsa quae ab ill"), __jsx("div", {
    className: "flex items-center mt-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 318,
      columnNumber: 19
    }
  }, __jsx("button", {
    type: "button",
    className: "mr-4 text-sm font-semibold text-base-600 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 319,
      columnNumber: 21
    }
  }, "Reply"), __jsx("div", {
    className: "w-6 h-px mr-2 bg-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 323,
      columnNumber: 21
    }
  }), __jsx("button", {
    type: "button",
    className: "text-sm text-base-600 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 325,
      columnNumber: 21
    }
  }, "View replies")))), __jsx("article", {
    className: "flex ml-12 text-base bg-white rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 332,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex flex-col items-center self-start justify-center gap-1 mr-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 333,
      columnNumber: 17
    }
  }, __jsx("label", {
    className: "cursor-pointer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 334,
      columnNumber: 19
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 335,
      columnNumber: 21
    }
  }), __jsx("svg", {
    className: "text-black pointer-events-none peer-checked:text-purple-800",
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 337,
      columnNumber: 21
    }
  }, __jsx("mask", {
    id: "mask0_2916_43095",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 338,
      columnNumber: 23
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 339,
      columnNumber: 25
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43095)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 341,
      columnNumber: 23
    }
  }, __jsx("path", {
    d: "M7.5 17V11.2083H3.5L10.5 2L17.5 11.2083H13.5V17H7.5ZM9 15.5H12V9.70833H14.4375L10.5 4.4375L6.5625 9.70833H9V15.5Z",
    className: "fill-current",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 342,
      columnNumber: 25
    }
  })))), __jsx("span", {
    className: "text-xs text-black peer-checked:text-xl",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 347,
      columnNumber: 19
    }
  }, " 5 "), __jsx("label", {
    className: "cursor-pointer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 349,
      columnNumber: 19
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 350,
      columnNumber: 21
    }
  }), __jsx("svg", {
    className: "text-black pointer-events-none peer-checked:text-purple-800",
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 351,
      columnNumber: 21
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_2916_43097)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 352,
      columnNumber: 23
    }
  }, __jsx("mask", {
    id: "mask0_2916_43097",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 353,
      columnNumber: 25
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 354,
      columnNumber: 27
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43097)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 356,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M13.5 3.16162L13.5 8.95329L17.5 8.95329L10.5 18.1616L3.5 8.95329L7.5 8.95329L7.5 3.16162L13.5 3.16162ZM12 4.66162L9 4.66162L9 10.4533L6.5625 10.4533L10.5 15.7241L14.4375 10.4533L12 10.4533L12 4.66162Z",
    className: "fill-current",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 357,
      columnNumber: 27
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 360,
      columnNumber: 23
    }
  }, __jsx("clipPath", {
    id: "clip0_2916_43097",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 361,
      columnNumber: 25
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    transform: "translate(0.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 362,
      columnNumber: 27
    }
  })))))), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 369,
      columnNumber: 17
    }
  }, __jsx("footer", {
    className: "flex flex-wrap items-center justify-end mb-2 gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 370,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center mr-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 371,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "inline-flex items-center mr-1 text-sm text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 372,
      columnNumber: 23
    }
  }, __jsx("img", {
    className: "w-10 h-10 mr-2 rounded-full",
    src: "https://flowbite.com/docs/images/people/profile-picture-2.jpg",
    alt: "Michael Gough",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 373,
      columnNumber: 25
    }
  }), "Michael Gough"), __jsx("svg", {
    className: "w-4 h-4",
    xmlns: "http://www.w3.org/2000/svg",
    width: "15",
    height: "14",
    viewBox: "0 0 15 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 378,
      columnNumber: 23
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_2916_43107)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 379,
      columnNumber: 25
    }
  }, __jsx("mask", {
    id: "mask0_2916_43107",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "15",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 380,
      columnNumber: 27
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 381,
      columnNumber: 29
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_43107)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 383,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M5.56061 12.9498L4.46686 11.1415L2.41061 10.6748L2.6002 8.5748L1.2002 6.9998L2.6002 5.4248L2.41061 3.3248L4.46686 2.85814L5.56061 1.0498L7.5002 1.88105L9.43978 1.0498L10.5335 2.85814L12.5898 3.3248L12.4002 5.4248L13.8002 6.9998L12.4002 8.5748L12.5898 10.6748L10.5335 11.1415L9.43978 12.9498L7.5002 12.1186L5.56061 12.9498ZM6.75645 9.0998L10.2273 5.64355L9.48353 4.8998L6.75645 7.6123L5.51686 6.3873L4.77311 7.13105L6.75645 9.0998Z",
    fill: "#2CB1EC",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 384,
      columnNumber: 29
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 387,
      columnNumber: 25
    }
  }, __jsx("clipPath", {
    id: "clip0_2916_43107",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 388,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "white",
    transform: "translate(0.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 389,
      columnNumber: 29
    }
  }))))), __jsx("div", {
    className: "relative flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 395,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "text-xs text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 396,
      columnNumber: 23
    }
  }, __jsx("time", {
    dateTime: "2022-02-08",
    title: "February 8th, 2022",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 397,
      columnNumber: 25
    }
  }, "10 hours ago")), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 401,
      columnNumber: 23
    }
  }, __jsx("label", {
    className: "inline-flex items-center p-2 text-sm font-medium text-center text-gray-500 bg-white rounded-lg cursor-pointer hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 402,
      columnNumber: 25
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "sr-only peer",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 403,
      columnNumber: 27
    }
  }), __jsx("svg", {
    className: "w-4 h-4 rotate-90",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "currentColor",
    viewBox: "0 0 16 3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 404,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M2 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Zm6.041 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM14 0a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3Z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 405,
      columnNumber: 29
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 407,
      columnNumber: 27
    }
  }, "Comment settings"), __jsx("div", {
    className: "absolute z-10 hidden translate-x-1/2 bg-white divide-y divide-gray-100 rounded shadow peer-checked:block -left-full top-9 w-36",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 409,
      columnNumber: 27
    }
  }, __jsx("ul", {
    className: "py-1 text-sm text-gray-700",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 411,
      columnNumber: 29
    }
  }, __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 412,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 413,
      columnNumber: 33
    }
  }, "Edit")), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 416,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 417,
      columnNumber: 33
    }
  }, "Remove")), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 420,
      columnNumber: 31
    }
  }, __jsx("a", {
    href: "#",
    className: "block px-4 py-2 text-xs hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 421,
      columnNumber: 33
    }
  }, "Report")))))))), __jsx("p", {
    className: "text-sm text-black t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 431,
      columnNumber: 19
    }
  }, "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium dolor emque laudantium, totam rem aperiam, eaque ipsa quae ab ill"), __jsx("div", {
    className: "flex items-center mt-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 435,
      columnNumber: 19
    }
  }, __jsx("button", {
    type: "button",
    className: "mr-4 text-sm font-semibold text-base-600 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 436,
      columnNumber: 21
    }
  }, "Reply"), __jsx("div", {
    className: "w-6 h-px mr-2 bg-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 440,
      columnNumber: 21
    }
  }), __jsx("button", {
    type: "button",
    className: "text-sm text-base-600 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 442,
      columnNumber: 21
    }
  }, "View replies")))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 453,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapState, mapDispatch)(AddCommentModal));

/***/ }),

/***/ "./src/components/modals/buyRubiesModal.tsx":
/*!**************************************************!*\
  !*** ./src/components/modals/buyRubiesModal.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var _services_token_package_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services/token-package.service */ "./src/services/token-package.service.ts");
/* harmony import */ var _services_payment_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/payment.service */ "./src/services/payment.service.ts");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_9__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\buyRubiesModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }










const MockRubiesPackage = [{
  _id: "1",
  description: "",
  isActive: true,
  name: "a",
  ordering: 1,
  price: 99,
  tokens: 200
}, {
  _id: "2",
  description: "",
  isActive: true,
  name: "aa",
  ordering: 2,
  price: 120,
  tokens: 400
}, {
  _id: "3",
  description: "",
  isActive: true,
  name: "a",
  ordering: 1,
  price: 200,
  tokens: 1400
}, {
  _id: "4",
  description: "",
  isActive: true,
  name: "a",
  ordering: 1,
  price: 250,
  tokens: 3000
}, {
  _id: "5",
  description: "",
  isActive: true,
  name: "a",
  ordering: 1,
  price: 250,
  tokens: 3000
}, {
  _id: "6",
  description: "",
  isActive: true,
  name: "a",
  ordering: 1,
  price: 250,
  tokens: 3000
}];
const BuyRubiesModal = ({
  isOpen,
  onClose,
  performer
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_8__["useRouter"])();
  const {
    0: rubyPackages,
    1: setRubyPackages
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const {
    0: selectedPackage,
    1: setSelectedPackage
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])();
  const {
    0: paypalSettings,
    1: setPaypalSettings
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
    email: ''
  });
  const {
    0: isAgree,
    1: setIsAgree
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const onCompletePurchase = async () => {
    const purchaseTokenResponse = await _services_payment_service__WEBPACK_IMPORTED_MODULE_7__["paymentService"].purchaseTokenPackage(selectedPackage._id);
    if (purchaseTokenResponse) {
      router.push(purchaseTokenResponse.data.paypalApproveUrl);
    }
    return;
  };
  const onLinkPaypalAccount = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isBuyRubiesModalOpen: false,
      isLinkPaypalAccountModalOpen: true
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  const getRubyPackages = async () => {
    const rubyPackagesResponse = await _services_token_package_service__WEBPACK_IMPORTED_MODULE_6__["tokenPackageService"].search({});
    if (rubyPackagesResponse.data) {
      setRubyPackages(rubyPackagesResponse.data.data);
    }
    return;
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    getRubyPackages();
  }, [isOpen]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    var _performer$paypalSett;
    setPaypalSettings({
      email: (_performer$paypalSett = performer.paypalSetting) === null || _performer$paypalSett === void 0 ? void 0 : _performer$paypalSett.value
    });
  }, [performer]);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow pb-11",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 py-5 mb-10 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 15
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4200_27292",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4200_27292)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M12 20.6057L2.2981 8.9615L5.15385 3.25H18.8461L21.7019 8.9615L12 20.6057ZM9.22112 8.25H14.7789L13.0288 4.74995H10.9711L9.22112 8.25ZM11.25 17.3673V9.74995H4.92112L11.25 17.3673ZM12.75 17.3673L19.0789 9.74995H12.75V17.3673ZM16.4461 8.25H19.6539L17.9038 4.74995H14.6961L16.4461 8.25ZM4.34612 8.25H7.55385L9.30387 4.74995H6.09615L4.34612 8.25Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 21
    }
  }))), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 17
    }
  }, "Purchase Rubys")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 153,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("h4", {
    className: "text-center text-xl pb-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 13
    }
  }, "Sale! Get 30% off mobile prices."), __jsx("div", {
    className: "px-6 pb-8 grid grid-cols-2 gap-5 md:gap-6 md:grid-cols-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 13
    }
  }, rubyPackages.length && rubyPackages.map(rubyPackage => __jsx("button", {
    key: rubyPackage._id,
    className: `flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden ${rubyPackage === selectedPackage ? 'outline-purple outline-4' : ''}`,
    onClick: () => setSelectedPackage(rubyPackage),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 163,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "w-full flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 170,
      columnNumber: 19
    }
  }, __jsx("img", {
    className: "bg-white rounded-full w-13 p-1 m-auto",
    alt: "token",
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 21
    }
  })), __jsx("div", {
    className: "w-full px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 174,
      columnNumber: 19
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 175,
      columnNumber: 21
    }
  }, rubyPackage.tokens), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 21
    }
  }, "+", rubyPackage.bonusTokens, " free")), __jsx("div", {
    className: "w-full px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 19
    }
  }, __jsx("span", {
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 180,
      columnNumber: 19
    }
  }, "$", rubyPackage.price.toFixed(2)))))), __jsx("footer", {
    className: "flex flex-col px-6 items-center justify-between md:items-start md:flex-row",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 186,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "w-full flex justify-start items-center gap-2 py-4 border-b md:py-0 md:border-b-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187,
      columnNumber: 15
    }
  }, __jsx("img", {
    className: "w-12 p-1 rounded-full border",
    src: "/static/paypal-simple-logo.png",
    alt: "PayPal Logo",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 17
    }
  }), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 189,
      columnNumber: 17
    }
  }, __jsx("p", {
    className: "font-inter text-md",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 19
    }
  }, "Receiving PayPal Account"), paypalSettings !== null && paypalSettings !== void 0 && paypalSettings.email ? __jsx("p", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 21
    }
  }, paypalSettings.email) : __jsx("p", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 21
    }
  }, "No account linked")), __jsx("button", {
    className: "p-1 rounded-full transition hover:bg-black/10",
    onClick: onLinkPaypalAccount,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 196,
      columnNumber: 17
    }
  }, __jsx("img", {
    src: "/static/editpen-icon.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 19
    }
  }))), __jsx("div", {
    className: "w-full py-4 md:py-0 text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 15
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 17
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "secondary",
    className: "px-2",
    disabled: !isAgree || !paypalSettings.email || !selectedPackage,
    onClick: onCompletePurchase,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 208,
      columnNumber: 17
    }
  }, "Complete Purchase"), __jsx("fieldset", {
    className: "px-5 py-3 flex items-center justify-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 17
    }
  }, __jsx("input", {
    className: "w-4 h-4 text-black cursor-pointer",
    value: String(isAgree),
    onChange: e => setIsAgree(e.target.checked),
    type: "checkbox",
    name: "termsagree",
    style: {
      accentColor: '#212121'
    },
    id: "termsagree",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 19
    }
  }), __jsx("label", {
    htmlFor: "termsagree",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228,
      columnNumber: 19
    }
  }, "I agree to the ", __jsx(next_link__WEBPACK_IMPORTED_MODULE_9___default.a, {
    href: "/page/terms-of-service",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228,
      columnNumber: 62
    }
  }, __jsx("a", {
    target: "_blank",
    className: "font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 229,
      columnNumber: 21
    }
  }, "Terms of Service")), " of this purchase"))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(BuyRubiesModal));

/***/ }),

/***/ "./src/components/modals/buyRubiesWithDiamonds.tsx":
/*!*********************************************************!*\
  !*** ./src/components/modals/buyRubiesWithDiamonds.tsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
/* harmony import */ var _services_payment_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @services/payment.service */ "./src/services/payment.service.ts");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @services/user.service */ "./src/services/user.service.ts");
/* harmony import */ var _redux_user_actions__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @redux/user/actions */ "./src/redux/user/actions.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\buyRubiesWithDiamonds.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }

















const schema = yup__WEBPACK_IMPORTED_MODULE_2__["object"]({
  amount: yup__WEBPACK_IMPORTED_MODULE_2__["number"]().typeError("Must be a number").positive("Must be a positive number").required("Please enter an amount"),
  tandc: yup__WEBPACK_IMPORTED_MODULE_2__["bool"]().oneOf([true], "You must accept the terms and conditions").default(false).required()
});
const DonateRubiesWithDiamondsModal = ({
  isOpen,
  onClose,
  updateCurrentUser
}) => {
  var _errors$amount;
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_11__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__["default"])(onClose);
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    },
    watch
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_3__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const amountToSend = watch('amount');
  const {
    0: diamonds,
    1: setDiamonds
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0);
  const {
    0: realTimeDiamonds,
    1: setRealTimeDiamonds
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0);
  const onSubmit = async data => {
    try {
      if (!data.tandc) return antd__WEBPACK_IMPORTED_MODULE_12__["message"].error('You need to agree the terms');
      await _services_payment_service__WEBPACK_IMPORTED_MODULE_14__["paymentService"].tradeDiamond(data.amount);
      next_router__WEBPACK_IMPORTED_MODULE_1___default.a.reload();
    } catch (error) {
      console.error(error);
      antd__WEBPACK_IMPORTED_MODULE_12__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_13__["getResponseError"])(await error));
    }
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const getEarningData = async () => {
      try {
        const earning = await _services_user_service__WEBPACK_IMPORTED_MODULE_15__["userService"].me();
        setDiamonds(earning.data.balance);
        updateCurrentUser(earning.data);
      } catch (error) {
        // message.error(getResponseError(await error));
      }
    };
    getEarningData();
  }, []);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    setRealTimeDiamonds(Number(diamonds) - Number(amountToSend !== null && amountToSend !== void 0 ? amountToSend : 0));
  }, [diamonds, amountToSend]);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-sm max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 mb-3 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 17
    }
  }, "Buy Rubys w/ diamonds")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("form", {
    className: "px-6 pb-8",
    onSubmit: handleSubmit(onSubmit),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "mb-6 rounded-lg py-7 bg-base-200",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 15
    }
  }, __jsx("h2", {
    className: "flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 17
    }
  }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_9__["DiamondIcon"], {
    className: "w-10 h-10",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 19
    }
  }), __jsx("span", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 19
    }
  }, realTimeDiamonds))), __jsx("div", {
    className: "mb-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 15
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({
    id: "buy-rubies-diamond-amount"
  }, register("amount"), {
    type: "text",
    placeholder: "Enter amount of rubies",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message,
    suffixIcon: __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_9__["RubyIcon"], {
      className: "w-4 h-4 ",
      __self: undefined,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 118,
        columnNumber: 184
      }
    }), " / min"),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 17
    }
  }))), __jsx("div", {
    className: "mb-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 121,
      columnNumber: 15
    }
  }, __jsx("label", {
    className: "inline-flex items-center gap-2 text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 17
    }
  }, __jsx("input", _extends({}, register("tandc"), {
    type: "checkbox",
    className: "w-4 h-4 mr-auto text-base text-black bg-gray-100 rounded checked:bg-black border-base-400 focus:ring-2 focus:ring-offset-2 focus:ring-purple-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 19
    }
  })), "I agree to the terms of this purchase")), __jsx("div", {
    className: "flex justify-end gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 15
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 17
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["AppButton"], {
    type: "submit",
    disabled: !isValid,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 17
    }
  }, "Buy")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"],
  updateCurrentUser: _redux_user_actions__WEBPACK_IMPORTED_MODULE_16__["updateCurrentUser"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapState, mapDispatch)(DonateRubiesWithDiamondsModal));

/***/ }),

/***/ "./src/components/modals/changePaypalAccountModal.tsx":
/*!************************************************************!*\
  !*** ./src/components/modals/changePaypalAccountModal.tsx ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\changePaypalAccountModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }










const schema = yup__WEBPACK_IMPORTED_MODULE_6__["object"]({
  oldEmail: yup__WEBPACK_IMPORTED_MODULE_6__["string"]().email("Please enter a valid Email").required("Please enter a valid Email"),
  email: yup__WEBPACK_IMPORTED_MODULE_6__["string"]().email("Please enter a valid Email").required("Please enter a valid Email"),
  confirmEmail: yup__WEBPACK_IMPORTED_MODULE_6__["string"]().oneOf([yup__WEBPACK_IMPORTED_MODULE_6__["ref"]('email'), null], 'Emails must match').required('Please confirm your Email')
});
const ChangePaypalAccountModal = ({
  isOpen,
  onClose
}) => {
  var _errors$oldEmail, _errors$email, _errors$confirmEmail;
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_8__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onLinkPaypalAccount = data => {
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 15
    }
  }, __jsx("img", {
    className: "w-12 p-1 rounded-full border",
    src: "/static/paypal-simple-logo.png",
    alt: "PayPal Logo",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 17
    }
  }, "Change email address")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("form", {
    onSubmit: handleSubmit(onLinkPaypalAccount),
    className: "py-6 px-0 mx-6 border-b",
    action: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 13
    }
  }, __jsx("legend", {
    className: "text-black/90 text-sm md:text-md pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 15
    }
  }, "You may change the email address associated with your account by completing the form below."), __jsx("fieldset", {
    className: "space-y-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 15
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__["AppInput"], _extends({
    placeholder: "johndoe@gmail.com",
    id: "paypal-oldEmail",
    label: "Current email address"
  }, register("oldEmail"), {
    type: "text",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$oldEmail = errors.oldEmail) === null || _errors$oldEmail === void 0 ? void 0 : _errors$oldEmail.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 17
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__["AppInput"], _extends({
    placeholder: "johndoe@gmail.com",
    id: "paypal-email",
    label: "New Email address"
  }, register("email"), {
    type: "text",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 17
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__["AppInput"], _extends({
    placeholder: "johndoe@gmail.com",
    id: "paypal-newEmail",
    label: "Confirm Email address"
  }, register("confirmEmail"), {
    type: "text",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$confirmEmail = errors.confirmEmail) === null || _errors$confirmEmail === void 0 ? void 0 : _errors$confirmEmail.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 17
    }
  })))), __jsx("footer", {
    className: "w-full p-4 pb-6 text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-2",
    disabled: false,
    onClick: onLinkPaypalAccount,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 15
    }
  }, "Save"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(ChangePaypalAccountModal));

/***/ }),

/***/ "./src/components/modals/confirmPrivateVideoModal.tsx":
/*!************************************************************!*\
  !*** ./src/components/modals/confirmPrivateVideoModal.tsx ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\confirmPrivateVideoModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const ConfirmPrivateVideoModal = ({
  isOpen,
  onClose,
  performerInfos,
  performerTotalFollowers
}) => {
  var _performerInfos$name, _performerInfos$usern;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const openPurchaseRubysModal = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isWaitingForModelModal: true,
      confirmPrivateVideoModal: {
        isOpen: false,
        performerInfos: performerInfos,
        performerTotalFollowers: performerTotalFollowers
      }
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-4xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 15
    }
  }, __jsx("img", {
    src: "/static/caution-icon.png",
    alt: "Caution Icon",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 17
    }
  }, "Confirm your private video date")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "py-6 px-6 mx-6 border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "bg-center bg-cover relative performer-profile-image-ratio max-w-[200px] mx-auto rounded",
    style: {
      backgroundImage: `url(${(performerInfos === null || performerInfos === void 0 ? void 0 : performerInfos.avatar) || '/static/no-avatar.png'})`
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 15
    }
  }, __jsx("header", {
    className: "absolute top-0 right-0 left-0 z-30 p-2 py-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex items-center justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 23
    }
  }, __jsx("span", {
    className: "block w-5 h-5 rounded-full bg-green-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 25
    }
  }), __jsx("span", {
    className: "text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 25
    }
  }, "Active")))), __jsx("div", {
    className: "absolute top-0 left-0 right-0 bottom-0 m-auto bg-black/30 z-10",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 17
    }
  }), __jsx("div", {
    className: "absolute top-0 left-0 right-0 bottom-0 m-auto flex flex-col items-baseline justify-end z-20 px-3 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 17
    }
  }, __jsx("p", {
    className: "text-white font-semibold flex items-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 19
    }
  }, (performerInfos === null || performerInfos === void 0 ? void 0 : (_performerInfos$name = performerInfos.name) === null || _performerInfos$name === void 0 ? void 0 : _performerInfos$name.split(' ')[0].substring(0, 10)) || (performerInfos === null || performerInfos === void 0 ? void 0 : (_performerInfos$usern = performerInfos.username) === null || _performerInfos$usern === void 0 ? void 0 : _performerInfos$usern.split(' ')[0].substring(0, 15)) || 'N/A', (performerInfos === null || performerInfos === void 0 ? void 0 : performerInfos.verifiedAccount) && __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["TickIcon"], {
    className: "ml-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 57
    }
  })), __jsx("div", {
    className: "flex items-center justify-between w-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 19
    }
  }, __jsx("p", {
    className: "text-white flex items-center ml-[-3px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 21
    }
  }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["ProfileIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 23
    }
  }), performerTotalFollowers || 0, ' ', "Fans")))), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    className: `rounded-t-none w-full rounded-b-lg ${performerInfos.gender === 'male' ? 'bg-blue-900' : ''} w-[200px] mx-auto block`,
    variant: "noFlex",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 15
    }
  }, __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 17
    }
  }, "Follow"))), __jsx("div", {
    className: "py-6 px-0 mx-6 border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center justify-between pb-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 17
    }
  }, __jsx("h2", {
    className: "font-semibold text-lg text-black/90",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 19
    }
  }, "Private room fee  "), __jsx("a", {
    className: "text-purple-800 text-lg",
    href: "#",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 19
    }
  }, "Need help?")), __jsx("table", {
    className: "w-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 17
    }
  }, __jsx("thead", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 19
    }
  }, __jsx("th", {
    className: "text-left text-black/90 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 21
    }
  }, "# of Rubys"), __jsx("th", {
    className: "text-left text-black/90 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 21
    }
  }, "Details")), __jsx("tbody", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 19
    }
  }, __jsx("tr", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 21
    }
  }, __jsx("td", {
    className: "flex items-center text-2xl py-2 text-black/90",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 23
    }
  }, "5 ", __jsx("img", {
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 27
    }
  })), __jsx("td", {
    className: "py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 23
    }
  }, "for the first minute")), __jsx("tr", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 21
    }
  }, __jsx("td", {
    className: "flex items-center text-2xl py-2 text-black/90",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 23
    }
  }, "1 ", __jsx("img", {
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 27
    }
  })), __jsx("td", {
    className: "py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 23
    }
  }, "Each additional minute")))), __jsx("p", {
    className: "pt-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 17
    }
  }, "Note: Private room fee will be automatically deducted from your account at the beginning of each minute.")), __jsx("footer", {
    className: "w-full p-4 pb-6 text-right flex items-center flex-col md:flex-row gap-2 md:gap-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 13
    }
  }, __jsx("fieldset", {
    className: "py-3 px-2 flex items-center justify-start md:justify-center gap-2 w-full order-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 15
    }
  }, __jsx("input", {
    className: "w-6 h-6 text-black cursor-pointer rounded"
    // value={String(isAgree)} 
    // onChange={(e) => setIsAgree(e.target.checked)} 
    ,
    type: "checkbox",
    name: "termsagree",
    style: {
      accentColor: '#212121'
    },
    id: "termsagree",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 17
    }
  }), __jsx("label", {
    className: "text-left",
    htmlFor: "termsagree",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 17
    }
  }, "I agree to the ", __jsx("a", {
    href: "#",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 82
    }
  }, "Terms and Conditions"))), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0 ml-auto w-full md:w-auto order-3 md:order-2 bg-black/90 text-white md:bg-transparent md:text-black/90",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-4 w-full md:w-auto order-2 md:order-3",
    disabled: false,
    onClick: openPurchaseRubysModal,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 15
    }
  }, "Accept"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 174,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(ConfirmPrivateVideoModal));

/***/ }),

/***/ "./src/components/modals/crossPromotionPurchaseModal.tsx":
/*!***************************************************************!*\
  !*** ./src/components/modals/crossPromotionPurchaseModal.tsx ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
/* harmony import */ var _components_stream_icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @components/stream/icons */ "./src/components/stream/icons.tsx");
/* harmony import */ var _services_performer_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services/performer.service */ "./src/services/performer.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\crossPromotionPurchaseModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }









const CrossPromotionPurchaseModal = ({
  isOpen,
  onClose,
  performerId
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const {
    0: performer,
    1: setPerformer
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const openPurchaseRubysModal = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      crossPromotionPurchaseModal: {
        isOpen: false,
        performerId: ''
      }
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  const getPerformer = async () => {
    const respPerformerProfile = await _services_performer_service__WEBPACK_IMPORTED_MODULE_8__["performerService"].search({
      performerIds: performerId
    });
    if (respPerformerProfile.data.total) {
      setPerformer(respPerformerProfile.data.data[0]);
    }
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    performerId && getPerformer();
  }, [performerId]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    console.log('performer', performer);
  }, [performer]);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-4xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 17
    }
  })), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "py-6 px-6 mx-6 text-4xl text-center text-black pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 15
    }
  }, "Boost your fans with cross promotion!"), __jsx("p", {
    className: "text-lg text-center text-black pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 15
    }
  }, "My content will promote you!"), __jsx("div", {
    className: "bg-gray-100 flex items-center justify-center w-full py-6 px-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "overflow-hidden rounded-lg max-w-[12rem] relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "bg-purple-700 py-2 px-6 text-white flex gap-1 items-center justify-center font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 19
    }
  }, __jsx(_components_stream_icons__WEBPACK_IMPORTED_MODULE_7__["PersonSmallWhiteIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 124
    }
  }), " ", (performer === null || performer === void 0 ? void 0 : performer.stats.totalFollower) || 0, " fans"), __jsx("img", {
    className: "w-full rounded-b-lg",
    src: performer !== null && performer !== void 0 && performer.avatar ? performer.avatar : "/images/default-avatar.png",
    alt: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 19
    }
  }), __jsx("div", {
    className: "absolute bottom-1 right-0 left-0 flex items-start justify-center flex-col p-2 px-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 19
    }
  }, __jsx("p", {
    className: "font-semibold text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 21
    }
  }, performer === null || performer === void 0 ? void 0 : performer.name), __jsx("p", {
    className: "text-white text-sm",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 21
    }
  }, "@", performer === null || performer === void 0 ? void 0 : performer.username)))), __jsx("div", {
    className: "py-6 px-6 bg-gray-200",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 15
    }
  }, __jsx("table", {
    className: "table-fixed border-collapse w-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 17
    }
  }, __jsx("thead", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 19
    }
  }, __jsx("th", {
    className: "bg-white border text-center p-2 font-normal",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 21
    }
  }, "Videos"), __jsx("th", {
    className: "bg-white border text-center p-2 font-normal",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 21
    }
  }, "Photos"), __jsx("th", {
    className: "bg-white border text-center p-2 font-normal",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 21
    }
  }, "Total views")), __jsx("tbody", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 19
    }
  }, __jsx("tr", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 21
    }
  }, __jsx("td", {
    className: "bg-white border text-center p-2 font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 23
    }
  }, performer === null || performer === void 0 ? void 0 : performer.stats.totalActiveVideos), __jsx("td", {
    className: "bg-white border text-center p-2 font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 23
    }
  }, performer === null || performer === void 0 ? void 0 : performer.stats.totalActivePhotos), __jsx("td", {
    className: "bg-white border text-center p-2 font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 23
    }
  }, performer === null || performer === void 0 ? void 0 : performer.stats.views))))), __jsx("div", {
    className: "bg-gray-100 flex items-center justify-center flex-col w-full py-6 px-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "bg-white w-[200px] h-[200px] rounded-full flex flex-col items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 17
    }
  }, __jsx("h5", {
    className: "text-4xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 19
    }
  }, "10 days"), __jsx("h6", {
    className: "text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 19
    }
  }, "1000 ", __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["RubySmallIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 52
    }
  }))), __jsx("p", {
    className: "text-lg text-black py-6 text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 17
    }
  }, "During this time a link to your profile will appear on every video and photo in my library"))), __jsx("footer", {
    className: "w-full pt-4 text-right flex items-center flex-col gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 13
    }
  }, __jsx("p", {
    className: "text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 15
    }
  }, "Next available promo period starts in"), __jsx("p", {
    className: "text-center text-black font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 15
    }
  }, "hh:mm:ss"), __jsx("div", {
    className: "mt-3 p-4 pt-6 flex items-center justify-between gap-2 w-full border-t border-gray-300",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex-1 flex items-center justify-start gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 17
    }
  }, __jsx("input", {
    color: "#000000",
    className: "text-black rounded",
    type: "checkbox",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 19
    }
  }), __jsx("label", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 19
    }
  }, "Confirm purchase")), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "mx-1 border-0 ml-auto md:w-auto order-3 md:order-2 text-white",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 17
    }
  }, "Submit Order")), __jsx("div", {
    className: "p-4 flex items-center justify-between gap-2 w-full bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 17
    }
  }, "Ruby balance"), __jsx("span", {
    className: "mr-auto text-lg text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 17
    }
  }, "15403 ", __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["RubySmallIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 68
    }
  })), __jsx("a", {
    className: "font-semibold text-purple-700",
    href: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 17
    }
  }, "Need help?")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(CrossPromotionPurchaseModal));

/***/ }),

/***/ "./src/components/modals/crossPromotionPurchaseSuccessModal.tsx":
/*!**********************************************************************!*\
  !*** ./src/components/modals/crossPromotionPurchaseSuccessModal.tsx ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var _components_stream_icons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/stream/icons */ "./src/components/stream/icons.tsx");
/* harmony import */ var _services_performer_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services/performer.service */ "./src/services/performer.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\crossPromotionPurchaseSuccessModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const SuccessCrossPromotionIcon = () => {
  return __jsx("svg", {
    width: "60",
    height: "60",
    viewBox: "0 0 60 60",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 5
    }
  }, __jsx("rect", {
    width: "60",
    height: "60",
    rx: "30",
    fill: "#212121",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22,
      columnNumber: 7
    }
  }), __jsx("mask", {
    id: "mask0_6896_176912",
    maskUnits: "userSpaceOnUse",
    x: "14",
    y: "15",
    width: "31",
    height: "30",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "14.5",
    y: "15",
    width: "30",
    height: "30",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 7
    }
  })), __jsx("g", {
    mask: "url(#mask0_6896_176912)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M43.9575 27.9447L39.0682 20.6341C38.9366 20.4372 38.6829 20.3777 38.4829 20.4966C37.7047 20.9607 36.7618 20.9881 35.9602 20.5694L33.4674 19.2679C32.269 18.6423 30.8682 18.5806 29.6235 19.0985L27.2901 20.0697C26.9656 20.2046 26.6709 20.3952 26.4148 20.633C26.2628 20.6159 26.1088 20.607 25.9554 20.607C25.3146 20.607 24.6709 20.7615 24.0945 21.0535C23.5918 21.3084 22.9887 21.2683 22.5204 20.9491L21.1068 19.985C21.0079 19.9178 20.8876 19.894 20.7723 19.9193C20.657 19.9445 20.5556 20.0166 20.4912 20.1199L15.8224 27.5865C15.6882 27.8013 15.7459 28.0892 15.9515 28.2293L17.6608 29.3948C17.8259 29.5074 17.9668 29.6511 18.0786 29.8217C18.1903 29.9926 18.2675 30.1817 18.3081 30.3838C18.3895 30.7895 18.5692 31.1689 18.824 31.4839L18.5457 31.9286C17.9825 32.8292 18.2259 34.0404 19.0883 34.6285C19.3929 34.8362 19.7455 34.9458 20.1085 34.9458C20.2914 34.9458 20.47 34.9176 20.6404 34.8652C20.6468 34.9172 20.6547 34.9692 20.665 35.0209C20.7674 35.531 21.0539 35.9687 21.4716 36.2533C21.7761 36.461 22.1288 36.5709 22.492 36.5709C22.6753 36.5709 22.8539 36.5427 23.0243 36.49C23.0909 37.0383 23.378 37.5537 23.8548 37.8788C24.1594 38.0864 24.512 38.1964 24.8749 38.1964C25.0578 38.1964 25.2364 38.1682 25.4069 38.1154C25.4133 38.1675 25.4211 38.2195 25.4314 38.2715C25.5339 38.7812 25.8203 39.2189 26.238 39.5039C26.5426 39.7115 26.8952 39.8212 27.2585 39.8212C27.8925 39.8212 28.4775 39.4905 28.8233 38.9373L29.0418 38.5884L30.8198 39.7885C31.1343 40.0028 31.488 40.1054 31.8385 40.1054C32.4487 40.1054 33.0475 39.794 33.4055 39.2219C33.6126 38.8905 33.7104 38.5174 33.7086 38.1485C33.9168 38.228 34.1331 38.2671 34.3484 38.2671C34.9586 38.2671 35.5574 37.9557 35.9153 37.3836C36.1359 37.0306 36.2324 36.6301 36.2167 36.2377C36.3982 36.289 36.5854 36.3154 36.7743 36.3154C36.9226 36.3154 37.0721 36.2994 37.2208 36.2667C37.7837 36.1434 38.2665 35.7986 38.5811 35.2959C38.8494 34.8668 38.9671 34.3663 38.9223 33.8636C39.1411 33.939 39.3678 33.9758 39.593 33.9758C40.2982 33.9758 40.9913 33.6166 41.4023 32.9601C41.6314 32.5937 41.7524 32.1691 41.7524 31.7325C41.7524 31.4189 41.6887 31.1072 41.5677 30.8211C41.6926 30.3634 41.9631 29.9658 42.3402 29.6906L43.8478 28.5912C44.0488 28.4448 44.098 28.155 43.9575 27.9447ZM19.5749 33.8506C19.123 33.5426 18.9956 32.908 19.2906 32.4362L20.036 31.2447C20.2175 30.9545 20.5242 30.7814 20.8561 30.7814C21.0458 30.7814 21.2301 30.839 21.3902 30.9482C21.8417 31.2562 21.9695 31.8904 21.6745 32.3623L20.9291 33.5538C20.748 33.8436 20.4413 34.0167 20.1086 34.0167C19.919 34.0171 19.7346 33.9595 19.5749 33.8506ZM21.9581 35.4757C21.7393 35.3263 21.5891 35.0971 21.5354 34.83C21.4816 34.5628 21.5307 34.2901 21.6738 34.0617L22.4192 32.8701C22.6003 32.5803 22.907 32.4072 23.2394 32.4072C23.429 32.4072 23.6137 32.4648 23.7734 32.5736C23.9923 32.723 24.1424 32.9522 24.1961 33.2194C24.2499 33.4865 24.2008 33.7592 24.0577 33.9877L23.3123 35.1792C23.1312 35.469 22.8245 35.6421 22.4922 35.6421C22.3025 35.6421 22.1178 35.5846 21.9581 35.4757ZM24.3413 37.1012C23.8894 36.7932 23.762 36.1586 24.057 35.6867L24.8024 34.4952C24.9839 34.2051 25.2906 34.0319 25.6226 34.0319C25.8122 34.0319 25.9965 34.0895 26.1567 34.1988C26.6082 34.5068 26.7359 35.141 26.4409 35.6128L25.6955 36.8043C25.5144 37.0941 25.2077 37.2673 24.875 37.2673C24.6854 37.2677 24.5011 37.21 24.3413 37.1012ZM27.2586 38.8927C27.0689 38.8927 26.8843 38.8351 26.7249 38.7266C26.506 38.5773 26.3559 38.3481 26.3022 38.0809C26.2484 37.8138 26.2975 37.5411 26.4402 37.3129L26.7914 36.7519L27.1856 36.1214C27.3667 35.8316 27.6734 35.6585 28.0058 35.6585C28.1954 35.6585 28.3801 35.7161 28.5398 35.8249C28.7587 35.9743 28.9088 36.2035 28.9626 36.4707C29.0163 36.7378 28.9672 37.0105 28.8241 37.239L28.0787 38.4305C27.8976 38.7195 27.5909 38.8927 27.2586 38.8927ZM40.657 32.4526C40.2816 33.053 39.5041 33.2295 38.9245 32.8461C38.9217 32.8442 38.9195 32.8427 38.9163 32.8409L33.6657 29.2599L33.1793 30.0375L37.4689 32.9629C37.7514 33.1558 37.945 33.4515 38.0144 33.7963C38.0838 34.1411 38.0204 34.4933 37.8358 34.7883C37.6515 35.0833 37.3679 35.2854 37.0377 35.3578C36.7075 35.4303 36.3702 35.3638 36.0877 35.1713L31.7978 32.2459L31.3114 33.0235L34.8862 35.4615C35.3381 35.7695 35.4655 36.4041 35.1705 36.8756C34.8756 37.3474 34.2679 37.4804 33.8163 37.1724L32.8631 36.5226L30.2411 34.7348L29.7547 35.5124L32.3766 37.3002C32.8282 37.6082 32.9555 38.2424 32.6606 38.7143C32.5175 38.9428 32.298 39.0996 32.0422 39.1557C31.7864 39.2118 31.5252 39.1605 31.3042 39.01L29.528 37.8111L29.5686 37.7461C29.8415 37.3099 29.9354 36.789 29.833 36.2789C29.7305 35.7688 29.444 35.3311 29.0263 35.0465C28.7218 34.8389 28.3691 34.7292 28.0059 34.7292C27.8226 34.7292 27.644 34.7575 27.4736 34.8102C27.4067 34.2622 27.1199 33.7465 26.6431 33.4218C26.3382 33.2138 25.9856 33.1038 25.6227 33.1038C25.4398 33.1038 25.2615 33.132 25.0911 33.1844C25.0847 33.1324 25.0769 33.0804 25.0665 33.0287C24.9641 32.5186 24.6776 32.0809 24.2599 31.7964C23.9554 31.5887 23.6027 31.4787 23.2395 31.4787C23.0562 31.4787 22.8776 31.5069 22.7072 31.5597C22.6403 31.0117 22.3535 30.496 21.8767 30.1713C21.5718 29.9632 21.2192 29.8532 20.8563 29.8532C20.2557 29.8532 19.6988 30.1505 19.3476 30.6531C19.269 30.5108 19.2113 30.3555 19.1786 30.1935C19.1142 29.8718 18.9911 29.5705 18.8128 29.2978C18.6346 29.0258 18.4104 28.7966 18.1471 28.6171L16.8106 27.7054L20.9937 21.0171L22.0352 21.7274C22.7632 22.2238 23.7014 22.2858 24.4838 21.8898C24.8692 21.6943 25.2929 21.5769 25.7206 21.5454L23.4641 25.1533C23.3353 25.3591 23.2912 25.6047 23.3395 25.8455C23.3879 26.0859 23.5231 26.2924 23.7203 26.4269L23.8918 26.544C24.4337 26.9136 25.0435 27.0901 25.647 27.0901C26.6988 27.0901 27.731 26.5536 28.3476 25.5676L29.5001 23.7248C29.6104 23.5483 29.8373 23.4989 30.006 23.6141L40.2907 30.6271C40.4668 30.7471 40.6067 30.905 40.7066 31.0959C40.8088 31.2902 40.8628 31.5109 40.8628 31.7327C40.8628 31.9883 40.7914 32.2375 40.657 32.4526ZM41.8304 28.9293C41.4547 29.2032 41.1522 29.561 40.9409 29.9734C40.8882 29.9295 40.8331 29.8879 40.7765 29.8493L30.4924 22.836C30.281 22.6918 30.0434 22.6231 29.8078 22.6231C29.3979 22.6231 28.9955 22.8323 28.755 23.2168L27.6025 25.0596C26.9001 26.1828 25.4534 26.4997 24.3777 25.7663L24.2133 25.6541L26.6449 21.7665C26.8812 21.3887 27.2185 21.1007 27.6198 20.9335L29.9532 19.9623C30.9623 19.5421 32.0981 19.5923 33.0697 20.0994L35.5625 21.4009C36.5075 21.8943 37.6006 21.9226 38.558 21.4942L42.9734 28.0963L41.8304 28.9293Z",
    fill: "white",
    stroke: "white",
    strokeWidth: "0.75",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 7
    }
  })));
};
const CrossPromotionPurchaseSuccessModal = ({
  isOpen,
  onClose,
  performerId
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_1__["useDispatch"])();
  const {
    0: performer,
    1: setPerformer
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const openPurchaseRubysModal = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_2__["updateModals"])({
      crossPromotionPurchaseSuccessModal: {
        isOpen: false,
        performerId: ''
      }
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_3__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_4__["default"])(onClose);
  const getPerformer = async () => {
    const respPerformerProfile = await _services_performer_service__WEBPACK_IMPORTED_MODULE_6__["performerService"].search({
      performerIds: performerId
    });
    if (respPerformerProfile.data.total) {
      setPerformer(respPerformerProfile.data.data[0]);
    }
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    performerId && getPerformer();
  }, [performerId]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    console.log('performer', performer);
  }, [performer]);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-4xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 17
    }
  })), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "py-6 px-6 mx-6 text-4xl text-center text-black pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 15
    }
  }, "Cross promotion confirmed"), __jsx("p", {
    className: "text-center text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 15
    }
  }, "Next available promo period starts in"), __jsx("p", {
    className: "text-center text-black font-semibold pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 15
    }
  }, "hh:mm:ss"), __jsx("div", {
    className: "bg-gray-100 flex items-center justify-center w-full py-6 px-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "overflow-hidden rounded-lg max-w-[12rem] relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "bg-purple-700 py-2 px-6 text-white flex gap-1 items-center justify-center font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 19
    }
  }, __jsx(_components_stream_icons__WEBPACK_IMPORTED_MODULE_5__["PersonSmallWhiteIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 124
    }
  }), " ", (performer === null || performer === void 0 ? void 0 : performer.stats.totalFollower) || 0, " fans"), __jsx("img", {
    className: "w-full rounded-b-lg",
    src: performer !== null && performer !== void 0 && performer.avatar ? performer.avatar : "/images/default-avatar.png",
    alt: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 19
    }
  }), __jsx("div", {
    className: "absolute bottom-1 right-0 left-0 flex items-start justify-center flex-col p-2 px-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 19
    }
  }, __jsx("p", {
    className: "font-semibold text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 21
    }
  }, performer === null || performer === void 0 ? void 0 : performer.name), __jsx("p", {
    className: "text-white text-sm",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 21
    }
  }, "@", performer === null || performer === void 0 ? void 0 : performer.username)))), __jsx("div", {
    className: "py-6 px-6 bg-gray-200 flex items-center justify-center flex-col gap-4 rounded-b-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 15
    }
  }, __jsx("p", {
    className: "text-center text-black text-lg max-w-[260px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 17
    }
  }, "You can also pre-purchase the next period here"), __jsx(SuccessCrossPromotionIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 17
    }
  }), __jsx("p", {
    className: "m-auto font-semibold flex flex-col items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 17
    }
  }, __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 19
    }
  }, "Cross"), " ", __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 38
    }
  }, "Promotion"))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_2__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__["connect"])(mapState, mapDispatch)(CrossPromotionPurchaseSuccessModal));

/***/ }),

/***/ "./src/components/modals/deleteAccountModal.tsx":
/*!******************************************************!*\
  !*** ./src/components/modals/deleteAccountModal.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\deleteAccountModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }










const schema = yup__WEBPACK_IMPORTED_MODULE_1__["object"]({
  text: yup__WEBPACK_IMPORTED_MODULE_1__["string"]().oneOf(['caster.com'], 'The text must be exactly "caster.com"').required('Text is required')
});
const DeleteAccountModal = ({
  isOpen,
  onClose
}) => {
  var _errors$text;
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    register,
    handleSubmit,
    formState: {
      errors,
      isValid
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_2__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__["yupResolver"])(schema),
    mode: 'onBlur'
  });
  const onSubmit = async data => {
    try {
      setIsLoading(true);
      setTimeout(() => {
        setIsLoading(false);
      }, 3000);
    } catch (error) {
      console.log(error);
    }
  };
  const handleClose = () => {
    onClose();
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_8__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_9__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto overflow-x-hidden px-6 fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "relative w-full max-w-[396px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "relative px-8 pt-4 pb-10 bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex items-center justify-end rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 13
    }
  }, __jsx("button", {
    onClick: handleClose,
    type: "button",
    className: "absolute inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 top-4 right-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 73,
      columnNumber: 13
    }
  }, __jsx("h3", {
    className: "mb-4 text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 17
    }
  }, __jsx("svg", {
    className: "w-6 h-6",
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 19
    }
  }, __jsx("mask", {
    id: "mask0_3438_56979",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 21
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 23
    }
  })), __jsx("g", {
    mask: "url(#mask0_3438_56979)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 21
    }
  }, __jsx("path", {
    d: "M4.46758 20.5009C3.31199 20.5009 2.59041 19.2492 3.16953 18.2492L10.702 5.24242C11.2798 4.24471 12.7203 4.24472 13.2981 5.24242L20.8306 18.2492C21.4097 19.2492 20.6881 20.5009 19.5326 20.5009H4.46758ZM12.0001 17.8086C12.2289 17.8086 12.4207 17.7312 12.5755 17.5764C12.7303 17.4216 12.8077 17.2298 12.8077 17.0009C12.8077 16.7721 12.7303 16.5803 12.5755 16.4255C12.4207 16.2707 12.2289 16.1933 12.0001 16.1933C11.7712 16.1933 11.5794 16.2707 11.4246 16.4255C11.2698 16.5803 11.1924 16.7721 11.1924 17.0009C11.1924 17.2298 11.2698 17.4216 11.4246 17.5764C11.5794 17.7312 11.7712 17.8086 12.0001 17.8086ZM11.2501 15.1933H12.75V10.1933H11.2501V15.1933Z",
    fill: "#DC1C1C",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 23
    }
  }))), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 19
    }
  }, "Delete account"))), __jsx("p", {
    className: "mt-3 mb-6 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 15
    }
  }, "Your account will be deactivated immediately, and all data will be automatically deleted and can not be restored."), __jsx("p", {
    className: "mb-2 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 15
    }
  }, "Type ", __jsx("span", {
    className: "font-bold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 22
    }
  }, "caster.com"), " in the box below to confirm your account deletion."), __jsx("form", {
    onSubmit: handleSubmit(onSubmit),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 15
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_4__["AppInput"], _extends({
    className: "bg-base-200"
  }, register("text"), {
    type: "text",
    id: "delete-account-text",
    placeholder: "Type caster.com",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$text = errors.text) === null || _errors$text === void 0 ? void 0 : _errors$text.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 17
    }
  })), __jsx("p", {
    className: "mt-2 mb-8 text-xs text-base-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 17
    }
  }, "After you submit your request, we will disable your account. It may take up to 30 days to fully delete and remove all your data."), __jsx("button", {
    type: "submit",
    className: `mb-3 w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["buttonVariants"])({
      variant: 'error',
      disabled: !isValid || isLoading
    })}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 17
    }
  }, isLoading && __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 21
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 23
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 25
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 25
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 23
    }
  }, "Loading...")), !isLoading && __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 21
    }
  }, "Confirm account deletion")), __jsx("button", {
    type: "button",
    onClick: handleClose,
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["buttonVariants"])({
      variant: 'secondary'
    })}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 17
    }
  }, "Cancel")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapState, mapDispatch)(DeleteAccountModal));

/***/ }),

/***/ "./src/components/modals/donateRubiesModal.tsx":
/*!*****************************************************!*\
  !*** ./src/components/modals/donateRubiesModal.tsx ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\donateRubiesModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }











const schema = yup__WEBPACK_IMPORTED_MODULE_2__["object"]({
  amount: yup__WEBPACK_IMPORTED_MODULE_2__["number"]().typeError("Must be a number").positive("Must be a positive value").required("Please enter an amount").min(1, "Must be at least 1")
});
const DonateRubiesModal = ({
  isOpen,
  onClose
}) => {
  var _errors$amount;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["useDispatch"])();
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_3__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = data => {
    try {} catch (error) {
      console.error(error);
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow pb-11",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 mb-10 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 15
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4200_27292",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4200_27292)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M12 20.6057L2.2981 8.9615L5.15385 3.25H18.8461L21.7019 8.9615L12 20.6057ZM9.22112 8.25H14.7789L13.0288 4.74995H10.9711L9.22112 8.25ZM11.25 17.3673V9.74995H4.92112L11.25 17.3673ZM12.75 17.3673L19.0789 9.74995H12.75V17.3673ZM16.4461 8.25H19.6539L17.9038 4.74995H14.6961L16.4461 8.25ZM4.34612 8.25H7.55385L9.30387 4.74995H6.09615L4.34612 8.25Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 21
    }
  }))), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 17
    }
  }, "Donate Rubys")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "flex flex-col gap-6 px-6 mb-6 md:flex-row",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "md:max-w-[200px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 15
    }
  }, __jsx("div", {
    style: {
      backgroundImage: `url(${'/images/default-avatar.png'})`
    },
    className: "relative w-[200px] md:w-auto h-[277px] mx-auto mb-6 bg-center bg-cover rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "absolute left-3 bottom-16",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 21
    }
  }, __jsx("h4", {
    className: "font-semibold text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 23
    }
  }, "Business Time"), __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "13",
    height: "13",
    viewBox: "0 0 13 13",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 23
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_3975_31167)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 25
    }
  }, __jsx("mask", {
    id: "mask0_3975_31167",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "13",
    height: "13",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "13",
    height: "13",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 29
    }
  })), __jsx("g", {
    mask: "url(#mask0_3975_31167)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M4.69886 12.0251L3.68324 10.3459L1.77386 9.9126L1.9499 7.9626L0.649902 6.5001L1.9499 5.0376L1.77386 3.0876L3.68324 2.65426L4.69886 0.975098L6.4999 1.74697L8.30094 0.975098L9.31657 2.65426L11.2259 3.0876L11.0499 5.0376L12.3499 6.5001L11.0499 7.9626L11.2259 9.9126L9.31657 10.3459L8.30094 12.0251L6.4999 11.2532L4.69886 12.0251ZM5.80928 8.4501L9.03219 5.24072L8.34157 4.5501L5.80928 7.06885L4.65824 5.93135L3.96761 6.62197L5.80928 8.4501Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 29
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 25
    }
  }, __jsx("clipPath", {
    id: "clip0_3975_31167",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 27
    }
  }, __jsx("rect", {
    width: "13",
    height: "13",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 29
    }
  })))))), __jsx("div", {
    className: "absolute left-3 bottom-11",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "inline-flex items-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 21
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 23
    }
  }, __jsx("mask", {
    id: "mask0_4200_12005",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "14",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 25
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 27
    }
  })), __jsx("g", {
    mask: "url(#mask0_4200_12005)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M7.00005 7.00005C6.41672 7.00005 5.92088 6.79588 5.51255 6.38755C5.10422 5.97922 4.90005 5.48338 4.90005 4.90005C4.90005 4.31672 5.10422 3.82088 5.51255 3.41255C5.92088 3.00422 6.41672 2.80005 7.00005 2.80005C7.58338 2.80005 8.07922 3.00422 8.48755 3.41255C8.89588 3.82088 9.10005 4.31672 9.10005 4.90005C9.10005 5.48338 8.89588 5.97922 8.48755 6.38755C8.07922 6.79588 7.58338 7.00005 7.00005 7.00005ZM2.80005 11.2V9.80005C2.80005 9.57644 2.86081 9.36498 2.98234 9.16567C3.10387 8.96637 3.27158 8.79866 3.48547 8.66255C4.02019 8.35144 4.58651 8.11324 5.18442 7.94797C5.78234 7.78269 6.38755 7.70005 7.00005 7.70005C7.61255 7.70005 8.21776 7.78269 8.81567 7.94797C9.41359 8.11324 9.97991 8.35144 10.5146 8.66255C10.7285 8.78894 10.8962 8.95422 11.0178 9.15838C11.1393 9.36255 11.2 9.57644 11.2 9.80005V11.2H2.80005Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 27
    }
  }))), __jsx("span", {
    className: "text-[10px] text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 23
    }
  }, "1500 fans"))), __jsx("div", {
    className: "absolute bottom-0 left-0 right-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 19
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full rounded-b-lg rounded-t-none ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 21
    }
  }, "Follow"))), __jsx("h4", {
    className: "mb-3 font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131,
      columnNumber: 17
    }
  }, "Help me get to the top!"), __jsx("p", {
    className: "text-black-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135,
      columnNumber: 17
    }
  }, "All donations contribute to", __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
    href: "#",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 19
    }
  }, __jsx("a", {
    className: "px-1 font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 21
    }
  }, "Most Supported")), "ranking.")), __jsx("div", {
    className: "flex-grow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "grid grid-cols-2 gap-5 md:gap-6 md:grid-cols-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 23
    }
  }, "1"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 23
    }
  }, "Ruby")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 23
    }
  }, "10"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 173,
      columnNumber: 23
    }
  }, "Rubys")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 181,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 183,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 184,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 189,
      columnNumber: 23
    }
  }, "100"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 23
    }
  }, "Rubys")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 194,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 198,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 205,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 206,
      columnNumber: 23
    }
  }, "1.000"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 207,
      columnNumber: 23
    }
  }, "Rubys")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 218,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 my-auto text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 222,
      columnNumber: 21
    }
  }, __jsx("h2", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 23
    }
  }, "10.000"), __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 23
    }
  }, "Ruby")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228,
      columnNumber: 23
    }
  }, "Select"))), __jsx("div", {
    className: "flex flex-col w-full max-w-[471px] pb-4 border border-base-400 rounded-lg overflow-hidden",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 232,
      columnNumber: 19
    }
  }, __jsx("div", {
    className: "flex items-center justify-center bg-purple-200 h-14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 233,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "w-10 h-10 bg-white rounded-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 234,
      columnNumber: 23
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 25
    }
  }))), __jsx("div", {
    className: "px-4 py-5 text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 239,
      columnNumber: 21
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({}, register("amount"), {
    type: "number",
    id: "custom-rubies-amount",
    placeholder: "5000",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 23
    }
  })), __jsx("span", {
    className: "block mt-1 text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241,
      columnNumber: 23
    }
  }, "Custom amount")), __jsx("div", {
    className: "px-5 mt-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 21
    }
  }, __jsx("button", {
    type: "button",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 245,
      columnNumber: 23
    }
  }, "Select")))))), __jsx("div", {
    className: "px-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 252,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex flex-col gap-6 md:flex-row",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 253,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex-grow md:max-w-[200px] px-5 py-3 rounded-lg bg-base-200",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "block mb-1 font-semibold text-center text-base-600 md:text-left",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 19
    }
  }, "Ruby Balance"), __jsx("h2", {
    className: "flex items-center justify-center md:justify-start",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 257,
      columnNumber: 19
    }
  }, __jsx("img", {
    src: "/images/Ruby.png",
    alt: "Ruby",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 258,
      columnNumber: 21
    }
  }), __jsx("span", {
    className: "text-3xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 260,
      columnNumber: 21
    }
  }, "15.000"))), __jsx("div", {
    className: "flex-grow md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex flex-col items-center gap-3 md:flex-row md:justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267,
      columnNumber: 19
    }
  }, __jsx("label", {
    className: "inline-flex items-center gap-2 text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 268,
      columnNumber: 21
    }
  }, __jsx("input", {
    type: "checkbox",
    className: "w-4 h-4 mr-auto text-base bg-gray-100 rounded border-base-400 text-base-900 focus:ring-2 focus:ring-offset-2 focus:ring-purple-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 269,
      columnNumber: 23
    }
  }), "I agree to the terms of this purchase"), __jsx("div", {
    className: "inline-flex gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 273,
      columnNumber: 21
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 274,
      columnNumber: 23
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["AppButton"], {
    variant: "secondary",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 278,
      columnNumber: 23
    }
  }, "Send"))))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 288,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapState, mapDispatch)(DonateRubiesModal));

/***/ }),

/***/ "./src/components/modals/endLiveStreamModal.tsx":
/*!******************************************************!*\
  !*** ./src/components/modals/endLiveStreamModal.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\endLiveStreamModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const EndLiveStreamModal = ({
  isOpen,
  onClose
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const onLiveStreamEnd = data => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isEndLiveStreamModalOpen: false
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 15
    }
  }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["CautionIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 17
    }
  }, "End live stream?")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("p", {
    className: "text-black/90 text-sm md:text-md p-6 pb-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 13
    }
  }, "Please confirm that you want to end your live stream."), __jsx("footer", {
    className: "w-full p-4 border-t text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-2 bg-red-700",
    disabled: false,
    onClick: onLiveStreamEnd,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 15
    }
  }, "End live stream"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(EndLiveStreamModal));

/***/ }),

/***/ "./src/components/modals/forgotPasswordModal.tsx":
/*!*******************************************************!*\
  !*** ./src/components/modals/forgotPasswordModal.tsx ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @services/auth.service */ "./src/services/auth.service.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_11__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\forgotPasswordModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }












const schema = yup__WEBPACK_IMPORTED_MODULE_1__["object"]({
  email: yup__WEBPACK_IMPORTED_MODULE_1__["string"]().email('Please enter a valid email').required('Please enter your email')
}).required();
const ForgotPasswordModal = ({
  isOpen,
  onClose
}) => {
  var _errors$email;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["useDispatch"])();
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_9__["default"])(onClose);
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: isCheckEmail,
    1: setCheckEmail
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    register,
    handleSubmit,
    formState: {
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_2__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__["yupResolver"])(schema),
    mode: 'onChange'
  });
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_10__["default"])(isOpen);
  const onSubmit = async data => {
    try {
      setIsLoading(true);
      setTimeout(() => {
        setIsLoading(false);
        setCheckEmail(true);
      }, 3000);
      await _services_auth_service__WEBPACK_IMPORTED_MODULE_6__["authService"].resetPassword(_objectSpread(_objectSpread({}, data), {}, {
        type: 'performer'
      }));
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_11__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Error occured, please try again later');
    } finally {
      setIsLoading(false);
    }
  };
  const handleClose = () => {
    onClose();
    setCheckEmail(false);
  };
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto overflow-x-hidden px-6 fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "relative w-full max-w-[485px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: `relative px-6 pt-6 bg-white rounded-lg shadow ${isCheckEmail ? 'pb-6' : 'pb-12'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex items-center justify-end rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 13
    }
  }, __jsx("button", {
    onClick: handleClose,
    type: "button",
    className: "absolute inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 top-4 right-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 17
    }
  }, "Close modal"))), !isCheckEmail && __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 17
    }
  }, "Forgot your password?"), __jsx("p", {
    className: "max-w-xs mx-auto mt-3 mb-6 text-sm text-center text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 17
    }
  }, "Enter your email address and we will send you instructions to reset your password."), __jsx("div", {
    className: "space-y-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 17
    }
  }, __jsx("form", {
    noValidate: true,
    onSubmit: handleSubmit(onSubmit),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 19
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_4__["AppInput"], _extends({}, register("email"), {
    type: "email",
    id: "forgot-password-email",
    placeholder: "Email",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 21
    }
  })), __jsx("button", {
    type: "submit",
    className: `mt-6 w-full h-12 ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["buttonVariants"])({
      disabled: !isValid || isLoading
    })}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 21
    }
  }, isLoading && __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 25
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 27
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 29
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 29
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 27
    }
  }, "Loading...")), !isLoading && __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 25
    }
  }, "Reset password"))))), isCheckEmail && __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 17
    }
  }, "Check your email"), __jsx("p", {
    className: "max-w-xs mx-auto mt-3 mb-6 text-sm text-center text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 17
    }
  }, "We\u2019ve sent an email with a link to reset your password. Please click on the link within 10 minutes before the link expires. If you did not receive the email check your spam folder."))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapState, mapDispatch)(ForgotPasswordModal));

/***/ }),

/***/ "./src/components/modals/goLiveModal.tsx":
/*!***********************************************!*\
  !*** ./src/components/modals/goLiveModal.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _services_stream_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/stream.service */ "./src/services/stream.service.tsx");
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_11__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\goLiveModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }












const schema = yup__WEBPACK_IMPORTED_MODULE_4__["object"]({
  checkbox: yup__WEBPACK_IMPORTED_MODULE_4__["boolean"]().oneOf([true], 'You must agree to the community guidelines')
});
const GoLiveModal = ({
  isOpen,
  onClose,
  currentUser,
  updateModals
}) => {
  // currentUser se pasa aquÃ­
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["useDispatch"])();
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: isCheckboxChecked,
    1: setIsCheckboxChecked
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const videoRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const webrtcAdaptorRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_11__["useRouter"])();
  const {
    register,
    handleSubmit,
    formState: {
      isValid
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_2__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_3__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = async () => {
    setIsLoading(true);
    try {
      const response = await _services_stream_service__WEBPACK_IMPORTED_MODULE_7__["streamService"].goLive();
      router.push(`/stream/${currentUser === null || currentUser === void 0 ? void 0 : currentUser.username}`);
    } catch (error) {
      console.error('Error starting live stream:', error);
      antd__WEBPACK_IMPORTED_MODULE_10__["message"].error('Failed to go live. Please try again.');
    } finally {
      setIsLoading(false);
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_9__["default"])(isOpen);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (isOpen) {
      const startVideo = async () => {
        try {
          const stream = await navigator.mediaDevices.getUserMedia({
            video: true,
            audio: true
          });
          if (videoRef.current) {
            videoRef.current.srcObject = stream;
          }
        } catch (err) {
          console.error('Error accessing camera: ', err);
          antd__WEBPACK_IMPORTED_MODULE_10__["message"].error('Failed to access the camera.');
        }
      };
      startVideo();
    }
  }, [isOpen]);
  const handleOutsideClick = e => {
    if (e.target === e.currentTarget) {
      onClose();
    }
  };
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    onClick: handleOutsideClick,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 7
    }
  }, __jsx("div", {
    role: "dialog",
    className: "w-full max-w-[432px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 17
    }
  }, "Get ready to go live")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "flex h-56 py-3 bg-base-200",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 13
    }
  }, __jsx("video", {
    ref: videoRef,
    id: "localVideo",
    className: "m-auto w-[120px] h-full bg-black",
    autoPlay: true,
    muted: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 15
    }
  })), __jsx("div", {
    className: "px-6 pt-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "pb-5 border-b border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "flex justify-between mb-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 17
    }
  }, __jsx("h4", {
    className: "font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 19
    }
  }, "Model Guidelines"), __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
    href: "/help",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 19
    }
  }, __jsx("a", {
    className: "font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 21
    }
  }, "Need Help?"))), __jsx("ol", {
    className: "text-sm text-black list-decimal list-inside",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 17
    }
  }, __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 19
    }
  }, "No nudity is permitted."), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 19
    }
  }, "Typing disabled. Speak to commenters."), __jsx("li", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 19
    }
  }, "Be friendly, outgoing and respectful.")), __jsx("hr", {
    className: "h-px my-4 border-0 bg-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 17
    }
  }), __jsx("form", {
    id: "goLiveForm",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 17
    }
  }, __jsx("label", {
    className: "inline-flex gap-2 text-sm text-black text-baseline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 19
    }
  }, __jsx("input", _extends({
    type: "checkbox"
  }, register('checkbox'), {
    className: "w-4 h-4 mr-auto text-base bg-gray-100 rounded border-base-400 checked: text-base-900 focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 checked:bg-black",
    onChange: e => setIsCheckboxChecked(e.target.checked),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 21
    }
  })), __jsx("div", {
    className: "flex flex-col",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 21
    }
  }, __jsx("span", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 23
    }
  }, "I have read the Community Guidelines."), __jsx("span", {
    className: "text-base-500 text-[10px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 23
    }
  }, "Terms and conditions: updated on 10/10/2024")))))), __jsx("div", {
    className: "flex-grow px-6 py-5 md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex flex-col items-center gap-3 sm:flex-row sm:justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 15
    }
  }, __jsx("button", {
    className: "font-medium text-center text-purple-800 hover:underline",
    onClick: () => updateModals({
      isStreamMutedListModalOpen: true
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 17
    }
  }, "Muted list"), __jsx("div", {
    className: "inline-flex gap-3 md:gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 17
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 19
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["AppButton"], {
    onClick: handleSubmit(onSubmit),
    type: "submit",
    form: "goLiveForm",
    disabled: !isCheckboxChecked || isLoading,
    loading: isLoading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 19
    }
  }, "Start streaming"))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals),
  currentUser: state.user.current // Asegurarse de pasar currentUser correctamente
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_6__["connect"])(mapState, mapDispatch)(GoLiveModal));

/***/ }),

/***/ "./src/components/modals/linkPaypalAccountModal.tsx":
/*!**********************************************************!*\
  !*** ./src/components/modals/linkPaypalAccountModal.tsx ***!
  \**********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _services_payment_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @services/payment.service */ "./src/services/payment.service.ts");
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\linkPaypalAccountModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }













const schema = yup__WEBPACK_IMPORTED_MODULE_6__["object"]({
  email: yup__WEBPACK_IMPORTED_MODULE_6__["string"]().email("Please enter a valid Email").required("Please enter a valid Email"),
  confirmEmail: yup__WEBPACK_IMPORTED_MODULE_6__["string"]().oneOf([yup__WEBPACK_IMPORTED_MODULE_6__["ref"]('email')], 'Emails must match').required('Please confirm your Email')
});
const LinkPaypalAccountModal = ({
  isOpen,
  onClose,
  performer,
  updatePerformer
}) => {
  var _errors$email, _errors$confirmEmail;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const {
    0: performerId,
    1: setPerformerId
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    },
    watch
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_8__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_7__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const email = watch("email");
  const confirmEmail = watch("email");
  const onLinkPaypalAccount = async data => {
    if (confirmEmail !== email) return antd__WEBPACK_IMPORTED_MODULE_10__["message"].error('Emails must match');
    try {
      const sendPaypalCredentials = await _services_payment_service__WEBPACK_IMPORTED_MODULE_11__["paymentService"].sendSavePaypalCredentials({
        performerId: String(performer === null || performer === void 0 ? void 0 : performer._id),
        email
      });
      if (sendPaypalCredentials) {
        updatePerformer();
        dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
          isLinkPaypalAccountModalOpen: false,
          isPaypalSuccessfulModalOpen: true
        }));
      }
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_10__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_12__["getResponseError"])(error));
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 15
    }
  }, __jsx("img", {
    className: "w-12 p-1 rounded-full border",
    src: "/static/paypal-simple-logo.png",
    alt: "PayPal Logo",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 17
    }
  }, "Link PayPal account")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("form", {
    onSubmit: handleSubmit(onLinkPaypalAccount),
    className: "py-6 px-0 mx-6 border-b",
    action: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 13
    }
  }, __jsx("legend", {
    className: "text-black/90 text-sm md:text-md pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 15
    }
  }, "Please link your PayPal account to proceed with this purchase."), __jsx("fieldset", {
    className: "space-y-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 15
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__["AppInput"], _extends({
    placeholder: "johndoe@gmail.com",
    label: "Email address"
  }, register("email"), {
    type: "text",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 17
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_9__["AppInput"], _extends({
    placeholder: "johndoe@gmail.com",
    label: "Confirm Email address"
  }, register("confirmEmail"), {
    type: "text",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$confirmEmail = errors.confirmEmail) === null || _errors$confirmEmail === void 0 ? void 0 : _errors$confirmEmail.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 17
    }
  })))), __jsx("footer", {
    className: "w-full p-4 pb-6 text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-2",
    disabled: false,
    onClick: onLinkPaypalAccount,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 15
    }
  }, "Save"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(LinkPaypalAccountModal));

/***/ }),

/***/ "./src/components/modals/loginModal.tsx":
/*!**********************************************!*\
  !*** ./src/components/modals/loginModal.tsx ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _services_cookies_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/cookies.service */ "./src/services/cookies.service.ts");
/* harmony import */ var _redux_auth_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/auth/actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @lib/firebase */ "./src/lib/firebase.ts");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @services/auth.service */ "./src/services/auth.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\loginModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }















const schema = yup__WEBPACK_IMPORTED_MODULE_1__["object"]({
  username: yup__WEBPACK_IMPORTED_MODULE_1__["string"]().email('Please enter a valid email').required('Please enter your email'),
  password: yup__WEBPACK_IMPORTED_MODULE_1__["string"]().required('Please enter your password').min(8, 'Password must be at least 8 characters')
});
const LoginModal = ({
  isOpen,
  onClose,
  loginAuth
}) => {
  var _errors$username, _errors$password;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_9__["useDispatch"])();
  const {
    register,
    handleSubmit,
    formState: {
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_3__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = async data => {
    try {
      const resp = (await _services_cookies_service__WEBPACK_IMPORTED_MODULE_7__["cookieService"].getCookie('introducerId')) || null;
      dispatch(Object(_redux_auth_actions__WEBPACK_IMPORTED_MODULE_8__["login"])(_objectSpread(_objectSpread({}, data), {}, {
        introducerId: resp || null
      })));
    } catch (error) {
      console.log(error);
    }
  };
  const handleClose = () => {
    onClose();
  };
  const handleForgotPassword = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_10__["updateModals"])({
      isLoginModalOpen: false,
      isForgotPasswordModalOpen: true
    }));
  };
  const handleSignInWithGoogle = async () => {
    try {
      const result = await Object(_lib_firebase__WEBPACK_IMPORTED_MODULE_13__["signInWithPopup"])(_lib_firebase__WEBPACK_IMPORTED_MODULE_13__["auth"], _lib_firebase__WEBPACK_IMPORTED_MODULE_13__["provider"]);
      const token = await result.user.getIdToken();
      const payload = {
        tokenId: token,
        role: 'user'
      };
      const response = await (await _services_auth_service__WEBPACK_IMPORTED_MODULE_14__["authService"].loginGoogle(payload)).data;
      response.token && Object(_redux_auth_actions__WEBPACK_IMPORTED_MODULE_8__["loginSocial"])({
        token: response.token
      });
    } catch (error) {
      console.error("Error signing in: ", error);
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_12__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_11__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto overflow-x-hidden px-6 fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "relative w-full max-w-[485px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "relative px-6 pt-6 bg-white rounded-lg shadow pb-9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex items-center justify-end rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 13
    }
  }, __jsx("button", {
    onClick: handleClose,
    type: "button",
    className: "absolute inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 top-4 right-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 13
    }
  }, __jsx("h3", {
    className: "mb-6 text-xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 15
    }
  }, "Login"), __jsx("div", {
    className: "space-y-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 15
    }
  }, __jsx("form", {
    className: "space-y-3",
    onSubmit: handleSubmit(onSubmit),
    noValidate: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 17
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({}, register("username"), {
    type: "email",
    id: "login-email",
    autoComplete: "username",
    placeholder: "Email",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 19
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({}, register("password"), {
    type: "password",
    id: "login-password",
    autoComplete: "current-password",
    placeholder: "Password",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 19
    }
  })), __jsx("button", {
    type: "button",
    onClick: handleForgotPassword,
    className: "text-sm font-medium text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 19
    }
  }, "Forgot password?"), __jsx("button", {
    type: "submit",
    className: `w-full h-12 ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])({
      disabled: loginAuth.requesting
    })}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 19
    }
  }, loginAuth.requesting && __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 23
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 27
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 27
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 25
    }
  }, "Loading...")), !loginAuth.requesting && __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 129,
      columnNumber: 23
    }
  }, "Login")))), __jsx("div", {
    className: "inline-flex items-center justify-center w-full my-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 15
    }
  }, __jsx("hr", {
    className: "w-full h-px bg-gray-200 border-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "absolute px-3 bg-white text-base-700",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 17
    }
  }, "Or login with")), __jsx("div", {
    className: "mb-6 space-y-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 15
    }
  }, __jsx("button", {
    type: "submit",
    onClick: () => handleSignInWithGoogle(),
    className: "flex items-center justify-center w-full h-12 gap-3 px-8 py-3 font-semibold text-black rounded-full bg-base-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 17
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 19
    }
  }, __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M20.64 12.2061C20.64 11.568 20.5827 10.9543 20.4764 10.3652H12V13.8466H16.8436C16.635 14.9716 16.0009 15.9248 15.0477 16.563V18.8211H17.9564C19.6582 17.2543 20.64 14.9471 20.64 12.2061Z",
    fill: "#4285F4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 21
    }
  }), __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.0001 21.0009C14.4301 21.0009 16.4674 20.195 17.9565 18.8205L15.0479 16.5623C14.2419 17.1023 13.211 17.4214 12.0001 17.4214C9.65603 17.4214 7.67194 15.8382 6.96422 13.7109H3.9574V16.0428C5.43831 18.9841 8.48194 21.0009 12.0001 21.0009Z",
    fill: "#34A853",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 146,
      columnNumber: 21
    }
  }), __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.96409 13.7108C6.78409 13.1708 6.68182 12.594 6.68182 12.0008C6.68182 11.4076 6.78409 10.8308 6.96409 10.2908V7.95898H3.95727C3.34773 9.17398 3 10.5485 3 12.0008C3 13.4531 3.34773 14.8276 3.95727 16.0426L6.96409 13.7108Z",
    fill: "#FBBC05",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 21
    }
  }), __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.0001 6.57955C13.3215 6.57955 14.5079 7.03364 15.4406 7.92545L18.0219 5.34409C16.4633 3.89182 14.426 3 12.0001 3C8.48194 3 5.43831 5.01682 3.9574 7.95818L6.96422 10.29C7.67194 8.16273 9.65603 6.57955 12.0001 6.57955Z",
    fill: "#EA4335",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 21
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 19
    }
  }, "Continue with Google"))), __jsx("div", {
    className: "max-w-xs mx-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 15
    }
  }, __jsx("p", {
    className: "text-xs text-center text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 158,
      columnNumber: 17
    }
  }, "By continuing, you agree to our", __jsx(next_link__WEBPACK_IMPORTED_MODULE_2___default.a, {
    href: "#",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 19
    }
  }, __jsx("a", {
    className: "px-1 font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 21
    }
  }, "Terms of Service")), "and acknowledge that you have read our privacy policy to learn how we collect and share data.")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals),
  loginAuth: _objectSpread({}, state.auth.loginAuth)
});
const mapDispatch = {
  login: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_8__["login"],
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_10__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_9__["connect"])(mapState, mapDispatch)(LoginModal));

/***/ }),

/***/ "./src/components/modals/notEnoughRubysLiveModal.tsx":
/*!***********************************************************!*\
  !*** ./src/components/modals/notEnoughRubysLiveModal.tsx ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\notEnoughRubysLiveModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






const NotEnoughRubysLiveModal = ({
  isOpen,
  onClose
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const openPurchaseRubysModal = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isBuyRubiesModalOpen: true,
      isNotEnoughRubysLiveModal: false
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 15
    }
  }, __jsx("img", {
    src: "/static/caution-icon.png",
    alt: "Caution Icon",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 17
    }
  }, "Not enough Rubys")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("p", {
    className: "text-black/90 text-sm md:text-md p-6 pb-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 13
    }
  }, "To continue you will need to purchase additional Rubys. "), __jsx("div", {
    className: "py-6 px-0 mx-6 border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 13
    }
  }), __jsx("footer", {
    className: "w-full p-4 pb-6 text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-4",
    disabled: false,
    onClick: openPurchaseRubysModal,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 15
    }
  }, "Purchase Rubys"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(NotEnoughRubysLiveModal));

/***/ }),

/***/ "./src/components/modals/passwordResetModal.tsx":
/*!******************************************************!*\
  !*** ./src/components/modals/passwordResetModal.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/auth.service */ "./src/services/auth.service.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_12__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\passwordResetModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_1___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }













const schema = yup__WEBPACK_IMPORTED_MODULE_2__["object"]({
  password: yup__WEBPACK_IMPORTED_MODULE_2__["string"]().required('Please enter your password').matches(/^(?=.{8,})(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])(?=.*[^\w\d]).*$/, 'Password must be at least 8 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character.'),
  confirmPassword: yup__WEBPACK_IMPORTED_MODULE_2__["string"]().oneOf([yup__WEBPACK_IMPORTED_MODULE_2__["ref"]('password'), null], 'Passwords must match')
});
const PasswordResetModal = ({
  isOpen,
  onClose,
  tokenId
}) => {
  var _errors$password, _errors$confirmPasswo;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_8__["useDispatch"])();
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(false);
  const {
    0: isSuccess,
    1: setSuccess
  } = Object(react__WEBPACK_IMPORTED_MODULE_1__["useState"])(false);
  const {
    register,
    handleSubmit,
    formState: {
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_3__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const onSubmit = async data => {
    try {
      setIsLoading(true);
      setTimeout(() => {
        setIsLoading(false);
        setSuccess(true);
      }, 3000);
      await _services_auth_service__WEBPACK_IMPORTED_MODULE_7__["authService"].updateForgotPassword({
        password: data.password
      }, tokenId);
      antd__WEBPACK_IMPORTED_MODULE_12__["message"].success('Password Changed!');
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_12__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Error occured, please try again later');
    } finally {
      setIsLoading(false);
    }
  };
  const handleClose = () => {
    onClose();
    setSuccess(false);
  };
  const handleBackToLogin = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_9__["updateModals"])({
      isLoginModalOpen: true,
      isPasswordResetModalOpen: false
    }));
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_11__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_10__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto overflow-x-hidden px-6 fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "relative w-full max-w-[485px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: `relative px-6 pt-6 bg-white rounded-lg shadow pb-8`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex items-center justify-end rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 13
    }
  }, __jsx("button", {
    onClick: handleClose,
    type: "button",
    className: "absolute inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 top-4 right-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 86,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 17
    }
  }, "Close modal"))), !isSuccess && __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "mb-6 text-xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 17
    }
  }, "Enter new password"), __jsx("form", {
    className: "space-y-3",
    noValidate: true,
    onSubmit: handleSubmit(onSubmit),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 17
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({}, register("password"), {
    type: "password",
    id: "forgot-password-email",
    placeholder: "Password",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 19
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({}, register("confirmPassword"), {
    type: "password",
    id: "confirm-password",
    placeholder: "Confirm Password",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 19
    }
  })), __jsx("button", {
    type: "submit",
    className: `mt-6 w-full h-12 ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])({
      disabled: !isValid || isLoading
    })}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 19
    }
  }, isLoading && __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 23
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 27
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 27
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 25
    }
  }, "Loading...")), !isLoading && __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 23
    }
  }, "Change Password")))), isSuccess && __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "mb-6 text-xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 17
    }
  }, "Password Changed!"), __jsx("button", {
    type: "button",
    onClick: handleBackToLogin,
    className: `w-full h-12 ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["buttonVariants"])()}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 17
    }
  }, "Back to login")), __jsx("div", {
    className: "max-w-xs mx-auto mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 13
    }
  }, __jsx("p", {
    className: "text-xs text-center text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 15
    }
  }, "By continuing, you agree to our", __jsx(next_link__WEBPACK_IMPORTED_MODULE_0___default.a, {
    href: "#",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 17
    }
  }, __jsx("a", {
    className: "px-1 font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 19
    }
  }, "Terms of Service")), "and acknowledge that you have read our privacy policy to learn how we collect and share data."))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_9__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_8__["connect"])(mapState, mapDispatch)(PasswordResetModal));

/***/ }),

/***/ "./src/components/modals/payoutRequestModal.tsx":
/*!******************************************************!*\
  !*** ./src/components/modals/payoutRequestModal.tsx ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var _services_payout_request_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @services/payout-request.service */ "./src/services/payout-request.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\payoutRequestModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }












const schema = yup__WEBPACK_IMPORTED_MODULE_2__["object"]({
  amount: yup__WEBPACK_IMPORTED_MODULE_2__["number"]().min(100, "The amount must be at least 100").typeError("Must be a number").positive("Must be a positive number").required("Please enter an amount"),
  tandc: yup__WEBPACK_IMPORTED_MODULE_2__["bool"]().oneOf([true], "You must accept the terms and conditions").default(false).required()
});
const tokenConversionRate = 0.01;
const PayoutRequestModal = ({
  isOpen,
  onClose,
  performer
}) => {
  var _errors$amount;
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_1__["useRouter"])();
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["useDispatch"])();
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    },
    watch
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_3__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_4__["yupResolver"])(schema),
    mode: 'onChange'
  });
  const amountToWithdraw = watch('amount');
  const termsAndConditions = watch('tandc');
  const {
    0: paypalSettings,
    1: setPaypalSettings
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const {
    0: payoutRules,
    1: setPayoutRules
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({
    earningMinimum: false,
    accountVerified: false
  });
  const {
    0: payoutAvailable,
    1: setPayoutAvailable
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0);
  const calculateAmountAvailable = () => {
    const amountAvailableInMoney = performer.balance * tokenConversionRate;
    setPayoutAvailable(amountAvailableInMoney);
    return amountAvailableInMoney;
  };
  const calculateAmountTokensToSend = () => {
    const amountToWithdrawInTokens = amountToWithdraw / tokenConversionRate;
    if (amountToWithdrawInTokens > performer.balance) return 0;
    return amountToWithdrawInTokens;
  };
  const onSubmit = async data => {
    const tokensToPayout = calculateAmountTokensToSend();
    console.log("will send payout", {
      source: 'performer',
      requestTokens: tokensToPayout,
      paymentAccountType: 'paypal'
    });
    try {
      const sendPayout = await _services_payout_request_service__WEBPACK_IMPORTED_MODULE_11__["payoutRequestService"].create({
        source: 'performer',
        requestTokens: tokensToPayout,
        paymentAccountType: 'paypal'
      });
      if (sendPayout) {
        router.reload();
        dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"])({
          isPayoutRequestModalOpen: false
        }));
      }
    } catch (error) {
      console.error(error);
    }
  };
  const onLinkPaypalAccount = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"])({
      isPayoutRequestModalOpen: false,
      isLinkPaypalAccountModalOpen: true
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_10__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_9__["default"])(onClose);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    var _performer$paypalSett;
    setPaypalSettings({
      email: (_performer$paypalSett = performer.paypalSetting) === null || _performer$paypalSett === void 0 ? void 0 : _performer$paypalSett.value
    });
    calculateAmountAvailable();
  }, [performer]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (!(paypalSettings !== null && paypalSettings !== void 0 && paypalSettings.email)) {
      setPayoutRules(_objectSpread(_objectSpread({}, payoutRules), {}, {
        accountVerified: false
      }));
    } else {
      setPayoutRules(_objectSpread(_objectSpread({}, payoutRules), {}, {
        accountVerified: true
      }));
    }
  }, [paypalSettings]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (performer.balance * tokenConversionRate > 100) {
      setPayoutRules(_objectSpread(_objectSpread({}, payoutRules), {}, {
        earningMinimum: true
      }));
    } else {
      setPayoutRules(_objectSpread(_objectSpread({}, payoutRules), {}, {
        earningMinimum: false
      }));
    }
  }, [amountToWithdraw, termsAndConditions, performer]);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-[434px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 mb-3 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 17
    }
  }, "New payout request")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 158,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("form", {
    className: "px-5 pb-8",
    onSubmit: handleSubmit(onSubmit),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "mb-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 15
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_5__["AppInput"], _extends({
    prefixIcon: "$",
    id: "payout-request-amount",
    label: "Withdrawal amount",
    type: "text",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message
  }, register("amount"), {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 17
    }
  }))), __jsx("div", {
    className: "mb-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 170,
      columnNumber: 15
    }
  }, __jsx("h4", {
    className: "mb-2 text-xs font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 17
    }
  }, "Minimal withdrawal requirements"), __jsx("div", {
    className: "space-y-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 174,
      columnNumber: 17
    }
  }, payoutAvailable < amountToWithdraw ? __jsx("p", {
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 21
    }
  }, __jsx(ErrorIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 177,
      columnNumber: 25
    }
  }), __jsx("span", {
    className: "text-xs text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 25
    }
  }, "The amount you are requesting exceeds your balance\u201D")) : null, __jsx("p", {
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 185,
      columnNumber: 19
    }
  }, amountToWithdraw >= 100 ? __jsx(CheckIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187,
      columnNumber: 25
    }
  }) : __jsx(WarningIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 25
    }
  }), __jsx("span", {
    className: "text-xs text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 191,
      columnNumber: 23
    }
  }, "Your withdraw must be more than $100")), __jsx("p", {
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 196,
      columnNumber: 19
    }
  }, payoutRules.earningMinimum ? __jsx(CheckIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 198,
      columnNumber: 23
    }
  }) : __jsx(WarningIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 199,
      columnNumber: 23
    }
  }), __jsx("span", {
    className: "text-xs text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 203,
      columnNumber: 21
    }
  }, "Your earnings must be more than $100 to withdraw funds")), __jsx("p", {
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 208,
      columnNumber: 19
    }
  }, payoutRules.accountVerified ? __jsx(CheckIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 23
    }
  }) : __jsx(WarningIcon, {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 23
    }
  }), __jsx("span", {
    className: "text-xs text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 214,
      columnNumber: 21
    }
  }, "Your account must be ", __jsx("span", {
    className: "text-purple-800 cursor-pointer hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 44
    }
  }, "verified"))))), __jsx("div", {
    className: "flex items-center w-full gap-2 pb-8 mb-8 border-b border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 221,
      columnNumber: 15
    }
  }, __jsx("img", {
    className: "w-12 p-1 border rounded-full",
    src: "/static/paypal-simple-logo.png",
    alt: "PayPal Logo",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 222,
      columnNumber: 17
    }
  }), __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 17
    }
  }, __jsx("p", {
    className: "font-inter text-md",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 19
    }
  }, "Receiving PayPal Account"), paypalSettings ? __jsx("p", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 226,
      columnNumber: 23
    }
  }, paypalSettings.email) : __jsx("p", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227,
      columnNumber: 23
    }
  }, "No account linked")), __jsx("button", {
    type: "button",
    className: "p-1 transition rounded-full hover:bg-black/10",
    onClick: onLinkPaypalAccount,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 230,
      columnNumber: 17
    }
  }, __jsx("img", {
    src: "/static/editpen-icon.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 231,
      columnNumber: 19
    }
  }))), __jsx("div", {
    className: "flex justify-between gap-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 15
    }
  }, __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 236,
      columnNumber: 17
    }
  }, __jsx("label", {
    className: "inline-flex gap-2 text-xs text-black max-w-[140px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 237,
      columnNumber: 19
    }
  }, __jsx("input", _extends({}, register("tandc"), {
    type: "checkbox",
    className: "w-4 h-4 mr-auto text-black bg-gray-100 rounded checked:bg-black border-base-400 focus:ring-2 focus:ring-offset-2 focus:ring-purple-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238,
      columnNumber: 21
    }
  })), "I agree to the terms of this purchase")), __jsx("div", {
    className: "flex items-center justify-end gap-2 md:gap-4 lg:gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 243,
      columnNumber: 17
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 19
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_6__["AppButton"], {
    type: "submit",
    disabled: !isValid || amountToWithdraw < 100,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 248,
      columnNumber: 19
    }
  }, "Submit"))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 256,
      columnNumber: 7
    }
  }));
};
const CheckIcon = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "18",
  height: "18",
  viewBox: "0 0 18 18",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 262,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M7.75508 12.7314L13.6525 6.83397L12.7281 5.90956L7.75508 10.8826L5.25508 8.38257L4.33067 9.30698L7.75508 12.7314ZM9.00149 17.3333C7.84891 17.3333 6.76555 17.1146 5.75139 16.6771C4.73722 16.2397 3.85504 15.6461 3.10485 14.8962C2.35464 14.1464 1.76073 13.2646 1.32311 12.2508C0.885496 11.2371 0.666687 10.154 0.666687 9.00143C0.666687 7.84885 0.885401 6.76549 1.32283 5.75133C1.76026 4.73716 2.3539 3.85498 3.10375 3.10479C3.85363 2.35458 4.73542 1.76067 5.74913 1.32305C6.76284 0.885436 7.84597 0.666626 8.99855 0.666626C10.1511 0.666626 11.2345 0.885341 12.2486 1.32277C13.2628 1.7602 14.145 2.35384 14.8952 3.10369C15.6454 3.85356 16.2393 4.73536 16.6769 5.74907C17.1145 6.76278 17.3334 7.84591 17.3334 8.99849C17.3334 10.1511 17.1146 11.2344 16.6772 12.2486C16.2398 13.2628 15.6461 14.1449 14.8963 14.8951C14.1464 15.6453 13.2646 16.2392 12.2509 16.6769C11.2372 17.1145 10.1541 17.3333 9.00149 17.3333Z",
  fill: "#24A148",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 263,
    columnNumber: 5
  }
}));
const WarningIcon = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "17",
  height: "18",
  viewBox: "0 0 17 18",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 268,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M9.15785 4.83338H7.84211V9.87724H9.15785L9.15785 4.83338ZM8.49998 11.3786C8.29923 11.3786 8.13097 11.4465 7.99518 11.5823C7.85939 11.7181 7.79149 11.8863 7.79149 12.0871C7.79149 12.2878 7.85939 12.4561 7.99518 12.5919C8.13097 12.7277 8.29923 12.7956 8.49998 12.7956C8.70073 12.7956 8.86899 12.7277 9.00478 12.5919C9.14057 12.4561 9.20847 12.2878 9.20847 12.0871C9.20847 11.8863 9.14057 11.7181 9.00478 11.5823C8.86899 11.4465 8.70073 11.3786 8.49998 11.3786ZM8.49851 0.666707C9.65109 0.666707 10.7345 0.885422 11.7486 1.32285C12.7628 1.76028 13.645 2.35392 14.3951 3.10377C15.1454 3.85365 15.7393 4.73544 16.1769 5.74916C16.6145 6.76286 16.8333 7.846 16.8333 8.99857C16.8333 10.1511 16.6146 11.2345 16.1772 12.2487C15.7397 13.2628 15.1461 14.145 14.3962 14.8952C13.6464 15.6454 12.7646 16.2393 11.7509 16.6769C10.7372 17.1146 9.65403 17.3334 8.50145 17.3334C7.34887 17.3334 6.26551 17.1147 5.25135 16.6772C4.23718 16.2398 3.355 15.6462 2.60481 14.8963C1.8546 14.1464 1.26069 13.2646 0.823074 12.2509C0.385456 11.2372 0.166646 10.1541 0.166646 9.00151C0.166646 7.84893 0.385361 6.76557 0.822789 5.75141C1.26022 4.73725 1.85386 3.85506 2.60371 3.10487C3.35358 2.35467 4.23538 1.76075 5.24909 1.32313C6.2628 0.885517 7.34594 0.666707 8.49851 0.666707Z",
  fill: "#DFA102",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 269,
    columnNumber: 5
  }
}));
const ErrorIcon = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "21",
  height: "20",
  viewBox: "0 0 21 20",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 274,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M7.44012 14.1666L10.5 11.1067L13.5599 14.1666L14.6667 13.0599L11.6068 9.99996L14.6667 6.94006L13.5599 5.83329L10.5 8.89319L7.44012 5.83329L6.33335 6.94006L9.39325 9.99996L6.33335 13.0599L7.44012 14.1666ZM10.5 18.3333C9.35708 18.3333 8.27924 18.1163 7.26651 17.6823C6.25378 17.2482 5.36764 16.6514 4.60809 15.8919C3.84854 15.1323 3.25176 14.2462 2.81773 13.2335C2.3837 12.2207 2.16669 11.1429 2.16669 9.99996C2.16669 8.84255 2.3837 7.7611 2.81773 6.7556C3.25176 5.7501 3.84854 4.86758 4.60809 4.10803C5.36764 3.34848 6.25378 2.7517 7.26651 2.31767C8.27924 1.88364 9.35708 1.66663 10.5 1.66663C11.6574 1.66663 12.7389 1.88364 13.7444 2.31767C14.7499 2.7517 15.6324 3.34848 16.3919 4.10803C17.1515 4.86758 17.7483 5.7501 18.1823 6.7556C18.6163 7.7611 18.8334 8.84255 18.8334 9.99996C18.8334 11.1429 18.6163 12.2207 18.1823 13.2335C17.7483 14.2462 17.1515 15.1323 16.3919 15.8919C15.6324 16.6514 14.7499 17.2482 13.7444 17.6823C12.7389 18.1163 11.6574 18.3333 10.5 18.3333Z",
  fill: "#DC1C1C",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 275,
    columnNumber: 5
  }
}));
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_8__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_7__["connect"])(mapState, mapDispatch)(PayoutRequestModal));

/***/ }),

/***/ "./src/components/modals/paypalSuccessfulModal.tsx":
/*!*********************************************************!*\
  !*** ./src/components/modals/paypalSuccessfulModal.tsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\paypalSuccessfulModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const PaypalSuccessfulModal = ({
  isOpen,
  onClose,
  performer
}) => {
  var _performer$paypalSett;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const onLinkPaypalAccount = data => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isPaypalSuccessfulModalOpen: false
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 15
    }
  }, __jsx("img", {
    className: "w-12 p-1 rounded-full border",
    src: "/static/paypal-simple-logo.png",
    alt: "PayPal Logo",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 17
    }
  }, "Connection successful")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("p", {
    className: "text-black/90 text-sm md:text-md p-6 pb-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 13
    }
  }, "Caster is now connected to your Paypal account with the email address displayed below. "), __jsx("div", {
    className: "py-6 px-0 mx-6 border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_6__["AppInput"], {
    placeholder: "johndoe@gmail.com",
    id: "paypal-email",
    label: "Email address",
    type: "text",
    value: performer === null || performer === void 0 ? void 0 : (_performer$paypalSett = performer.paypalSetting) === null || _performer$paypalSett === void 0 ? void 0 : _performer$paypalSett.value,
    disabled: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 15
    }
  })), __jsx("footer", {
    className: "w-full p-4 pb-6 text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-2",
    disabled: false,
    onClick: onLinkPaypalAccount,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 15
    }
  }, "Done"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(PaypalSuccessfulModal));

/***/ }),

/***/ "./src/components/modals/photo-video-upload/createNewPhotoModal.tsx":
/*!**************************************************************************!*\
  !*** ./src/components/modals/photo-video-upload/createNewPhotoModal.tsx ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./icons */ "./src/components/modals/photo-video-upload/icons.tsx");
/* harmony import */ var _services_feed_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/feed.service */ "./src/services/feed.service.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
/* harmony import */ var _components_file_list_media__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @components/file/list-media */ "./src/components/file/list-media.tsx");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _lib_string__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @lib/string */ "./src/lib/string.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\photo-video-upload\\createNewPhotoModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }













const getDuration = file => new Promise((resolve, reject) => {
  try {
    const video = document.createElement('video');
    video.preload = 'metadata';
    video.onloadedmetadata = function onLoadMetaData() {
      resolve(this);
    };
    video.onerror = function error() {
      Promise.reject(new Error('Invalid video. Please select a video file.'));
    };
    video.src = window.URL.createObjectURL(file);
  } catch (e) {
    reject(e);
  }
});
const CreateNewPhotoModal = ({
  modalProps,
  onClose,
  currentUser
}) => {
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_11__["useRouter"])();
  const [, updateState] = react__WEBPACK_IMPORTED_MODULE_0___default.a.useState();
  const forceUpdate = react__WEBPACK_IMPORTED_MODULE_0___default.a.useCallback(() => updateState({}), []);
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const {
    0: isUploading,
    1: setUploading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: hashtag1,
    1: setHashtag1
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: hashtag2,
    1: setHashtag2
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: hashtag3,
    1: setHashtag3
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: isPublic,
    1: setIsPublic
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true);
  const onsubmit = async () => {
    const description = `#${hashtag1.split(' ').join('')} ${hashtag2 ? `#${hashtag2.split(' ').join('')}` : ''} ${hashtag3 ? `#${hashtag3.split(' ').join('')}` : ''} `;
    const ObjectToSend = {
      thumbnailId: modalProps.imageInfos.fileIds[0] || null,
      type: 'photo',
      teaserId: modalProps.imageInfos.fileIds[0] || null,
      status: isPublic ? 'active' : 'inactive',
      // 
      fileIds: modalProps.imageInfos.fileIds,
      fromSourceId: currentUser._id,
      hashtag1: hashtag1,
      hashtag2: hashtag2,
      hashtag3: hashtag3,
      text: description.trim()
    };
    try {
      var _createFeed$data;
      setUploading(true);
      const createFeed = await _services_feed_service__WEBPACK_IMPORTED_MODULE_7__["feedService"].create(ObjectToSend);
      antd__WEBPACK_IMPORTED_MODULE_8__["message"].success('Posted successfully!');
      setUploading(false);
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
        uploadPhotoModal: {
          isOpen: false,
          imageInfos: {
            fileIds: [],
            fileList: []
          }
        }
      }));
      router.push(`model/profile?username=${currentUser.username}&tab=${(_createFeed$data = createFeed.data) === null || _createFeed$data === void 0 ? void 0 : _createFeed$data.type}`);
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_8__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_9__["getResponseError"])(error) || 'Something went wrong, please try again');
      setUploading(false);
    }
  };
  const remove = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(file => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      uploadPhotoModal: {
        isOpen: true,
        imageInfos: {
          // @ts-expect-error
          fileList: modalProps.imageInfos.fileList.filter(f => (f === null || f === void 0 ? void 0 : f._id) !== (file === null || file === void 0 ? void 0 : file._id) || (f === null || f === void 0 ? void 0 : f.uid) !== (file === null || file === void 0 ? void 0 : file.uid)) || modalProps.imageInfos.fileList,
          fileIds: modalProps.imageInfos.fileIds.filter(id => id !== (file === null || file === void 0 ? void 0 : file._id)) || modalProps.imageInfos.fileIds
        }
      }
    }));
  }, []);
  const onUploading = (file, resp) => {
    // eslint-disable-next-line no-param-reassign
    file.percent = resp.percentage;
    // eslint-disable-next-line no-param-reassign
    if (file.percent === 100) file.status = 'done';
    forceUpdate();
  };
  const onFinishFileCapture = async file => {
    try {
      setUploading(true);
      const resp = await _services_feed_service__WEBPACK_IMPORTED_MODULE_7__["feedService"].uploadFile(file, {}, onUploading.bind(undefined, file));
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
        isPhotoCameraModal: false,
        uploadPhotoModal: {
          isOpen: true,
          imageInfos: {
            fileList: modalProps.imageInfos.fileList.length ? [...modalProps.imageInfos.fileList, {
              thumnail: URL.createObjectURL(file),
              percent: 100,
              status: 'done',
              url: URL.createObjectURL(file),
              uid: Object(_lib_string__WEBPACK_IMPORTED_MODULE_12__["generateUuid"])(),
              type: file.type || 'image/png'
            }] : [{
              thumnail: URL.createObjectURL(file),
              percent: 100,
              status: 'done',
              url: URL.createObjectURL(file),
              uid: Object(_lib_string__WEBPACK_IMPORTED_MODULE_12__["generateUuid"])(),
              type: file.type || 'image/png'
            }],
            fileIds: modalProps.imageInfos.fileIds.length ? [...modalProps.imageInfos.fileIds, resp.data.fileId] : [resp.data.fileId]
          }
        }
      }));
      setUploading(false);
      return true;
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_8__["message"].error('Error uploading! Please try again');
      console.error(error);
      setUploading(false);
      return false;
    }
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_5__["default"])(modalProps === null || modalProps === void 0 ? void 0 : modalProps.isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_4__["default"])(onClose);
  if (!(modalProps !== null && modalProps !== void 0 && modalProps.isOpen)) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${modalProps !== null && modalProps !== void 0 && modalProps.isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 184,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-[580px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 185,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow text-leftt",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 186,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 187,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 189,
      columnNumber: 17
    }
  }, "Post new photo")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 194,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 195,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 196,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 198,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "p-4 flex items-center justify-center md:justify-between gap-8 md:gap-4 md:flex-nowrap flex-wrap",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 202,
      columnNumber: 13
    }
  }, __jsx("article", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 203,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-black font-semibold text-lg text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 204,
      columnNumber: 17
    }
  }, "Step 1"), __jsx("h4", {
    className: "text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 205,
      columnNumber: 17
    }
  }, "Take a photo with your webcam or upload a photo from your computer")), __jsx("div", {
    className: "text-black text-center font-semibold whitespace-nowrap relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 208,
      columnNumber: 15
    }
  }, __jsx("input", {
    className: "absolute inset-0 opacity-0",
    onChange: e => onFinishFileCapture(e.target.files[0]),
    type: "file",
    multiple: false,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 209,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-black h-20 w-20 rounded-full bg-purple-800 mb-2 flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 17
    }
  }, __jsx(_icons__WEBPACK_IMPORTED_MODULE_6__["UploadIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 19
    }
  })), "Upload photo"), __jsx("button", {
    className: "text-black text-center font-semibold whitespace-nowrap",
    onClick: () => dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isPhotoCameraModal: true,
      uploadPhotoModal: _objectSpread({
        isOpen: false
      }, modalProps)
    })),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-black h-20 w-20 rounded-full bg-black mb-2 flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 225,
      columnNumber: 17
    }
  }, __jsx(_icons__WEBPACK_IMPORTED_MODULE_6__["RecordIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 226,
      columnNumber: 19
    }
  })), "Take Photo")), __jsx(_components_file_list_media__WEBPACK_IMPORTED_MODULE_10__["default"], {
    type: 'photo',
    files: modalProps.imageInfos.fileList || [],
    remove: remove,
    onAddMore: () => {},
    uploading: isUploading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 232,
      columnNumber: 13
    }
  }), __jsx("div", {
    className: "p-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 13
    }
  }, __jsx("article", {
    className: "pb-4",
    style: {
      maxWidth: '350px'
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-black font-semibold text-lg text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 242,
      columnNumber: 17
    }
  }, "Step 2"), __jsx("h4", {
    className: "text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 243,
      columnNumber: 17
    }
  }, "Accurate hashtags increase viewership")), __jsx("div", {
    className: "grid grid-cols-1 md:grid-cols-3 gap-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 245,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "relative w-full border border-gray-200 rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 246,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "font-bold absolute left-2 top-0 bottom-0 m-auto rounded flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 247,
      columnNumber: 19
    }
  }, "#"), __jsx("input", {
    value: hashtag1,
    onChange: e => setHashtag1(e.target.value),
    type: "text",
    className: "w-full rounded-lg border-0 pl-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 248,
      columnNumber: 19
    }
  })), __jsx("div", {
    className: "relative w-full border border-gray-200 rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 250,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "font-bold absolute left-2 top-0 bottom-0 m-auto rounded flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 251,
      columnNumber: 19
    }
  }, "#"), __jsx("input", {
    value: hashtag2,
    onChange: e => setHashtag2(e.target.value),
    type: "text",
    className: "w-full rounded-lg border-0 pl-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 252,
      columnNumber: 19
    }
  })), __jsx("div", {
    className: "relative w-full border border-gray-200 rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "font-bold absolute left-2 top-0 bottom-0 m-auto rounded flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 19
    }
  }, "#"), __jsx("input", {
    value: hashtag3,
    onChange: e => setHashtag3(e.target.value),
    type: "text",
    className: "w-full rounded-lg border-0 pl-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 256,
      columnNumber: 19
    }
  })))), __jsx("div", {
    className: "p-4 flex flex-col md:flex-row items-start md:items-center justify-between gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 261,
      columnNumber: 13
    }
  }, __jsx("article", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 262,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-black font-semibold text-lg text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 263,
      columnNumber: 17
    }
  }, "Step 3"), __jsx("h4", {
    className: "text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 264,
      columnNumber: 17
    }
  }, "Select photo visibility")), __jsx("select", {
    value: isPublic ? 'public' : 'private',
    onChange: e => setIsPublic(e.target.value === 'public' ? true : false),
    className: "border-gray-200 rounded-lg w-full flex-1",
    name: "visibility",
    id: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266,
      columnNumber: 15
    }
  }, __jsx("option", {
    style: {
      backgroundColor: '#F3E6F1',
      color: '#121212'
    },
    value: "public",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267,
      columnNumber: 17
    }
  }, "Public"), __jsx("option", {
    style: {
      backgroundColor: '#F3E6F1',
      color: '#121212'
    },
    value: "private",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 268,
      columnNumber: 17
    }
  }, "Private"))), __jsx("div", {
    className: "flex-grow px-6 py-5 md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 272,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center gap-3 sm:flex-row justify-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 273,
      columnNumber: 15
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 274,
      columnNumber: 17
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    onClick: onsubmit,
    size: "base",
    type: "submit",
    disabled: false,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 278,
      columnNumber: 17
    }
  }, "Next")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${modalProps !== null && modalProps !== void 0 && modalProps.isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 285,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals),
  currentUser: state.user.current
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(CreateNewPhotoModal));

/***/ }),

/***/ "./src/components/modals/photo-video-upload/createNewVideoModal.tsx":
/*!**************************************************************************!*\
  !*** ./src/components/modals/photo-video-upload/createNewVideoModal.tsx ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var _icons__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./icons */ "./src/components/modals/photo-video-upload/icons.tsx");
/* harmony import */ var _services_feed_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services/feed.service */ "./src/services/feed.service.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
/* harmony import */ var _components_create_feed_create_thumbnail_video_preview__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @components/create-feed/create-thumbnail-video-preview */ "./src/components/create-feed/create-thumbnail-video-preview.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\photo-video-upload\\createNewVideoModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }












const CreateNewVideoModal = ({
  modalProps,
  isOpen,
  onClose,
  currentUser
}) => {
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_1__["useRouter"])();
  const [, updateState] = react__WEBPACK_IMPORTED_MODULE_0___default.a.useState();
  const forceUpdate = react__WEBPACK_IMPORTED_MODULE_0___default.a.useCallback(() => updateState({}), []);
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["useDispatch"])();
  const {
    0: isUploading,
    1: setUploading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: hashtag1,
    1: setHashtag1
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: hashtag2,
    1: setHashtag2
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: hashtag3,
    1: setHashtag3
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])('');
  const {
    0: selectedThumbnailFile,
    1: setSelectedThumbnailFile
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const {
    0: isPublic,
    1: setIsPublic
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true);
  const onsubmit = async () => {
    setUploading(true);
    const description = `#${hashtag1.split(' ').join('')} ${hashtag2 ? `#${hashtag2.split(' ').join('')}` : ''} ${hashtag3 ? `#${hashtag3.split(' ').join('')}` : ''} `;
    try {
      var _createFeed$data;
      const sendAndGetThumbnailId = await _services_feed_service__WEBPACK_IMPORTED_MODULE_8__["feedService"].uploadFile(selectedThumbnailFile, {}, onUploading.bind(undefined, selectedThumbnailFile));
      const ObjectToSend = {
        thumbnailId: sendAndGetThumbnailId.data.fileId,
        type: 'video',
        teaserId: modalProps.imageInfos.fileIds[0] || null,
        status: isPublic ? 'active' : 'inactive',
        // 
        fileIds: modalProps.imageInfos.fileIds,
        fromSourceId: currentUser._id,
        hashtag1: hashtag1,
        hashtag2: hashtag2,
        hashtag3: hashtag3,
        text: description.trim()
      };
      const createFeed = await _services_feed_service__WEBPACK_IMPORTED_MODULE_8__["feedService"].create(ObjectToSend);
      antd__WEBPACK_IMPORTED_MODULE_9__["message"].success('Posted successfully!');
      setUploading(false);
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"])({
        uploadPhotoModal: {
          isOpen: false,
          imageInfos: {
            fileIds: [],
            fileList: []
          }
        }
      }));
      onClose();
      router.push(`model/profile?username=${currentUser.username}&tab=${(_createFeed$data = createFeed.data) === null || _createFeed$data === void 0 ? void 0 : _createFeed$data.type}`);
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_9__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_10__["getResponseError"])(error) || 'Something went wrong, please try again');
      setUploading(false);
    }
  };
  const onUploading = (file, resp) => {
    // eslint-disable-next-line no-param-reassign
    file.percent = resp.percentage;
    // eslint-disable-next-line no-param-reassign
    if (file.percent === 100) file.status = 'done';
    forceUpdate();
  };
  const onFinishFileCapture = async file => {
    try {
      setUploading(true);
      const resp = await _services_feed_service__WEBPACK_IMPORTED_MODULE_8__["feedService"].uploadFile(file, {}, onUploading.bind(undefined, file));
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"])({
        uploadVideoModal: _objectSpread(_objectSpread({}, modalProps), {}, {
          videoPreviewUrl: resp.data.url,
          imageInfos: {
            fileList: [file],
            fileIds: modalProps.imageInfos.fileIds.length ? [...modalProps.imageInfos.fileIds, resp.data.fileId] : [resp.data.fileId]
          }
        })
      }));
      setUploading(false);
      return true;
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_9__["message"].error('Error uploading! Please try again');
      console.error(error);
      setUploading(false);
      return false;
    }
  };
  const onHandleThumbnailFile = file => {
    setSelectedThumbnailFile(file);
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_6__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-[580px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 140,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 17
    }
  }, "Post new video")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 153,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "p-4 pb-6 flex items-center justify-center md:justify-between gap-8 md:gap-4 md:flex-nowrap flex-wrap",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 13
    }
  }, __jsx("article", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 158,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-black font-semibold text-lg text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 159,
      columnNumber: 17
    }
  }, "Step 1"), __jsx("h4", {
    className: "text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 160,
      columnNumber: 17
    }
  }, "Videos must be 3-60/sec long. Once uploaded select a frame from the video to use as the thumbnail.")), __jsx("div", {
    className: "text-black text-center font-semibold whitespace-nowrap relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 162,
      columnNumber: 15
    }
  }, __jsx("input", {
    className: "absolute inset-0 opacity-0",
    onChange: e => onFinishFileCapture(e.target.files[0]),
    type: "file",
    multiple: false,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 163,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-black h-20 w-20 rounded-full bg-purple-800 mb-2 flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 17
    }
  }, __jsx(_icons__WEBPACK_IMPORTED_MODULE_7__["UploadIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 19
    }
  })), "Upload Video"), __jsx("button", {
    className: "text-black text-center font-semibold whitespace-nowrap",
    onClick: () => dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"])({
      isVideoCameraModal: true,
      uploadVideoModal: _objectSpread(_objectSpread({}, modalProps), {}, {
        isOpen: false
      })
    })),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 169,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-black h-20 w-20 rounded-full bg-black mb-2 flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 17
    }
  }, __jsx(_icons__WEBPACK_IMPORTED_MODULE_7__["RecordIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 180,
      columnNumber: 19
    }
  })), "Take video")), isUploading && __jsx(antd__WEBPACK_IMPORTED_MODULE_9__["Spin"], {
    className: "m-auto py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 185,
      columnNumber: 29
    }
  }), modalProps.videoPreviewUrl && modalProps.imageInfos.fileList.length > 0 && __jsx(_components_create_feed_create_thumbnail_video_preview__WEBPACK_IMPORTED_MODULE_11__["CreateThumbnailVideoPreview"], {
    handleThumbnail: onHandleThumbnailFile,
    videoFile: modalProps.imageInfos.fileList[0],
    videoPreviewUrl: modalProps.videoPreviewUrl,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 15
    }
  }), __jsx("div", {
    className: "p-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 212,
      columnNumber: 13
    }
  }, __jsx("article", {
    className: "pb-4",
    style: {
      maxWidth: '350px'
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 213,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-black font-semibold text-lg text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 214,
      columnNumber: 17
    }
  }, "Step 2"), __jsx("h4", {
    className: "text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 17
    }
  }, "Accurate hashtags increase viewership")), __jsx("div", {
    className: "grid grid-cols-1 md:grid-cols-3 gap-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 15
    }
  }, __jsx("div", {
    className: "relative w-full border border-gray-200 rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 218,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "font-bold absolute left-2 top-0 bottom-0 m-auto rounded flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 219,
      columnNumber: 19
    }
  }, "#"), __jsx("input", {
    value: hashtag1,
    onChange: e => setHashtag1(e.target.value),
    type: "text",
    className: "w-full rounded-lg border-0 pl-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 220,
      columnNumber: 19
    }
  })), __jsx("div", {
    className: "relative w-full border border-gray-200 rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 222,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "font-bold absolute left-2 top-0 bottom-0 m-auto rounded flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 19
    }
  }, "#"), __jsx("input", {
    value: hashtag2,
    onChange: e => setHashtag2(e.target.value),
    type: "text",
    className: "w-full rounded-lg border-0 pl-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 224,
      columnNumber: 19
    }
  })), __jsx("div", {
    className: "relative w-full border border-gray-200 rounded-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 226,
      columnNumber: 17
    }
  }, __jsx("span", {
    className: "font-bold absolute left-2 top-0 bottom-0 m-auto rounded flex items-center justify-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 227,
      columnNumber: 19
    }
  }, "#"), __jsx("input", {
    value: hashtag3,
    onChange: e => setHashtag3(e.target.value),
    type: "text",
    className: "w-full rounded-lg border-0 pl-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228,
      columnNumber: 19
    }
  })))), __jsx("div", {
    className: "p-4 flex flex-col md:flex-row items-start md:items-center justify-between gap-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 233,
      columnNumber: 13
    }
  }, __jsx("article", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 234,
      columnNumber: 15
    }
  }, __jsx("h3", {
    className: "text-black font-semibold text-lg text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 17
    }
  }, "Step 3"), __jsx("h4", {
    className: "text-black text-lg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 236,
      columnNumber: 17
    }
  }, "Select photo visibility")), __jsx("select", {
    value: isPublic ? 'public' : 'private',
    onChange: e => setIsPublic(e.target.value === 'public' ? true : false),
    className: "border-gray-200 rounded-lg w-full flex-1",
    name: "visibility",
    id: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238,
      columnNumber: 15
    }
  }, __jsx("option", {
    style: {
      backgroundColor: '#F3E6F1',
      color: '#121212'
    },
    value: "public",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 239,
      columnNumber: 17
    }
  }, "Public"), __jsx("option", {
    style: {
      backgroundColor: '#F3E6F1',
      color: '#121212'
    },
    value: "private",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 17
    }
  }, "Private"))), __jsx("div", {
    className: "flex-grow px-6 py-5 md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 244,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center gap-3 sm:flex-row justify-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 245,
      columnNumber: 15
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 246,
      columnNumber: 17
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_2__["AppButton"], {
    size: "base",
    onClick: onsubmit,
    disabled: !selectedThumbnailFile || !hashtag1 && !hashtag2 && !hashtag3 || isUploading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 250,
      columnNumber: 17
    }
  }, "Next")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 259,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals),
  currentUser: state.user.current
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapState, mapDispatch)(CreateNewVideoModal));

/***/ }),

/***/ "./src/components/modals/photo-video-upload/icons.tsx":
/*!************************************************************!*\
  !*** ./src/components/modals/photo-video-upload/icons.tsx ***!
  \************************************************************/
/*! exports provided: UploadSvg, UploadIcon, RecordSvg, RecordIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UploadSvg", function() { return UploadSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UploadIcon", function() { return UploadIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecordSvg", function() { return RecordSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RecordIcon", function() { return RecordIcon; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\photo-video-upload\\icons.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

const UploadSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "31",
    height: "30",
    viewBox: "0 0 31 30",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_3389_81541",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "31",
    height: "30",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 16,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "30",
    height: "30",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_3389_81541)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M14.5625 24.3749V13.8749L11.4808 16.9566L10.1635 15.6009L15.5 10.2644L20.8364 15.6009L19.5192 16.9566L16.4374 13.8749V24.3749H14.5625ZM6.125 11.274V7.88463C6.125 7.25321 6.34375 6.71875 6.78125 6.28125C7.21875 5.84375 7.75321 5.625 8.38462 5.625H22.6153C23.2467 5.625 23.7812 5.84375 24.2187 6.28125C24.6562 6.71875 24.8749 7.25321 24.8749 7.88463V11.274H23V7.88463C23 7.78846 22.9599 7.7003 22.8798 7.62016C22.7996 7.54003 22.7115 7.49997 22.6153 7.49997H8.38462C8.28846 7.49997 8.2003 7.54003 8.12016 7.62016C8.04003 7.7003 7.99997 7.78846 7.99997 7.88463V11.274H6.125Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 9
    }
  })));
};
const UploadIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: UploadSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 27,
    columnNumber: 3
  }
});
const RecordSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "31",
    height: "30",
    viewBox: "0 0 31 30",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 32,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_2609_53686",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "31",
    height: "30",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "30",
    height: "30",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_2609_53686)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 36,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M6.68487 23.88C5.49818 22.6922 4.58735 21.343 3.95236 19.8323C3.31737 18.3215 2.99988 16.7326 2.99988 15.0656C2.99988 13.3985 3.31737 11.8095 3.95236 10.2985C4.58735 8.78746 5.49818 7.43797 6.68487 6.25L7.89485 7.45998C6.87651 8.47832 6.09109 9.6429 5.53859 10.9537C4.98609 12.2646 4.70984 13.635 4.70984 15.065C4.70984 16.495 4.98609 17.8654 5.53859 19.1763C6.09109 20.4871 6.87651 21.6517 7.89485 22.67L6.68487 23.88ZM9.67488 20.89C8.90027 20.1134 8.30912 19.2244 7.90141 18.2229C7.49373 17.2215 7.28989 16.169 7.28989 15.0654C7.28989 13.9618 7.49373 12.9092 7.90141 11.9076C8.30912 10.906 8.90027 10.0168 9.67488 9.24001L10.8849 10.45C10.2565 11.0783 9.78527 11.7879 9.47111 12.5787C9.15694 13.3696 8.99985 14.1983 8.99985 15.065C8.99985 15.9317 9.15694 16.7604 9.47111 17.5513C9.78527 18.3421 10.2565 19.0517 10.8849 19.68L9.67488 20.89ZM21.3249 20.89L20.1149 19.68C20.7432 19.0517 21.2145 18.3421 21.5286 17.5513C21.8428 16.7604 21.9999 15.9317 21.9999 15.065C21.9999 14.1983 21.8428 13.3696 21.5286 12.5787C21.2145 11.7879 20.7432 11.0783 20.1149 10.45L21.3249 9.24001C22.0995 10.0166 22.6906 10.9056 23.0983 11.9071C23.506 12.9085 23.7099 13.961 23.7099 15.0646C23.7099 16.1682 23.506 17.2208 23.0983 18.2224C22.6906 19.224 22.0995 20.1132 21.3249 20.89ZM24.3149 23.88L23.1049 22.67C24.1232 21.6517 24.9087 20.4871 25.4612 19.1763C26.0137 17.8654 26.2899 16.495 26.2899 15.065C26.2899 13.635 26.0137 12.2646 25.4612 10.9537C24.9087 9.6429 24.1232 8.47832 23.1049 7.45998L24.3149 6.25C25.5016 7.43777 26.4124 8.78702 27.0474 10.2978C27.6824 11.8085 27.9999 13.3974 27.9999 15.0645C27.9999 16.7315 27.6824 18.3205 27.0474 19.8315C26.4124 21.3426 25.5016 22.692 24.3149 23.88Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 9
    }
  }), __jsx("path", {
    d: "M18.0997 15.065C18.0997 16.501 16.9357 17.665 15.4997 17.665C14.0638 17.665 12.8997 16.501 12.8997 15.065C12.8997 13.6291 14.0638 12.465 15.4997 12.465C16.9357 12.465 18.0997 13.6291 18.0997 15.065Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  })));
};
const RecordIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: RecordSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 46,
    columnNumber: 3
  }
});

/***/ }),

/***/ "./src/components/modals/photo-video-upload/photoCameraModal.tsx":
/*!***********************************************************************!*\
  !*** ./src/components/modals/photo-video-upload/photoCameraModal.tsx ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _lib_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/string */ "./src/lib/string.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _services_feed_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services/feed.service */ "./src/services/feed.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\photo-video-upload\\photoCameraModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }










const CapturePhoto = next_dynamic__WEBPACK_IMPORTED_MODULE_7___default()(() => __webpack_require__.e(/*! import() */ 4).then(__webpack_require__.bind(null, /*! @components/photo/capture-photo */ "./src/components/photo/capture-photo.tsx")), {
  ssr: false,
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/photo/capture-photo */ "./src/components/photo/capture-photo.tsx")],
    modules: ['@components/photo/capture-photo']
  }
});
const PhotoCameraModal = ({
  isOpen,
  onClose,
  modalProps
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["useDispatch"])();
  const {
    0: uploading,
    1: setUploading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  // I don't know why this is required, I just replicated this from legacy code.
  const [, updateState] = react__WEBPACK_IMPORTED_MODULE_0___default.a.useState();
  const forceUpdate = react__WEBPACK_IMPORTED_MODULE_0___default.a.useCallback(() => updateState({}), []);
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_6__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  const onUploading = (file, resp) => {
    // eslint-disable-next-line no-param-reassign
    file.percent = resp.percentage;
    // eslint-disable-next-line no-param-reassign
    if (file.percent === 100) file.status = 'done';
    forceUpdate();
  };
  const onFinishPhotoCapture = async fileUrl => {
    try {
      const fileName = 'thumbnails.png';
      let file = null;
      const blobBin = atob(fileUrl.split(',')[1]);
      const array = [];
      for (let i = 0; i < blobBin.length; i += 1) {
        array.push(blobBin.charCodeAt(i));
      }
      file = new File([new Blob([new Uint8Array(array)], {
        type: 'image/*'
      })], fileName, {
        type: 'image/png'
      });
      setUploading(true);
      const resp = await _services_feed_service__WEBPACK_IMPORTED_MODULE_9__["feedService"].uploadFile(file, {}, onUploading.bind(undefined, file));
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"])({
        isPhotoCameraModal: false,
        uploadPhotoModal: {
          isOpen: true,
          imageInfos: {
            fileList: modalProps.imageInfos.fileList.length ? [...modalProps.imageInfos.fileList, {
              thumnail: fileUrl,
              percent: 100,
              status: 'done',
              url: fileUrl,
              uid: Object(_lib_string__WEBPACK_IMPORTED_MODULE_2__["generateUuid"])(),
              type: 'image/png'
            }] : [{
              thumnail: fileUrl,
              percent: 100,
              status: 'done',
              url: fileUrl,
              uid: Object(_lib_string__WEBPACK_IMPORTED_MODULE_2__["generateUuid"])(),
              type: 'image/png'
            }],
            fileIds: modalProps.imageInfos.fileIds.length ? [...modalProps.imageInfos.fileIds, resp.data.fileId] : [resp.data.fileId]
          }
        }
      }));
      setUploading(false);
      return true;
    } catch (error) {
      antd__WEBPACK_IMPORTED_MODULE_8__["message"].error('Error uploading ! Please try again');
      console.error(error);
      setUploading(false);
      return false;
    }
  };
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-[580px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 17
    }
  }, "Take photo")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "px-6 pt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 13
    }
  }, __jsx(CapturePhoto, {
    onFinish: onFinishPhotoCapture,
    onCancel: () => null,
    capturing: uploading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 15
    }
  })), __jsx("div", {
    className: "flex-grow px-6 py-5 md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center gap-3 sm:flex-row justify-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 15
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 17
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    type: "submit",
    form: "goLiveForm",
    disabled: false,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 17
    }
  }, "Next")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapState, mapDispatch)(PhotoCameraModal));

/***/ }),

/***/ "./src/components/modals/photo-video-upload/videoCameraModal.tsx":
/*!***********************************************************************!*\
  !*** ./src/components/modals/photo-video-upload/videoCameraModal.tsx ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_webcam__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-webcam */ "react-webcam");
/* harmony import */ var react_webcam__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_webcam__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _services_feed_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services/feed.service */ "./src/services/feed.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\photo-video-upload\\videoCameraModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }









const VideoCameraModal = ({
  isOpen,
  onClose,
  modalProps
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["useDispatch"])();
  const {
    0: capturing,
    1: setCapturing
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const {
    0: recordedChunks,
    1: setRecordedChunks
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const {
    0: videoPreviewUrl,
    1: setVideoPreviewUrl
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const {
    0: videoFile,
    1: setVideoFile
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const webcamRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const mediaRecorderRef = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  const {
    0: isUploading,
    1: setIsUploading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const onUploading = (file, resp) => {
    file.percent = resp.percentage;
    if (file.percent === 100) file.status = 'done';
  };
  const onSendUploadVideoToFeed = async file => {
    setIsUploading(true);
    try {
      if (!(file !== null && file !== void 0 && file.size) || file.size === 0) {
        antd__WEBPACK_IMPORTED_MODULE_7__["message"].error('O vÃ­deo estÃ¡ vazio, tente gravar novamente.');
        return false;
      }
      const resp = await _services_feed_service__WEBPACK_IMPORTED_MODULE_8__["feedService"].uploadFile(file, {}, onUploading.bind(undefined, file));
      dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"])({
        uploadVideoModal: {
          isOpen: true,
          videoPreviewUrl: resp.data.url,
          imageInfos: {
            fileList: [file],
            fileIds: modalProps.imageInfos.fileIds.length ? [...modalProps.imageInfos.fileIds, resp.data.fileId] : [resp.data.fileId]
          }
        },
        isVideoCameraModal: false
      }));
      setIsUploading(false);
      return true;
    } catch (error) {
      setIsUploading(false);
      console.error('Erro ao fazer o upload do vÃ­deo:', error);
      antd__WEBPACK_IMPORTED_MODULE_7__["message"].error('Erro ao fazer o upload do vÃ­deo. Tente novamente.');
      return false;
    }
  };
  const handleStartCaptureClick = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(() => {
    setCapturing(true);
    mediaRecorderRef.current = new MediaRecorder(webcamRef.current.video.srcObject, {
      mimeType: 'video/mp4'
    });
    mediaRecorderRef.current.addEventListener('dataavailable', handleDataAvailable);
    mediaRecorderRef.current.start();
  }, [webcamRef]);
  const handleDataAvailable = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(({
    data
  }) => {
    if (data.size > 0) {
      setRecordedChunks(prev => prev.concat(data));
    }
  }, []);
  const handleStopCaptureClick = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(() => {
    mediaRecorderRef.current.stop();
    setCapturing(false);
  }, [mediaRecorderRef]);
  const handlePreview = Object(react__WEBPACK_IMPORTED_MODULE_0__["useCallback"])(() => {
    if (recordedChunks.length) {
      const blob = new Blob(recordedChunks, {
        type: 'video/mp4'
      });
      const url = URL.createObjectURL(blob);
      setVideoPreviewUrl(url);
      const file = new File([blob], 'recorded-video.mp4', {
        type: 'video/mp4'
      });
      setVideoFile(file);
    }
  }, [recordedChunks]);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    handlePreview();
  }, [recordedChunks]);
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_6__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-[580px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex justify-between px-5 py-5 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 17
    }
  }, "Record new video")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 122,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "px-6 pt-6 text-center space-y-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 13
    }
  }, videoPreviewUrl ? __jsx("video", {
    src: videoPreviewUrl,
    controls: true,
    autoPlay: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 17
    }
  }) : __jsx(react_webcam__WEBPACK_IMPORTED_MODULE_1___default.a, {
    ref: webcamRef,
    audio: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 17
    }
  }), capturing ? __jsx("button", {
    className: "h-12 w-12 rounded-full hover:bg-red-700 bg-red-600 transition-all",
    onClick: handleStopCaptureClick,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 17
    }
  }) : __jsx("button", {
    className: "h-12 w-12 rounded-full bg-red-700 hover:bg-red-600 transition-all",
    onClick: handleStartCaptureClick,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 17
    }
  })), __jsx("div", {
    className: "flex-grow px-6 py-5 md:self-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 143,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center gap-3 sm:flex-row justify-end",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 15
    }
  }, __jsx("button", {
    onClick: onClose,
    className: "text-sm font-medium text-black hover:opacity-80 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 17
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_2__["AppButton"], {
    onClick: () => onSendUploadVideoToFeed(videoFile),
    disabled: !recordedChunks.length || isUploading,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 149,
      columnNumber: 17
    }
  }, "Next", isUploading && __jsx(antd__WEBPACK_IMPORTED_MODULE_7__["Spin"], {
    className: "m-auto px-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 21
    }
  }))))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_4__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapState, mapDispatch)(VideoCameraModal));

/***/ }),

/***/ "./src/components/modals/purchaseRubiesCompleteModal.tsx":
/*!***************************************************************!*\
  !*** ./src/components/modals/purchaseRubiesCompleteModal.tsx ***!
  \***************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _services_payment_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @services/payment.service */ "./src/services/payment.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\purchaseRubiesCompleteModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }








const PurchaseRubiesCompleteModal = ({
  isOpen,
  onClose,
  isTransactionSuccess,
  orderId,
  payerId
}) => {
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_6__["useRouter"])();
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_3__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_4__["default"])(onClose);
  const {
    0: tokensPurchased,
    1: setTokensPurchased
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(0);
  const {
    0: isLoading,
    1: setIsLoading
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(true);
  const handleRequestTransaction = async () => {
    if (isTransactionSuccess === 'true') {
      setIsLoading(true);
      const sendTransactionSuccess = await _services_payment_service__WEBPACK_IMPORTED_MODULE_7__["paymentService"].paypalCallhook({
        eventType: "PAYMENT.CAPTURE.COMPLETED",
        orderId
      });
      if (sendTransactionSuccess) {
        const checkIfTransactionIsOkay = await _services_payment_service__WEBPACK_IMPORTED_MODULE_7__["paymentService"].paypalCallback(orderId);
        if (checkIfTransactionIsOkay.data.products[0].tokens) setTokensPurchased(checkIfTransactionIsOkay.data.products[0].tokens);
      }
    } else if (isTransactionSuccess === 'false' && orderId) {
      await _services_payment_service__WEBPACK_IMPORTED_MODULE_7__["paymentService"].paypalCallhook({
        eventType: "PAYMENT.CAPTURE.DENIED",
        orderId
      });
    }
    setIsLoading(false);
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    handleRequestTransaction();
  }, []);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-3xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 py-5 mb-10 border-b rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 17
    }
  }, isTransactionSuccess === 'true' ? 'Thank you for your purchase' : 'Something went wrong, purchase failed')), !isLoading ? __jsx("button", {
    onClick: () => {
      router.replace('wallet');
      onClose();
    },
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 75,
      columnNumber: 17
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 19
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 21
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 19
    }
  }, "Close modal")) : null), __jsx("div", {
    className: "px-6 md:px-8 pb-10",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "pt-4 bg-gray-100 rounded-md",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 15
    }
  }, __jsx("p", {
    className: "text-center flex items-center justify-center text-4xl p-4 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 17
    }
  }, isLoading ? __jsx("img", {
    className: "animate-pulse",
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 21
    }
  }) : __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, tokensPurchased, " ", __jsx("img", {
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 41
    }
  }))), __jsx("p", {
    className: "text-center bg-gray-200 p-2 rounded-b-md font-semibold text-gray-500 text-md",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 17
    }
  }, isLoading ? 'checking your transaction' : 'Rubys have been added to your wallet'))), __jsx("footer", {
    className: "flex flex-col items-end justify-end border-t p-8 py-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 13
    }
  }, !isLoading ? __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_5__["AppButton"], {
    variant: "secondary",
    onClick: () => {
      onClose();
      const currentUrl = window.location.origin + window.location.pathname;
      window.history.replaceState({}, '', currentUrl);
      window.location.reload();
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 17
    }
  }, "Done") : null)))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_2__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_1__["connect"])(mapState, mapDispatch)(PurchaseRubiesCompleteModal));

/***/ }),

/***/ "./src/components/modals/registerModal.tsx":
/*!*************************************************!*\
  !*** ./src/components/modals/registerModal.tsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! yup */ "yup");
/* harmony import */ var yup__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(yup__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hook-form */ "react-hook-form");
/* harmony import */ var react_hook_form__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_hook_form__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @hookform/resolvers/yup */ "@hookform/resolvers/yup");
/* harmony import */ var _hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/ui/shared/AppInput */ "./src/components/ui/shared/AppInput.tsx");
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @services/auth.service */ "./src/services/auth.service.ts");
/* harmony import */ var _services_cookies_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @services/cookies.service */ "./src/services/cookies.service.ts");
/* harmony import */ var _redux_auth_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @redux/auth/actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @lib/firebase */ "./src/lib/firebase.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var _components_ui_shared_GenderInput__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @components/ui/shared/GenderInput */ "./src/components/ui/shared/GenderInput.tsx");
/* harmony import */ var _components_ui_shared_CheckboxInput__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @components/ui/shared/CheckboxInput */ "./src/components/ui/shared/CheckboxInput.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\registerModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


















const schema = yup__WEBPACK_IMPORTED_MODULE_3__["object"]({
  email: yup__WEBPACK_IMPORTED_MODULE_3__["string"]().email("Please enter a valid email").required("Please enter your email"),
  password: yup__WEBPACK_IMPORTED_MODULE_3__["string"]().required("Please enter your password").matches(/^(?=.{8,})(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])(?=.*[^\w\d]).*$/, "Password must be at least 8 characters long and include at least one lowercase letter, one uppercase letter, one digit, and one special character."),
  confirmPassword: yup__WEBPACK_IMPORTED_MODULE_3__["string"]().oneOf([yup__WEBPACK_IMPORTED_MODULE_3__["ref"]("password"), null], "Passwords must match"),
  gender: yup__WEBPACK_IMPORTED_MODULE_3__["string"]().required("â€˜Please select any one option."),
  ageConfirmation: yup__WEBPACK_IMPORTED_MODULE_3__["bool"]().oneOf([true], "â€™Please agree to the terms and conditions to proceed.")
});
const RegisterModal = ({
  isOpen,
  onClose,
  loginSocial,
  registerFanData,
  settings
}) => {
  var _errors$email, _errors$password, _errors$confirmPasswo, _errors$gender, _errors$ageConfirmati;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_11__["useDispatch"])();
  const {
    0: introducerId,
    1: setIntroducerId
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(null);
  const {
    register,
    handleSubmit,
    formState: {
      isLoading,
      isValid,
      errors
    }
  } = Object(react_hook_form__WEBPACK_IMPORTED_MODULE_4__["useForm"])({
    resolver: Object(_hookform_resolvers_yup__WEBPACK_IMPORTED_MODULE_5__["yupResolver"])(schema),
    mode: "onChange"
  });
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_15__["default"])(isOpen);
  const onSubmit = data => {
    try {
      const resp = _services_cookies_service__WEBPACK_IMPORTED_MODULE_9__["cookieService"].getCookie("introducerId") || null;
      dispatch(Object(_redux_auth_actions__WEBPACK_IMPORTED_MODULE_10__["registerFan"])(_objectSpread(_objectSpread({}, data), {}, {
        introducerId: resp || null
      })));
    } catch (error) {
      console.error(error);
    }
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    getIntroducer();
  }, []);
  async function getIntroducer() {
    const data = (await _services_cookies_service__WEBPACK_IMPORTED_MODULE_9__["cookieService"].getCookie("introducerId")) || null;
    setIntroducerId(data);
  }
  async function onGoogleLogin(resp) {
    const payload = {
      tokenId: resp.tokenId,
      role: "user"
    };
    if (!(resp !== null && resp !== void 0 && resp.tokenId)) {
      return;
    }
    console.log(resp, "resp");
    try {
      // await this.setState({ isLoading: true });
      const response = await (await _services_auth_service__WEBPACK_IMPORTED_MODULE_8__["authService"].loginGoogle(payload)).data;
      response.token && loginSocial({
        token: response.token
      });
    } catch (e) {
      const error = await e;
      // message.error(error && error.message ? error.message : 'Google login authenticated fail');
    } finally {
      // this.setState({ isLoading: false });
    }
  }
  const handleSignInWithGoogle = async () => {
    try {
      const result = await Object(_lib_firebase__WEBPACK_IMPORTED_MODULE_13__["signInWithPopup"])(_lib_firebase__WEBPACK_IMPORTED_MODULE_13__["auth"], _lib_firebase__WEBPACK_IMPORTED_MODULE_13__["provider"]);
      const token = await result.user.getIdToken();
      const payload = {
        tokenId: token,
        role: "user"
      };
      const response = await (await _services_auth_service__WEBPACK_IMPORTED_MODULE_8__["authService"].loginGoogle(payload)).data;
      response.token && loginSocial({
        token: response.token
      });
    } catch (error) {
      console.error("Error signing in: ", error);
    }
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    var _registerFanData$data;
    if (registerFanData.success && registerFanData !== null && registerFanData !== void 0 && (_registerFanData$data = registerFanData.data) !== null && _registerFanData$data !== void 0 && _registerFanData$data.user) {
      next_router__WEBPACK_IMPORTED_MODULE_2___default.a.push("/help/about-caster/confirmemail");
    }
  }, [registerFanData]);
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_15__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_14__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-6 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? "block" : "hidden"}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "relative w-full max-w-[485px] max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "relative px-6 pt-6 bg-white rounded-lg shadow pb-9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 11
    }
  }, __jsx("div", {
    className: "flex items-center justify-end rounded-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 13
    }
  }, __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "absolute inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900 top-4 right-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 168,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 173,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 180,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "mt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 13
    }
  }, __jsx("h3", {
    className: "mb-3 text-xl text-center text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 15
    }
  }, "Create your account"), __jsx("h4", {
    className: "mb-6 text-sm text-center text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 15
    }
  }, "Make your own videos and more."), __jsx("div", {
    className: "space-y-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 15
    }
  }, __jsx("form", {
    className: "space-y-3",
    onSubmit: handleSubmit(onSubmit),
    noValidate: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 202,
      columnNumber: 17
    }
  }, __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_6__["AppInput"], _extends({}, register("email"), {
    type: "email",
    id: "register-email",
    autoComplete: "username",
    placeholder: "Email",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 207,
      columnNumber: 19
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_6__["AppInput"], _extends({}, register("password"), {
    type: "password",
    id: "register-password",
    autoComplete: "new-password",
    placeholder: "Password",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 215,
      columnNumber: 19
    }
  })), __jsx(_components_ui_shared_AppInput__WEBPACK_IMPORTED_MODULE_6__["AppInput"], _extends({}, register("confirmPassword"), {
    type: "password",
    id: "register-confirm-password",
    autoComplete: "new-password",
    placeholder: "Confirm password",
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 223,
      columnNumber: 19
    }
  })), __jsx(_components_ui_shared_GenderInput__WEBPACK_IMPORTED_MODULE_16__["default"], {
    label: "Gender",
    name: "gender",
    options: [{
      value: "male",
      label: "Male"
    }, {
      value: "female",
      label: "Female"
    }],
    register: register,
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$gender = errors.gender) === null || _errors$gender === void 0 ? void 0 : _errors$gender.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 231,
      columnNumber: 19
    }
  }), __jsx(_components_ui_shared_CheckboxInput__WEBPACK_IMPORTED_MODULE_17__["default"], {
    label: "I confirm that I am at least 18 years old.",
    name: "ageConfirmation",
    register: register,
    errorMessage: errors === null || errors === void 0 ? void 0 : (_errors$ageConfirmati = errors.ageConfirmation) === null || _errors$ageConfirmati === void 0 ? void 0 : _errors$ageConfirmati.message,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241,
      columnNumber: 19
    }
  }), __jsx("button", {
    type: "submit",
    className: `w-full ${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_7__["buttonVariants"])({
      disabled: !isValid || isLoading
    })}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 247,
      columnNumber: 19
    }
  }, registerFanData !== null && registerFanData !== void 0 && registerFanData.requesting ? __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 23
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 25
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 263,
      columnNumber: 27
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 267,
      columnNumber: 27
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 273,
      columnNumber: 25
    }
  }, "Loading...")) : "Create account"))), __jsx("div", {
    className: "inline-flex items-center justify-center w-full my-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 282,
      columnNumber: 15
    }
  }, __jsx("hr", {
    className: "w-full h-px bg-gray-200 border-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 283,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "absolute px-3 bg-white text-base-700",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 284,
      columnNumber: 17
    }
  }, "Or")), __jsx("div", {
    className: "mb-6 space-y-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 287,
      columnNumber: 15
    }
  }, __jsx("button", {
    type: "submit",
    onClick: () => handleSignInWithGoogle(),
    className: "flex items-center justify-center w-full h-12 gap-3 px-8 py-3 font-semibold text-black rounded-full bg-base-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 288,
      columnNumber: 17
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 293,
      columnNumber: 19
    }
  }, __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M20.64 12.2061C20.64 11.568 20.5827 10.9543 20.4764 10.3652H12V13.8466H16.8436C16.635 14.9716 16.0009 15.9248 15.0477 16.563V18.8211H17.9564C19.6582 17.2543 20.64 14.9471 20.64 12.2061Z",
    fill: "#4285F4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 300,
      columnNumber: 21
    }
  }), __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.0001 21.0009C14.4301 21.0009 16.4674 20.195 17.9565 18.8205L15.0479 16.5623C14.2419 17.1023 13.211 17.4214 12.0001 17.4214C9.65603 17.4214 7.67194 15.8382 6.96422 13.7109H3.9574V16.0428C5.43831 18.9841 8.48194 21.0009 12.0001 21.0009Z",
    fill: "#34A853",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 306,
      columnNumber: 21
    }
  }), __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M6.96409 13.7108C6.78409 13.1708 6.68182 12.594 6.68182 12.0008C6.68182 11.4076 6.78409 10.8308 6.96409 10.2908V7.95898H3.95727C3.34773 9.17398 3 10.5485 3 12.0008C3 13.4531 3.34773 14.8276 3.95727 16.0426L6.96409 13.7108Z",
    fill: "#FBBC05",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 312,
      columnNumber: 21
    }
  }), __jsx("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.0001 6.57955C13.3215 6.57955 14.5079 7.03364 15.4406 7.92545L18.0219 5.34409C16.4633 3.89182 14.426 3 12.0001 3C8.48194 3 5.43831 5.01682 3.9574 7.95818L6.96422 10.29C7.67194 8.16273 9.65603 6.57955 12.0001 6.57955Z",
    fill: "#EA4335",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 318,
      columnNumber: 21
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 326,
      columnNumber: 19
    }
  }, "Continue with Google")), __jsx("button", {
    onClick: onClose,
    className: "flex items-center justify-center w-full h-12 gap-3 px-8 py-3 font-semibold text-black rounded-full bg-base-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-300 hover:bg-gray-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 329,
      columnNumber: 17
    }
  }, __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 333,
      columnNumber: 19
    }
  }, __jsx("mask", {
    id: "mask0_2916_39220",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 340,
      columnNumber: 21
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 348,
      columnNumber: 23
    }
  })), __jsx("g", {
    mask: "url(#mask0_2916_39220)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 350,
      columnNumber: 21
    }
  }, __jsx("path", {
    d: "M5.02308 15.7923C5.87308 15.1615 6.79903 14.6635 7.80095 14.2981C8.80287 13.9327 9.86921 13.75 11 13.75C12.1307 13.75 13.1971 13.9327 14.199 14.2981C15.2009 14.6635 16.1269 15.1615 16.9769 15.7923C17.5987 15.109 18.0913 14.3179 18.4548 13.4192C18.8182 12.5205 19 11.5474 19 10.5C19 8.28331 18.2208 6.39581 16.6625 4.83748C15.1041 3.27914 13.2166 2.49998 11 2.49998C8.78331 2.49998 6.89581 3.27914 5.33748 4.83748C3.77914 6.39581 2.99998 8.28331 2.99998 10.5C2.99998 11.5474 3.18171 12.5205 3.54518 13.4192C3.90864 14.3179 4.40128 15.109 5.02308 15.7923ZM11.0003 11.25C10.0873 11.25 9.31729 10.9366 8.69038 10.3099C8.06346 9.68314 7.75 8.91328 7.75 8.00028C7.75 7.08726 8.06336 6.31729 8.69008 5.69038C9.31681 5.06346 10.0867 4.75 10.9997 4.75C11.9127 4.75 12.6827 5.06336 13.3096 5.69008C13.9365 6.31681 14.25 7.08668 14.25 7.99968C14.25 8.91269 13.9366 9.68266 13.3099 10.3096C12.6831 10.9365 11.9133 11.25 11.0003 11.25ZM11 20C9.68074 20 8.44325 19.7519 7.2875 19.2557C6.13173 18.7596 5.12628 18.0839 4.27115 17.2288C3.41603 16.3737 2.7404 15.3682 2.24425 14.2125C1.74808 13.0567 1.5 11.8192 1.5 10.5C1.5 9.18074 1.74808 7.94325 2.24425 6.7875C2.7404 5.63173 3.41603 4.62628 4.27115 3.77115C5.12628 2.91603 6.13173 2.2404 7.2875 1.74425C8.44325 1.24808 9.68074 1 11 1C12.3192 1 13.5567 1.24808 14.7125 1.74425C15.8682 2.2404 16.8737 2.91603 17.7288 3.77115C18.5839 4.62628 19.2596 5.63173 19.7557 6.7875C20.2519 7.94325 20.5 9.18074 20.5 10.5C20.5 11.8192 20.2519 13.0567 19.7557 14.2125C19.2596 15.3682 18.5839 16.3737 17.7288 17.2288C16.8737 18.0839 15.8682 18.7596 14.7125 19.2557C13.5567 19.7519 12.3192 20 11 20ZM11 18.5C11.9025 18.5 12.7727 18.3548 13.6105 18.0644C14.4484 17.774 15.1923 17.3679 15.8423 16.8461C15.1923 16.3436 14.458 15.9519 13.6394 15.6711C12.8208 15.3903 11.941 15.25 11 15.25C10.0589 15.25 9.17753 15.3887 8.35573 15.6663C7.53393 15.9439 6.80123 16.3371 6.15765 16.8461C6.80765 17.3679 7.55157 17.774 8.3894 18.0644C9.22722 18.3548 10.0974 18.5 11 18.5ZM11 9.75C11.4974 9.75 11.9134 9.58269 12.2481 9.24808C12.5827 8.91344 12.75 8.49741 12.75 7.99998C12.75 7.50254 12.5827 7.08651 12.2481 6.75188C11.9134 6.41726 11.4974 6.24995 11 6.24995C10.5025 6.24995 10.0865 6.41726 9.75187 6.75188C9.41726 7.08651 9.24995 7.50254 9.24995 7.99998C9.24995 8.49741 9.41726 8.91344 9.75187 9.24808C10.0865 9.58269 10.5025 9.75 11 9.75Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 351,
      columnNumber: 23
    }
  }))), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 358,
      columnNumber: 19
    }
  }, "Continue as Guest"))), __jsx("button", {
    type: "button",
    onClick: () => dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_12__["updateModals"])({
      isLoginModalOpen: true,
      isRegisterModalOpen: false
    })),
    className: "flex mx-auto text-sm font-medium text-black cursor-pointer mb-9 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 362,
      columnNumber: 15
    }
  }, "Already have an account?\xA0", __jsx("span", {
    className: "text-purple-800",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 375,
      columnNumber: 17
    }
  }, "Log in")), __jsx("div", {
    className: "max-w-xs mx-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 378,
      columnNumber: 15
    }
  }, __jsx("p", {
    className: "text-xs text-center text-base-600",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 379,
      columnNumber: 17
    }
  }, "By continuing, you agree to our", __jsx(next_link__WEBPACK_IMPORTED_MODULE_1___default.a, {
    href: "/page/terms-of-service",
    passHref: true,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 381,
      columnNumber: 19
    }
  }, __jsx("a", {
    className: "px-1 font-medium text-center text-purple-800 hover:underline",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 382,
      columnNumber: 21
    }
  }, "Terms of Service")), "and acknowledge that you have read our privacy policy to learn how we collect and share data.")))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? "block" : "hidden"}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 395,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals),
  settings: _objectSpread({}, state.settings),
  registerFanData: _objectSpread({}, state.auth.registerFanData),
  verified: state.auth.verified
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_12__["updateModals"],
  registerFan: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_10__["registerFan"],
  loginSocial: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_10__["loginSocial"],
  registerFanSuccess: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_10__["registerFanSuccess"],
  verifiedFanSuccess: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_10__["verifiedFanSuccess"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_11__["connect"])(mapState, mapDispatch)(RegisterModal));

/***/ }),

/***/ "./src/components/modals/reportLiveStreamModal.tsx":
/*!*********************************************************!*\
  !*** ./src/components/modals/reportLiveStreamModal.tsx ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\reportLiveStreamModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const ReportLiveStreamModal = ({
  isOpen,
  onClose
}) => {
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const onLiveStreamEnd = data => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isReportLiveStreamModalOpen: false
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 37,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-4xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 38,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 39,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 15
    }
  }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["CautionIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 17
    }
  }), __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 17
    }
  }, "Report violation")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "p-4 pt-6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "grid grid-cols-3 p-4 gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 15
    }
  }, __jsx("img", {
    className: "w-full min-h-20 bg-black",
    src: "/images/logo.png",
    alt: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 17
    }
  }), __jsx("img", {
    className: "w-full min-h-20 bg-black",
    src: "/images/logo.png",
    alt: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 17
    }
  }), __jsx("img", {
    className: "w-full min-h-20 bg-black",
    src: "/images/logo.png",
    alt: "",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 17
    }
  })), __jsx("p", {
    className: "text-sm md:text-md",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 15
    }
  }, "Please provide details about this report."), __jsx("textarea", {
    placeholder: "Tell us why you reported the user",
    className: "min-h-10 w-full rounded-lg p-4",
    name: "report-message",
    id: "report-message",
    maxLength: 400,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 15
    }
  }), __jsx("legend", {
    className: "w-full text-right text-sm",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 63,
      columnNumber: 15
    }
  }, "0/400")), __jsx("footer", {
    className: "w-full p-4 border-t text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-2 bg-red-700",
    disabled: false,
    onClick: onLiveStreamEnd,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 74,
      columnNumber: 15
    }
  }, "Submit"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(ReportLiveStreamModal));

/***/ }),

/***/ "./src/components/modals/streamMutedListModal.tsx":
/*!********************************************************!*\
  !*** ./src/components/modals/streamMutedListModal.tsx ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\streamMutedListModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }






const StreamMudetListModal = ({
  isOpen,
  onClose,
  modalMutedList
}) => {
  const {
    0: mutedList,
    1: setMutedList
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])([]);
  const {
    0: isAddUserToggle,
    1: setIsAddUserToggle
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])(false);
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const onSaveMutedList = data => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isStreamMutedListModalOpen: false
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    // handle mutedList fetch and setMutedList
  }, []);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-4xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 52,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 17
    }
  }, "Muted list")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "p-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 13
    }
  }, __jsx("p", {
    className: "text-lg text-black pb-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 15
    }
  }, "The following fans can not comment during your live broadcast. "), __jsx("label", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 14
    }
  }, "Add users"), __jsx("div", {
    className: "relative pb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 14
    }
  }, __jsx("div", {
    onClick: () => setIsAddUserToggle(!isAddUserToggle),
    className: `p-2 border rounded-lg flex items-center justify-start gap-2 flex-wrap ${isAddUserToggle && 'border-purple-700'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 15
    }
  }, __jsx("button", {
    className: "py-1 rounded-full px-2 bg-purple-100 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 17
    }
  }, "Matheus", __jsx("span", {
    className: "text-gray-500 text-lg px-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 19
    }
  }, "\xD7"))), isAddUserToggle && __jsx("div", {
    className: "bg-white shadow-lg rounded-lg absolute top-[102%] left-0 right-0 m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 76,
      columnNumber: 17
    }
  }, __jsx("fieldset", {
    className: "p-2 hover:bg-purple-100",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 19
    }
  }, __jsx("input", {
    className: "rounded text-black",
    type: "checkbox",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 21
    }
  }), __jsx("label", {
    className: "pl-2 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 21
    }
  }, "Matheus")), __jsx("div", {
    className: "mx-2 pb-2 pt-3 border-t",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 82,
      columnNumber: 19
    }
  }, __jsx("button", {
    className: "p-1 rounded-lg hover:bg-gray-100 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 21
    }
  }, "Clear all")))), __jsx("table", {
    className: "w-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 89,
      columnNumber: 15
    }
  }, __jsx("thead", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 17
    }
  }, __jsx("th", {
    className: "p-1 border-b border-gray-500 text-left",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 19
    }
  }, "User"), __jsx("th", {
    className: "p-1 border-b border-gray-500 text-left",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 92,
      columnNumber: 19
    }
  }, "Date added"), __jsx("th", {
    className: "p-1 border-b border-gray-500 text-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 19
    }
  }, "Remove")), __jsx("tbody", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 17
    }
  }, __jsx("tr", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 19
    }
  }, __jsx("td", {
    className: "px-1 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 21
    }
  }, __jsx("p", {
    className: "text-black font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 23
    }
  }, "Matheus Alves"), __jsx("p", {
    className: "text-sm text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 23
    }
  }, "@mathalves_fullstack")), __jsx("td", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 21
    }
  }, "10/10/2024"), __jsx("td", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 21
    }
  }, __jsx("button", {
    className: "bg-red-700 text-white rounded-full w-8 h-8 text-xl flex items-center justify-center m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 23
    }
  }, "\xD7")))))), __jsx("footer", {
    className: "w-full p-4 text-right",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 13
    }
  }, __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 15
    }
  }, "Cancel"), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "default",
    className: "px-2",
    disabled: false,
    onClick: onSaveMutedList,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 15
    }
  }, "Save"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(StreamMudetListModal));

/***/ }),

/***/ "./src/components/modals/waitingForModelModal.tsx":
/*!********************************************************!*\
  !*** ./src/components/modals/waitingForModelModal.tsx ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/hooks/useDisabledScroll */ "./src/hooks/useDisabledScroll.ts");
/* harmony import */ var src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/hooks/useClickOutside */ "./src/hooks/useClickOutside.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\modals\\waitingForModelModal.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const WaitingForModelModal = ({
  isOpen,
  onClose,
  performerInfos,
  performerTotalFollowers
}) => {
  var _performerInfos$name, _performerInfos$usern;
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["useDispatch"])();
  const openPurchaseRubysModal = () => {
    dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"])({
      isNotEnoughRubysLiveModal: true
      // confirmPrivateVideoModal: {
      //   isOpen: false,
      //   performerInfos: null,
      //   performerTotalFollowers: 0
      // }
    }));
    return;
  };
  Object(src_hooks_useDisabledScroll__WEBPACK_IMPORTED_MODULE_4__["default"])(isOpen);
  const ref = Object(src_hooks_useClickOutside__WEBPACK_IMPORTED_MODULE_5__["default"])(onClose);
  if (!isOpen) {
    return null;
  }
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
    tabIndex: -1,
    "aria-hidden": "true",
    className: `overflow-y-auto px-5 overflow-x-hidden fixed flex top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 7
    }
  }, __jsx("div", {
    ref: ref,
    role: "dialog",
    className: "w-full max-w-4xl max-h-full m-auto",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  }, __jsx("div", {
    className: "bg-white rounded-lg shadow m-auto w-11/12 md:w-1/2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 11
    }
  }, __jsx("header", {
    className: "flex justify-between px-5 pt-4 rounded-t border-base-400",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "inline-flex items-center gap-x-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 15
    }
  }, __jsx("span", {
    className: "text-xl text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 17
    }
  }, "Waiting for model")), __jsx("button", {
    onClick: onClose,
    type: "button",
    className: "inline-flex items-center justify-center w-6 h-6 text-sm text-gray-400 bg-transparent rounded-lg hover:bg-gray-200 hover:text-gray-900",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 15
    }
  }, __jsx("svg", {
    className: "w-3 h-3",
    "aria-hidden": "true",
    xmlns: "http://www.w3.org/2000/svg",
    fill: "none",
    viewBox: "0 0 14 14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 17
    }
  }, __jsx("path", {
    stroke: "currentColor",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "2",
    d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 19
    }
  })), __jsx("span", {
    className: "sr-only",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 57,
      columnNumber: 17
    }
  }, "Close modal"))), __jsx("div", {
    className: "py-6 px-6 mx-6 border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "bg-center bg-cover relative performer-profile-image-ratio max-w-[150px] mx-auto rounded",
    style: {
      backgroundImage: `url(${(performerInfos === null || performerInfos === void 0 ? void 0 : performerInfos.avatar) || '/static/no-avatar.png'})`
    },
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 62,
      columnNumber: 15
    }
  }, __jsx("header", {
    className: "absolute top-0 right-0 left-0 z-30 p-2 py-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 68,
      columnNumber: 17
    }
  }, __jsx("div", {
    className: "flex items-center justify-between",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 21
    }
  }, __jsx("div", {
    className: "flex items-center gap-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 70,
      columnNumber: 23
    }
  }, __jsx("span", {
    className: "block w-5 h-5 rounded-full bg-green-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 71,
      columnNumber: 25
    }
  }), __jsx("span", {
    className: "text-white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 25
    }
  }, "Active")))), __jsx("div", {
    className: "absolute top-0 left-0 right-0 bottom-0 m-auto bg-black/30 z-10",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 17
    }
  }), __jsx("div", {
    className: "absolute top-0 left-0 right-0 bottom-0 m-auto flex flex-col items-baseline justify-end z-20 px-3 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 78,
      columnNumber: 17
    }
  }, __jsx("p", {
    className: "text-white font-semibold flex items-center",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 19
    }
  }, (performerInfos === null || performerInfos === void 0 ? void 0 : (_performerInfos$name = performerInfos.name) === null || _performerInfos$name === void 0 ? void 0 : _performerInfos$name.split(' ')[0].substring(0, 10)) || (performerInfos === null || performerInfos === void 0 ? void 0 : (_performerInfos$usern = performerInfos.username) === null || _performerInfos$usern === void 0 ? void 0 : _performerInfos$usern.split(' ')[0].substring(0, 15)) || 'N/A', (performerInfos === null || performerInfos === void 0 ? void 0 : performerInfos.verifiedAccount) && __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["TickIcon"], {
    className: "ml-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 57
    }
  })), __jsx("div", {
    className: "flex items-center justify-between w-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 83,
      columnNumber: 19
    }
  }, __jsx("p", {
    className: "text-white flex items-center ml-[-3px]",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 21
    }
  }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_6__["ProfileIcon"], {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 23
    }
  }), performerTotalFollowers || 0, ' ', "Fans")))), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    className: `rounded-t-none w-full rounded-b-lg ${performerInfos.gender === 'male' ? 'bg-blue-900' : ''} w-[150px] mx-auto block`,
    variant: "noFlex",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 15
    }
  }, __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 97,
      columnNumber: 17
    }
  }, "Follow"))), __jsx("div", {
    className: "py-6 px-0 mx-6 border-b flex items-center justify-center flex-col",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 13
    }
  }, __jsx("h2", {
    className: "text-3xl font-semibold text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 15
    }
  }, "Business time"), __jsx("h3", {
    className: "text-xl pb-4 text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 15
    }
  }, "will be joining you within the next"), __jsx("div", {
    className: "bg-gray-200 rounded-full px-3 py-4 font-semibold text-black text-center -space-y-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 15
    }
  }, __jsx("p", {
    className: "text-2xl",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 17
    }
  }, "120"), __jsx("p", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 17
    }
  }, "seconds"))), __jsx("div", {
    className: "py-6 px-0 mx-6 border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 13
    }
  }, __jsx("div", {
    className: "flex items-center justify-between pb-3",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 17
    }
  }, __jsx("h2", {
    className: "font-semibold text-lg text-black/90",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 19
    }
  }, "Private room fee  "), __jsx("a", {
    className: "text-purple-800 text-lg",
    href: "#",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 19
    }
  }, "Need help?")), __jsx("table", {
    className: "w-full",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 17
    }
  }, __jsx("thead", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 19
    }
  }, __jsx("th", {
    className: "text-left text-black/90 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 21
    }
  }, "# of Rubys"), __jsx("th", {
    className: "text-left text-black/90 py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 21
    }
  }, "Details")), __jsx("tbody", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 123,
      columnNumber: 19
    }
  }, __jsx("tr", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 124,
      columnNumber: 21
    }
  }, __jsx("td", {
    className: "flex items-center text-2xl py-2 text-black/90",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 23
    }
  }, "5 ", __jsx("img", {
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 27
    }
  })), __jsx("td", {
    className: "py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 23
    }
  }, "for the first minute")), __jsx("tr", {
    className: "border-b",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 21
    }
  }, __jsx("td", {
    className: "flex items-center text-2xl py-2 text-black/90",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 23
    }
  }, "1 ", __jsx("img", {
    src: "/static/gem.png",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 27
    }
  })), __jsx("td", {
    className: "py-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 23
    }
  }, "Each additional minute")))), __jsx("p", {
    className: "pt-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 17
    }
  }, "Note: Private room fee will be automatically deducted from your account at the beginning of each minute.")), __jsx("footer", {
    className: "w-full p-4 pb-6 text-right flex items-center flex-col md:flex-row gap-2 md:gap-0",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 13
    }
  }, __jsx("fieldset", {
    className: "py-3 px-2 flex items-center justify-start gap-2 w-full order-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 146,
      columnNumber: 15
    }
  }, __jsx("a", {
    className: "text-purple-800 font-semibold",
    href: "#",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 17
    }
  }, "Terms and Conditions")), __jsx(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_1__["AppButton"], {
    variant: "tertiary",
    className: "mx-1 border-0 ml-auto w-full md:w-auto order-3 md:order-2 bg-black/90 text-white",
    onClick: onClose,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 150,
      columnNumber: 15
    }
  }, "Cancel"))))), __jsx("div", {
    className: `fixed inset-0 z-40 bg-gray-900 bg-opacity-30 ${isOpen ? 'block' : 'hidden'}`,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 162,
      columnNumber: 7
    }
  }));
};
const mapState = state => ({
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_3__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(WaitingForModelModal));

/***/ }),

/***/ "./src/components/performer/common/select-performer-dropdown.tsx":
/*!***********************************************************************!*\
  !*** ./src/components/performer/common/select-performer-dropdown.tsx ***!
  \***********************************************************************/
/*! exports provided: SelectPerformerDropdown */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SelectPerformerDropdown", function() { return SelectPerformerDropdown; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _services_performer_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/performer.service */ "./src/services/performer.service.ts");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\performer\\common\\select-performer-dropdown.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/require-default-props */




class SelectPerformerDropdown extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      loading: false,
      data: []
    });
    _defineProperty(this, "loadPerformers", Object(lodash__WEBPACK_IMPORTED_MODULE_2__["debounce"])(async q => {
      try {
        this.setState({
          loading: true
        });
        const resp = await (await _services_performer_service__WEBPACK_IMPORTED_MODULE_3__["performerService"].search({
          q,
          limit: 99
        })).data;
        this.setState({
          data: resp.data,
          loading: false
        });
      } catch (e) {
        const err = await e;
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error((err === null || err === void 0 ? void 0 : err.message) || 'Error occured');
        this.setState({
          loading: false
        });
      }
    }, 500));
  }
  componentDidMount() {
    this.loadPerformers('');
  }
  render() {
    const {
      style,
      onSelect,
      defaultValue,
      disabled
    } = this.props;
    const {
      data,
      loading
    } = this.state;
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"], {
      showSearch: true,
      defaultValue: defaultValue,
      placeholder: "Type to search model...",
      style: style,
      onSearch: this.loadPerformers.bind(this),
      onChange: val => onSelect(val),
      loading: loading,
      optionFilterProp: "children",
      disabled: disabled,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 45,
        columnNumber: 7
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: "",
      key: "default",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 56,
        columnNumber: 9
      }
    }, "All"), data && data.length > 0 && data.map(u => __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Select"].Option, {
      value: u._id,
      key: u._id,
      style: {
        textTransform: 'capitalize'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60,
        columnNumber: 11
      }
    }, `${(u === null || u === void 0 ? void 0 : u.name) || (u === null || u === void 0 ? void 0 : u.username)}`)));
  }
}

/***/ }),

/***/ "./src/components/post/index.less":
/*!****************************************!*\
  !*** ./src/components/post/index.less ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/components/stream/icons.tsx":
/*!*****************************************!*\
  !*** ./src/components/stream/icons.tsx ***!
  \*****************************************/
/*! exports provided: ThreePointsIcon, RPMIcon, PrevIcon, NextIcon, MicIcon, MicWhiteIcon, CameraIcon, PersonSmallIcon, PersonSmallWhiteIcon, PersonOutlineSmallIcon, GiftMobileIcon, TopGiftersIcon, ReportIcon, StatsIcon, DiamondOutlineIcon, MutedMicIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ThreePointsIcon", function() { return ThreePointsIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RPMIcon", function() { return RPMIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PrevIcon", function() { return PrevIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NextIcon", function() { return NextIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MicIcon", function() { return MicIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MicWhiteIcon", function() { return MicWhiteIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CameraIcon", function() { return CameraIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonSmallIcon", function() { return PersonSmallIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonSmallWhiteIcon", function() { return PersonSmallWhiteIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonOutlineSmallIcon", function() { return PersonOutlineSmallIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftMobileIcon", function() { return GiftMobileIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopGiftersIcon", function() { return TopGiftersIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportIcon", function() { return ReportIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StatsIcon", function() { return StatsIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiamondOutlineIcon", function() { return DiamondOutlineIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MutedMicIcon", function() { return MutedMicIcon; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\stream\\icons.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;

const ThreePointsSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 14,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_5548_149088)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 15,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_5548_149088",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 16,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 17,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149088)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 9
    }
  }, __jsx("path", {
    d: "M9.99558 16C9.58186 16 9.22917 15.8527 8.9375 15.5581C8.64583 15.2635 8.5 14.9093 8.5 14.4956C8.5 14.0819 8.64731 13.7292 8.94192 13.4375C9.23654 13.1458 9.59071 13 10.0044 13C10.4181 13 10.7708 13.1473 11.0625 13.4419C11.3542 13.7365 11.5 14.0907 11.5 14.5044C11.5 14.9181 11.3527 15.2708 11.0581 15.5625C10.7635 15.8542 10.4093 16 9.99558 16ZM9.99558 11.5C9.58186 11.5 9.22917 11.3527 8.9375 11.0581C8.64583 10.7635 8.5 10.4093 8.5 9.99558C8.5 9.58186 8.64731 9.22917 8.94192 8.9375C9.23654 8.64583 9.59071 8.5 10.0044 8.5C10.4181 8.5 10.7708 8.64731 11.0625 8.94192C11.3542 9.23654 11.5 9.59071 11.5 10.0044C11.5 10.4181 11.3527 10.7708 11.0581 11.0625C10.7635 11.3542 10.4093 11.5 9.99558 11.5ZM9.99558 7C9.58186 7 9.22917 6.8527 8.9375 6.55808C8.64583 6.26346 8.5 5.90929 8.5 5.49558C8.5 5.08186 8.64731 4.72917 8.94192 4.4375C9.23654 4.14583 9.59071 4 10.0044 4C10.4181 4 10.7708 4.14731 11.0625 4.44192C11.3542 4.73654 11.5 5.09071 11.5 5.50442C11.5 5.91814 11.3527 6.27083 11.0581 6.5625C10.7635 6.85417 10.4093 7 9.99558 7Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_5548_149088",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 25,
      columnNumber: 11
    }
  }))));
};
const ThreePointsIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: ThreePointsSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 35,
    columnNumber: 3
  }
});
const RPMSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "31",
    height: "17",
    viewBox: "0 0 31 17",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_6561_77047)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M1.2196 9.44588C0.410487 11.3557 0 13.3821 0 15.4685H8.0346C8.0346 13.8418 8.56003 12.3361 9.44942 11.1099L2.94639 6.39453C2.25859 7.34034 1.68026 8.3608 1.2196 9.44679V9.44588Z",
    fill: "black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 9
    }
  }), __jsx("path", {
    d: "M22.9659 15.468H31.0005C31.0005 13.3816 30.59 11.3553 29.7809 9.44636C29.3147 8.34762 28.7291 7.31624 28.0304 6.36133L21.5273 11.0767C22.4313 12.3093 22.9668 13.8277 22.9668 15.469L22.9659 15.468Z",
    fill: "#FF4330",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 9
    }
  }), __jsx("path", {
    d: "M21.5261 11.0764L28.0292 6.36101C27.5566 5.71469 27.033 5.10296 26.4593 4.53038C25.0372 3.11121 23.3797 1.99608 21.5334 1.21686C21.1175 1.04117 20.6951 0.885503 20.2691 0.748047L17.7861 8.37552C19.3004 8.86253 20.6048 9.82109 21.5261 11.0755V11.0764Z",
    fill: "black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 9
    }
  }), __jsx("path", {
    d: "M13.172 8.38919L10.689 0.761719C10.2767 0.896444 9.86802 1.04756 9.46574 1.21778C7.61946 1.99701 5.962 3.11213 4.53989 4.5313C3.95609 5.1139 3.42519 5.73655 2.94629 6.3947L9.44932 11.1101C10.3633 9.85023 11.6623 8.88622 13.1729 8.3901L13.172 8.38919Z",
    fill: "black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 45,
      columnNumber: 9
    }
  }), __jsx("path", {
    d: "M15.5004 8.01799C16.2976 8.01799 17.0657 8.14361 17.7872 8.37574L20.2702 0.748273C18.735 0.252155 17.1359 0 15.5004 0C13.8648 0 12.2374 0.256707 10.6895 0.761017L13.1734 8.38849C13.9058 8.14817 14.6885 8.01708 15.5004 8.01708V8.01799Z",
    fill: "black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 9
    }
  }), __jsx("path", {
    d: "M16.3623 14.2102C16.2766 14.1811 8.45996 13.0332 8.45996 13.0332C8.45996 13.0332 15.3279 16.9311 15.4136 16.9612C15.9482 17.1451 16.5931 16.6781 16.8558 15.918C17.1176 15.1588 16.8968 14.3941 16.3632 14.2102H16.3623Z",
    fill: "#151515",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 47,
      columnNumber: 9
    }
  })), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 49,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_6561_77047",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "31",
    height: "17",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 51,
      columnNumber: 11
    }
  }))));
};
const RPMIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: RPMSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 61,
    columnNumber: 3
  }
});
const PrevSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 5
    }
  }, __jsx("path", {
    d: "M14 14.2895L9.98246 10.2632L14 6.23684L12.7632 5L7.5 10.2632L12.7632 15.5263L14 14.2895Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 7
    }
  }));
};
const PrevIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: PrevSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 75,
    columnNumber: 3
  }
});
const NextSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 80,
      columnNumber: 5
    }
  }, __jsx("path", {
    d: "M7 14.2895L11.0175 10.2632L7 6.23684L8.23684 5L13.5 10.2632L8.23684 15.5263L7 14.2895Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 81,
      columnNumber: 7
    }
  }));
};
const NextIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: NextSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 89,
    columnNumber: 3
  }
});
const MicSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5548_149247",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 95,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 7
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149247)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 98,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M12 13.5C11.3013 13.5 10.7099 13.258 10.2259 12.774C9.74198 12.29 9.5 11.6987 9.5 11V4.99998C9.5 4.30128 9.74198 3.70993 10.2259 3.22595C10.7099 2.74198 11.3013 2.5 12 2.5C12.6987 2.5 13.29 2.74198 13.774 3.22595C14.258 3.70993 14.5 4.30128 14.5 4.99998V11C14.5 11.6987 14.258 12.29 13.774 12.774C13.29 13.258 12.6987 13.5 12 13.5ZM11.25 20.75V17.4538C9.6 17.2653 8.22917 16.5576 7.1375 15.3307C6.04583 14.1038 5.5 12.6602 5.5 11H6.99997C6.99997 12.3833 7.48747 13.5625 8.46247 14.5375C9.43747 15.5125 10.6166 16 12 16C13.3833 16 14.5625 15.5125 15.5375 14.5375C16.5125 13.5625 17 12.3833 17 11H18.5C18.5 12.6602 17.9541 14.1038 16.8625 15.3307C15.7708 16.5576 14.4 17.2653 12.7499 17.4538V20.75H11.25ZM12 12C12.2833 12 12.5208 11.9041 12.7125 11.7125C12.9041 11.5208 13 11.2833 13 11V4.99998C13 4.71664 12.9041 4.47914 12.7125 4.28748C12.5208 4.09581 12.2833 3.99998 12 3.99998C11.7166 3.99998 11.4791 4.09581 11.2875 4.28748C11.0958 4.47914 11 4.71664 11 4.99998V11C11 11.2833 11.0958 11.5208 11.2875 11.7125C11.4791 11.9041 11.7166 12 12 12Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 7
    }
  })));
};
const MicIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: MicSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 109,
    columnNumber: 3
  }
});
const MicWhiteSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5548_149247",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 7
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149247)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 118,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M12 13.5C11.3013 13.5 10.7099 13.258 10.2259 12.774C9.74198 12.29 9.5 11.6987 9.5 11V4.99998C9.5 4.30128 9.74198 3.70993 10.2259 3.22595C10.7099 2.74198 11.3013 2.5 12 2.5C12.6987 2.5 13.29 2.74198 13.774 3.22595C14.258 3.70993 14.5 4.30128 14.5 4.99998V11C14.5 11.6987 14.258 12.29 13.774 12.774C13.29 13.258 12.6987 13.5 12 13.5ZM11.25 20.75V17.4538C9.6 17.2653 8.22917 16.5576 7.1375 15.3307C6.04583 14.1038 5.5 12.6602 5.5 11H6.99997C6.99997 12.3833 7.48747 13.5625 8.46247 14.5375C9.43747 15.5125 10.6166 16 12 16C13.3833 16 14.5625 15.5125 15.5375 14.5375C16.5125 13.5625 17 12.3833 17 11H18.5C18.5 12.6602 17.9541 14.1038 16.8625 15.3307C15.7708 16.5576 14.4 17.2653 12.7499 17.4538V20.75H11.25ZM12 12C12.2833 12 12.5208 11.9041 12.7125 11.7125C12.9041 11.5208 13 11.2833 13 11V4.99998C13 4.71664 12.9041 4.47914 12.7125 4.28748C12.5208 4.09581 12.2833 3.99998 12 3.99998C11.7166 3.99998 11.4791 4.09581 11.2875 4.28748C11.0958 4.47914 11 4.71664 11 4.99998V11C11 11.2833 11.0958 11.5208 11.2875 11.7125C11.4791 11.9041 11.7166 12 12 12Z",
    fill: "#ffffff",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 119,
      columnNumber: 7
    }
  })));
};
const MicWhiteIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: MicWhiteSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 128,
    columnNumber: 3
  }
});
const CameraSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5548_149244",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149244)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M4.54791 19.5C4.04278 19.5 3.61521 19.325 3.26521 18.975C2.91523 18.625 2.74023 18.1974 2.74023 17.6923V6.3077C2.74023 5.80257 2.91523 5.375 3.26521 5.025C3.61521 4.675 4.04278 4.5 4.54791 4.5H15.9325C16.4376 4.5 16.8652 4.675 17.2152 5.025C17.5652 5.375 17.7402 5.80257 17.7402 6.3077V10.8846L21.2593 7.36543V16.6345L17.7402 13.1153V17.6923C17.7402 18.1974 17.5652 18.625 17.2152 18.975C16.8652 19.325 16.4376 19.5 15.9325 19.5H4.54791ZM4.54791 18H15.9325C16.0222 18 16.096 17.9711 16.1536 17.9134C16.2113 17.8557 16.2402 17.782 16.2402 17.6923V6.3077C16.2402 6.21795 16.2113 6.14423 16.1536 6.08652C16.096 6.02882 16.0222 5.99998 15.9325 5.99998H4.54791C4.45816 5.99998 4.38443 6.02882 4.32673 6.08652C4.26903 6.14423 4.24018 6.21795 4.24018 6.3077V17.6923C4.24018 17.782 4.26903 17.8557 4.32673 17.9134C4.38443 17.9711 4.45816 18 4.54791 18Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 138,
      columnNumber: 9
    }
  })));
};
const CameraIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: CameraSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 147,
    columnNumber: 3
  }
});
const PersonSmallSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5548_149233",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "14",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 153,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149233)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M6.9998 7.00078C6.41647 7.00078 5.92064 6.79661 5.5123 6.38828C5.10397 5.97995 4.8998 5.48411 4.8998 4.90078C4.8998 4.31745 5.10397 3.82161 5.5123 3.41328C5.92064 3.00495 6.41647 2.80078 6.9998 2.80078C7.58314 2.80078 8.07897 3.00495 8.4873 3.41328C8.89564 3.82161 9.0998 4.31745 9.0998 4.90078C9.0998 5.48411 8.89564 5.97995 8.4873 6.38828C8.07897 6.79661 7.58314 7.00078 6.9998 7.00078ZM2.7998 11.2008V9.80078C2.7998 9.57717 2.86057 9.36571 2.9821 9.16641C3.10362 8.9671 3.27133 8.79939 3.48522 8.66328C4.01994 8.35217 4.58626 8.11398 5.18418 7.9487C5.7821 7.78342 6.3873 7.70078 6.9998 7.70078C7.6123 7.70078 8.21751 7.78342 8.81543 7.9487C9.41335 8.11398 9.97967 8.35217 10.5144 8.66328C10.7283 8.78967 10.896 8.95495 11.0175 9.15911C11.139 9.36328 11.1998 9.57717 11.1998 9.80078V11.2008H2.7998Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 9
    }
  })));
};
const PersonSmallIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: PersonSmallSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 166,
    columnNumber: 3
  }
});
const PersonSmallWhiteSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5548_149233",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "14",
    height: "14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 172,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "14",
    height: "14",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 173,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149233)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 175,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M6.9998 7.00078C6.41647 7.00078 5.92064 6.79661 5.5123 6.38828C5.10397 5.97995 4.8998 5.48411 4.8998 4.90078C4.8998 4.31745 5.10397 3.82161 5.5123 3.41328C5.92064 3.00495 6.41647 2.80078 6.9998 2.80078C7.58314 2.80078 8.07897 3.00495 8.4873 3.41328C8.89564 3.82161 9.0998 4.31745 9.0998 4.90078C9.0998 5.48411 8.89564 5.97995 8.4873 6.38828C8.07897 6.79661 7.58314 7.00078 6.9998 7.00078ZM2.7998 11.2008V9.80078C2.7998 9.57717 2.86057 9.36571 2.9821 9.16641C3.10362 8.9671 3.27133 8.79939 3.48522 8.66328C4.01994 8.35217 4.58626 8.11398 5.18418 7.9487C5.7821 7.78342 6.3873 7.70078 6.9998 7.70078C7.6123 7.70078 8.21751 7.78342 8.81543 7.9487C9.41335 8.11398 9.97967 8.35217 10.5144 8.66328C10.7283 8.78967 10.896 8.95495 11.0175 9.15911C11.139 9.36328 11.1998 9.57717 11.1998 9.80078V11.2008H2.7998Z",
    fill: "#ffffff",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 176,
      columnNumber: 9
    }
  })));
};
const PersonSmallWhiteIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: PersonSmallWhiteSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 185,
    columnNumber: 3
  }
});
const PersonOutlineSmallSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5548_149228",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 191,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5548_149228)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 194,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M2 16V14.0833C2 13.7253 2.08681 13.3962 2.26042 13.096C2.43403 12.7959 2.67361 12.5556 2.97917 12.375C3.72917 11.9306 4.52431 11.5903 5.36458 11.3542C6.20486 11.1181 7.08333 11 8 11C8.91667 11 9.79514 11.1181 10.6354 11.3542C11.4757 11.5903 12.2708 11.9306 13.0208 12.375C13.3264 12.5556 13.566 12.7959 13.7396 13.096C13.9132 13.3962 14 13.7253 14 14.0833V16H2ZM15.5 16V14.0833C15.5 13.5 15.3646 12.9583 15.0938 12.4583C14.8229 11.9583 14.4583 11.5486 14 11.2292C14.5417 11.3403 15.066 11.4896 15.5729 11.6771C16.0799 11.8646 16.5625 12.0972 17.0208 12.375C17.3264 12.5556 17.566 12.7963 17.7396 13.0974C17.9132 13.3984 18 13.727 18 14.0833V16H15.5ZM8 10C7.16667 10 6.45833 9.70833 5.875 9.125C5.29167 8.54167 5 7.83333 5 7C5 6.16667 5.29167 5.45833 5.875 4.875C6.45833 4.29167 7.16667 4 8 4C8.83333 4 9.54167 4.29167 10.125 4.875C10.7083 5.45833 11 6.16667 11 7C11 7.83333 10.7083 8.54167 10.125 9.125C9.54167 9.70833 8.83333 10 8 10ZM15 7C15 7.83333 14.7083 8.54167 14.125 9.125C13.5417 9.70833 12.8333 10 12 10C11.8889 10 11.7847 9.99653 11.6875 9.98958C11.5903 9.98264 11.4861 9.96528 11.375 9.9375C11.7222 9.53472 11.9965 9.08681 12.1979 8.59375C12.3993 8.10069 12.5 7.56944 12.5 7C12.5 6.43056 12.3993 5.89931 12.1979 5.40625C11.9965 4.91319 11.7222 4.46528 11.375 4.0625C11.4861 4.03472 11.5903 4.01736 11.6875 4.01042C11.7847 4.00347 11.8889 4 12 4C12.8333 4 13.5417 4.29167 14.125 4.875C14.7083 5.45833 15 6.16667 15 7ZM3.5 14.5H12.5V14.0833C12.5 13.9935 12.479 13.9118 12.437 13.8382C12.395 13.7647 12.3396 13.7075 12.2708 13.6667C11.6181 13.2917 10.9306 13.0035 10.2083 12.8021C9.48611 12.6007 8.75 12.5 8 12.5C7.25 12.5 6.51389 12.5972 5.79167 12.7917C5.06944 12.9861 4.38194 13.2778 3.72917 13.6667C3.66042 13.7059 3.60503 13.7609 3.56302 13.8315C3.52101 13.9022 3.5 13.9855 3.5 14.0814V14.5ZM8.00442 8.5C8.41814 8.5 8.77083 8.35269 9.0625 8.05808C9.35417 7.76346 9.5 7.40929 9.5 6.99558C9.5 6.58186 9.35269 6.22917 9.05808 5.9375C8.76346 5.64583 8.40929 5.5 7.99558 5.5C7.58186 5.5 7.22917 5.64731 6.9375 5.94192C6.64583 6.23654 6.5 6.59071 6.5 7.00442C6.5 7.41814 6.64731 7.77083 6.94192 8.0625C7.23654 8.35417 7.59071 8.5 8.00442 8.5Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 195,
      columnNumber: 9
    }
  })));
};
const PersonOutlineSmallIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: PersonOutlineSmallSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 204,
    columnNumber: 3
  }
});
const GiftMobileSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "25",
    height: "25",
    viewBox: "0 0 25 25",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 209,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_6583_57619",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "25",
    height: "25",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 210,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    y: "0.849609",
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_6583_57619)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 213,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M4.61538 22.8303V11.9457H3V6.73421H8.17118C8.03014 6.57139 7.9343 6.38803 7.88365 6.18413C7.83302 5.98025 7.8077 5.76617 7.8077 5.54188C7.8077 4.79403 8.06945 4.15836 8.59295 3.63486C9.11645 3.11136 9.75213 2.84961 10.5 2.84961C10.8833 2.84961 11.2384 2.93006 11.5654 3.09096C11.8923 3.25186 12.1846 3.46693 12.4423 3.73616C12.7 3.45666 12.9923 3.23903 13.3192 3.08326C13.6461 2.92749 14.0012 2.84961 14.3846 2.84961C15.1324 2.84961 15.7681 3.11136 16.2916 3.63486C16.8151 4.15836 17.0769 4.79403 17.0769 5.54188C17.0769 5.76368 17.049 5.97459 16.9932 6.17459C16.9374 6.37459 16.8442 6.56113 16.7134 6.73421H22V11.9457H20.3846V22.8303H4.61538ZM14.3846 4.34956C14.0468 4.34956 13.7636 4.46383 13.5351 4.69236C13.3065 4.92089 13.1923 5.20407 13.1923 5.54188C13.1923 5.87972 13.3065 6.16289 13.5351 6.39141C13.7636 6.61994 14.0468 6.73421 14.3846 6.73421C14.7224 6.73421 15.0056 6.61994 15.2341 6.39141C15.4626 6.16289 15.5769 5.87972 15.5769 5.54188C15.5769 5.20407 15.4626 4.92089 15.2341 4.69236C15.0056 4.46383 14.7224 4.34956 14.3846 4.34956ZM9.30765 5.54188C9.30765 5.87972 9.42192 6.16289 9.65045 6.39141C9.87898 6.61994 10.1622 6.73421 10.5 6.73421C10.8378 6.73421 11.121 6.61994 11.3495 6.39141C11.578 6.16289 11.6923 5.87972 11.6923 5.54188C11.6923 5.20407 11.578 4.92089 11.3495 4.69236C11.121 4.46383 10.8378 4.34956 10.5 4.34956C10.1622 4.34956 9.87898 4.46383 9.65045 4.69236C9.42192 4.92089 9.30765 5.20407 9.30765 5.54188ZM4.49998 8.23418V10.4457H11.75V8.23418H4.49998ZM11.75 21.3303V11.9457H6.11533V21.3303H11.75ZM13.25 21.3303H18.8846V11.9457H13.25V21.3303ZM20.5 10.4457V8.23418H13.25V10.4457H20.5Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 214,
      columnNumber: 9
    }
  })));
};
const GiftMobileIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: GiftMobileSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 223,
    columnNumber: 3
  }
});
const TopGiftersSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "25",
    height: "25",
    viewBox: "0 0 25 25",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 228,
      columnNumber: 5
    }
  }, __jsx("path", {
    d: "M5.37463 8.00977C5.37463 8.00977 4.40854 8.08615 4.27973 8.30333C4.14942 8.52051 4.14193 8.85452 4.14193 9.22148C4.14193 9.58994 4.12695 10.4347 4.12695 10.4347L4.35762 10.9305C4.35762 10.9305 4.40105 17.2496 4.40105 17.4459C4.40105 17.6406 4.40105 17.8787 4.68264 18.03C4.96423 18.1813 12.1207 21.6382 12.3439 21.731C12.6809 21.8703 12.8412 21.8179 12.8412 21.8179L20.793 8.51901C20.793 8.51901 20.7676 8.15505 20.4366 8.06818C20.2463 8.02025 5.37463 8.00977 5.37463 8.00977Z",
    fill: "#F5B03E",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 229,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.7575 12.3841C12.6362 12.7181 12.6916 16.1721 12.7126 18.6839C12.7336 21.1941 12.6482 21.7139 12.7126 21.8008C12.777 21.8876 12.9523 21.8037 13.448 21.5836C14.3692 21.1762 18.7937 18.9864 19.1187 18.7917C19.4437 18.597 20.2376 18.1941 20.3679 17.9769C20.4982 17.7597 20.5686 15.7392 20.612 14.1171C20.6555 12.4935 20.6989 11.1949 20.6989 11.1949L20.8936 10.6108C20.8936 10.6108 20.8517 9.03208 20.8442 8.85834C20.8307 8.57076 20.7993 8.42248 20.7259 8.45843C20.621 8.50786 19.7463 9.2253 17.4307 10.3516C15.9763 11.0571 12.8414 12.1535 12.7575 12.3841Z",
    fill: "#E07F14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 230,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.7776 4.93814C12.129 4.90819 10.3541 5.93417 8.64361 6.49584C6.93312 7.05752 4.3509 8.18685 4.32843 8.25275C4.30746 8.31716 5.36791 8.79196 6.04492 9.11698C6.84924 9.50191 9.91974 10.9563 10.4814 11.1944C11.0446 11.4326 12.3866 11.9897 12.6023 11.9733C12.9049 11.9523 15.7627 10.826 17.2126 10.134C18.6624 9.442 20.4748 8.36958 20.4987 8.10897C20.5092 7.99214 17.8327 6.99311 16.4981 6.3895C13.9219 5.22272 13.2524 4.96061 12.7776 4.93814Z",
    fill: "#FDD717",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 231,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M4.13503 10.7137C4.1575 10.9953 4.31177 11.0956 4.7042 11.2664C5.09662 11.4371 12.5153 15.2909 12.686 15.2909C12.8568 15.2909 12.9077 14.6798 12.7205 14.6963C12.6186 14.7053 10.1817 13.5475 7.90501 12.3912C5.97284 11.4117 4.12305 10.4336 4.12305 10.4336L4.13503 10.7137Z",
    fill: "#E37D14",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 232,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M20.8935 10.5957C20.8935 10.5957 12.9716 14.6248 12.8937 14.6637C12.8159 14.7026 12.6915 14.6892 12.6915 14.6892L12.6855 15.2898C12.6855 15.2898 12.7589 15.3063 12.8413 15.2808C12.8892 15.2658 20.6644 11.2413 20.6988 11.2293C20.7333 11.2173 20.883 11.1274 20.9145 10.9372C20.9415 10.7844 20.8935 10.5957 20.8935 10.5957Z",
    fill: "#BA5E0D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 233,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.24172 17.8498L8.79195 20.1564L9.47046 20.3886C9.47046 20.3886 9.52588 17.8723 9.54835 16.0075C9.5798 13.2831 9.56782 10.7982 9.60676 10.6574C9.67117 10.4193 12.6862 9.44123 12.6862 9.44123C12.6862 9.44123 16.0923 10.5092 16.2001 10.7473C16.248 10.8521 16.2106 12.6165 16.2001 14.673C16.1866 17.2702 16.1911 20.2688 16.1911 20.2688C16.1911 20.2688 16.5431 20.2673 16.585 20.137C16.6285 20.0066 16.8022 19.0016 16.8022 19.0016L18.1233 10.1961L18.7943 9.33039L17.8627 7.55701L14.0403 5.67578L12.7267 5.97085L11.3053 5.75367L6.79688 8.99339L7.32261 10.0598L8.61222 10.7173L7.24172 17.8498Z",
    fill: "#AF0F1B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 234,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M16.5913 10.6549C16.5089 10.8362 16.5568 20.1749 16.5568 20.1749C16.5568 20.1749 16.9687 19.9472 17.499 19.6926C18.0262 19.4395 18.4051 19.2822 18.4381 19.1504C18.471 19.0186 18.5294 9.7832 18.5294 9.7832L16.5913 10.6549Z",
    fill: "#DC0D28",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 235,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M9.11175 10.4624C9.16118 10.5163 9.0803 20.2071 8.97994 20.2295C8.90056 20.249 7.0957 19.4432 7.0957 19.3608C7.0957 19.2784 7.24099 10.0176 7.24099 10.0176C7.24099 10.0176 8.96497 10.2977 9.11175 10.4624Z",
    fill: "#FF2A23",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 236,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.6883 5.39258C12.1896 5.39258 11.6384 5.53487 11.4781 5.95275C11.3178 6.37064 11.2819 6.99222 11.2819 7.45653C11.2819 7.90138 11.21 9.0397 12.5805 9.02173C13.951 9.00375 13.9914 8.496 14.0124 7.37565C14.0304 6.44103 13.9061 5.9872 13.7817 5.79249C13.6709 5.61725 13.3024 5.39258 12.6883 5.39258Z",
    fill: "#FF2A23",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 237,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M11.8967 7.70518C12.2083 7.72315 12.3416 7.03866 12.5812 6.66421C12.8209 6.29126 13.071 6.04113 12.9811 5.84642C12.9077 5.68466 12.2562 5.63223 11.9042 6.12201C11.6571 6.468 11.6136 7.6887 11.8967 7.70518Z",
    fill: "#FCC9D2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 238,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.9023 5.71743C13.9023 5.71743 14.3442 6.16677 14.4595 7.04747C14.5749 7.92817 14.4416 8.61266 14.4416 8.61266C14.4416 8.61266 16.6373 8.54676 17.3952 8.69204C18.1426 8.83733 18.4033 9.16684 18.4033 9.40649C18.4033 9.64613 17.912 9.83935 17.4132 9.8034C16.9144 9.76746 16.5774 9.7405 16.5145 9.86631C16.4516 9.99212 16.5415 10.1868 17.235 10.2393C17.9284 10.2932 18.7298 10.1943 18.9784 9.3316C19.227 8.46887 19.236 6.97408 19.1477 5.89716C19.0593 4.82025 18.8646 4.20466 18.3823 3.971C17.8745 3.72686 16.6029 3.68642 15.4016 4.36193C14.2004 5.03743 13.9023 5.71743 13.9023 5.71743Z",
    fill: "#FF2A23",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 239,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M16.3892 4.69128C16.2335 4.49057 15.7317 4.49656 15.4636 4.80661C15.179 5.13612 15.1161 6.38977 15.4816 6.46166C15.895 6.54254 15.8201 5.86554 16.1226 5.44766C16.4192 5.03876 16.5405 4.88749 16.3892 4.69128Z",
    fill: "#FCC9D2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 240,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M11.3636 5.75912C11.3636 5.75912 9.68156 3.79851 7.75987 3.82846C6.60357 3.84644 6.31 4.51296 6.24709 4.78855C6.18418 5.06414 5.70488 7.8051 6.34445 9.28941C6.98401 10.7737 8.31107 10.3888 8.51926 10.3409C8.78587 10.278 9.35354 10.0832 9.29962 9.87804C9.2457 9.67285 7.35996 10.4113 7.34199 9.5665C7.32401 8.72175 8.67653 8.63188 9.29962 8.61391C9.92271 8.59593 10.9906 8.73822 10.9906 8.73822C10.9906 8.73822 10.8034 7.71523 10.9277 6.98581C11.0521 6.25638 11.3636 5.75912 11.3636 5.75912Z",
    fill: "#FF2A23",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 241,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.24359 4.54122C7.00394 4.78985 6.90509 6.22324 7.05636 6.93469C7.20764 7.64614 7.34095 7.94869 7.65249 7.88728C7.91311 7.83486 8.07038 6.43892 8.1947 5.94764C8.328 5.42342 8.65752 4.86624 8.52421 4.6221C8.32051 4.24765 7.49372 4.2821 7.24359 4.54122Z",
    fill: "#FCC9D2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 242,
      columnNumber: 7
    }
  }));
};
const TopGiftersIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: TopGiftersSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 250,
    columnNumber: 3
  }
});
const ReportSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 255,
      columnNumber: 5
    }
  }, __jsx("g", {
    "clip-path": "url(#clip0_6706_67233)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 256,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_6706_67233",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 257,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 258,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_6706_67233)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 260,
      columnNumber: 9
    }
  }, __jsx("path", {
    d: "M4 17V3H11L11.5 5H16V13H11L10.5 11H5.5V17H4ZM12.1667 11.5H14.5V6.5H10.3333L9.83333 4.5H5.5V9.5H11.6667L12.1667 11.5Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 261,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 264,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_6706_67233",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 265,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 266,
      columnNumber: 11
    }
  }))));
};
const ReportIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: ReportSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 276,
    columnNumber: 3
  }
});
const StatsSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 281,
      columnNumber: 5
    }
  }, __jsx("g", {
    "clip-path": "url(#clip0_6716_72541)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 282,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_6716_72541",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 283,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 284,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_6716_72541)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 286,
      columnNumber: 9
    }
  }, __jsx("path", {
    d: "M6 14H7.5V8H6V14ZM9.25 14H10.75V6H9.25V14ZM12.5 14H14V11H12.5V14ZM4.5 17C4.0875 17 3.73437 16.8531 3.44062 16.5594C3.14687 16.2656 3 15.9125 3 15.5V4.5C3 4.0875 3.14687 3.73438 3.44062 3.44063C3.73437 3.14688 4.0875 3 4.5 3H15.5C15.9125 3 16.2656 3.14688 16.5594 3.44063C16.8531 3.73438 17 4.0875 17 4.5V15.5C17 15.9125 16.8531 16.2656 16.5594 16.5594C16.2656 16.8531 15.9125 17 15.5 17H4.5ZM4.5 15.5H15.5V4.5H4.5V15.5Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 287,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 290,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_6716_72541",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 291,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 292,
      columnNumber: 11
    }
  }))));
};
const StatsIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: StatsSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 302,
    columnNumber: 3
  }
});
const DiamondOutlineSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 307,
      columnNumber: 5
    }
  }, __jsx("g", {
    "clip-path": "url(#clip0_6716_72546)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 308,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_6716_72546",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 309,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 310,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_6716_72546)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 312,
      columnNumber: 9
    }
  }, __jsx("path", {
    d: "M10 17L2 8L4 3H16L18 8L10 17ZM8.20833 7.25H11.7917L10.4167 4.5H9.58333L8.20833 7.25ZM9.25 13.8958V8.75H4.66667L9.25 13.8958ZM10.75 13.8958L15.3333 8.75H10.75V13.8958ZM13.4583 7.25H16.0833L15 4.5H12.0833L13.4583 7.25ZM3.91667 7.25H6.54167L7.91667 4.5H5.02083L3.91667 7.25Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 313,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 316,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_6716_72546",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 317,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 318,
      columnNumber: 11
    }
  }))));
};
const DiamondOutlineIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: DiamondOutlineSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 328,
    columnNumber: 3
  }
});
const MutedMicSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 333,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_6806_50467",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 334,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 335,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_6806_50467)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 337,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M14.6042 12.4792L13.5 11.375C13.6528 11.0833 13.7731 10.7819 13.861 10.4708C13.949 10.1596 13.9929 9.83597 13.9929 9.5H15.5C15.5 10.0278 15.4224 10.5443 15.2671 11.0496C15.1118 11.5549 14.8908 12.0314 14.6042 12.4792ZM12.38 10.25L11 8.875V4.5C11 4.21667 10.9042 3.97917 10.7125 3.7875C10.5208 3.59583 10.2833 3.5 10 3.5C9.71667 3.5 9.47917 3.59583 9.2875 3.7875C9.09583 3.97917 9 4.21667 9 4.5V6.875L7.5 5.36708V4.5C7.5 3.80556 7.74306 3.21528 8.22917 2.72917C8.71528 2.24306 9.30556 2 10 2C10.6944 2 11.2847 2.24306 11.7708 2.72917C12.2569 3.21528 12.5 3.80556 12.5 4.5V9.5C12.5 9.625 12.4896 9.75 12.4688 9.875C12.4479 10 12.4183 10.125 12.38 10.25ZM9.25 17V14.9375C7.875 14.7708 6.73958 14.1701 5.84375 13.1354C4.94792 12.1007 4.5 10.8889 4.5 9.5H6C6 10.6067 6.38889 11.55 7.16667 12.33C7.94444 13.11 8.88889 13.5 10 13.5C10.4722 13.5 10.9201 13.4097 11.3438 13.2292C11.7674 13.0486 12.1597 12.8056 12.5208 12.5L13.6042 13.5833C13.1972 13.9318 12.7517 14.2273 12.2677 14.4698C11.7837 14.7122 11.2778 14.8681 10.75 14.9375V17H9.25ZM16 18.125L1.875 3.97917L2.9375 2.91667L17.0625 17.0625L16 18.125Z",
    fill: "#1C1B1F",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 338,
      columnNumber: 9
    }
  })));
};
const MutedMicIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: MutedMicSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 347,
    columnNumber: 3
  }
});

/***/ }),

/***/ "./src/components/ui/shared/AppButton.tsx":
/*!************************************************!*\
  !*** ./src/components/ui/shared/AppButton.tsx ***!
  \************************************************/
/*! exports provided: AppButton, buttonVariants */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppButton", function() { return AppButton; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "buttonVariants", function() { return buttonVariants; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! class-variance-authority */ "class-variance-authority");
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\AppButton.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0__["createElement"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }



// import { cn } from "../lib/utils"

const buttonVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('gap-1 md:gap-2 items-center justify-center font-medium transition duration-150 ease-in-out rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:z-10 focus:ring-purple-800', {
  variants: {
    variant: {
      default: 'text-white bg-purple-800 inline-flex',
      secondary: 'text-white bg-base-900 inline-flex',
      tertiary: 'text-black bg-white border border-base-400 inline-flex',
      error: 'text-white bg-error-500 inline-flex',
      noFlex: 'block text-white bg-purple-800'
    },
    disabled: {
      false: 'cursor-pointer',
      true: 'opacity-75 cursor-not-allowed'
    },
    size: {
      sm: 'px-6 text-sm h-10',
      base: 'px-3 md:px-8 text-sm h-10'
    }
  },
  compoundVariants: [{
    variant: 'default',
    disabled: false,
    class: 'hover:bg-purple-700'
  }, {
    variant: 'secondary',
    disabled: false,
    class: 'hover:bg-gray-700'
  }, {
    variant: 'tertiary',
    disabled: false,
    class: 'hover:bg-gray-300'
  }, {
    variant: 'error',
    disabled: false,
    class: 'hover:bg-error-600'
  }],
  defaultVariants: {
    size: 'base',
    variant: 'default',
    disabled: false
  }
});
const AppButton = _ref => {
  let {
      children,
      className,
      variant,
      size,
      loading = false,
      disabled = false
    } = _ref,
    props = _objectWithoutProperties(_ref, ["children", "className", "variant", "size", "loading", "disabled"]);
  return __jsx("button", _extends({}, props, {
    className: buttonVariants({
      variant,
      size,
      disabled,
      className
    }),
    disabled: disabled,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 64,
      columnNumber: 5
    }
  }), loading && __jsx("div", {
    className: "inline-flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 66,
      columnNumber: 9
    }
  }, __jsx("svg", {
    "aria-hidden": "true",
    role: "status",
    className: "inline w-4 h-4 text-white animate-spin",
    viewBox: "0 0 100 101",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 67,
      columnNumber: 11
    }
  }, __jsx("path", {
    d: "M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z",
    fill: "#E5E7EB",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 69,
      columnNumber: 13
    }
  }), __jsx("path", {
    d: "M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z",
    fill: "currentColor",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 72,
      columnNumber: 13
    }
  })), __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 11
    }
  }, "Loading...")), !loading && __jsx(react__WEBPACK_IMPORTED_MODULE_0__["Fragment"], null, children));
};
AppButton.displayName = "AppButton";


/***/ }),

/***/ "./src/components/ui/shared/AppInput.tsx":
/*!***********************************************!*\
  !*** ./src/components/ui/shared/AppInput.tsx ***!
  \***********************************************/
/*! exports provided: AppInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppInput", function() { return AppInput; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! class-variance-authority */ "class-variance-authority");
/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\AppInput.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0__["createElement"];
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }



// import { cn } from "@/lib/utils"

const inputVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('block border border-base-400 w-full text-sm py-4 bg-white placeholder-base-500 focus:outline-none focus:ring-inset focus:ring-1 focus:z-10', {
  variants: {
    variant: {},
    disabled: {
      false: 'cursor-pointer',
      true: 'opacity-75 cursor-not-allowed pointer-events-none'
    },
    error: {
      true: 'border-error-500 focus:ring-error-500',
      false: 'focus:border-purple-800 focus:ring-purple-800'
    },
    size: {
      sm: 'h-10',
      base: 'h-12'
    },
    rounded: {
      base: 'rounded-lg',
      full: 'rounded-full'
    },
    prefixIcon: {
      true: 'pl-10'
    },
    suffixIcon: {
      true: 'pr-10'
    }
  },
  compoundVariants: [{
    prefixIcon: false,
    suffixIcon: false,
    class: 'px-5'
  }],
  defaultVariants: {
    size: 'base',
    // disabled: false,
    rounded: 'base'
  }
});
const labelVariants = Object(class_variance_authority__WEBPACK_IMPORTED_MODULE_1__["cva"])('block text-xs', {
  variants: {
    error: {
      true: 'text-error-500',
      false: 'text-base-700'
    },
    required: {
      true: 'after:content-["*"] after:text-red-600'
    }
  },
  compoundVariants: [],
  defaultVariants: {}
});
const AppInput = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__["forwardRef"]((_ref, ref) => {
  let {
      type,
      label,
      size,
      rounded,
      errorMessage,
      prefixIcon,
      suffixIcon
    } = _ref,
    props = _objectWithoutProperties(_ref, ["type", "label", "size", "rounded", "errorMessage", "prefixIcon", "suffixIcon"]);
  const [showPassword, setShowPassword] = react__WEBPACK_IMPORTED_MODULE_0__["useState"](false);
  const inputType = type === 'password' && !showPassword ? 'password' : type === 'password' ? 'text' : type;
  return __jsx("div", {
    className: "space-y-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 84,
      columnNumber: 7
    }
  }, label && __jsx("label", {
    htmlFor: props.id,
    className: labelVariants({
      error: !!errorMessage,
      required: props.required
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 85,
      columnNumber: 19
    }
  }, label), __jsx("div", {
    className: "relative",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 9
    }
  }, prefixIcon && __jsx("label", {
    htmlFor: props.id,
    className: "absolute top-[3px] left-0 z-10 inline-flex items-center h-[44px] px-5 select-none text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 15
    }
  }, prefixIcon), __jsx("input", _extends({}, props, {
    ref: ref,
    className: inputVariants({
      size,
      rounded,
      error: !!errorMessage,
      prefixIcon: !!prefixIcon,
      suffixIcon: !!suffixIcon
    }),
    type: inputType,
    onChange: props.onChange,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 11
    }
  })), type === 'password' && __jsx("button", {
    onClick: () => setShowPassword(!showPassword),
    type: "button",
    className: "absolute inset-y-0 flex items-center px-2 text-gray-500 right-5",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 13
    }
  }, showPassword && __jsx("svg", {
    className: "w-5 h-5",
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4292_60094",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4292_60094)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M13.2708 11.1457L11.9792 9.854C12.0347 9.32623 11.875 8.87137 11.5 8.48942C11.125 8.10748 10.6736 7.94428 10.1458 7.99984L8.85417 6.70817C9.03472 6.63873 9.22222 6.58664 9.41667 6.55192C9.61111 6.5172 9.80556 6.49984 10 6.49984C10.9722 6.49984 11.7986 6.84012 12.4792 7.52067C13.1597 8.20123 13.5 9.02762 13.5 9.99984C13.5 10.1943 13.4826 10.3887 13.4479 10.5832C13.4132 10.7776 13.3542 10.9651 13.2708 11.1457ZM16.0417 13.9165L14.9583 12.8332C15.4583 12.4443 15.9132 12.0172 16.3229 11.5519C16.7326 11.0866 17.0764 10.5693 17.3542 9.99984C16.6736 8.59706 15.6701 7.49637 14.3438 6.69775C13.0174 5.89914 11.5694 5.49984 10 5.49984C9.63889 5.49984 9.28472 5.52067 8.9375 5.56234C8.59028 5.604 8.25 5.67345 7.91667 5.77067L6.70833 4.56234C7.23611 4.354 7.77431 4.20817 8.32292 4.12484C8.87153 4.0415 9.43056 3.99984 10 3.99984C11.9861 3.99984 13.8021 4.53803 15.4479 5.61442C17.0938 6.69081 18.2778 8.15262 19 9.99984C18.6944 10.7915 18.2882 11.5103 17.7812 12.1561C17.2743 12.8019 16.6944 13.3887 16.0417 13.9165ZM16 18.1248L13.2917 15.4165C12.7639 15.6109 12.2257 15.7568 11.6771 15.854C11.1285 15.9512 10.5694 15.9998 10 15.9998C8.01389 15.9998 6.19792 15.4616 4.55208 14.3853C2.90625 13.3089 1.72222 11.8471 1 9.99984C1.30556 9.20817 1.70833 8.48595 2.20833 7.83317C2.70833 7.18039 3.29167 6.59012 3.95833 6.06234L1.875 3.979L2.9375 2.9165L17.0625 17.0623L16 18.1248ZM5.02083 7.14567C4.53472 7.53456 4.08333 7.96164 3.66667 8.42692C3.25 8.8922 2.90972 9.4165 2.64583 9.99984C3.32639 11.4026 4.32986 12.5033 5.65625 13.3019C6.98264 14.1005 8.43056 14.4998 10 14.4998C10.3611 14.4998 10.7153 14.4755 11.0625 14.4269C11.4097 14.3783 11.7569 14.3123 12.1042 14.229L11.1667 13.2915C10.9722 13.3609 10.7778 13.413 10.5833 13.4478C10.3889 13.4825 10.1944 13.4998 10 13.4998C9.02778 13.4998 8.20139 13.1596 7.52083 12.479C6.84028 11.7984 6.5 10.9721 6.5 9.99984C6.5 9.80539 6.52431 9.61095 6.57292 9.4165C6.62153 9.22206 6.66667 9.02762 6.70833 8.83317L5.02083 7.14567Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 21
    }
  }))), !showPassword && __jsx("svg", {
    className: "w-5 h-5",
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 126,
      columnNumber: 17
    }
  }, __jsx("mask", {
    id: "mask0_4292_12472",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 19
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 130,
      columnNumber: 21
    }
  })), __jsx("g", {
    mask: "url(#mask0_4292_12472)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 19
    }
  }, __jsx("path", {
    d: "M10 13.5C10.9722 13.5 11.7986 13.1597 12.4792 12.4792C13.1597 11.7986 13.5 10.9722 13.5 10C13.5 9.02778 13.1597 8.20139 12.4792 7.52083C11.7986 6.84028 10.9722 6.5 10 6.5C9.02778 6.5 8.20139 6.84028 7.52083 7.52083C6.84028 8.20139 6.5 9.02778 6.5 10C6.5 10.9722 6.84028 11.7986 7.52083 12.4792C8.20139 13.1597 9.02778 13.5 10 13.5ZM10 12C9.44444 12 8.97222 11.8056 8.58333 11.4167C8.19444 11.0278 8 10.5556 8 10C8 9.44444 8.19444 8.97222 8.58333 8.58333C8.97222 8.19444 9.44444 8 10 8C10.5556 8 11.0278 8.19444 11.4167 8.58333C11.8056 8.97222 12 9.44444 12 10C12 10.5556 11.8056 11.0278 11.4167 11.4167C11.0278 11.8056 10.5556 12 10 12ZM10 16C8.0195 16 6.21535 15.4549 4.58754 14.3646C2.95974 13.2743 1.76389 11.8194 1 10C1.76389 8.18056 2.95974 6.72569 4.58754 5.63542C6.21535 4.54514 8.0195 4 10 4C11.9805 4 13.7847 4.54514 15.4125 5.63542C17.0403 6.72569 18.2361 8.18056 19 10C18.2361 11.8194 17.0403 13.2743 15.4125 14.3646C13.7847 15.4549 11.9805 16 10 16ZM10 14.5C11.5556 14.5 12.9931 14.0972 14.3125 13.2917C15.6319 12.4861 16.6458 11.3889 17.3542 10C16.6458 8.61111 15.6319 7.51389 14.3125 6.70833C12.9931 5.90278 11.5556 5.5 10 5.5C8.44444 5.5 7.00694 5.90278 5.6875 6.70833C4.36806 7.51389 3.35417 8.61111 2.64583 10C3.35417 11.3889 4.36806 12.4861 5.6875 13.2917C7.00694 14.0972 8.44444 14.5 10 14.5Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 21
    }
  })))), suffixIcon && __jsx("label", {
    htmlFor: props.id,
    className: "absolute top-[3px] right-0 z-10 inline-flex items-center h-[44px] px-5 select-none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 15
    }
  }, suffixIcon)), errorMessage && __jsx("p", {
    className: "text-xs text-red-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 152,
      columnNumber: 26
    }
  }, errorMessage));
});
AppInput.displayName = "AppInput";


/***/ }),

/***/ "./src/components/ui/shared/CheckboxInput.tsx":
/*!****************************************************!*\
  !*** ./src/components/ui/shared/CheckboxInput.tsx ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\CheckboxInput.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
// CheckboxInput.tsx

const CheckboxInput = ({
  label,
  name,
  register,
  errorMessage
}) => {
  return __jsx("div", {
    className: "mb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 5
    }
  }, __jsx("label", {
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 20,
      columnNumber: 7
    }
  }, __jsx("input", _extends({
    type: "checkbox"
  }, register(name), {
    className: "form-checkbox text-purple-600 checked:bg-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 9
    }
  })), __jsx("span", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 9
    }
  }, label)), errorMessage && errorMessage && __jsx("p", {
    className: "text-red-500 text-sm mt-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 9
    }
  }, errorMessage));
};
/* harmony default export */ __webpack_exports__["default"] = (CheckboxInput);

/***/ }),

/***/ "./src/components/ui/shared/GenderInput.tsx":
/*!**************************************************!*\
  !*** ./src/components/ui/shared/GenderInput.tsx ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\components\\ui\\shared\\GenderInput.tsx";
var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }
// GenderInput.tsx

const GenderInput = ({
  label,
  name,
  options,
  register,
  errorMessage
}) => {
  return __jsx("div", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 26,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "flex gap-8 items-center mt-4 mb-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 7
    }
  }, __jsx("label", {
    className: "block text-gray-700 font-semibold",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 28,
      columnNumber: 9
    }
  }, label, " ", __jsx("span", {
    className: "text-red-500",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 19
    }
  }, "*")), __jsx("div", {
    className: "flex gap-4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 31,
      columnNumber: 9
    }
  }, options.map(option => __jsx("label", {
    key: option.value,
    className: "flex items-center gap-2",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 13
    }
  }, __jsx("input", _extends({
    type: "radio",
    value: option.value
  }, register(name), {
    className: "appearance-none w-4 h-4 border border-gray-300 rounded-full checked:bg-black checked:border-transparent focus:outline-none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 15
    }
  })), __jsx("span", {
    className: "text-black",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 40,
      columnNumber: 15
    }
  }, option.label))))), errorMessage && errorMessage && __jsx("p", {
    className: "text-red-500 text-sm mt-1",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 46,
      columnNumber: 9
    }
  }, errorMessage));
};
/* harmony default export */ __webpack_exports__["default"] = (GenderInput);

/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/*! exports provided: SETTING_CHANNEL, SETTING_KEYS, MENU_SECTION, RECEIVED_PAID_TOKEN_EVENT, UPDATE_RUBY_MOST_SUPPORTED_EVENT, UPDATE_TOP_GIFTED_EVENT, UPDATE_TOTAL_RUBY_IN_ROOM, ROLE_PERMISSIONS, ROLE_UNLOCKED_FEATURE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SETTING_CHANNEL", function() { return SETTING_CHANNEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SETTING_KEYS", function() { return SETTING_KEYS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MENU_SECTION", function() { return MENU_SECTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RECEIVED_PAID_TOKEN_EVENT", function() { return RECEIVED_PAID_TOKEN_EVENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_RUBY_MOST_SUPPORTED_EVENT", function() { return UPDATE_RUBY_MOST_SUPPORTED_EVENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_TOP_GIFTED_EVENT", function() { return UPDATE_TOP_GIFTED_EVENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UPDATE_TOTAL_RUBY_IN_ROOM", function() { return UPDATE_TOTAL_RUBY_IN_ROOM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROLE_PERMISSIONS", function() { return ROLE_PERMISSIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROLE_UNLOCKED_FEATURE", function() { return ROLE_UNLOCKED_FEATURE; });
const SETTING_CHANNEL = 'SETTINGS';
const SETTING_KEYS = {
  SITE_NAME: 'siteName',
  LOGO_URL: 'logoUrl',
  FAVICON: 'favicon',
  LOGIN_PLACEHOLDER_IMAGE: 'loginPlaceholderImage',
  REQUIRE_EMAIL_VERIFICATION: 'requireEmailVerification',
  ADMIN_EMAIL: 'adminEmail',
  SENDER_EMAIL: 'senderEmail',
  META_KEYWORDS: 'metaKeywords',
  META_DESCRIPTION: 'metaDescription',
  HEADER_SCRIPT: 'headerScript',
  AFTER_BODY_SCRIPT: 'afterBodyScript',
  MONTHLY_SUBSCRIPTION_COMMISSION: 'monthlySubscriptionCommission',
  YEARLY_SUBSCRIPTION_COMMISSION: 'yearlySubscriptionCommission',
  VIDEO_SALE_COMMISSION: 'videoSaleCommission',
  GALLERY_SALE_COMMISSION: 'gallerySaleCommission',
  PRODUCT_SALE_COMMISSION: 'productSaleCommission',
  FEED_SALE_COMMISSION: 'feedSaleCommission',
  TIP_COMMISSION: 'tipCommission',
  STREAM_COMMISSION: 'streamCommission',
  MESSAGE_COMMISSION: 'messageCommission',
  CCBILL_CLIENT_ACCOUNT_NUMBER: 'ccbillClientAccountNumber',
  CCBILL_DATALINK_USERNAME: 'ccbillDatalinkUsername',
  CCBILL_DATALINK_PASSWORD: 'ccbillDatalinkPassword',
  CCBILL_SUB_ACCOUNT_NUMBER: 'ccbillSubAccountNumber',
  CCBILL_FLEXFORM_ID: 'ccbillFlexformId',
  CCBILL_SALT: 'ccbillSalt',
  CCBILL_CURRENCY_CODE: 'ccbilCurrencyCode',
  CCBILL_ENABLE: 'ccbillEnable',
  USE_SENDGRID_TRANSPORTER: 'useSengridTransporter',
  SMTP_TRANSPORTER: 'smtpTransporter',
  GOOGLE_ANALYTICS_CODE: 'gaCode',
  MAINTENANCE_MODE: 'maintenanceMode',
  PERFORMER_VERIFY_NUMBER: 'performerVerifyNumber',
  TWITTER_CLIENT_ID: 'twitterClientId',
  TWITTER_CLIENT_SECRET: 'twitterClientSecret',
  GOOGLE_CLIENT_ID: 'googleClientId',
  GOOGLE_CLIENT_SECRET: 'googleClientSecret',
  VIEWER_URL: 'viewerURL',
  PUBLISHER_URL: 'publisherURL',
  SUBSCRIBER_URL: 'subscriberUrl',
  OPTION_FOR_BROADCAST: 'optionForBroadcast',
  OPTION_FOR_PRIVATE: 'optionForPrivate',
  OPTION_FOR_GROUP: 'optionForGroup',
  SECURE_OPTION: 'secureOption',
  ANT_MEDIA_API_ENDPOINT: 'AntMediaApiEndpoint',
  ANT_MEDIA_APPNAME: 'AntMediaAppname',
  ANT_MEDIA_ENTERPRISE: 'AntMediaEnterprise',
  FOOTER_CONTENT: 'footerContent',
  USER_BENEFIT: 'userBenefit',
  MODEL_BENEFIT: 'modelBenefit',
  GOOGLE_RECAPTCHA_SITE_KEY: 'googleReCaptchaSiteKey',
  GOOGLE_RECAPTCHA_SECRET_KEY: 'googleReCaptchaSecretKey',
  ENABLE_GOOGLE_RECAPTCHA: 'enableGoogleReCaptcha',
  BITPAY_PRODUCTION_MODE: 'bitpayProductionMode',
  BITPAY_API_TOKEN: 'bitpayApiToken',
  TOKEN_CONVERSION_RATE: 'tokenConversionRate',
  STRIPE_PUBLISHABLE_KEY: 'stripePublishableKey',
  STRIPE_SECRET_KEY: 'stripeSecretKey',
  STRIPE_ENABLE: 'stripeEnable',
  AGORA_APPID: 'agoraAppId',
  AGORA_ENABLE: 'agoraEnable',
  PAYPAL_CLIENT_ID: 'paypalClientId',
  PAYPAL_CLIENT_SECRET: 'paypalClientSecret',
  PAYPAL_ENABLE: 'paypalEnable',
  PAYPAL_LIVE_MODE: 'paypalLiveMode',
  TOTAL_FOLLOWER_FOR_LIVE: 'totalFollowerForLive',
  TOTAL_FOLLOWER_FOR_PRIVATE_CHAT: 'totalFollowerForPrivateChat',
  CROSS_PROMOTION_DESCRIPTIONS: 'crossPromotionDescription',
  EXCHANGE_RATE_WEB_VALUE: 'exchangeRateWebValue',
  SALES_RUBY_HEADER_PAGE: 'salesRubyHeaderPage'
};
const MENU_SECTION = {
  MAIN: 'main',
  HEADER: 'header',
  FOOTER: 'footer'
};
const RECEIVED_PAID_TOKEN_EVENT = 'RECEIVED_PAID_TOKEN_EVENT';
const UPDATE_RUBY_MOST_SUPPORTED_EVENT = 'UPDATE_RUBY_MOST_SUPPORTED_EVENT';
const UPDATE_TOP_GIFTED_EVENT = 'UPDATE_TOP_GIFTED_EVENT';
const UPDATE_TOTAL_RUBY_IN_ROOM = 'UPDATE_TOTAL_RUBY_IN_ROOM';
const ROLE_PERMISSIONS = {
  ROLE_ADMIN: 'admin',
  ROLE_PUBLIC: 'role-public',
  ROLE_FAN_FREE: 'role-fan-free',
  ROLE_FAN_PAYING: 'role-fan-paying',
  ROLE_FAN_VERIFIED: 'role-fan-verified',
  ROLE_HOST_PRIVATE: 'role-host-private',
  ROLE_HOST_LIVE: 'role-host-live',
  ROLE_HOST_VERIFIED: 'role-host-verified',
  ROLE_CHANGE_PAYMENT_SETTINGS: 'role-change-payment-settings',
  ROLE_MILESTONES: 'role-milestones',
  ROLE_ALL_RISING_MODEL: 'role-all-rising-models',
  ROLE_MANAGED_ACCOUNT: 'role-managed-account',
  ROLE_HOST_CROSSPROMOTE: 'role-host-crosspromote',
  ROLE_HOST_DMMEFEE: 'role-host-dmefee'
};
const ROLE_UNLOCKED_FEATURE = {
  [ROLE_PERMISSIONS.ROLE_ALL_RISING_MODEL]: {
    url: '/broadcaster-dashboard',
    name: 'Broadcaster Analytics'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_PRIVATE]: {
    url: '/model/private-waiting-room',
    name: 'Host Private Live'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_LIVE]: {
    url: '/go-live',
    name: 'Host Public Live'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_VERIFIED]: {
    url: '/broadcaster-dashboard?tab=verification',
    name: 'Get Verified to Proceed'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_CROSSPROMOTE]: {
    url: '/help/models/cross-promotion',
    name: 'Cross Promotion'
  },
  [ROLE_PERMISSIONS.ROLE_HOST_DMMEFEE]: {
    url: '/help/models/dm-me-for-a-fee',
    name: 'DM ME Fee'
  }
};

/***/ }),

/***/ "./src/hooks/useClickOutside.ts":
/*!**************************************!*\
  !*** ./src/hooks/useClickOutside.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useClickOutside = callback => {
  const ref = Object(react__WEBPACK_IMPORTED_MODULE_0__["useRef"])(null);
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    const handleClickOutside = event => {
      if (ref.current && !ref.current.contains(event.target)) {
        callback();
      }
    };
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, [callback]);
  return ref;
};
/* harmony default export */ __webpack_exports__["default"] = (useClickOutside);

/***/ }),

/***/ "./src/hooks/useDisabledScroll.ts":
/*!****************************************!*\
  !*** ./src/hooks/useDisabledScroll.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const useDisableScroll = isOpen => {
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    if (isOpen) {
      // Disable scroll
      document.body.style.overflow = 'hidden';
    } else {
      // Enable scroll
      document.body.style.overflow = '';
    }

    // Cleanup function to re-enable scroll when the component unmounts
    return () => {
      document.body.style.overflow = '';
    };
  }, [isOpen]);
};
/* harmony default export */ __webpack_exports__["default"] = (useDisableScroll);

/***/ }),

/***/ "./src/icons/index.tsx":
/*!*****************************!*\
  !*** ./src/icons/index.tsx ***!
  \*****************************/
/*! exports provided: RubySvg, DiamondSvg, WalletSvg, CameraSvg, GiftIcon, SearchInputSvg, HashtagSvg, ProfileSvg, SaveBookSvg, CommentsSvg, ImageSvg, CautionSvg, RubySmallSvg, NoVerifiedIcon, CheckedIcon, WarningIcon, RubyIcon, RubySmallIcon, CautionIcon, DiamondIcon, ModelIcon, HomeIcon, PlusIcon, MessageIcon, UserIcon, TickIcon, ShareIcon, LiveIcon, MuteIcon, TopIcon, ShakeHandIcon, TrofeoIcon, VideoIcon, CameraIcon, SearchFilterIcon, SearchInputIcon, PlayIcon, HashtagIcon, ProfileIcon, SaveBookIcon, CommentsIcon, ImageIcon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubySvg", function() { return RubySvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiamondSvg", function() { return DiamondSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WalletSvg", function() { return WalletSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CameraSvg", function() { return CameraSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftIcon", function() { return GiftIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchInputSvg", function() { return SearchInputSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashtagSvg", function() { return HashtagSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileSvg", function() { return ProfileSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveBookSvg", function() { return SaveBookSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentsSvg", function() { return CommentsSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageSvg", function() { return ImageSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CautionSvg", function() { return CautionSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubySmallSvg", function() { return RubySmallSvg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoVerifiedIcon", function() { return NoVerifiedIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CheckedIcon", function() { return CheckedIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WarningIcon", function() { return WarningIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubyIcon", function() { return RubyIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RubySmallIcon", function() { return RubySmallIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CautionIcon", function() { return CautionIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DiamondIcon", function() { return DiamondIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModelIcon", function() { return ModelIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeIcon", function() { return HomeIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlusIcon", function() { return PlusIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageIcon", function() { return MessageIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserIcon", function() { return UserIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TickIcon", function() { return TickIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShareIcon", function() { return ShareIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LiveIcon", function() { return LiveIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MuteIcon", function() { return MuteIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopIcon", function() { return TopIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ShakeHandIcon", function() { return ShakeHandIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TrofeoIcon", function() { return TrofeoIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoIcon", function() { return VideoIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CameraIcon", function() { return CameraIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchFilterIcon", function() { return SearchFilterIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchInputIcon", function() { return SearchInputIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PlayIcon", function() { return PlayIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HashtagIcon", function() { return HashtagIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProfileIcon", function() { return ProfileIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SaveBookIcon", function() { return SaveBookIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentsIcon", function() { return CommentsIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImageIcon", function() { return ImageIcon; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\icons\\index.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
/* eslint-disable react/require-default-props */


const RubySvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  viewBox: "0 0 40 40",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 15,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M15.0719 10.1104L16.4441 7.60988C15.5293 7.22871 14.6144 7 13.6234 7C11.9462 7 10.3453 7.60988 9.12549 8.67718L9.81161 10.8118L15.0719 10.1104Z",
  fill: "url(#paint0_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 16,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M31.2341 10.7355L31.9202 8.67718C30.6242 7.60988 29.0995 7 27.4223 7C26.4312 7 25.4021 7.22871 24.5635 7.60988L25.9738 10.1257L31.2341 10.7355Z",
  fill: "url(#paint1_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 17,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M17.1306 7.91529C16.9019 7.76282 16.7494 7.70946 16.4445 7.61035L15.0723 10.1109L20.485 11.8033C19.7989 10.1261 18.5791 8.83012 17.1306 7.91529Z",
  fill: "url(#paint2_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 18,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M23.8392 7.91529C22.3908 8.75388 21.171 10.1261 20.4849 11.8033L25.9738 10.1261L24.5635 7.61035C24.3348 7.76282 24.0984 7.7552 23.8392 7.91529Z",
  fill: "url(#paint3_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 19,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M11.8702 26.8215C12.3276 27.2789 12.9375 27.7363 13.3949 28.1938L11.1841 21.8662L11.8702 26.8215Z",
  fill: "url(#paint4_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 20,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M27.6509 28.1938C28.1845 27.7363 28.6419 27.2027 29.0994 26.8215L29.7855 21.8662L27.6509 28.1938Z",
  fill: "url(#paint5_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 21,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.485 25.8305L24.1443 22.8573L25.8977 18.4356L23.3819 14.8525H17.588L15.0723 18.4356L16.8257 22.8573L20.485 25.8305Z",
  fill: "url(#paint6_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 22,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.0718 18.4353L17.5876 14.8522L15.0718 10.1104L9.81159 10.8117L7.98193 15.0809L15.0718 18.4353Z",
  fill: "url(#paint7_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 23,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M6.99106 14.8137L6 14.5469C6 14.8518 6 15.233 6 15.6142C6 16.8339 6.30494 18.1299 6.76236 19.4259L7.37224 17.2151L6.99106 14.8137Z",
  fill: "url(#paint8_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 24,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M6.99121 14.8145L7.37239 17.2159L7.98227 15.0813L6.99121 14.8145Z",
  fill: "url(#paint9_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 25,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.8976 18.4357L33.0638 15.0813L31.2341 10.7359L25.9738 10.126L23.3818 14.8526L25.8976 18.4357Z",
  fill: "url(#paint10_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 26,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M33.0635 15.0812L33.5971 17.2158L34.0545 14.8525L33.0635 15.0812Z",
  fill: "url(#paint11_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 27,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M33.5972 17.2151L34.2833 19.4259C34.7407 18.1299 34.9694 16.8339 34.9694 15.6142C34.9694 15.233 35.0456 14.9281 34.9694 14.5469L34.0546 14.8518L33.5972 17.2151Z",
  fill: "url(#paint12_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 28,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M7.98195 15.0811L7.37207 17.2156L11.1838 21.866L15.0719 18.4354L7.98195 15.0811Z",
  fill: "url(#paint13_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 29,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M8.85889 23.3147C9.39254 24.077 9.9643 24.8394 10.5742 25.5255C10.9554 25.9829 11.4128 26.3641 11.8702 26.8215L11.1841 21.8662L8.85889 23.3147Z",
  fill: "url(#paint14_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 30,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M7.37209 17.2158L6.76221 19.4267C7.29586 20.7227 7.94386 22.0187 8.85868 23.3147L11.1839 21.8662L7.37209 17.2158Z",
  fill: "url(#paint15_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 31,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.0721 18.4355L11.1841 21.8661L15.682 24.6869L16.8255 22.8572L15.0721 18.4355Z",
  fill: "url(#paint16_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 32,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.682 24.6869L11.1841 21.8662L13.3949 28.1938L15.682 24.6869Z",
  fill: "url(#paint17_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 33,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M24.144 22.8572L25.3638 24.6869L29.7855 21.8661L25.8975 18.4355L24.144 22.8572Z",
  fill: "url(#paint18_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 34,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.3638 24.6869L27.6508 28.1938L29.7854 21.8662L25.3638 24.6869Z",
  fill: "url(#paint19_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 35,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M29.0996 26.8215C29.557 26.3641 30.0144 25.9829 30.3956 25.5255C31.2342 24.5345 32.0728 23.5434 32.6827 22.5523L29.7857 21.8662L29.0996 26.8215Z",
  fill: "url(#paint20_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 36,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M33.5974 17.2158L29.7856 21.8662L32.6826 22.5523C33.3687 21.485 33.9024 20.4939 34.2835 19.4267L33.5974 17.2158Z",
  fill: "url(#paint21_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 37,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.8975 18.4354L29.7855 21.866L33.5973 17.2156L33.0636 15.0811L25.8975 18.4354Z",
  fill: "url(#paint22_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 38,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M23.3818 14.8522L20.4848 11.8027L17.5879 14.8522H23.3818Z",
  fill: "url(#paint23_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 39,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.485 11.8028L15.0723 10.1104L17.588 14.8522L20.485 11.8028Z",
  fill: "url(#paint24_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 40,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.9738 10.126L20.4849 11.8032L23.3818 14.8526L25.9738 10.126Z",
  fill: "url(#paint25_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 41,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M25.3639 24.6865L20.4849 25.8301L23.458 31.5477C24.5253 30.7091 25.7451 29.7943 26.8886 28.8032C27.1174 28.5745 27.4223 28.4221 27.651 28.1934L25.3639 24.6865Z",
  fill: "url(#paint26_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 42,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 25.8306L25.3639 24.6871L24.1442 22.8574L20.4849 25.8306Z",
  fill: "url(#paint27_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 43,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.6821 24.6865L13.395 28.1934C13.6237 28.4221 13.8524 28.5745 14.0811 28.8032C15.3009 29.8705 16.5207 30.8616 17.588 31.7002L20.4849 25.8301L15.6821 24.6865Z",
  fill: "url(#paint28_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 44,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M16.8257 22.8574L15.6821 24.6871L20.485 25.8306L16.8257 22.8574Z",
  fill: "url(#paint29_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 45,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 33.6824C20.4849 33.6824 23.3818 31.6241 23.458 31.5479L20.4849 32.3864V33.6824Z",
  fill: "url(#paint30_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 46,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 25.8301V32.3863L23.458 31.5477L20.4849 25.8301Z",
  fill: "url(#paint31_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 47,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4848 32.3863V25.8301L17.5879 31.7002L20.4848 32.3863Z",
  fill: "url(#paint32_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 48,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M20.4849 32.3863L17.5879 31.7002C17.5117 31.7002 17.6642 31.7002 17.5879 31.7002C19.1889 32.92 20.4849 33.6823 20.4849 33.6823V32.3863Z",
  fill: "url(#paint33_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 49,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M34.9695 14.5475C34.9695 14.3188 34.8933 14.0901 34.8933 13.7852L34.0547 14.8525L34.9695 14.5475Z",
  fill: "url(#paint34_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 50,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M31.92 8.67676L31.2339 10.7351L33.0635 15.0805L34.0546 14.8518L34.8932 13.7845C34.4358 11.7262 33.3685 9.89653 31.92 8.67676Z",
  fill: "url(#paint35_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 51,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M6 14.5474L6.99106 14.8143L6.15247 13.8613C6.15247 14.09 6.07624 14.3187 6 14.5474Z",
  fill: "url(#paint36_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 52,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M9.12553 8.67676C7.60082 9.89653 6.53352 11.7262 6.15234 13.8608L6.99093 14.8137L7.982 15.0805L9.81165 10.8114L9.12553 8.67676Z",
  fill: "url(#paint37_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 53,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M17.5879 14.8525H23.3818L25.8976 18.4356L23.3818 14.8525H17.5879Z",
  fill: "url(#paint38_linear_4200_38074)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 54,
    columnNumber: 5
  }
}), __jsx("defs", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 55,
    columnNumber: 5
  }
}, __jsx("linearGradient", {
  id: "paint0_linear_4200_38074",
  x1: "8.96463",
  y1: "-8.50143",
  x2: "14.899",
  y2: "17.3558",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 56,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 57,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 58,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 59,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 60,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 61,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 62,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint1_linear_4200_38074",
  x1: "28.7318",
  y1: "-0.285983",
  x2: "27.542",
  y2: "20.1834",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 64,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 65,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 66,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 67,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 68,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 69,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 70,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint2_linear_4200_38074",
  x1: "23.5674",
  y1: "-10.8733",
  x2: "16.4364",
  y2: "16.0163",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 72,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 73,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 74,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3685",
  stopColor: "#F69D9D",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 75,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4447",
  stopColor: "#F27072",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 76,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5179",
  stopColor: "#F04C50",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 77,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5865",
  stopColor: "#EE3338",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 78,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6485",
  stopColor: "#EC2329",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 79,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6983",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 80,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 81,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint3_linear_4200_38074",
  x1: "21.4037",
  y1: "-7.19612",
  x2: "23.9557",
  y2: "18.1904",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 83,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 84,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 85,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 86,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 87,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 88,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 89,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint4_linear_4200_38074",
  x1: "-4.689",
  y1: "35.4566",
  x2: "21.6369",
  y2: "19.2897",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 91,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 92,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F6BE95",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 93,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4173",
  stopColor: "#F4A684",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 94,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5734",
  stopColor: "#F16858",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 95,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 96,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 97,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint5_linear_4200_38074",
  x1: "33.6822",
  y1: "33.4185",
  x2: "25.2681",
  y2: "19.1997",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 99,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 100,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 101,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 102,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 103,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 104,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 105,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint6_linear_4200_38074",
  x1: "-11.9912",
  y1: "3.17463",
  x2: "30.1177",
  y2: "24.4822",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 107,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 108,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 109,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 110,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 111,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 112,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#8E0329",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 113,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint7_linear_4200_38074",
  x1: "-9.19569",
  y1: "-6.26985",
  x2: "26.8153",
  y2: "26.5106",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 115,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 116,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 117,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4015",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 118,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5231",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 119,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6271",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 120,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 121,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint8_linear_4200_38074",
  x1: "3.18066",
  y1: "16.6678",
  x2: "12.7504",
  y2: "17.6205",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 123,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.2064",
  stopColor: "#F9D19B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 124,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.285",
  stopColor: "#F7B98B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 125,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4516",
  stopColor: "#F37B62",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 126,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6764",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 127,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 128,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint9_linear_4200_38074",
  x1: "-3.72392",
  y1: "18.4059",
  x2: "12.04",
  y2: "14.9502",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 130,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 131,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 132,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4576",
  stopColor: "#F4A669",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 133,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6976",
  stopColor: "#ED682F",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 134,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC5C24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 135,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 136,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint10_linear_4200_38074",
  x1: "33.0342",
  y1: "6.93361",
  x2: "18.7771",
  y2: "29.9288",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 138,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.1104",
  stopColor: "#F6A9A7",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 139,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 140,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 141,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 142,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 143,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 144,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint11_linear_4200_38074",
  x1: "43.0505",
  y1: "19.1859",
  x2: "29.2201",
  y2: "14.4605",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 146,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 147,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 148,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 149,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 150,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 151,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 152,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint12_linear_4200_38074",
  x1: "40.3247",
  y1: "17.8383",
  x2: "25.715",
  y2: "15.654",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 154,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 155,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.0335",
  stopColor: "#DA7079",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 156,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.1635",
  stopColor: "#EA9195",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 157,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.2715",
  stopColor: "#F3A6A7",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 158,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 159,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 160,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 161,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 162,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 163,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint13_linear_4200_38074",
  x1: "-11.5524",
  y1: "18.4735",
  x2: "21.9622",
  y2: "18.4735",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 165,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 166,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 167,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4173",
  stopColor: "#F5A672",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 168,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5734",
  stopColor: "#F1684E",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 169,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 170,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 171,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint14_linear_4200_38074",
  x1: "-15.0809",
  y1: "28.3478",
  x2: "17.3263",
  y2: "23.4712",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 173,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 174,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 175,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4182",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 176,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.575",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 177,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.709",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 178,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 179,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint15_linear_4200_38074",
  x1: "-1.79767",
  y1: "24.3522",
  x2: "14.8874",
  y2: "17.4733",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 181,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.2064",
  stopColor: "#F9A11B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 182,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3102",
  stopColor: "#F7891D",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 183,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5284",
  stopColor: "#F04B21",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 184,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6764",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 185,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 186,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint16_linear_4200_38074",
  x1: "-9.46447",
  y1: "28.8716",
  x2: "23.6853",
  y2: "19.1163",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 188,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 189,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 190,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3818",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 191,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4621",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 192,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5307",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 193,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 194,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint17_linear_4200_38074",
  x1: "-10.2666",
  y1: "39.7405",
  x2: "19.9025",
  y2: "20.065",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 196,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 197,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 198,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 199,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 200,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 201,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 202,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint18_linear_4200_38074",
  x1: "-4.43171",
  y1: "37.827",
  x2: "30.405",
  y2: "18.978",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 204,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 205,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 206,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 207,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 208,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 209,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 210,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint19_linear_4200_38074",
  x1: "45.5948",
  y1: "41.7705",
  x2: "21.3349",
  y2: "17.7063",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 212,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 213,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 214,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 215,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 216,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 217,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 218,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint20_linear_4200_38074",
  x1: "35.4465",
  y1: "42.2947",
  x2: "28.257",
  y2: "14.5053",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 220,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 221,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 222,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5299",
  stopColor: "#F16366",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 223,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6723",
  stopColor: "#ED3136",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 224,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 225,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 226,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint21_linear_4200_38074",
  x1: "36.4731",
  y1: "32.861",
  x2: "29.7145",
  y2: "14.0336",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 228,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 229,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 230,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3897",
  stopColor: "#F59A95",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 231,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4869",
  stopColor: "#F16857",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 232,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4961",
  stopColor: "#F16351",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 233,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 234,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 235,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint22_linear_4200_38074",
  x1: "26.7672",
  y1: "2.3395",
  x2: "32.1957",
  y2: "30.5479",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 237,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 238,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 239,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 240,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 241,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 242,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 243,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint23_linear_4200_38074",
  x1: "20.4232",
  y1: "-4.93066",
  x2: "20.496",
  y2: "18.4281",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 245,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 246,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 247,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 248,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 249,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 250,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 251,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint24_linear_4200_38074",
  x1: "21.2847",
  y1: "-2.08147",
  x2: "15.8053",
  y2: "18.292",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 253,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 254,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.2435",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 255,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3153",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 256,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.466",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 257,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5948",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 258,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 259,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint25_linear_4200_38074",
  x1: "16.94",
  y1: "2.06056",
  x2: "28.0195",
  y2: "17.7462",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 261,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 262,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 263,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 264,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 265,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 266,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 267,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint26_linear_4200_38074",
  x1: "26.9444",
  y1: "45.1545",
  x2: "23.1644",
  y2: "21.3015",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 269,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 270,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 271,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3978",
  stopColor: "#F59697",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 272,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5614",
  stopColor: "#F05659",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 273,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6807",
  stopColor: "#ED2D33",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 274,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 275,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 276,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint27_linear_4200_38074",
  x1: "22.167",
  y1: "6.8481",
  x2: "23.1375",
  y2: "30.3963",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 278,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 279,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 280,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 281,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 282,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 283,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 284,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint28_linear_4200_38074",
  x1: "-24.6526",
  y1: "32.2569",
  x2: "27.3569",
  y2: "27.1381",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 286,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 287,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 288,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4227",
  stopColor: "#F5A672",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 289,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5903",
  stopColor: "#F1684E",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 290,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7717",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 291,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 292,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint29_linear_4200_38074",
  x1: "1.78233",
  y1: "35.3858",
  x2: "24.775",
  y2: "20.3404",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 294,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 295,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 296,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 297,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 298,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 299,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 300,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint30_linear_4200_38074",
  x1: "26.3934",
  y1: "45.1942",
  x2: "19.4254",
  y2: "25.3726",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 302,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 303,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 304,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 305,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 306,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 307,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 308,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint31_linear_4200_38074",
  x1: "43.3362",
  y1: "33.7202",
  x2: "16.2564",
  y2: "28.2544",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 310,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 311,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 312,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 313,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 314,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 315,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 316,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint32_linear_4200_38074",
  x1: "-1.39507",
  y1: "25.9823",
  x2: "25.5119",
  y2: "29.8262",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 318,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 319,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 320,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 321,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 322,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 323,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 324,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint33_linear_4200_38074",
  x1: "10.0833",
  y1: "42.9511",
  x2: "21.5102",
  y2: "29.8402",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 326,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 327,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 328,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4133",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 329,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5598",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 330,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6849",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 331,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 332,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint34_linear_4200_38074",
  x1: "42.7377",
  y1: "14.6631",
  x2: "27.4303",
  y2: "14.0254",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 334,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 335,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 336,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 337,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 338,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 339,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 340,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint35_linear_4200_38074",
  x1: "40.2334",
  y1: "4.22902",
  x2: "24.0763",
  y2: "21.0308",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 342,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 343,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 344,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.425",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 345,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.5961",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 346,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 347,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 348,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint36_linear_4200_38074",
  x1: "2.64587",
  y1: "13.7997",
  x2: "10.0687",
  y2: "14.8172",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 350,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#D56671",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 351,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7BE80",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 352,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4576",
  stopColor: "#F4A669",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 353,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.6976",
  stopColor: "#ED682F",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 354,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7423",
  stopColor: "#EC5C24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 355,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 356,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint37_linear_4200_38074",
  x1: "4.89194",
  y1: "9.94753",
  x2: "13.3631",
  y2: "14.7572",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 358,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.2388",
  stopColor: "#F9DAC9",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 359,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.3198",
  stopColor: "#F7C2B4",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 360,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4914",
  stopColor: "#F3847D",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 361,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7382",
  stopColor: "#EC2126",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 362,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7446",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 363,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#7A0025",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 364,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "paint38_linear_4200_38074",
  x1: "22.8618",
  y1: "14.5016",
  x2: "22.2275",
  y2: "15.716",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 366,
    columnNumber: 7
  }
}, __jsx("stop", {
  offset: "0.3436",
  stopColor: "#F7ADAD",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 367,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.4777",
  stopColor: "#F59596",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 368,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "0.7593",
  stopColor: "#F0575B",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 369,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#EC1E24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 370,
    columnNumber: 9
  }
}))));
const DiamondSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  fill: "none",
  viewBox: "0 0 20 20",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 377,
    columnNumber: 3
  }
}, __jsx("g", {
  clipPath: "url(#a)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 378,
    columnNumber: 5
  }
}, __jsx("path", {
  fill: "url(#b)",
  d: "m6.791 3.267-3.96 4.747h3.173l3.96-5.146-3.173.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 379,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#c)",
  d: "m9.964 2.868-3.96 5.146h7.92l-3.96-5.146Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 380,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#d)",
  d: "m13.136 3.267 3.96 4.76h-3.173l-3.96-5.16 3.173.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 381,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#e)",
  d: "M9.964 17.132 2.83 8.014h3.173l3.96 9.118Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 382,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#f)",
  d: "M13.923 8.014h-7.92l3.96 9.118 3.96-9.118Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 383,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#g)",
  d: "m9.964 17.132 7.132-9.118h-3.173l-3.96 9.118Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 384,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "m6.79 3.255-3.97 4.76h3.173l3.971-5.16-3.172.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 385,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "m9.963 2.855-3.972 5.16h7.932l-3.96-5.16Zm3.173.4 3.972 4.76h-3.173l-3.972-5.16 3.173.4Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 386,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "M9.963 17.145 2.82 8.014h3.173l3.971 9.13Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 387,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "#E1F5FE",
  fillOpacity: ".01",
  d: "M13.935 8.014H5.991l3.972 9.13 3.972-9.13Zm-3.972 9.131 7.145-9.13h-3.173l-3.972 9.13Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 388,
    columnNumber: 7
  }
}), __jsx("path", {
  fill: "url(#h)",
  fillRule: "evenodd",
  d: "m9.927 17.12 3.96-9.118.06.024L10 17.145l-.073-.025Z",
  clipRule: "evenodd",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 389,
    columnNumber: 7
  }
})), __jsx("defs", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 391,
    columnNumber: 5
  }
}, __jsx("linearGradient", {
  id: "b",
  x1: "10.058",
  x2: "2.926",
  y1: "2.996",
  y2: "8.148",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 392,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 393,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 394,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#64B5F6",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 395,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "c",
  x1: "9.964",
  x2: "9.964",
  y1: "2.866",
  y2: "8.018",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 397,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#B2EBF2",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 398,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#B3E5FC",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 399,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 400,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "d",
  x1: "9.87",
  x2: "17.003",
  y1: "2.996",
  y2: "8.147",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 402,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 403,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 404,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#64B5F6",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 405,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "e",
  x1: "3.846",
  x2: "10.979",
  y1: "7.257",
  y2: "16.767",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 407,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#0288D1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 408,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#0288D1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 409,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 410,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "f",
  x1: "9.964",
  x2: "9.01",
  y1: "8.018",
  y2: "17.437",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 412,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 413,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".667",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 414,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#64B5F6",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 415,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "g",
  x1: "16.082",
  x2: "8.95",
  y1: "7.257",
  y2: "16.767",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 417,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#0288D1",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 418,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: ".333",
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 419,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 420,
    columnNumber: 9
  }
})), __jsx("linearGradient", {
  id: "h",
  x1: "13.928",
  x2: "9.962",
  y1: "8.018",
  y2: "17.131",
  gradientUnits: "userSpaceOnUse",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 422,
    columnNumber: 7
  }
}, __jsx("stop", {
  stopColor: "#1E88E5",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 423,
    columnNumber: 9
  }
}), __jsx("stop", {
  offset: "1",
  stopColor: "#81D4FA",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 424,
    columnNumber: 9
  }
})), __jsx("clipPath", {
  id: "a",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 426,
    columnNumber: 7
  }
}, __jsx("path", {
  fill: "#fff",
  d: "M2.25 2.25h15.5v15.5H2.25z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 427,
    columnNumber: 9
  }
}))));
const ModelSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 434,
    columnNumber: 3
  }
}, __jsx("path", {
  id: "call-center-agent",
  d: "M51.14,20.906a9.759,9.759,0,0,0,1.414-5.048V9.672c-.536-12.9-18.913-12.891-19.444,0v6.187a9.759,9.759,0,0,0,1.414,5.048,8.085,8.085,0,0,0-4.949,7.443V30H56.089V28.35A8.085,8.085,0,0,0,51.14,20.906ZM34.877,9.672c.438-10.555,15.475-10.547,15.909,0v6.187a7.859,7.859,0,0,1-1.417,4.533,8.09,8.09,0,0,0-1.352-.114h-1.65v-2a6.184,6.184,0,0,0,2.651-5.074V10.6l-.787-.087a7.06,7.06,0,0,1-6.209-6L41.87,3.468l-1,.335a6.18,6.18,0,0,0-4.223,5.868v3.535a6.213,6.213,0,0,0,.063.884H34.877V9.672Zm7.954,7.954A4.415,4.415,0,0,1,39.3,15.858h0a2.55,2.55,0,0,1-.537-.841c-.3-.867-.261-.927-.261-.927h0a4.422,4.422,0,0,1-.089-.884V9.672a4.415,4.415,0,0,1,2.1-3.766,8.832,8.832,0,0,0,6.735,6.24v1.061A4.424,4.424,0,0,1,42.831,17.626Zm0,1.768a6.168,6.168,0,0,0,1.768-.258v1.142a1.768,1.768,0,0,1-3.535,0V19.136A6.166,6.166,0,0,0,42.831,19.394ZM39.96,26.762,37.908,24.71l1.712-1.642Zm1.477-3.236a3.556,3.556,0,0,0,2.787,0l-.431,4.705H41.87Zm4.6-.458,1.714,1.642L45.7,26.763Zm-11.164-7.21h2.365A6.229,6.229,0,0,0,39.3,18.281v2h-1.65a8.09,8.09,0,0,0-1.352.114A7.859,7.859,0,0,1,34.877,15.858Zm2.769,6.187h.487l-2.752,2.638,3.549,3.549H31.343A6.312,6.312,0,0,1,37.646,22.045Zm9.087,6.187,3.549-3.549-2.753-2.638h.488a6.312,6.312,0,0,1,6.3,6.187Z",
  transform: "translate(-26.574 1)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 435,
    columnNumber: 5
  }
}));
const HomeSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 440,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M29,13.82a1,1,0,0,0-.37-.77l-12-9.82a1,1,0,0,0-1.26,0l-12,9.82a1,1,0,0,0-.37.77,1,1,0,0,0,1,1,.94.94,0,0,0,.63-.23L6,13.47V24.2A2.81,2.81,0,0,0,8.8,27h2.9a2.81,2.81,0,0,0,2.8-2.8V22.8a.8.8,0,0,1,.8-.8h1.4a.8.8,0,0,1,.8.8v1.4A2.81,2.81,0,0,0,20.3,27h2.9A2.81,2.81,0,0,0,26,24.2V13.47l1.37,1.12a.94.94,0,0,0,.63.23A1,1,0,0,0,29,13.82ZM24,24.2a.8.8,0,0,1-.8.8H20.3a.8.8,0,0,1-.8-.8V22.8A2.81,2.81,0,0,0,16.7,20H15.3a2.81,2.81,0,0,0-2.8,2.8v1.4a.8.8,0,0,1-.8.8H8.8a.8.8,0,0,1-.8-.8V11.84l8-6.55,8,6.55Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 441,
    columnNumber: 5
  }
}));
const PlusSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 446,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M21,15H17V11a1,1,0,0,0-2,0v4H11a1,1,0,0,0,0,2h4v4a1,1,0,0,0,2,0V17h4a1,1,0,0,0,0-2ZM23,5H9A4,4,0,0,0,5,9V23a4,4,0,0,0,4,4H23a4,4,0,0,0,4-4V9A4,4,0,0,0,23,5Zm2,18a2,2,0,0,1-2,2H9a2,2,0,0,1-2-2V9A2,2,0,0,1,9,7H23a2,2,0,0,1,2,2Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 447,
    columnNumber: 5
  }
}));
const MessageSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 30 30",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 452,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M21,5H11a6,6,0,0,0-6,6V28.5a1,1,0,0,0,.81,1l.19,0a1,1,0,0,0,.93-.63A3,3,0,0,1,9.69,27H21a6,6,0,0,0,6-6V11A6,6,0,0,0,21,5Zm4,16a4,4,0,0,1-4,4H9.69A4.9,4.9,0,0,0,7,25.79V11a4,4,0,0,1,4-4H21a4,4,0,0,1,4,4Zm-6-8H13a1,1,0,0,0,0,2h6a1,1,0,0,0,0-2Zm-3,4H13a1,1,0,0,0,0,2h3a1,1,0,0,0,0-2Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 453,
    columnNumber: 5
  }
}));
const UserSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 28 28",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 458,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M16,4A12,12,0,1,0,28,16,12,12,0,0,0,16,4Zm0,22a10.17,10.17,0,0,1-2.66-.37,3,3,0,0,1,5.32,0A10.17,10.17,0,0,1,16,26Zm4.52-1.09a5,5,0,0,0-9,0,10,10,0,1,1,9,0ZM16,12a4,4,0,1,0,4,4A4,4,0,0,0,16,12Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,16,18Z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 459,
    columnNumber: 5
  }
}));
const TickSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "14",
  height: "15",
  viewBox: "0 0 14 15",
  fill: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 464,
    columnNumber: 3
  }
}, __jsx("g", {
  clipPath: "url(#clip0_4928_7811)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 465,
    columnNumber: 5
  }
}, __jsx("mask", {
  id: "mask0_4928_7811",
  maskUnits: "userSpaceOnUse",
  x: "0",
  y: "0",
  width: "14",
  height: "15",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 466,
    columnNumber: 7
  }
}, __jsx("rect", {
  y: "0.5",
  width: "14",
  height: "14",
  fill: "#D9D9D9",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 467,
    columnNumber: 9
  }
})), __jsx("g", {
  mask: "url(#mask0_4928_7811)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 469,
    columnNumber: 7
  }
}, __jsx("path", {
  d: "M5.06037 13.4498L3.96662 11.6415L1.91037 11.1748L2.09995 9.0748L0.699951 7.4998L2.09995 5.9248L1.91037 3.8248L3.96662 3.35814L5.06037 1.5498L6.99995 2.38105L8.93954 1.5498L10.0333 3.35814L12.0895 3.8248L11.9 5.9248L13.3 7.4998L11.9 9.0748L12.0895 11.1748L10.0333 11.6415L8.93954 13.4498L6.99995 12.6186L5.06037 13.4498ZM6.2562 9.5998L9.72704 6.14355L8.98329 5.3998L6.2562 8.1123L5.01662 6.8873L4.27287 7.63105L6.2562 9.5998Z",
  fill: "white",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 470,
    columnNumber: 9
  }
}))), __jsx("defs", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 473,
    columnNumber: 5
  }
}, __jsx("clipPath", {
  id: "clip0_4928_7811",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 474,
    columnNumber: 7
  }
}, __jsx("rect", {
  width: "14",
  height: "14",
  fill: "white",
  transform: "translate(0 0.5)",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 475,
    columnNumber: 9
  }
}))));
const ShareSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "1em",
  height: "1em",
  fill: "currentColor",
  viewBox: "0 0 24 24",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 482,
    columnNumber: 3
  }
}, __jsx("path", {
  d: "M20 14a1 1 0 00-1 1v3a1 1 0 01-1 1H6a1 1 0 01-1-1V6a1 1 0 011-1h4a1 1 0 000-2H6a3 3 0 00-3 3v12a3 3 0 003 3h12a3 3 0 003-3v-3a1 1 0 00-1-1zm-1.41-8H17a9 9 0 00-9 9 1 1 0 002 0 7 7 0 017-7h1.59l-2.3 2.29A1 1 0 0016 11a1 1 0 001 1 1 1 0 00.71-.29L22.41 7l-4.7-4.71A1 1 0 0017 2a1 1 0 00-1 1 1 1 0 00.29.71z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 483,
    columnNumber: 5
  }
}));
const LiveIconSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  height: "1em",
  viewBox: "-16 0 512 512.00113",
  width: "1em",
  fill: "currentColor",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 488,
    columnNumber: 3
  }
}, __jsx("g", {
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 489,
    columnNumber: 5
  }
}, __jsx("path", {
  d: "m262.84375 140.558594c-12.699219 12.671875-33.28125 12.671875-45.980469 0-12.695312-12.671875-12.695312-33.21875 0-45.890625 12.699219-12.671875 33.28125-12.671875 45.980469 0 12.695312 12.671875 12.695312 33.21875 0 45.890625zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 490,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m307.257812 189.726562c-3.960937 0-7.921874-1.511718-10.9375-4.539062-6.03125-6.039062-6.019531-15.824219.019532-21.851562 12.238281-12.214844 18.976562-28.453126 18.976562-45.722657s-6.738281-33.507812-18.976562-45.722656c-6.039063-6.03125-6.050782-15.8125-.019532-21.855469 6.027344-6.039062 15.8125-6.050781 21.851563-.019531 18.089844 18.054687 28.050781 42.058594 28.050781 67.597656 0 25.535157-9.960937 49.542969-28.050781 67.597657-3.015625 3.011718-6.964844 4.515624-10.914063 4.515624zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 491,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m342.210938 235.222656c-3.960938 0-7.921876-1.511718-10.9375-4.535156-6.03125-6.042969-6.019532-15.824219.019531-21.855469 24.414062-24.367187 37.863281-56.761719 37.863281-91.21875s-13.449219-66.851562-37.863281-91.21875c-6.039063-6.03125-6.050781-15.8125-.019531-21.855469 6.03125-6.039062 15.8125-6.050781 21.851562-.019531 30.265625 30.207031 46.9375 70.371094 46.933594 113.09375 0 42.722657-16.667969 82.890625-46.933594 113.097657-3.015625 3.007812-6.964844 4.511718-10.914062 4.511718zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 492,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m172.371094 189.726562c-3.949219 0-7.898438-1.503906-10.917969-4.515624-18.089844-18.054688-28.050781-42.0625-28.050781-67.597657 0-25.539062 9.960937-49.542969 28.050781-67.597656 6.039063-6.03125 15.824219-6.023437 21.851563.019531 6.03125 6.039063 6.019531 15.824219-.019532 21.855469-12.238281 12.214844-18.976562 28.453125-18.976562 45.722656s6.738281 33.507813 18.976562 45.722657c6.039063 6.027343 6.050782 15.8125.019532 21.851562-3.015626 3.023438-6.976563 4.539062-10.933594 4.539062zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 493,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m137.417969 235.222656c-3.953125 0-7.902344-1.503906-10.917969-4.515625-30.265625-30.207031-46.933594-70.371093-46.933594-113.09375 0-42.726562 16.667969-82.890625 46.933594-113.097656 6.039062-6.027344 15.824219-6.019531 21.851562.023437 6.03125 6.039063 6.019532 15.820313-.019531 21.851563-24.414062 24.367187-37.863281 56.761719-37.863281 91.21875s13.449219 66.855469 37.863281 91.222656c6.039063 6.03125 6.050781 15.8125.019531 21.855469-3.015624 3.023438-6.976562 4.535156-10.933593 4.535156zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 494,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "m443.480469 261.9375h-407.332031c-19.964844 0-36.148438 16.183594-36.148438 36.144531v177.769531c0 19.964844 16.183594 36.148438 36.148438 36.148438h407.328124c19.964844 0 36.148438-16.183594 36.148438-36.148438v-177.769531c0-19.960937-16.183594-36.144531-36.144531-36.144531zm-324.609375 203.683594h-56.933594c-8.53125 0-15.449219-6.917969-15.449219-15.453125v-126.398438c0-8.53125 6.917969-15.453125 15.449219-15.453125 8.535156 0 15.453125 6.917969 15.453125 15.453125v110.945313h41.480469c8.535156 0 15.453125 6.917968 15.453125 15.453125 0 8.535156-6.917969 15.453125-15.453125 15.453125zm63.328125-15.453125c0 8.535156-6.917969 15.453125-15.453125 15.453125s-15.453125-6.917969-15.453125-15.453125v-126.398438c0-8.53125 6.917969-15.453125 15.453125-15.453125s15.453125 6.917969 15.453125 15.453125zm130.015625-121.929688-38.160156 126.394531c-.003907.011719-.007813.023438-.011719.035157-4.144531 14.144531-25.273438 13.796875-29.5625 0-.003907-.011719-.007813-.023438-.011719-.035157l-38.160156-126.394531c-2.464844-8.171875 2.15625-16.792969 10.328125-19.261719 8.164062-2.464843 16.792969 2.15625 19.257812 10.328126l23.367188 77.394531 23.367187-77.394531c2.46875-8.171876 11.089844-12.796876 19.261719-10.328126 8.167969 2.46875 12.792969 11.089844 10.324219 19.261719zm95.066406 35.320313c8.535156 0 15.453125 6.917968 15.453125 15.453125 0 8.53125-6.917969 15.453125-15.453125 15.453125h-43.851562v40.25h52.175781c8.535156 0 15.453125 6.917968 15.453125 15.453125 0 8.535156-6.917969 15.453125-15.453125 15.453125h-67.628907c-8.535156 0-15.453124-6.917969-15.453124-15.453125v-126.398438c0-8.53125 6.917968-15.453125 15.453124-15.453125h69.710938c8.53125 0 15.453125 6.917969 15.453125 15.453125 0 8.535157-6.921875 15.453125-15.453125 15.453125h-54.261719v24.335938zm0 0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 495,
    columnNumber: 7
  }
})));
const WalletSvg = () => __jsx("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  version: "1.0",
  width: "183.000000pt",
  height: "160.000000pt",
  viewBox: "0 0 183.000000 160.000000",
  preserveAspectRatio: "xMidYMid meet",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 501,
    columnNumber: 3
  }
}, __jsx("g", {
  transform: "translate(0.000000,160.000000) scale(0.100000,-0.100000)",
  fill: "currentColor",
  stroke: "none",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 502,
    columnNumber: 5
  }
}, __jsx("path", {
  d: "M860 1319 c-118 -72 -248 -151 -287 -176 -69 -42 -86 -64 -63 -78 6 -4 135 69 286 161 217 130 278 163 286 153 5 -8 15 -26 23 -41 l15 -27 -171 -103 c-94 -56 -174 -108 -176 -116 -3 -7 -1 -18 5 -24 8 -8 62 20 186 96 96 58 177 106 179 106 3 0 33 -47 67 -105 42 -71 68 -105 78 -103 8 2 17 8 19 13 4 13 -208 368 -222 372 -5 1 -107 -56 -225 -128z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 503,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "M376 1220 c-40 -13 -74 -47 -86 -89 -6 -21 -10 -191 -10 -404 0 -398 1 -408 55 -457 l27 -25 484 -3 c535 -3 525 -4 564 61 15 24 20 50 20 110 0 42 3 77 8 78 106 9 102 1 102 195 0 163 0 164 -25 180 -27 18 -55 13 -55 -10 0 -8 9 -18 21 -21 29 -10 18 -30 -17 -30 l-29 0 -5 170 c-4 143 -8 174 -23 197 -22 33 -102 67 -119 50 -15 -15 -2 -42 21 -42 11 0 32 -11 48 -24 24 -21 28 -32 31 -95 2 -39 2 -71 -1 -71 -2 0 -21 7 -40 15 -31 13 -111 15 -502 15 l-466 0 -24 25 c-27 26 -31 54 -13 88 20 39 40 46 124 47 60 0 83 4 87 14 3 7 0 19 -6 25 -13 13 -128 13 -171 1z m483 -250 l470 0 28 -24 c24 -21 27 -31 28 -82 l0 -59 -118 -5 c-90 -4 -120 -9 -127 -20 -5 -8 -10 -70 -10 -136 0 -101 3 -124 17 -135 11 -10 50 -15 127 -16 l111 -2 3 -60 c3 -71 -19 -129 -52 -136 -35 -7 -34 -7 -504 -6 l-453 1 -24 25 -25 24 0 331 0 331 30 -16 c25 -13 97 -15 499 -15z m639 -317 l-3 -108 -160 0 -160 0 -3 94 c-1 52 -1 100 2 108 4 10 42 13 166 13 l161 0 -3 -107z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 504,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "M747 874 c-4 -4 -7 -15 -7 -25 0 -10 -8 -20 -18 -23 -29 -9 -61 -49 -68 -82 -6 -34 23 -80 62 -94 22 -9 24 -16 24 -70 0 -33 -4 -60 -8 -60 -14 0 -42 35 -42 53 0 10 -8 17 -20 17 -15 0 -20 -7 -20 -28 0 -36 22 -66 59 -82 18 -7 31 -21 33 -33 4 -30 42 -30 46 0 2 13 13 24 28 27 95 24 98 157 4 196 -28 11 -30 16 -30 62 0 56 14 60 40 14 8 -16 19 -28 23 -27 4 0 12 1 17 1 32 0 -8 83 -49 100 -18 7 -31 21 -33 33 -3 22 -28 34 -41 21z m-7 -139 c0 -46 -7 -54 -28 -33 -15 15 -15 51 0 66 21 21 28 13 28 -33z m90 -125 c11 -11 20 -25 20 -31 0 -19 -20 -48 -40 -59 -19 -10 -20 -7 -20 50 0 64 8 72 40 40z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 505,
    columnNumber: 7
  }
}), __jsx("path", {
  d: "M1250 690 c0 -11 6 -20 14 -20 21 0 30 -20 17 -33 -9 -9 -16 -6 -30 12 -12 16 -24 22 -35 18 -40 -15 3 -80 53 -80 54 0 83 70 43 106 -26 24 -62 22 -62 -3z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 506,
    columnNumber: 7
  }
})));
const MuteSvg = () => __jsx("svg", {
  width: "1.2em",
  height: "1.2em",
  viewBox: "-4 0 32 32",
  version: "1.1",
  xmlns: "http://www.w3.org/2000/svg",
  fill: "currentColor",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 512,
    columnNumber: 3
  }
}, __jsx("g", {
  id: "icomoon-ignore",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 513,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M24.3 4.592l-0.742-0.742-7.142 7.143v-5.822l-7.687 6.127h-5.949v4.743l-0.003 0.003 0.003 0.003v4.693h3.889l-6.668 6.668 0.742 0.742 7.41-7.41h0.027l1.003-1.002-0.015-0.012 6.202-6.202v0.027l1.049-1.049v-0.027l7.883-7.883zM3.828 19.691v-7.343h5.268l6.271-4.998v3.949l0.001 0.743-7.65 7.649h-3.889z",
  fill: "#fff",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 514,
    columnNumber: 5
  }
}), __jsx("path", {
  d: "M15.368 19.691h-0.001v4.901l-5.355-4.202-0.747 0.747 7.151 5.611v-6.008h0.001v-6.755l-1.049 1.049z",
  fill: "#fff",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 515,
    columnNumber: 5
  }
}));
const TopSvg = () => __jsx("svg", {
  width: "1.2em",
  height: "1.2em",
  viewBox: "0 0 64 64",
  xmlns: "http://www.w3.org/2000/svg",
  strokeWidth: "3",
  stroke: "white",
  fill: "currentColor",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 520,
    columnNumber: 3
  }
}, __jsx("g", {
  id: "SVGRepo_bgCarrier",
  strokeWidth: "0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 521,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_tracerCarrier",
  strokeLinecap: "round",
  strokeLinejoin: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 522,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_iconCarrier",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 523,
    columnNumber: 5
  }
}, __jsx("circle", {
  cx: "33.52",
  cy: "39.9",
  r: "20.42",
  strokeLinecap: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 524,
    columnNumber: 7
  }
}), __jsx("path", {
  color: "white",
  d: "M33.65,27.91l3.64,7.38a.12.12,0,0,0,.1.07l8.15,1.19a.13.13,0,0,1,.07.23l-5.89,5.74a.11.11,0,0,0,0,.12l1.39,8.12a.14.14,0,0,1-.2.14l-7.28-3.83a.15.15,0,0,0-.13,0L26.18,50.9a.14.14,0,0,1-.2-.14l1.39-8.12a.14.14,0,0,0,0-.12l-5.89-5.74a.13.13,0,0,1,.07-.23l8.15-1.19a.12.12,0,0,0,.1-.07l3.64-7.38A.14.14,0,0,1,33.65,27.91Z",
  strokeLinecap: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 525,
    columnNumber: 7
  }
}), __jsx("polyline", {
  points: "21.48 23.75 9.89 3.67 19.97 3.67 29.04 19.38 19.97 3.67",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 526,
    columnNumber: 7
  }
}), __jsx("polyline", {
  points: "44.82 22.89 55.92 3.67 45.79 3.67 36.77 19.38",
  strokeLinecap: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 527,
    columnNumber: 7
  }
})));
const HandShakeSvg = () => __jsx("svg", {
  width: "1.2em",
  height: "1.2em",
  fill: "currentColor",
  viewBox: "0 -64 640 640",
  xmlns: "http://www.w3.org/2000/svg",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 533,
    columnNumber: 3
  }
}, __jsx("g", {
  id: "SVGRepo_bgCarrier",
  strokeWidth: "0",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 534,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_tracerCarrier",
  strokeLinecap: "round",
  strokeLinejoin: "round",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 535,
    columnNumber: 5
  }
}), __jsx("g", {
  id: "SVGRepo_iconCarrier",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 536,
    columnNumber: 5
  }
}, __jsx("path", {
  d: "M519.2 127.9l-47.6-47.6A56.252 56.252 0 0 0 432 64H205.2c-14.8 0-29.1 5.9-39.6 16.3L118 127.9H0v255.7h64c17.6 0 31.8-14.2 31.9-31.7h9.1l84.6 76.4c30.9 25.1 73.8 25.7 105.6 3.8 12.5 10.8 26 15.9 41.1 15.9 18.2 0 35.3-7.4 48.8-24 22.1 8.7 48.2 2.6 64-16.8l26.2-32.3c5.6-6.9 9.1-14.8 10.9-23h57.9c.1 17.5 14.4 31.7 31.9 31.7h64V127.9H519.2zM48 351.6c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16zm390-6.9l-26.1 32.2c-2.8 3.4-7.8 4-11.3 1.2l-23.9-19.4-30 36.5c-6 7.3-15 4.8-18 2.4l-36.8-31.5-15.6 19.2c-13.9 17.1-39.2 19.7-55.3 6.6l-97.3-88H96V175.8h41.9l61.7-61.6c2-.8 3.7-1.5 5.7-2.3H262l-38.7 35.5c-29.4 26.9-31.1 72.3-4.4 101.3 14.8 16.2 61.2 41.2 101.5 4.4l8.2-7.5 108.2 87.8c3.4 2.8 3.9 7.9 1.2 11.3zm106-40.8h-69.2c-2.3-2.8-4.9-5.4-7.7-7.7l-102.7-83.4 12.5-11.4c6.5-6 7-16.1 1-22.6L367 167.1c-6-6.5-16.1-6.9-22.6-1l-55.2 50.6c-9.5 8.7-25.7 9.4-34.6 0-9.3-9.9-8.5-25.1 1.2-33.9l65.6-60.1c7.4-6.8 17-10.5 27-10.5l83.7-.2c2.1 0 4.1.8 5.5 2.3l61.7 61.6H544v128zm48 47.7c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16z",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 537,
    columnNumber: 7
  }
})));
const CameraSvg = ({
  color = '#121212'
}) => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    fill: "none",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 544,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_4872_39001)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 551,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_4872_39001",
    style: {
      maskType: "alpha"
    },
    width: "21",
    height: "20",
    x: "0",
    y: "0",
    maskUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 552,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#D9D9D9",
    d: "M0.667 0H20.667V20H0.667z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 561,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_39001)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 563,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: color,
    d: "M10.667 14.5c1 0 1.833-.34 2.5-1.02.666-.681 1-1.508 1-2.48 0-.958-.334-1.781-1-2.469-.667-.687-1.5-1.031-2.5-1.031s-1.834.344-2.5 1.031c-.667.688-1 1.514-1 2.48 0 .965.333 1.788 1 2.468.666.68 1.5 1.021 2.5 1.021zm0-1.5c-.584 0-1.063-.195-1.438-.586-.375-.39-.562-.869-.562-1.435 0-.554.187-1.022.562-1.405.375-.383.854-.574 1.438-.574.583 0 1.062.191 1.437.574.375.383.563.851.563 1.405 0 .566-.188 1.044-.563 1.435-.375.39-.854.586-1.437.586zm-6.5 4a1.44 1.44 0 01-1.052-.448 1.44 1.44 0 01-.448-1.052v-9c0-.403.149-.753.448-1.052A1.44 1.44 0 014.167 5h2.5l1.5-2h5l1.5 2h2.5c.412 0 .765.15 1.059.448.294.299.44.65.44 1.052v9c0 .403-.146.753-.44 1.052a1.433 1.433 0 01-1.06.448h-13zm0-1.5h13v-9h-3.25l-1.502-2H8.917l-1.5 2h-3.25v9z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 564,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 570,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_4872_39001",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 571,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0H20V20H0z",
    transform: "translate(.667)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 572,
      columnNumber: 11
    }
  }))));
};
const GiftIcon = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    fill: "#000000",
    stroke: "#000000",
    strokeWidth: "0",
    viewBox: "0 0 512 512",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 585,
      columnNumber: 5
    }
  }, __jsx("path", {
    fill: "none",
    strokeLinecap: "round",
    strokeMiterlimit: "10",
    strokeWidth: "32",
    d: "M256 104v56h56a56 56 0 1 0-56-56zm0 0v56h-56a56 56 0 1 1 56-56z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 594,
      columnNumber: 5
    }
  }), __jsx("rect", {
    width: "384",
    height: "112",
    x: "64",
    y: "160",
    fill: "none",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "32",
    rx: "32",
    ry: "32",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 601,
      columnNumber: 5
    }
  }), __jsx("path", {
    fill: "none",
    strokeLinecap: "round",
    strokeLinejoin: "round",
    strokeWidth: "32",
    d: "M416 272v144a48 48 0 0 1-48 48H144a48 48 0 0 1-48-48V272m160-112v304",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 613,
      columnNumber: 5
    }
  }));
};
const VideoSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    fill: "none",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 626,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_4872_3440)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 633,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_4872_3440",
    style: {
      maskType: "alpha"
    },
    width: "21",
    height: "20",
    x: "0",
    y: "0",
    maskUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 634,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#D9D9D9",
    d: "M0.5 0H20.5V20H0.5z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 643,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_3440)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 645,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#121212",
    d: "M6.5 13h6v-.438c0-.542-.275-.98-.825-1.313-.55-.333-1.275-.499-2.175-.499-.889 0-1.611.166-2.167.5-.555.332-.833.77-.833 1.313V13zm3.01-3c.41 0 .76-.15 1.052-.448.292-.299.438-.653.438-1.062 0-.41-.146-.76-.438-1.052A1.434 1.434 0 009.51 7c-.41 0-.763.146-1.062.438A1.418 1.418 0 008 8.49c0 .41.15.763.448 1.062.299.299.653.448 1.062.448zM5 16a1.44 1.44 0 01-1.052-.448A1.44 1.44 0 013.5 14.5v-9c0-.412.15-.766.448-1.06C4.247 4.148 4.598 4 5 4h9c.412 0 .766.147 1.06.44.293.294.44.647.44 1.06V9l3-3v8l-3-3v3.5c0 .403-.147.754-.44 1.052A1.433 1.433 0 0114 16H5zm0-1.5h9v-9H5v9z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 646,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 652,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_4872_3440",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 653,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0H20V20H0z",
    transform: "translate(.5)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 654,
      columnNumber: 11
    }
  }))));
};
const TrofeoSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    fill: "none",
    viewBox: "0 0 21 20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 663,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_4872_29491)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 670,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_4872_29491",
    style: {
      maskType: "alpha"
    },
    width: "21",
    height: "20",
    x: "0",
    y: "0",
    maskUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 671,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#D9D9D9",
    d: "M0.833 0H20.833V20H0.833z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 680,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_29491)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 682,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#121212",
    d: "M6.833 17v-1.5h3.25v-2.583a4.032 4.032 0 01-1.614-.698 3.55 3.55 0 01-1.115-1.26c-1.014-.126-1.854-.56-2.52-1.303a3.79 3.79 0 01-1-2.614V6.5c0-.412.146-.766.44-1.06.294-.293.647-.44 1.06-.44h1.5V3h8v2h1.504c.413 0 .766.147 1.058.44.291.294.437.647.437 1.06V7c0 1-.333 1.878-1 2.635a3.883 3.883 0 01-2.52 1.323 3.55 3.55 0 01-1.115 1.26 4.032 4.032 0 01-1.615.699V15.5h3.25V17h-8zm0-7.75V6.5h-1.5V7c0 .514.132.969.396 1.365.264.395.632.69 1.104.885zm4 2.25c.695 0 1.285-.243 1.771-.73a2.41 2.41 0 00.73-1.77V4.5h-5V9c0 .694.242 1.285.728 1.77.487.487 1.077.73 1.771.73zm4-2.25c.473-.194.84-.49 1.104-.885.264-.396.396-.851.396-1.365v-.5h-1.5v2.75z",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 683,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 689,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_4872_29491",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 690,
      columnNumber: 9
    }
  }, __jsx("path", {
    fill: "#fff",
    d: "M0 0H20V20H0z",
    transform: "translate(.833)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 691,
      columnNumber: 11
    }
  }))));
};
const FilterSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 704,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_4872_39044",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 705,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 706,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_4872_39044)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 708,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M9.5 17V12H11V13.75H17V15.25H11V17H9.5ZM3 15.25V13.75H8V15.25H3ZM6 12.5V10.75H3V9.25H6V7.5H7.5V12.5H6ZM9 10.75V9.25H17V10.75H9ZM12 8V3H13.5V4.75H17V6.25H13.5V8H12ZM3 6.25V4.75H11V6.25H3Z",
    fill: "#ADADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 709,
      columnNumber: 9
    }
  })));
};
const PlaySvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "50",
    height: "50",
    viewBox: "0 0 50 50",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 717,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5034_12878",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "50",
    height: "50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 718,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "50",
    height: "50",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 719,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5034_12878)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 721,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M20.3125 33.4135L33.4134 25.0001L20.3125 16.5867V33.4135ZM25.0035 44.7917C22.2661 44.7917 19.6931 44.2723 17.2845 43.2334C14.8759 42.1945 12.7807 40.7846 10.999 39.0037C9.21726 37.2228 7.80673 35.1285 6.76738 32.7209C5.72804 30.3134 5.20837 27.741 5.20837 25.0036C5.20837 22.2662 5.72782 19.6933 6.76671 17.2846C7.8056 14.876 9.21549 12.7808 10.9964 10.9991C12.7773 9.21739 14.8716 7.80685 17.2792 6.76751C19.6867 5.72817 22.2591 5.2085 24.9965 5.2085C27.7339 5.2085 30.3069 5.72794 32.7155 6.76683C35.1241 7.80572 37.2193 9.21561 39.001 10.9965C40.7827 12.7775 42.1933 14.8717 43.2326 17.2793C44.2719 19.6868 44.7916 22.2593 44.7916 24.9966C44.7916 27.734 44.2722 30.307 43.2333 32.7156C42.1944 35.1242 40.7845 37.2194 39.0036 39.0011C37.2226 40.7828 35.1284 42.1934 32.7208 43.2327C30.3133 44.2721 27.7408 44.7917 25.0035 44.7917ZM25 41.6668C29.6528 41.6668 33.5937 40.0522 36.8229 36.823C40.0521 33.5939 41.6667 29.6529 41.6667 25.0001C41.6667 20.3473 40.0521 16.4064 36.8229 13.1772C33.5937 9.94803 29.6528 8.33345 25 8.33345C20.3472 8.33345 16.4062 9.94803 13.1771 13.1772C9.94791 16.4064 8.33332 20.3473 8.33332 25.0001C8.33332 29.6529 9.94791 33.5939 13.1771 36.823C16.4062 40.0522 20.3472 41.6668 25 41.6668Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 722,
      columnNumber: 9
    }
  })));
};
const SearchInputSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 730,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5035_38668",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "20",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 731,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 732,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5035_38668)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 734,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M15.9375 17L10.9583 12.0208C10.5417 12.3264 10.0848 12.566 9.58767 12.7396C9.09056 12.9132 8.56158 13 8.00073 13C6.61135 13 5.43056 12.5139 4.45833 11.5417C3.48611 10.5694 3 9.38889 3 8C3 6.61111 3.48611 5.43056 4.45833 4.45833C5.43056 3.48611 6.61111 3 8 3C9.38889 3 10.5694 3.48611 11.5417 4.45833C12.5139 5.43056 13 6.61135 13 8.00073C13 8.56158 12.9132 9.09056 12.7396 9.58767C12.566 10.0848 12.3264 10.5417 12.0208 10.9583L17 15.9375L15.9375 17ZM8 11.5C8.97222 11.5 9.79861 11.1597 10.4792 10.4792C11.1597 9.79861 11.5 8.97222 11.5 8C11.5 7.02778 11.1597 6.20139 10.4792 5.52083C9.79861 4.84028 8.97222 4.5 8 4.5C7.02778 4.5 6.20139 4.84028 5.52083 5.52083C4.84028 6.20139 4.5 7.02778 4.5 8C4.5 8.97222 4.84028 9.79861 5.52083 10.4792C6.20139 11.1597 7.02778 11.5 8 11.5Z",
    fill: "#212121",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 735,
      columnNumber: 9
    }
  })));
};
const HashtagSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 743,
      columnNumber: 5
    }
  }, __jsx("g", {
    clipPath: "url(#clip0_5081_24079)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 744,
      columnNumber: 7
    }
  }, __jsx("mask", {
    id: "mask0_5081_24079",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 745,
      columnNumber: 9
    }
  }, __jsx("rect", {
    x: "0.166641",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 746,
      columnNumber: 11
    }
  })), __jsx("g", {
    mask: "url(#mask0_5081_24079)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 748,
      columnNumber: 9
    }
  }, __jsx("path", {
    d: "M5.66664 16L6.29164 13.5H3.16664L3.54164 12H6.66664L7.54164 8.5H4.16664L4.54164 7H7.91664L8.66664 4H10.1666L9.41664 7H12.4166L13.1666 4H14.6666L13.9166 7H17.1666L16.7916 8.5H13.5416L12.6666 12H16.1666L15.7916 13.5H12.2916L11.6666 16H10.1666L10.7916 13.5H7.79164L7.16664 16H5.66664ZM8.16664 12H11.1666L12.0416 8.5H9.04164L8.16664 12Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 749,
      columnNumber: 11
    }
  }))), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 752,
      columnNumber: 7
    }
  }, __jsx("clipPath", {
    id: "clip0_5081_24079",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 753,
      columnNumber: 9
    }
  }, __jsx("rect", {
    width: "20",
    height: "20",
    fill: "white",
    transform: "translate(0.166641)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 754,
      columnNumber: 11
    }
  }))));
};
const ProfileSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "21",
    height: "20",
    viewBox: "0 0 21 20",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 763,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7559",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "21",
    height: "20",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 764,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "20",
    height: "20",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 765,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7559)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 767,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M10.5 10C9.66667 10 8.95833 9.70833 8.375 9.125C7.79167 8.54167 7.5 7.83333 7.5 7C7.5 6.16667 7.79167 5.45833 8.375 4.875C8.95833 4.29167 9.66667 4 10.5 4C11.3333 4 12.0417 4.29167 12.625 4.875C13.2083 5.45833 13.5 6.16667 13.5 7C13.5 7.83333 13.2083 8.54167 12.625 9.125C12.0417 9.70833 11.3333 10 10.5 10ZM4.5 16V14C4.5 13.6806 4.58681 13.3785 4.76042 13.0938C4.93403 12.809 5.17361 12.5694 5.47917 12.375C6.24306 11.9306 7.05208 11.5903 7.90625 11.3542C8.76042 11.1181 9.625 11 10.5 11C11.375 11 12.2396 11.1181 13.0938 11.3542C13.9479 11.5903 14.7569 11.9306 15.5208 12.375C15.8264 12.5556 16.066 12.7917 16.2396 13.0833C16.4132 13.375 16.5 13.6806 16.5 14V16H4.5Z",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 768,
      columnNumber: 9
    }
  })));
};
const SaveBookSvg = ({
  color = '#121212'
}) => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 776,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7588",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 777,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 778,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7588)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 780,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M5.5 20.2499V5.3077C5.5 4.80257 5.675 4.375 6.025 4.025C6.375 3.675 6.80257 3.5 7.3077 3.5H16.6922C17.1974 3.5 17.625 3.675 17.975 4.025C18.325 4.375 18.5 4.80257 18.5 5.3077V20.2499L12 17.4615L5.5 20.2499ZM6.99997 17.95L12 15.8L17 17.95V5.3077C17 5.23077 16.9679 5.16024 16.9038 5.09613C16.8397 5.03203 16.7692 4.99998 16.6922 4.99998H7.3077C7.23077 4.99998 7.16024 5.03203 7.09613 5.09613C7.03202 5.16024 6.99997 5.23077 6.99997 5.3077V17.95Z",
    fill: color,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 781,
      columnNumber: 9
    }
  })));
};
const CommentsSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 789,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7592",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 790,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 791,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7592)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 793,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M7.99998 10.8846C8.24484 10.8846 8.45349 10.7984 8.62593 10.6259C8.79836 10.4535 8.88458 10.2448 8.88458 9.99998C8.88458 9.75511 8.79836 9.54646 8.62593 9.37402C8.45349 9.20159 8.24484 9.11538 7.99998 9.11538C7.75511 9.11538 7.54646 9.20159 7.37403 9.37402C7.20159 9.54646 7.11538 9.75511 7.11538 9.99998C7.11538 10.2448 7.20159 10.4535 7.37403 10.6259C7.54646 10.7984 7.75511 10.8846 7.99998 10.8846ZM12 10.8846C12.2448 10.8846 12.4535 10.7984 12.6259 10.6259C12.7984 10.4535 12.8846 10.2448 12.8846 9.99998C12.8846 9.75511 12.7984 9.54646 12.6259 9.37402C12.4535 9.20159 12.2448 9.11538 12 9.11538C11.7551 9.11538 11.5465 9.20159 11.374 9.37402C11.2016 9.54646 11.1154 9.75511 11.1154 9.99998C11.1154 10.2448 11.2016 10.4535 11.374 10.6259C11.5465 10.7984 11.7551 10.8846 12 10.8846ZM16 10.8846C16.2448 10.8846 16.4535 10.7984 16.6259 10.6259C16.7984 10.4535 16.8846 10.2448 16.8846 9.99998C16.8846 9.75511 16.7984 9.54646 16.6259 9.37402C16.4535 9.20159 16.2448 9.11538 16 9.11538C15.7551 9.11538 15.5465 9.20159 15.374 9.37402C15.2016 9.54646 15.1154 9.75511 15.1154 9.99998C15.1154 10.2448 15.2016 10.4535 15.374 10.6259C15.5465 10.7984 15.7551 10.8846 16 10.8846ZM2.5 21.0384V4.3077C2.5 3.80257 2.675 3.375 3.025 3.025C3.375 2.675 3.80257 2.5 4.3077 2.5H19.6923C20.1974 2.5 20.625 2.675 20.975 3.025C21.325 3.375 21.5 3.80257 21.5 4.3077V15.6923C21.5 16.1974 21.325 16.625 20.975 16.975C20.625 17.325 20.1974 17.5 19.6923 17.5H6.03845L2.5 21.0384ZM5.4 16H19.6923C19.7692 16 19.8397 15.9679 19.9038 15.9038C19.9679 15.8397 20 15.7692 20 15.6923V4.3077C20 4.23077 19.9679 4.16024 19.9038 4.09613C19.8397 4.03203 19.7692 3.99998 19.6923 3.99998H4.3077C4.23077 3.99998 4.16024 4.03203 4.09613 4.09613C4.03202 4.16024 3.99998 4.23077 3.99998 4.3077V17.3846L5.4 16Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 794,
      columnNumber: 9
    }
  })));
};
const ImageSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "24",
    height: "25",
    viewBox: "0 0 24 25",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 802,
      columnNumber: 5
    }
  }, __jsx("mask", {
    id: "mask0_5121_7597",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "24",
    height: "25",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 803,
      columnNumber: 7
    }
  }, __jsx("rect", {
    width: "24",
    height: "25",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 804,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5121_7597)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 806,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M5.3077 21.3538C4.80257 21.3538 4.375 21.1715 4.025 20.8069C3.675 20.4423 3.5 19.997 3.5 19.4708V5.52853C3.5 5.00235 3.675 4.55697 4.025 4.19238C4.375 3.8278 4.80257 3.64551 5.3077 3.64551H18.6923C19.1974 3.64551 19.625 3.8278 19.975 4.19238C20.325 4.55697 20.5 5.00235 20.5 5.52853V19.4708C20.5 19.997 20.325 20.4423 19.975 20.8069C19.625 21.1715 19.1974 21.3538 18.6923 21.3538H5.3077ZM5.3077 19.7913H18.6923C18.7692 19.7913 18.8397 19.7579 18.9038 19.6912C18.9679 19.6244 19 19.5509 19 19.4708V5.52853C19 5.44839 18.9679 5.37493 18.9038 5.30814C18.8397 5.24137 18.7692 5.20798 18.6923 5.20798H5.3077C5.23077 5.20798 5.16024 5.24137 5.09612 5.30814C5.03202 5.37493 4.99997 5.44839 4.99997 5.52853V19.4708C4.99997 19.5509 5.03202 19.6244 5.09612 19.6912C5.16024 19.7579 5.23077 19.7913 5.3077 19.7913ZM6.75003 17.4475H17.3269L14.0384 12.8803L11.2308 16.6863L9.23075 14.0221L6.75003 17.4475Z",
    fill: "#121212",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 807,
      columnNumber: 9
    }
  })));
};
const CautionSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "25",
    height: "24",
    viewBox: "0 0 25 24",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 815,
      columnNumber: 5
    }
  }, __jsx("rect", {
    width: "24",
    height: "24",
    transform: "translate(0.5)",
    fill: "white",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 816,
      columnNumber: 7
    }
  }), __jsx("mask", {
    id: "mask0_5641_90864",
    maskUnits: "userSpaceOnUse",
    x: "0",
    y: "0",
    width: "25",
    height: "24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 817,
      columnNumber: 7
    }
  }, __jsx("rect", {
    x: "0.5",
    width: "24",
    height: "24",
    fill: "#D9D9D9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 818,
      columnNumber: 9
    }
  })), __jsx("g", {
    mask: "url(#mask0_5641_90864)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 820,
      columnNumber: 7
    }
  }, __jsx("path", {
    d: "M4.96758 20.5009C3.81199 20.5009 3.09041 19.2492 3.66953 18.2492L11.202 5.24242C11.7798 4.24471 13.2203 4.24472 13.7981 5.24242L21.3306 18.2492C21.9097 19.2492 21.1881 20.5009 20.0326 20.5009H4.96758ZM12.5001 17.8086C12.7289 17.8086 12.9207 17.7312 13.0755 17.5764C13.2303 17.4216 13.3077 17.2298 13.3077 17.0009C13.3077 16.7721 13.2303 16.5803 13.0755 16.4255C12.9207 16.2707 12.7289 16.1933 12.5001 16.1933C12.2712 16.1933 12.0794 16.2707 11.9246 16.4255C11.7698 16.5803 11.6924 16.7721 11.6924 17.0009C11.6924 17.2298 11.7698 17.4216 11.9246 17.5764C12.0794 17.7312 12.2712 17.8086 12.5001 17.8086ZM11.7501 15.1933H13.25V10.1933H11.7501V15.1933Z",
    fill: "#DC1C1C",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 821,
      columnNumber: 9
    }
  })));
};
const RubySmallSvg = () => {
  return __jsx("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: "17",
    height: "16",
    viewBox: "0 0 17 16",
    fill: "none",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 829,
      columnNumber: 5
    }
  }, __jsx("path", {
    d: "M6.47767 4.04495L7.02657 3.04473C6.66064 2.89226 6.2947 2.80078 5.89828 2.80078C5.22741 2.80078 4.58703 3.04474 4.09912 3.47165L4.37357 4.32549L6.47767 4.04495Z",
    fill: "url(#paint0_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 830,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.9427 4.295L13.2171 3.47165C12.6987 3.04473 12.0888 2.80078 11.4179 2.80078C11.0215 2.80078 10.6099 2.89226 10.2744 3.04473L10.8386 4.05104L12.9427 4.295Z",
    fill: "url(#paint1_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 831,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.30113 3.1669C7.20964 3.10591 7.14866 3.08456 7.02668 3.04492L6.47778 4.04513L8.64287 4.7221C8.36842 4.05123 7.88052 3.53283 7.30113 3.1669Z",
    fill: "url(#paint2_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 832,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M9.98457 3.1669C9.40518 3.50234 8.91727 4.05123 8.64282 4.7221L10.8384 4.05123L10.2743 3.04492C10.1828 3.10591 10.0882 3.10286 9.98457 3.1669Z",
    fill: "url(#paint3_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 833,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M5.19706 10.7282C5.38002 10.9112 5.62397 11.0941 5.80694 11.2771L4.92261 8.74609L5.19706 10.7282Z",
    fill: "url(#paint4_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 834,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M11.5093 11.2771C11.7227 11.0941 11.9057 10.8807 12.0887 10.7282L12.3631 8.74609L11.5093 11.2771Z",
    fill: "url(#paint5_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 835,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64287 10.3326L10.1066 9.1433L10.808 7.37463L9.80165 5.94141H7.48409L6.47778 7.37463L7.17915 9.1433L8.64287 10.3326Z",
    fill: "url(#paint6_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 836,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.47781 7.37489L7.48412 5.94166L6.47781 4.04492L4.37371 4.32547L3.64185 6.03315L6.47781 7.37489Z",
    fill: "url(#paint7_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 837,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.2453 5.92509L2.84888 5.81836C2.84888 5.94034 2.84888 6.09281 2.84888 6.24528C2.84888 6.73319 2.97085 7.25159 3.15382 7.76999L3.39777 6.88566L3.2453 5.92509Z",
    fill: "url(#paint8_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 838,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.24536 5.92578L3.39783 6.88635L3.64179 6.03251L3.24536 5.92578Z",
    fill: "url(#paint9_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 839,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.8081 7.37465L13.6745 6.03291L12.9427 4.29474L10.8386 4.05078L9.80176 5.94142L10.8081 7.37465Z",
    fill: "url(#paint10_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 840,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.6743 6.03289L13.8878 6.88673L14.0707 5.94141L13.6743 6.03289Z",
    fill: "url(#paint11_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 841,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.8879 6.88566L14.1624 7.76999C14.3454 7.25159 14.4368 6.73319 14.4368 6.24528C14.4368 6.09281 14.4673 5.97083 14.4368 5.81836L14.0709 5.94034L13.8879 6.88566Z",
    fill: "url(#paint12_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 842,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.64166 6.0332L3.39771 6.88704L4.92242 8.74719L6.47762 7.37495L3.64166 6.0332Z",
    fill: "url(#paint13_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 843,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.99243 9.32548C4.20589 9.63043 4.4346 9.93537 4.67855 10.2098C4.83102 10.3928 5.01399 10.5453 5.19695 10.7282L4.92251 8.74609L3.99243 9.32548Z",
    fill: "url(#paint14_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 844,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M3.39776 6.88672L3.15381 7.77105C3.36727 8.28945 3.62647 8.80785 3.9924 9.32626L4.92247 8.74687L3.39776 6.88672Z",
    fill: "url(#paint15_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 845,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.47781 7.375L4.92261 8.74724L6.72177 9.87553L7.17918 9.14366L6.47781 7.375Z",
    fill: "url(#paint16_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 846,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.72177 9.87438L4.92261 8.74609L5.80694 11.2771L6.72177 9.87438Z",
    fill: "url(#paint17_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 847,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.1067 9.14366L10.5946 9.87553L12.3633 8.74724L10.8081 7.375L10.1067 9.14366Z",
    fill: "url(#paint18_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 848,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.5945 9.87438L11.5093 11.2771L12.3631 8.74609L10.5945 9.87438Z",
    fill: "url(#paint19_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 849,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M12.0889 10.7282C12.2718 10.5453 12.4548 10.3928 12.6073 10.2098C12.9427 9.81339 13.2781 9.41697 13.5221 9.02054L12.3633 8.74609L12.0889 10.7282Z",
    fill: "url(#paint20_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 850,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.888 6.88672L12.3633 8.74687L13.5221 9.02131C13.7965 8.59439 14.01 8.19797 14.1624 7.77105L13.888 6.88672Z",
    fill: "url(#paint21_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 851,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.8079 7.37495L12.3631 8.74719L13.8878 6.88704L13.6743 6.0332L10.8079 7.37495Z",
    fill: "url(#paint22_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 852,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M9.80169 5.94047L8.64291 4.7207L7.48413 5.94047H9.80169Z",
    fill: "url(#paint23_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 853,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64287 4.72189L6.47778 4.04492L7.48409 5.94166L8.64287 4.72189Z",
    fill: "url(#paint24_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 854,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.8384 4.05078L8.64282 4.72165L9.8016 5.94142L10.8384 4.05078Z",
    fill: "url(#paint25_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 855,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M10.5945 9.875L8.64282 10.3324L9.8321 12.6195C10.259 12.284 10.7469 11.9181 11.2043 11.5217C11.2958 11.4302 11.4178 11.3692 11.5093 11.2777L10.5945 9.875Z",
    fill: "url(#paint26_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 856,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64282 10.3319L10.5945 9.87444L10.1065 9.14258L8.64282 10.3319Z",
    fill: "url(#paint27_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 857,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M6.72171 9.875L5.80688 11.2777C5.89837 11.3692 5.98985 11.4302 6.08133 11.5217C6.56924 11.9486 7.05715 12.345 7.48407 12.6805L8.64285 10.3324L6.72171 9.875Z",
    fill: "url(#paint28_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 858,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.17934 9.14258L6.72192 9.87444L8.64306 10.3319L7.17934 9.14258Z",
    fill: "url(#paint29_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 859,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64282 13.473C8.64282 13.473 9.8016 12.6496 9.8321 12.6191L8.64282 12.9546V13.473Z",
    fill: "url(#paint30_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 860,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64282 10.332V12.9545L9.8321 12.6191L8.64282 10.332Z",
    fill: "url(#paint31_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 861,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64291 12.9545V10.332L7.48413 12.6801L8.64291 12.9545Z",
    fill: "url(#paint32_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 862,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M8.64293 12.9541L7.48414 12.6797C7.45365 12.6797 7.51464 12.6797 7.48414 12.6797C8.12452 13.1676 8.64293 13.4725 8.64293 13.4725V12.9541Z",
    fill: "url(#paint33_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 863,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M14.4367 5.81861C14.4367 5.72713 14.4062 5.63565 14.4062 5.51367L14.0708 5.94059L14.4367 5.81861Z",
    fill: "url(#paint34_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 864,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M13.2171 3.4707L12.9426 4.29405L13.6745 6.03222L14.0709 5.94074L14.4064 5.51382C14.2234 4.69047 13.7965 3.95861 13.2171 3.4707Z",
    fill: "url(#paint35_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 865,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M2.84888 5.81937L3.2453 5.9261L2.90987 5.54492C2.90987 5.6364 2.87937 5.72789 2.84888 5.81937Z",
    fill: "url(#paint36_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 866,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M4.09919 3.4707C3.4893 3.95861 3.06238 4.69047 2.90991 5.54431L3.24535 5.92549L3.64177 6.03222L4.37363 4.32454L4.09919 3.4707Z",
    fill: "url(#paint37_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 867,
      columnNumber: 7
    }
  }), __jsx("path", {
    d: "M7.48413 5.94141H9.80169L10.808 7.37463L9.80169 5.94141H7.48413Z",
    fill: "url(#paint38_linear_5641_63339)",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 868,
      columnNumber: 7
    }
  }), __jsx("defs", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 869,
      columnNumber: 7
    }
  }, __jsx("linearGradient", {
    id: "paint0_linear_5641_63339",
    x1: "4.03478",
    y1: "-3.39979",
    x2: "6.40854",
    y2: "6.94309",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 870,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 871,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 872,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 873,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 874,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 875,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 876,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint1_linear_5641_63339",
    x1: "11.9417",
    y1: "-0.113612",
    x2: "11.4658",
    y2: "8.07415",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 878,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 879,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 880,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 881,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 882,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 883,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 884,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint2_linear_5641_63339",
    x1: "9.87585",
    y1: "-4.34855",
    x2: "7.02345",
    y2: "6.40731",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 886,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 887,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 888,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3685",
    "stop-color": "#F69D9D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 889,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4447",
    "stop-color": "#F27072",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 890,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5179",
    "stop-color": "#F04C50",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 891,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5865",
    "stop-color": "#EE3338",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 892,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6485",
    "stop-color": "#EC2329",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 893,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6983",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 894,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 895,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint3_linear_5641_63339",
    x1: "9.01034",
    y1: "-2.87767",
    x2: "10.0312",
    y2: "7.27694",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 897,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 898,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 899,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 900,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 901,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 902,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 903,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint4_linear_5641_63339",
    x1: "-1.42662",
    y1: "14.1822",
    x2: "9.10373",
    y2: "7.71548",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 905,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 906,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F6BE95",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 907,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4173",
    "stop-color": "#F4A684",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 908,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5734",
    "stop-color": "#F16858",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 909,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 910,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 911,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint5_linear_5641_63339",
    x1: "13.9218",
    y1: "13.367",
    x2: "10.5562",
    y2: "7.6795",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 913,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 914,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 915,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 916,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 917,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 918,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 919,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint6_linear_5641_63339",
    x1: "-4.3476",
    y1: "1.27024",
    x2: "12.496",
    y2: "9.79325",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 921,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 922,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 923,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 924,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 925,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 926,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#8E0329",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 927,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint7_linear_5641_63339",
    x1: "-3.2292",
    y1: "-2.50716",
    x2: "11.1752",
    y2: "10.605",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 929,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 930,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 931,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4015",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 932,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5231",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 933,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6271",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 934,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 935,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint8_linear_5641_63339",
    x1: "1.72114",
    y1: "6.66674",
    x2: "5.54905",
    y2: "7.04779",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 937,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.2064",
    "stop-color": "#F9D19B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 938,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.285",
    "stop-color": "#F7B98B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 939,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4516",
    "stop-color": "#F37B62",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 940,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6764",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 941,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 942,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint9_linear_5641_63339",
    x1: "-1.04069",
    y1: "7.36236",
    x2: "5.26487",
    y2: "5.98006",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 944,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 945,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 946,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4576",
    "stop-color": "#F4A669",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 947,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6976",
    "stop-color": "#ED682F",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 948,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC5C24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 949,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 950,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint10_linear_5641_63339",
    x1: "13.6627",
    y1: "2.77384",
    x2: "7.95988",
    y2: "11.9719",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 952,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.1104",
    "stop-color": "#F6A9A7",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 953,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 954,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 955,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 956,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 957,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 958,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint11_linear_5641_63339",
    x1: "17.6691",
    y1: "7.67476",
    x2: "12.137",
    y2: "5.78461",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 960,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 961,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 962,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 963,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 964,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 965,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 966,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint12_linear_5641_63339",
    x1: "16.579",
    y1: "7.13495",
    x2: "10.7351",
    y2: "6.26123",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 968,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 969,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.0335",
    "stop-color": "#DA7079",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 970,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.1635",
    "stop-color": "#EA9195",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 971,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.2715",
    "stop-color": "#F3A6A7",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 972,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 973,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 974,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 975,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 976,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 977,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint13_linear_5641_63339",
    x1: "-4.17209",
    y1: "7.3902",
    x2: "9.23375",
    y2: "7.3902",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 979,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 980,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 981,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4173",
    "stop-color": "#F5A672",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 982,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5734",
    "stop-color": "#F1684E",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 983,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 984,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 985,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint14_linear_5641_63339",
    x1: "-5.58348",
    y1: "11.3387",
    x2: "7.37939",
    y2: "9.38809",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 987,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 988,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 989,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4182",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 990,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.575",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 991,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.709",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 992,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 993,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint15_linear_5641_63339",
    x1: "-0.270143",
    y1: "9.74125",
    x2: "6.40388",
    y2: "6.9897",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 995,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.2064",
    "stop-color": "#F9A11B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 996,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3102",
    "stop-color": "#F7891D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 997,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5284",
    "stop-color": "#F04B21",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 998,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6764",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 999,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1000,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint16_linear_5641_63339",
    x1: "-3.33681",
    y1: "11.5494",
    x2: "9.92311",
    y2: "7.64729",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1002,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1003,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1004,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3818",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1005,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4621",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1006,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5307",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1007,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1008,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint17_linear_5641_63339",
    x1: "-3.65767",
    y1: "15.8958",
    x2: "8.40996",
    y2: "8.02561",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1010,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1011,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1012,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1013,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1014,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1015,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1016,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint18_linear_5641_63339",
    x1: "-1.32361",
    y1: "15.1316",
    x2: "12.6111",
    y2: "7.59197",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1018,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1019,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1020,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1021,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1022,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1023,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1024,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint19_linear_5641_63339",
    x1: "18.6869",
    y1: "16.7078",
    x2: "8.98293",
    y2: "7.08211",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1026,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1027,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1028,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1029,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1030,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1031,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1032,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint20_linear_5641_63339",
    x1: "14.6276",
    y1: "16.9175",
    x2: "11.7518",
    y2: "5.80172",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1034,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1035,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1036,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5299",
    "stop-color": "#F16366",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1037,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6723",
    "stop-color": "#ED3136",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1038,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1039,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1040,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint21_linear_5641_63339",
    x1: "15.0383",
    y1: "13.1448",
    x2: "12.3348",
    y2: "5.61383",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1042,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1043,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1044,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3897",
    "stop-color": "#F59A95",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1045,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4869",
    "stop-color": "#F16857",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1046,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4961",
    "stop-color": "#F16351",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1047,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1048,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1049,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint22_linear_5641_63339",
    x1: "11.1558",
    y1: "0.936583",
    x2: "13.3271",
    y2: "12.22",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1051,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1052,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1053,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1054,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1055,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1056,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1057,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint23_linear_5641_63339",
    x1: "8.61827",
    y1: "-1.97266",
    x2: "8.64736",
    y2: "7.37086",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1059,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1060,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1061,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1062,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1063,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1064,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1065,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint24_linear_5641_63339",
    x1: "8.96276",
    y1: "-0.831805",
    x2: "6.77098",
    y2: "7.31756",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1067,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1068,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.2435",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1069,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3153",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1070,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.466",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1071,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5948",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1072,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1073,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint25_linear_5641_63339",
    x1: "7.22487",
    y1: "0.824615",
    x2: "11.6567",
    y2: "7.09886",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1075,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1076,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1077,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1078,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1079,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1080,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1081,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint26_linear_5641_63339",
    x1: "11.2266",
    y1: "18.0622",
    x2: "9.71463",
    y2: "8.521",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1083,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1084,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1085,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3978",
    "stop-color": "#F59697",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1086,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5614",
    "stop-color": "#F05659",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1087,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6807",
    "stop-color": "#ED2D33",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1088,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1089,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1090,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint27_linear_5641_63339",
    x1: "9.31568",
    y1: "2.73885",
    x2: "9.70387",
    y2: "12.1581",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1092,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1093,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1094,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1095,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1096,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1097,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1098,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint28_linear_5641_63339",
    x1: "-9.41217",
    y1: "12.9031",
    x2: "11.3916",
    y2: "10.8556",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1100,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1101,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1102,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4227",
    "stop-color": "#F5A672",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1103,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5903",
    "stop-color": "#F1684E",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1104,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7717",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1105,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1106,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint29_linear_5641_63339",
    x1: "1.162",
    y1: "14.1539",
    x2: "10.3591",
    y2: "8.13578",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1108,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1109,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1110,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1111,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1112,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1113,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1114,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint30_linear_5641_63339",
    x1: "11.0062",
    y1: "18.0777",
    x2: "8.21904",
    y2: "10.149",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1116,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1117,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1118,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1119,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1120,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1121,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1122,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint31_linear_5641_63339",
    x1: "17.7833",
    y1: "13.4881",
    x2: "6.95143",
    y2: "11.3018",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1124,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1125,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1126,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1127,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1128,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1129,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1130,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint32_linear_5641_63339",
    x1: "-0.109052",
    y1: "10.3929",
    x2: "10.6537",
    y2: "11.9305",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1132,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1133,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1134,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1135,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1136,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1137,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1138,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint33_linear_5641_63339",
    x1: "4.48229",
    y1: "17.1801",
    x2: "9.05307",
    y2: "11.9357",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1140,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1141,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1142,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4133",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1143,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5598",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1144,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6849",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1145,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1146,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint34_linear_5641_63339",
    x1: "17.544",
    y1: "5.86484",
    x2: "11.421",
    y2: "5.60976",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1148,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1149,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1150,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1151,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1152,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1153,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1154,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint35_linear_5641_63339",
    x1: "16.5424",
    y1: "1.69161",
    x2: "10.0796",
    y2: "8.41233",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1156,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1157,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1158,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.425",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1159,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.5961",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1160,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1161,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1162,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint36_linear_5641_63339",
    x1: "1.50722",
    y1: "5.52025",
    x2: "4.47635",
    y2: "5.92726",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1164,
      columnNumber: 9
    }
  }, __jsx("stop", {
    "stop-color": "#D56671",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1165,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7BE80",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1166,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4576",
    "stop-color": "#F4A669",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1167,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.6976",
    "stop-color": "#ED682F",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1168,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7423",
    "stop-color": "#EC5C24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1169,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1170,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint37_linear_5641_63339",
    x1: "2.40575",
    y1: "3.97901",
    x2: "5.79421",
    y2: "5.90286",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1172,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.2388",
    "stop-color": "#F9DAC9",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1173,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.3198",
    "stop-color": "#F7C2B4",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1174,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4914",
    "stop-color": "#F3847D",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1175,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7382",
    "stop-color": "#EC2126",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1176,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7446",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1177,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#7A0025",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1178,
      columnNumber: 11
    }
  })), __jsx("linearGradient", {
    id: "paint38_linear_5641_63339",
    x1: "9.59369",
    y1: "5.80101",
    x2: "9.33998",
    y2: "6.28678",
    gradientUnits: "userSpaceOnUse",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1180,
      columnNumber: 9
    }
  }, __jsx("stop", {
    offset: "0.3436",
    "stop-color": "#F7ADAD",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1181,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.4777",
    "stop-color": "#F59596",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1182,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "0.7593",
    "stop-color": "#F0575B",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1183,
      columnNumber: 11
    }
  }), __jsx("stop", {
    offset: "1",
    "stop-color": "#EC1E24",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1184,
      columnNumber: 11
    }
  }))));
};
const WarningSvg = () => {
  return __jsx("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1193,
      columnNumber: 5
    }
  }, __jsx("path", {
    id: "info",
    d: "M10.7894 5.00001H9.21055V11.0526H10.7894V5.00001ZM10 12.8542C9.75911 12.8542 9.55718 12.9357 9.39424 13.0987C9.23129 13.2616 9.14981 13.4635 9.14981 13.7044C9.14981 13.9453 9.23129 14.1472 9.39424 14.3102C9.55718 14.4731 9.75911 14.5546 10 14.5546C10.2409 14.5546 10.4428 14.4731 10.6058 14.3102C10.7687 14.1472 10.8502 13.9453 10.8502 13.7044C10.8502 13.4635 10.7687 13.2616 10.6058 13.0987C10.4428 12.9357 10.2409 12.8542 10 12.8542ZM9.99824 0C11.3813 0 12.6814 0.262457 13.8984 0.787371C15.1154 1.31228 16.174 2.02465 17.0742 2.92448C17.9745 3.82433 18.6871 4.88248 19.2123 6.09894C19.7374 7.31538 20 8.61515 20 9.99824C20 11.3813 19.7375 12.6814 19.2126 13.8984C18.6877 15.1154 17.9753 16.174 17.0755 17.0742C16.1757 17.9744 15.1175 18.6871 13.9011 19.2123C12.6846 19.7374 11.3849 20 10.0018 20C8.61867 20 7.31863 19.7375 6.10165 19.2126C4.88464 18.6877 3.82603 17.9753 2.9258 17.0755C2.02555 16.1757 1.31285 15.1175 0.787712 13.9011C0.262571 12.6846 0 11.3849 0 10.0018C0 8.61867 0.262457 7.31863 0.787371 6.10165C1.31228 4.88465 2.02465 3.82603 2.92448 2.9258C3.82433 2.02555 4.88248 1.31285 6.09894 0.787712C7.31538 0.262571 8.61515 0 9.99824 0Z",
    fill: "#DFA102",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1194,
      columnNumber: 7
    }
  }));
};
const CheckedSvg = () => {
  return __jsx("svg", {
    width: "20",
    height: "20",
    viewBox: "0 0 20 20",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1201,
      columnNumber: 5
    }
  }, __jsx("path", {
    id: "check_circle",
    d: "M8.50607 14.4777L15.583 7.40081L14.4737 6.29152L8.50607 12.2591L5.50607 9.25913L4.39677 10.3684L8.50607 14.4777ZM10.0018 20C8.61867 20 7.31863 19.7375 6.10165 19.2126C4.88464 18.6877 3.82603 17.9753 2.9258 17.0755C2.02555 16.1757 1.31285 15.1175 0.787713 13.9011C0.262571 12.6846 0 11.3849 0 10.0018C0 8.61867 0.262457 7.31863 0.787371 6.10165C1.31228 4.88464 2.02465 3.82603 2.92448 2.9258C3.82433 2.02555 4.88248 1.31286 6.09894 0.787714C7.31538 0.262572 8.61514 0 9.99824 0C11.3813 0 12.6814 0.262458 13.8984 0.787372C15.1154 1.31229 16.174 2.02465 17.0742 2.92448C17.9745 3.82433 18.6871 4.88248 19.2123 6.09894C19.7374 7.31538 20 8.61515 20 9.99824C20 11.3813 19.7375 12.6814 19.2126 13.8984C18.6877 15.1154 17.9753 16.174 17.0755 17.0742C16.1757 17.9745 15.1175 18.6871 13.9011 19.2123C12.6846 19.7374 11.3849 20 10.0018 20Z",
    fill: "#24A148",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1202,
      columnNumber: 7
    }
  }));
};
const NoVerifiedSvg = () => {
  return __jsx("svg", {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1209,
      columnNumber: 5
    }
  }, __jsx("g", {
    id: "Icon/ID state",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1210,
      columnNumber: 7
    }
  }, __jsx("path", {
    id: "cancel",
    d: "M8.32812 17L12 13.3281L15.6719 17L17 15.6719L13.3281 12L17 8.32812L15.6719 7L12 10.6719L8.32812 7L7 8.32812L10.6719 12L7 15.6719L8.32812 17ZM12 22C10.6285 22 9.33507 21.7396 8.11979 21.2188C6.90451 20.6979 5.84115 19.9818 4.92969 19.0703C4.01823 18.1589 3.30208 17.0955 2.78125 15.8802C2.26042 14.6649 2 13.3715 2 12C2 10.6111 2.26042 9.31337 2.78125 8.10677C3.30208 6.90017 4.01823 5.84115 4.92969 4.92969C5.84115 4.01823 6.90451 3.30208 8.11979 2.78125C9.33507 2.26042 10.6285 2 12 2C13.3889 2 14.6866 2.26042 15.8932 2.78125C17.0998 3.30208 18.1589 4.01823 19.0703 4.92969C19.9818 5.84115 20.6979 6.90017 21.2188 8.10677C21.7396 9.31337 22 10.6111 22 12C22 13.3715 21.7396 14.6649 21.2188 15.8802C20.6979 17.0955 19.9818 18.1589 19.0703 19.0703C18.1589 19.9818 17.0998 20.6979 15.8932 21.2188C14.6866 21.7396 13.3889 22 12 22Z",
    fill: "#DC1C1C",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 1211,
      columnNumber: 7
    }
  })));
};
const NoVerifiedIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: NoVerifiedSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1218,
    columnNumber: 3
  }
});
const CheckedIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: CheckedSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1222,
    columnNumber: 3
  }
});
const WarningIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: WarningSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1226,
    columnNumber: 3
  }
});
const RubyIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: RubySvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1230,
    columnNumber: 3
  }
});
const RubySmallIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: RubySmallSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1234,
    columnNumber: 3
  }
});
const CautionIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: CautionSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1238,
    columnNumber: 3
  }
});
const DiamondIcon = ({
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: DiamondSvg,
  className: className,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1242,
    columnNumber: 3
  }
});
const ModelIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: ModelSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1248,
    columnNumber: 3
  }
});
const HomeIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: HomeSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1254,
    columnNumber: 3
  }
});
const PlusIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: PlusSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1260,
    columnNumber: 3
  }
});
const MessageIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: MessageSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1266,
    columnNumber: 3
  }
});
const UserIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: UserSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1272,
    columnNumber: 3
  }
});
const TickIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: TickSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1278,
    columnNumber: 3
  }
});
const ShareIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: ShareSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1284,
    columnNumber: 3
  }
});
const LiveIcon = ({
  style,
  rotate,
  spin,
  className
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  component: LiveIconSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1290,
    columnNumber: 3
  }
});
const MuteIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: MuteSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1296,
    columnNumber: 3
  }
});
const TopIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: TopSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1302,
    columnNumber: 3
  }
});
const ShakeHandIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: HandShakeSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1308,
    columnNumber: 3
  }
});
const TrofeoIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: TrofeoSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1314,
    columnNumber: 3
  }
});
const VideoIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: VideoSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1320,
    columnNumber: 3
  }
});
const CameraIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: CameraSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1326,
    columnNumber: 3
  }
});
const SearchFilterIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: FilterSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1332,
    columnNumber: 3
  }
});
const SearchInputIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: SearchInputSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1338,
    columnNumber: 3
  }
});
const PlayIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: PlaySvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1344,
    columnNumber: 3
  }
});
const HashtagIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: HashtagSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1350,
    columnNumber: 3
  }
});
const ProfileIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: ProfileSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1356,
    columnNumber: 3
  }
});
const SaveBookIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: SaveBookSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1362,
    columnNumber: 3
  }
});
const CommentsIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: CommentsSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1368,
    columnNumber: 3
  }
});
const ImageIcon = ({
  style,
  rotate,
  spin,
  className,
  onClick
}) => __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_1___default.a, {
  onClick: onClick,
  component: ImageSvg,
  className: className ? `${className} anticon-custom` : 'anticon-custom',
  style,
  rotate,
  spin,
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 1374,
    columnNumber: 3
  }
});

/***/ }),

/***/ "./src/layouts/base-layout.tsx":
/*!*************************************!*\
  !*** ./src/layouts/base-layout.tsx ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return BaseLayout; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var _blank_layout__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./blank-layout */ "./src/layouts/blank-layout.tsx");
/* harmony import */ var _primary_layout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./primary-layout */ "./src/layouts/primary-layout.tsx");
/* harmony import */ var _maintenance_layout__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./maintenance-layout */ "./src/layouts/maintenance-layout.tsx");
/* harmony import */ var _geoBlocked_layout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./geoBlocked-layout */ "./src/layouts/geoBlocked-layout.tsx");
/* harmony import */ var _public_layout__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./public-layout */ "./src/layouts/public-layout.tsx");
/* harmony import */ var _stream_sidebar_layout__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stream-sidebar-layout */ "./src/layouts/stream-sidebar-layout.tsx");
/* harmony import */ var _mobile_layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mobile-layout */ "./src/layouts/mobile-layout.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\base-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable no-nested-ternary */









const LayoutMap = {
  geoBlock: _geoBlocked_layout__WEBPACK_IMPORTED_MODULE_5__["default"],
  maintenance: _maintenance_layout__WEBPACK_IMPORTED_MODULE_4__["default"],
  primary: _primary_layout__WEBPACK_IMPORTED_MODULE_3__["default"],
  public: _public_layout__WEBPACK_IMPORTED_MODULE_6__["default"],
  blank: _blank_layout__WEBPACK_IMPORTED_MODULE_2__["default"],
  streamLayout: _stream_sidebar_layout__WEBPACK_IMPORTED_MODULE_7__["default"],
  mobile: _mobile_layout__WEBPACK_IMPORTED_MODULE_8__["default"]
};
class BaseLayout extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      geoBlocked: false
    });
  }
  componentDidMount() {
    // process.env.NODE_ENV === 'production' && document.addEventListener('contextmenu', (event) => event.preventDefault());
    this.clientCheckBlockByIp();
  }
  componentWillUnmount() {
    // process.env.NODE_ENV === 'production' && document.removeEventListener('contextmenu', (event) => event.preventDefault());
  }
  async clientCheckBlockByIp() {
    var _checkBlock$data;
    const checkBlock = await _services_index__WEBPACK_IMPORTED_MODULE_1__["blockService"].checkCountryBlock();
    if (checkBlock !== null && checkBlock !== void 0 && (_checkBlock$data = checkBlock.data) !== null && _checkBlock$data !== void 0 && _checkBlock$data.blocked) {
      this.setState({
        geoBlocked: true
      });
    }
  }
  render() {
    const {
      children,
      layout,
      maintenance = false
    } = this.props;
    const {
      geoBlocked
    } = this.state;
    // eslint-disable-next-line no-nested-ternary
    const Container = maintenance ? LayoutMap.maintenance : geoBlocked ? LayoutMap.geoBlock : layout && LayoutMap[layout] ? LayoutMap[layout] : LayoutMap.primary;
    return __jsx(Container, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60,
        columnNumber: 12
      }
    }, children);
  }
}

/***/ }),

/***/ "./src/layouts/blank-layout.tsx":
/*!**************************************!*\
  !*** ./src/layouts/blank-layout.tsx ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_ui_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @redux/ui/actions */ "./src/redux/ui/actions.ts");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./primary-layout.less */ "./src/layouts/primary-layout.less");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_primary_layout_less__WEBPACK_IMPORTED_MODULE_6__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\blank-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







const Loader = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(() => __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")), {
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")],
    modules: ['@components/common/base/loader']
  }
});
class BlankLayout extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      routerChange: false
    });
  }
  componentDidMount() {
    const {
      loadUIValue: handleLoadUI
    } = this.props;
     false && false;
     false && false;
  }
  handleStateChange() {
    next_router__WEBPACK_IMPORTED_MODULE_4__["Router"].events.on('routeChangeStart', async () => this.setState({
      routerChange: true
    }));
    next_router__WEBPACK_IMPORTED_MODULE_4__["Router"].events.on('routeChangeComplete', async () => this.setState({
      routerChange: false
    }));
  }
  render() {
    const {
      children,
      ui
    } = this.props;
    const {
      routerChange
    } = this.state;
    return __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Layout"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 46,
        columnNumber: 7
      }
    }, __jsx("div", {
      className: (ui === null || ui === void 0 ? void 0 : ui.theme) === 'dark' ? 'container dark' : 'container',
      id: "primaryLayout",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 9
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Layout"], {
      className: "content",
      style: {
        position: 'relative'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48,
        columnNumber: 11
      }
    }, routerChange && __jsx(Loader, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 49,
        columnNumber: 30
      }
    }), children, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["BackTop"], {
      className: "backTop",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 51,
        columnNumber: 13
      }
    }))));
  }
}
const mapStateToProps = state => ({
  ui: state.ui
});
const mapDispatchToProps = {
  loadUIValue: _redux_ui_actions__WEBPACK_IMPORTED_MODULE_5__["loadUIValue"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(BlankLayout));

/***/ }),

/***/ "./src/layouts/geoBlocked-layout.tsx":
/*!*******************************************!*\
  !*** ./src/layouts/geoBlocked-layout.tsx ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\geoBlocked-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
/* eslint-disable react/no-unescaped-entities */

const GEOLayout = () => __jsx("main", {
  role: "main",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 5,
    columnNumber: 3
  }
}, __jsx("div", {
  style: {
    display: 'flex',
    flexDirection: 'column',
    minHeight: '100vh',
    justifyContent: 'center',
    alignItems: 'center',
    background: `radial-gradient(ellipse at top, #e66465, transparent),
            radial-gradient(ellipse at bottom, #4d9f0c, transparent)`
  },
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 6,
    columnNumber: 5
  }
}, __jsx("h1", {
  style: {
    fontSize: '30px'
  },
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 16,
    columnNumber: 7
  }
}, "We've sorry."), __jsx("h3", {
  style: {
    fontSize: '27px'
  },
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 17,
    columnNumber: 7
  }
}, "Website is not allowed in your country")));
/* harmony default export */ __webpack_exports__["default"] = (GEOLayout);

/***/ }),

/***/ "./src/layouts/maintenance-layout.tsx":
/*!********************************************!*\
  !*** ./src/layouts/maintenance-layout.tsx ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\maintenance-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
const MaintenaceLayout = () => __jsx("main", {
  role: "main",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 4,
    columnNumber: 3
  }
}, __jsx("img", {
  alt: "",
  src: "/static/under-construction.jpg",
  width: "100%",
  __self: undefined,
  __source: {
    fileName: _jsxFileName,
    lineNumber: 5,
    columnNumber: 5
  }
}));
/* harmony default export */ __webpack_exports__["default"] = (MaintenaceLayout);

/***/ }),

/***/ "./src/layouts/mobile-layout.tsx":
/*!***************************************!*\
  !*** ./src/layouts/mobile-layout.tsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_ui_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @redux/ui/actions */ "./src/redux/ui/actions.ts");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./primary-layout.less */ "./src/layouts/primary-layout.less");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_primary_layout_less__WEBPACK_IMPORTED_MODULE_6__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\mobile-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







// const Footer = dynamic(() => import('@components/common/layout/footer'));
const Loader = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(() => __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")), {
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")],
    modules: ['@components/common/base/loader']
  }
});
class MobileLayout extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      routerChange: false
    });
  }
  componentDidMount() {
    const {
      loadUIValue: handleLoadUI
    } = this.props;
     false && false;
     false && false;
  }
  handleStateChange() {
    next_router__WEBPACK_IMPORTED_MODULE_4__["Router"].events.on('routeChangeStart', async () => this.setState({
      routerChange: true
    }));
    next_router__WEBPACK_IMPORTED_MODULE_4__["Router"].events.on('routeChangeComplete', async () => this.setState({
      routerChange: false
    }));
  }
  render() {
    const {
      children,
      ui
    } = this.props;
    const {
      routerChange
    } = this.state;
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Layout"], {
      className: "main-container",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 43,
        columnNumber: 9
      }
    }, __jsx("div", {
      className: (ui === null || ui === void 0 ? void 0 : ui.theme) === 'dark' ? 'container dark' : 'container',
      id: "primaryLayout",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 44,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Row"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48,
        columnNumber: 13
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      md: 24,
      className: "primary-content",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 49,
        columnNumber: 15
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Layout"].Content, {
      className: "content",
      style: {
        position: 'relative'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 17
      }
    }, routerChange && __jsx(Loader, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 54,
        columnNumber: 36
      }
    }), children), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["BackTop"], {
      className: "backTop",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 57,
        columnNumber: 17
      }
    }))))));
  }
}
const mapStateToProps = state => ({
  ui: _objectSpread({}, state.ui),
  currentUser: _objectSpread({}, state.user.current)
});
const mapDispatchToProps = {
  loadUIValue: _redux_ui_actions__WEBPACK_IMPORTED_MODULE_5__["loadUIValue"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(MobileLayout));

/***/ }),

/***/ "./src/layouts/modals-layout.tsx":
/*!***************************************!*\
  !*** ./src/layouts/modals-layout.tsx ***!
  \***************************************/
/*! exports provided: LayoutModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LayoutModals", function() { return LayoutModals; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _components_modals_loginModal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @components/modals/loginModal */ "./src/components/modals/loginModal.tsx");
/* harmony import */ var _components_modals_registerModal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @components/modals/registerModal */ "./src/components/modals/registerModal.tsx");
/* harmony import */ var _components_modals_forgotPasswordModal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @components/modals/forgotPasswordModal */ "./src/components/modals/forgotPasswordModal.tsx");
/* harmony import */ var _components_modals_deleteAccountModal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/modals/deleteAccountModal */ "./src/components/modals/deleteAccountModal.tsx");
/* harmony import */ var _components_modals_donateRubiesModal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @components/modals/donateRubiesModal */ "./src/components/modals/donateRubiesModal.tsx");
/* harmony import */ var _components_modals_passwordResetModal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/modals/passwordResetModal */ "./src/components/modals/passwordResetModal.tsx");
/* harmony import */ var _components_modals_addCommentModal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @components/modals/addCommentModal */ "./src/components/modals/addCommentModal.tsx");
/* harmony import */ var _components_modals_buyRubiesModal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @components/modals/buyRubiesModal */ "./src/components/modals/buyRubiesModal.tsx");
/* harmony import */ var _components_modals_purchaseRubiesCompleteModal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @components/modals/purchaseRubiesCompleteModal */ "./src/components/modals/purchaseRubiesCompleteModal.tsx");
/* harmony import */ var _components_modals_buyRubiesWithDiamonds__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @components/modals/buyRubiesWithDiamonds */ "./src/components/modals/buyRubiesWithDiamonds.tsx");
/* harmony import */ var _components_modals_payoutRequestModal__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @components/modals/payoutRequestModal */ "./src/components/modals/payoutRequestModal.tsx");
/* harmony import */ var _components_modals_linkPaypalAccountModal__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @components/modals/linkPaypalAccountModal */ "./src/components/modals/linkPaypalAccountModal.tsx");
/* harmony import */ var _components_modals_changePaypalAccountModal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @components/modals/changePaypalAccountModal */ "./src/components/modals/changePaypalAccountModal.tsx");
/* harmony import */ var _components_modals_paypalSuccessfulModal__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @components/modals/paypalSuccessfulModal */ "./src/components/modals/paypalSuccessfulModal.tsx");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @services/user.service */ "./src/services/user.service.ts");
/* harmony import */ var _components_modals_notEnoughRubysLiveModal__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @components/modals/notEnoughRubysLiveModal */ "./src/components/modals/notEnoughRubysLiveModal.tsx");
/* harmony import */ var _components_modals_confirmPrivateVideoModal__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @components/modals/confirmPrivateVideoModal */ "./src/components/modals/confirmPrivateVideoModal.tsx");
/* harmony import */ var _components_modals_waitingForModelModal__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @components/modals/waitingForModelModal */ "./src/components/modals/waitingForModelModal.tsx");
/* harmony import */ var _components_modals_goLiveModal__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @components/modals/goLiveModal */ "./src/components/modals/goLiveModal.tsx");
/* harmony import */ var _components_modals_photo_video_upload_createNewPhotoModal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @components/modals/photo-video-upload/createNewPhotoModal */ "./src/components/modals/photo-video-upload/createNewPhotoModal.tsx");
/* harmony import */ var _components_modals_photo_video_upload_photoCameraModal__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @components/modals/photo-video-upload/photoCameraModal */ "./src/components/modals/photo-video-upload/photoCameraModal.tsx");
/* harmony import */ var _components_modals_photo_video_upload_createNewVideoModal__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @components/modals/photo-video-upload/createNewVideoModal */ "./src/components/modals/photo-video-upload/createNewVideoModal.tsx");
/* harmony import */ var _components_modals_photo_video_upload_videoCameraModal__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @components/modals/photo-video-upload/videoCameraModal */ "./src/components/modals/photo-video-upload/videoCameraModal.tsx");
/* harmony import */ var _components_modals_endLiveStreamModal__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @components/modals/endLiveStreamModal */ "./src/components/modals/endLiveStreamModal.tsx");
/* harmony import */ var _components_modals_reportLiveStreamModal__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @components/modals/reportLiveStreamModal */ "./src/components/modals/reportLiveStreamModal.tsx");
/* harmony import */ var _components_modals_streamMutedListModal__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @components/modals/streamMutedListModal */ "./src/components/modals/streamMutedListModal.tsx");
/* harmony import */ var _components_modals_crossPromotionPurchaseModal__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @components/modals/crossPromotionPurchaseModal */ "./src/components/modals/crossPromotionPurchaseModal.tsx");
/* harmony import */ var _components_modals_crossPromotionPurchaseSuccessModal__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @components/modals/crossPromotionPurchaseSuccessModal */ "./src/components/modals/crossPromotionPurchaseSuccessModal.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\modals-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }































const LayoutModals = ({
  modals,
  updateModals
}) => {
  const router = Object(next_router__WEBPACK_IMPORTED_MODULE_15__["useRouter"])();
  const queryString = router.query;
  const {
    0: user,
    1: setUser
  } = Object(react__WEBPACK_IMPORTED_MODULE_0__["useState"])({});
  const dispatch = Object(react_redux__WEBPACK_IMPORTED_MODULE_16__["useDispatch"])();
  const handleQueryStrings = () => {
    const resetPasswordRedirectModal = () => {
      if (queryString.resetPassword) {
        dispatch(updateModals({
          isPasswordResetModalOpen: true
        }));
      }
    };
    const paypalRedirectModal = () => {
      if (!queryString.paymentSuccess) {
        return;
      }
      dispatch(updateModals({
        isPurchaseRubiesCompleteModalOpen: true
      }));
    };
    paypalRedirectModal();
    resetPasswordRedirectModal();
  };
  const getPerformerData = async () => {
    try {
      const userResponse = await _services_user_service__WEBPACK_IMPORTED_MODULE_17__["userService"].me();
      setUser(userResponse.data);
    } catch (error) {
      console.log(`getPerformerData error`, error);
    }
  };
  Object(react__WEBPACK_IMPORTED_MODULE_0__["useEffect"])(() => {
    getPerformerData();
    handleQueryStrings();
  }, []);
  return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx(_components_modals_loginModal__WEBPACK_IMPORTED_MODULE_1__["default"], {
    isOpen: modals.isLoginModalOpen,
    onClose: () => updateModals({
      isLoginModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 99,
      columnNumber: 7
    }
  }), __jsx(_components_modals_registerModal__WEBPACK_IMPORTED_MODULE_2__["default"], {
    isOpen: modals.isRegisterModalOpen,
    onClose: () => updateModals({
      isRegisterModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 100,
      columnNumber: 7
    }
  }), __jsx(_components_modals_passwordResetModal__WEBPACK_IMPORTED_MODULE_6__["default"], {
    tokenId: queryString.resetPassword,
    isOpen: modals.isPasswordResetModalOpen,
    onClose: () => updateModals({
      isPasswordResetModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 101,
      columnNumber: 7
    }
  }), __jsx(_components_modals_forgotPasswordModal__WEBPACK_IMPORTED_MODULE_3__["default"], {
    isOpen: modals.isForgotPasswordModalOpen,
    onClose: () => updateModals({
      isForgotPasswordModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 102,
      columnNumber: 7
    }
  }), __jsx(_components_modals_deleteAccountModal__WEBPACK_IMPORTED_MODULE_4__["default"], {
    isOpen: modals.isDeleteAccountModalOpen,
    onClose: () => updateModals({
      isDeleteAccountModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 103,
      columnNumber: 7
    }
  }), __jsx(_components_modals_donateRubiesModal__WEBPACK_IMPORTED_MODULE_5__["default"], {
    isOpen: modals.isDonateRubiesModalOpen,
    onClose: () => updateModals({
      isDonateRubiesModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 104,
      columnNumber: 7
    }
  }), __jsx(_components_modals_addCommentModal__WEBPACK_IMPORTED_MODULE_7__["default"], {
    isOpen: modals.isAddCommentModalOpen,
    onClose: () => updateModals({
      isAddCommentModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 105,
      columnNumber: 7
    }
  }), __jsx(_components_modals_buyRubiesModal__WEBPACK_IMPORTED_MODULE_8__["default"], {
    performer: user,
    isOpen: modals.isBuyRubiesModalOpen,
    onClose: () => updateModals({
      isBuyRubiesModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 106,
      columnNumber: 7
    }
  }), __jsx(_components_modals_purchaseRubiesCompleteModal__WEBPACK_IMPORTED_MODULE_9__["default"], {
    orderId: queryString.token,
    isTransactionSuccess: queryString.paymentSuccess ? queryString.paymentSuccess : '',
    isOpen: modals.isPurchaseRubiesCompleteModalOpen,
    onClose: () => updateModals({
      isPurchaseRubiesCompleteModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 107,
      columnNumber: 7
    }
  }), __jsx(_components_modals_buyRubiesWithDiamonds__WEBPACK_IMPORTED_MODULE_10__["default"], {
    isOpen: modals.isBuyRubiesWithDiamondsModalOpen,
    onClose: () => updateModals({
      isBuyRubiesWithDiamondsModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 108,
      columnNumber: 7
    }
  }), __jsx(_components_modals_payoutRequestModal__WEBPACK_IMPORTED_MODULE_11__["default"], {
    performer: user,
    isOpen: modals.isPayoutRequestModalOpen,
    onClose: () => updateModals({
      isPayoutRequestModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 109,
      columnNumber: 7
    }
  }), __jsx(_components_modals_linkPaypalAccountModal__WEBPACK_IMPORTED_MODULE_12__["default"], {
    updatePerformer: getPerformerData,
    performer: user,
    isOpen: modals.isLinkPaypalAccountModalOpen,
    onClose: () => updateModals({
      isLinkPaypalAccountModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 110,
      columnNumber: 7
    }
  }), __jsx(_components_modals_changePaypalAccountModal__WEBPACK_IMPORTED_MODULE_13__["default"], {
    isOpen: modals.isChangePaypalAccountModalOpen,
    onClose: () => updateModals({
      isChangePaypalAccountModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 111,
      columnNumber: 7
    }
  }), __jsx(_components_modals_paypalSuccessfulModal__WEBPACK_IMPORTED_MODULE_14__["default"], {
    performer: user,
    isOpen: modals.isPaypalSuccessfulModalOpen,
    onClose: () => updateModals({
      isPaypalSuccessfulModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 112,
      columnNumber: 7
    }
  }), __jsx(_components_modals_notEnoughRubysLiveModal__WEBPACK_IMPORTED_MODULE_18__["default"], {
    isOpen: modals.isNotEnoughRubysLiveModal,
    onClose: () => updateModals({
      isNotEnoughRubysLiveModal: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 113,
      columnNumber: 7
    }
  }), __jsx(_components_modals_confirmPrivateVideoModal__WEBPACK_IMPORTED_MODULE_19__["default"], {
    isOpen: modals.confirmPrivateVideoModal.isOpen,
    performerInfos: modals.confirmPrivateVideoModal.performerInfos,
    onClose: () => updateModals({
      confirmPrivateVideoModal: {
        isOpen: false,
        performerInfos: null
      }
    }),
    performerTotalFollowers: modals.confirmPrivateVideoModal.performerTotalFollowers,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 7
    }
  }), __jsx(_components_modals_waitingForModelModal__WEBPACK_IMPORTED_MODULE_20__["default"], {
    isOpen: modals.isWaitingForModelModal,
    performerInfos: modals.confirmPrivateVideoModal.performerInfos,
    onClose: () => updateModals({
      isWaitingForModelModal: false
    }),
    performerTotalFollowers: modals.confirmPrivateVideoModal.performerTotalFollowers,
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 7
    }
  }), __jsx(_components_modals_goLiveModal__WEBPACK_IMPORTED_MODULE_21__["default"], {
    isOpen: modals.isGoLiveModalOpen,
    onClose: () => updateModals({
      isGoLiveModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 133,
      columnNumber: 7
    }
  }), __jsx(_components_modals_photo_video_upload_createNewPhotoModal__WEBPACK_IMPORTED_MODULE_22__["default"], {
    modalProps: modals.uploadPhotoModal,
    onClose: () => updateModals({
      uploadPhotoModal: _objectSpread(_objectSpread({}, modals.uploadPhotoModal), {}, {
        isOpen: false
      })
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 7
    }
  }), __jsx(_components_modals_photo_video_upload_photoCameraModal__WEBPACK_IMPORTED_MODULE_23__["default"], {
    modalProps: modals.uploadPhotoModal,
    isOpen: modals.isPhotoCameraModal,
    onClose: () => updateModals({
      isPhotoCameraModal: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 7
    }
  }), __jsx(_components_modals_photo_video_upload_createNewVideoModal__WEBPACK_IMPORTED_MODULE_24__["default"], {
    modalProps: modals.uploadVideoModal,
    isOpen: modals.uploadVideoModal.isOpen,
    onClose: () => updateModals({
      uploadVideoModal: _objectSpread(_objectSpread({}, modals.uploadVideoModal), {}, {
        isOpen: false
      })
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 7
    }
  }), __jsx(_components_modals_photo_video_upload_videoCameraModal__WEBPACK_IMPORTED_MODULE_25__["default"], {
    modalProps: modals.uploadVideoModal,
    isOpen: modals.isVideoCameraModal,
    onClose: () => updateModals({
      isVideoCameraModal: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 7
    }
  }), __jsx(_components_modals_endLiveStreamModal__WEBPACK_IMPORTED_MODULE_26__["default"], {
    isOpen: modals.isEndLiveStreamModal,
    onClose: () => updateModals({
      isEndLiveStreamModal: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 7
    }
  }), __jsx(_components_modals_reportLiveStreamModal__WEBPACK_IMPORTED_MODULE_27__["default"], {
    isOpen: modals.isReportLiveStreamModal,
    onClose: () => updateModals({
      isReportLiveStreamModal: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 7
    }
  }), __jsx(_components_modals_streamMutedListModal__WEBPACK_IMPORTED_MODULE_28__["default"], {
    modalMutedList: modals.streamMutedList,
    isOpen: modals.isStreamMutedListModalOpen,
    onClose: () => updateModals({
      isStreamMutedListModalOpen: false
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 7
    }
  }), __jsx(_components_modals_crossPromotionPurchaseModal__WEBPACK_IMPORTED_MODULE_29__["default"], {
    performerId: modals.crossPromotionPurchaseModal.performerId,
    isOpen: modals.crossPromotionPurchaseModal.isOpen,
    onClose: () => updateModals({
      crossPromotionPurchaseModal: _objectSpread(_objectSpread({}, modals.crossPromotionPurchaseModal), {}, {
        isOpen: false
      })
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 7
    }
  }), __jsx(_components_modals_crossPromotionPurchaseSuccessModal__WEBPACK_IMPORTED_MODULE_30__["default"], {
    performerId: modals.crossPromotionPurchaseSuccessModal.performerId,
    isOpen: modals.crossPromotionPurchaseSuccessModal.isOpen,
    onClose: () => updateModals({
      crossPromotionPurchaseSuccessModal: _objectSpread(_objectSpread({}, modals.crossPromotionPurchaseSuccessModal), {}, {
        isOpen: false
      })
    }),
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 171,
      columnNumber: 7
    }
  }));
};

/***/ }),

/***/ "./src/layouts/primary-layout.less":
/*!*****************************************!*\
  !*** ./src/layouts/primary-layout.less ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/layouts/primary-layout.tsx":
/*!****************************************!*\
  !*** ./src/layouts/primary-layout.tsx ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _redux_ui_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @redux/ui/actions */ "./src/redux/ui/actions.ts");
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var _components_common_collectData__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/common/collectData */ "./src/components/common/collectData.tsx");
/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./sidebar */ "./src/layouts/sidebar.tsx");
/* harmony import */ var _modals_layout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modals-layout */ "./src/layouts/modals-layout.tsx");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./primary-layout.less */ "./src/layouts/primary-layout.less");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_primary_layout_less__WEBPACK_IMPORTED_MODULE_9__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\primary-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }










const Header = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(() => __webpack_require__.e(/*! import() */ 2).then(__webpack_require__.bind(null, /*! @components/common/layout/header */ "./src/components/common/layout/header.tsx")), {
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/common/layout/header */ "./src/components/common/layout/header.tsx")],
    modules: ['@components/common/layout/header']
  }
});
const Loader = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(() => __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")), {
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")],
    modules: ['@components/common/base/loader']
  }
});
class PrimaryLayout extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      routerChange: false
    });
  }
  componentDidMount() {
    const {
      loadUIValue: handleLoadUI
    } = this.props;
     false && false;
     false && false;
  }
  handleStateChange() {
    next_router__WEBPACK_IMPORTED_MODULE_3__["Router"].events.on('routeChangeStart', async () => this.setState({
      routerChange: true
    }));
    next_router__WEBPACK_IMPORTED_MODULE_3__["Router"].events.on('routeChangeComplete', async () => this.setState({
      routerChange: false
    }));
  }
  render() {
    const {
      children,
      ui,
      modals,
      updateModals,
      isLoading
    } = this.props;
    const {
      routerChange
    } = this.state;
    return __jsx(_components_common_collectData__WEBPACK_IMPORTED_MODULE_6__["default"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 48,
        columnNumber: 7
      }
    }, __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx(Header, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 50,
        columnNumber: 11
      }
    }), __jsx("div", {
      className: "min-h-[calc(100vh-81px)] px-3 md:px-6 pt-6 mx-auto xxl:px-0 bg-white max-w-screen-xxl",
      id: "primaryLayout",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 51,
        columnNumber: 11
      }
    }, __jsx("div", {
      className: "flex gap-5",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 52,
        columnNumber: 13
      }
    }, __jsx("aside", {
      className: `flex-shrink-0 sidebar-wrapper ${ui.sidebarCollapse ? "sidebar-collapsed" : ""}`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53,
        columnNumber: 15
      }
    }, __jsx(_sidebar__WEBPACK_IMPORTED_MODULE_7__["default"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 59,
        columnNumber: 17
      }
    })), __jsx("main", {
      className: `w-full`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 61,
        columnNumber: 15
      }
    }, (routerChange || isLoading) && __jsx(Loader, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 62,
        columnNumber: 49
      }
    }), children))), __jsx(_modals_layout__WEBPACK_IMPORTED_MODULE_8__["LayoutModals"], {
      modals: modals,
      updateModals: updateModals,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 67,
        columnNumber: 11
      }
    })));
  }
}
const mapStateToProps = state => ({
  ui: _objectSpread({}, state.ui),
  currentUser: _objectSpread({}, state.user.current),
  loggedIn: state.auth.loggedIn,
  isLoading: state.auth.isLoading,
  modals: _objectSpread({}, state.modals)
});
const mapDispatchToProps = {
  loadUIValue: _redux_ui_actions__WEBPACK_IMPORTED_MODULE_4__["loadUIValue"],
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_5__["updateModals"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapStateToProps, mapDispatchToProps)(PrimaryLayout));

/***/ }),

/***/ "./src/layouts/public-layout.tsx":
/*!***************************************!*\
  !*** ./src/layouts/public-layout.tsx ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (({
  children
}) => children);

/***/ }),

/***/ "./src/layouts/sidebar.less":
/*!**********************************!*\
  !*** ./src/layouts/sidebar.less ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./src/layouts/sidebar.tsx":
/*!*********************************!*\
  !*** ./src/layouts/sidebar.tsx ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_icons_lu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-icons/lu */ "react-icons/lu");
/* harmony import */ var react_icons_lu__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_icons_lu__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_auth_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @redux/auth/actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ant-design/icons */ "@ant-design/icons");
/* harmony import */ var _ant_design_icons__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ant_design_icons__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var src_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/constants */ "./src/constants.ts");
/* harmony import */ var src_services__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/services */ "./src/services/index.ts");
/* harmony import */ var src_socket__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/socket */ "./src/socket/index.ts");
/* harmony import */ var _redux_streaming_actions__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @redux/streaming/actions */ "./src/redux/streaming/actions.ts");
/* harmony import */ var _redux_notification_actions__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @redux/notification/actions */ "./src/redux/notification/actions.ts");
/* harmony import */ var src_redux_ui_actions__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/redux/ui/actions */ "./src/redux/ui/actions.ts");
/* harmony import */ var _redux_user_actions__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @redux/user/actions */ "./src/redux/user/actions.ts");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
/* harmony import */ var next_dist_next_server_lib_router_context__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! next/dist/next-server/lib/router-context */ "next/dist/next-server/lib/router-context");
/* harmony import */ var next_dist_next_server_lib_router_context__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(next_dist_next_server_lib_router_context__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @components/ui/shared/AppButton */ "./src/components/ui/shared/AppButton.tsx");
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var src_icons__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/icons */ "./src/icons/index.tsx");
/* harmony import */ var _components_create_feed_toggle_photo_and_video_create_post__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @components/create-feed/toggle-photo-and-video-create-post */ "./src/components/create-feed/toggle-photo-and-video-create-post.tsx");
/* harmony import */ var _sidebar_less__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./sidebar.less */ "./src/layouts/sidebar.less");
/* harmony import */ var _sidebar_less__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_sidebar_less__WEBPACK_IMPORTED_MODULE_22__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\sidebar.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/no-danger */
/* eslint-disable react/no-unused-prop-types */















// import './header.less';








const NotificationHeaderMenu = next_dynamic__WEBPACK_IMPORTED_MODULE_15___default()(() => __webpack_require__.e(/*! import() */ 1).then(__webpack_require__.bind(null, /*! @components/notification/NotificationHeaderMenu */ "./src/components/notification/NotificationHeaderMenu.tsx")), {
  ssr: false,
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/notification/NotificationHeaderMenu */ "./src/components/notification/NotificationHeaderMenu.tsx")],
    modules: ["@components/notification/NotificationHeaderMenu"]
  }
});
class Sidebar extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      isMenuOpen: false,
      totalNotReadMessage: 0,
      openProfile: false,
      openStripeAlert: false,
      loading: false,
      isViewNotification: true,
      totalEarning: 0,
      isSelectVideoOrPhoto: false
    });
    _defineProperty(this, "handleChangeRoute", () => {
      this.setState({
        openProfile: false
      });
    });
    _defineProperty(this, "handleMessage", async event => {
      if (event) {
        this.setState({
          totalNotReadMessage: event.total
        });
      }
    });
    _defineProperty(this, "getEarning", async () => {
      try {
        this.setState({
          loading: true
        });
        const earning = await src_services__WEBPACK_IMPORTED_MODULE_9__["earningService"].performerSearch({
          limit: 10,
          offset: 0,
          isToken: true
        });
        this.setState({
          totalEarning: earning.data.total,
          loading: false
        });
      } catch (error) {
        antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_16__["getResponseError"])(await error));
        this.setState({
          loading: false
        });
      }
    });
  }
  async componentDidMount() {
    const {
      loggedIn
    } = this.props;
    const cookieViewNotification = await src_services__WEBPACK_IMPORTED_MODULE_9__["cookieService"].getCookie("isViewNotification");
    this.setState({
      isViewNotification: cookieViewNotification === "true"
    });
    next_router__WEBPACK_IMPORTED_MODULE_7__["Router"].events.on("routeChangeStart", this.handleChangeRoute);
    loggedIn && this.getEarning();
  }
  async componentDidUpdate(prevProps) {
    const {
      user,
      router
    } = this.props;
    const {
      openStripeAlert
    } = this.state;
    const cookieViewNotification = await src_services__WEBPACK_IMPORTED_MODULE_9__["cookieService"].getCookie("isViewNotification");
    this.setState({
      isViewNotification: cookieViewNotification === "true"
    });
    if (user._id && prevProps.user._id !== user._id) {
      var _user$stripeAccount, _user$stripeAccount2;
      this.getEarning();

      // const resp = await payoutRequestService.search({});
      // if (resp.data) {
      //   this.setState({ showPayoutResquest: resp.data.total > 0 });
      // }
      this.handleCountNotificationMessage();
      if (router.pathname !== "/model/banking" && user.isPerformer && !(user !== null && user !== void 0 && (_user$stripeAccount = user.stripeAccount) !== null && _user$stripeAccount !== void 0 && _user$stripeAccount.payoutsEnabled) || router.pathname !== "/model/banking" && user.isPerformer && !(user !== null && user !== void 0 && (_user$stripeAccount2 = user.stripeAccount) !== null && _user$stripeAccount2 !== void 0 && _user$stripeAccount2.detailsSubmitted)) {
        // eslint-disable-next-line react/no-did-update-set-state
        // this.setState({ openStripeAlert: true });
      }
    }
    // eslint-disable-next-line react/no-did-update-set-state
    if (openStripeAlert && router.pathname === "/model/banking") {
      this.setState({
        openStripeAlert: false
      });
    }
  }
  componentWillUnmount() {
    next_router__WEBPACK_IMPORTED_MODULE_7__["Router"].events.off("routeChangeStart", this.handleChangeRoute);
    const token = src_services__WEBPACK_IMPORTED_MODULE_9__["authService"].getToken();
    const socket = this.context;
    token && socket && socket.emit("auth/logout", {
      token
    });
  }
  async handleCountNotificationMessage() {
    const data = await (await src_services__WEBPACK_IMPORTED_MODULE_9__["messageService"].countTotalNotRead()).data;
    if (data) {
      this.setState({
        totalNotReadMessage: data.total
      });
    }
  }
  async handlePrivateChat(data) {
    var _data$user, _data$user2;
    const {
      addPrivateRequest: _addPrivateRequest
    } = this.props;
    await _addPrivateRequest(data);
    antd__WEBPACK_IMPORTED_MODULE_1__["message"].success({
      key: "private-request",
      content: __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 194,
          columnNumber: 11
        }
      }, (data === null || data === void 0 ? void 0 : (_data$user = data.user) === null || _data$user === void 0 ? void 0 : _data$user.name) || (data === null || data === void 0 ? void 0 : (_data$user2 = data.user) === null || _data$user2 === void 0 ? void 0 : _data$user2.username), " sent you a Private Call request!", " "), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 198,
          columnNumber: 11
        }
      }, __jsx(next_dist_next_server_lib_router_context__WEBPACK_IMPORTED_MODULE_17__["RouterContext"].Provider, {
        value: next_router__WEBPACK_IMPORTED_MODULE_7___default.a,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 199,
          columnNumber: 13
        }
      }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
        prefetch: false,
        href: "/model/private-waiting-room",
        as: "/model/private-waiting-room",
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 200,
          columnNumber: 15
        }
      }, __jsx("a", {
        "aria-hidden": true,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 205,
          columnNumber: 17
        }
      }, " Click here ")))), __jsx("span", {
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 209,
          columnNumber: 11
        }
      }, "to view")),
      onClick: () => antd__WEBPACK_IMPORTED_MODULE_1__["message"].destroy("private-request")
    });
  }
  handleCancelPrivateChat(data) {
    var _data$user3, _data$user4;
    const {
      cancelPrivateRequest: handleCancel
    } = this.props;
    antd__WEBPACK_IMPORTED_MODULE_1__["message"].success(`${(data === null || data === void 0 ? void 0 : (_data$user3 = data.user) === null || _data$user3 === void 0 ? void 0 : _data$user3.name) || (data === null || data === void 0 ? void 0 : (_data$user4 = data.user) === null || _data$user4 === void 0 ? void 0 : _data$user4.username)}'ve cancelled private call request`, 10);
    handleCancel(data.conversationId);
  }
  handleMuteComment(data) {
    const {
      addMuted: _addMuted
    } = this.props;
    _addMuted(data);
  }
  async handleTimeOutPrivateChat(data) {
    var _data$user5, _data$user6;
    const {
      cancelPrivateRequest: handleCancel
    } = this.props;
    next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push({
      pathname: "/live-now",
      query: {
        tab: "private"
      }
    }, "/live-now");
    await antd__WEBPACK_IMPORTED_MODULE_1__["message"].success(`${(data === null || data === void 0 ? void 0 : (_data$user5 = data.user) === null || _data$user5 === void 0 ? void 0 : _data$user5.name) || (data === null || data === void 0 ? void 0 : (_data$user6 = data.user) === null || _data$user6 === void 0 ? void 0 : _data$user6.username)}'seems busy. Please select another model for a private video chat`, 15);
    handleCancel(data.conversationId);
  }
  async handleDeclineCall(conversationId) {
    const {
      accessPrivateRequest: handleRemoveRequest
    } = this.props;
    try {
      // await streamService.declinePrivateChat(conversationId);
      handleRemoveRequest(conversationId);
    } catch (e) {
      const err = await e;
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error((err === null || err === void 0 ? void 0 : err.message) || "Error occured, please try again later");
    }
  }
  async handleUpdateBalance(event) {
    const {
      updateBalance: handleUpdateBalance
    } = this.props;
    handleUpdateBalance({
      token: event.token,
      type: "diamond-balance"
    });
  }
  async handlePaymentStatusCallback({
    redirectUrl
  }) {
    if (redirectUrl) {
      window.location.href = redirectUrl;
    }
  }
  async togglePrivateChatStatus() {
    const {
      user,
      updateCurrentUser: handleUpdateUser
    } = this.props;
    const data = await src_services__WEBPACK_IMPORTED_MODULE_9__["streamService"].togglePrivateChatStatus();
    if (data) {
      handleUpdateUser(_objectSpread(_objectSpread({}, user), {}, {
        privateChat: data.privateChat
      }));
    }
  }
  handleNavigate(route, index) {
    next_router__WEBPACK_IMPORTED_MODULE_7___default.a.push(route);
    this.props.updateTabValue(index);
  }
  async beforeLogout() {
    const {
      logout: handleLogout,
      user,
      logoutSuccess
    } = this.props;
    try {
      const socket = this.context;
      const token = src_services__WEBPACK_IMPORTED_MODULE_9__["authService"].getToken();
      handleLogout();
      if (user.privateChat) {
        this.togglePrivateChatStatus();
      }
      if (token && socket) {
        await socket.emit("auth/logout", {
          token
        });
      }
      src_services__WEBPACK_IMPORTED_MODULE_9__["cookieService"].setCookie("isViewNotification", false, 24 * 60);
      setTimeout(() => {
        logoutSuccess();
      }, 3000);
    } catch (e) {
      const error = await Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_1__["message"].error(error.message || "Something went wrong, please try again later");
    }
  }
  renderMenuAllUserType() {
    const {
      notificationCount,
      router,
      user
    } = this.props;
    const {
      totalNotReadMessage,
      isViewNotification
    } = this.state;
    return [__jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Dropdown"], {
      key: user === null || user === void 0 ? void 0 : user._id,
      overlay: __jsx(NotificationHeaderMenu, {
        onReceiveMessage: () => {
          this.setState({
            isViewNotification: false
          });
          src_services__WEBPACK_IMPORTED_MODULE_9__["cookieService"].setCookie("isViewNotification", false, 24 * 60);
        },
        totalNotReadMessage: totalNotReadMessage,
        notificationCount: notificationCount,
        __self: this,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 342,
          columnNumber: 11
        }
      }),
      forceRender: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 339,
        columnNumber: 7
      }
    }, __jsx("span", {
      "aria-label": "notifications",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 353,
        columnNumber: 9
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_1__["Badge"], {
      className: "cart-total",
      dot: !isViewNotification && notificationCount > 0,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 354,
        columnNumber: 11
      }
    }, __jsx(_ant_design_icons__WEBPACK_IMPORTED_MODULE_6__["BellOutlined"], {
      onMouseEnter: () => {
        this.setState({
          isViewNotification: true
        });
        src_services__WEBPACK_IMPORTED_MODULE_9__["cookieService"].setCookie("isViewNotification", true, 24 * 60);
      },
      className: router.pathname === "/notifications" ? "anticon-bell active" : "anticon-bell",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 358,
        columnNumber: 13
      }
    }))))];
  }
  render() {
    var _user$username, _user$roles, _user$stats, _user$stats2;
    const {
      user,
      router,
      ui,
      loggedIn,
      modals,
      updateModals,
      isUnreadsNotification
    } = this.props;
    const {
      openProfile,
      openStripeAlert,
      loading,
      totalEarning
    } = this.state;
    return __jsx("div", {
      className: `main-header custom-sidebar ${ui.sidebarCollapse ? "collapsed" : ""}`,
      id: "main-header",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 390,
        columnNumber: 7
      }
    }, __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "nofify_read_messages_in_conversation",
      handler: this.handleMessage.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 395,
        columnNumber: 9
      }
    }), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "private-chat-request",
      handler: this.handlePrivateChat.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 399,
        columnNumber: 9
      }
    }), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "update_balance",
      handler: this.handleUpdateBalance.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 403,
        columnNumber: 9
      }
    }), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "payment_status_callback",
      handler: this.handlePaymentStatusCallback.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 407,
        columnNumber: 9
      }
    }), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "private-chat-cancel",
      handler: this.handleCancelPrivateChat.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 411,
        columnNumber: 9
      }
    }), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "private-chat-timeOut",
      handler: this.handleTimeOutPrivateChat.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 415,
        columnNumber: 9
      }
    }), __jsx(src_socket__WEBPACK_IMPORTED_MODULE_10__["Event"], {
      event: "mute-comment",
      handler: this.handleMuteComment.bind(this),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 419,
        columnNumber: 9
      }
    }), __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, loggedIn && __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("div", {
      className: "mb-5",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 427,
        columnNumber: 15
      }
    }, __jsx("div", {
      className: "flex gap-2",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 428,
        columnNumber: 17
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: {
        pathname: "/model/profile",
        query: {
          username: (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user._id)
        }
      },
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 429,
        columnNumber: 19
      }
    }, __jsx("a", {
      className: ``,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 436,
        columnNumber: 21
      }
    }, __jsx("img", {
      className: "w-10 h-10 rounded-full",
      src: (user === null || user === void 0 ? void 0 : user.avatar) || "/static/no-avatar.png",
      alt: "avatar",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 437,
        columnNumber: 23
      }
    }))), __jsx("div", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 445,
        columnNumber: 19
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: {
        pathname: "/model/profile",
        query: {
          username: (user === null || user === void 0 ? void 0 : user.username) || (user === null || user === void 0 ? void 0 : user._id)
        }
      },
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 446,
        columnNumber: 21
      }
    }, __jsx("a", {
      className: "block text-base leading-5 text-black capitalize hover:text-purple-900",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 453,
        columnNumber: 23
      }
    }, user === null || user === void 0 ? void 0 : user.name)), __jsx("span", {
      className: "text-xs font-light text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 457,
        columnNumber: 21
      }
    }, " ", user !== null && user !== void 0 && user.username ? `@${user === null || user === void 0 ? void 0 : (_user$username = user.username) === null || _user$username === void 0 ? void 0 : _user$username.substring(0, 24)}` : "n/a"))), __jsx("div", {
      className: "flex justify-end ",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 465,
        columnNumber: 17
      }
    }, __jsx(react_icons_lu__WEBPACK_IMPORTED_MODULE_3__["LuMessageCircle"], {
      size: 20,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 466,
        columnNumber: 19
      }
    }))), __jsx("div", {
      className: "flex flex-col gap-4 px-2 py-4 mb-3 border-t border-b border-base-400",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 470,
        columnNumber: 15
      }
    }, __jsx("div", {
      className: "flex  items-center  border-b border-base-400 pb-4",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 472,
        columnNumber: 17
      }
    }, __jsx("div", {
      className: "w-1/2 border-r-1 border-base-400",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 474,
        columnNumber: 19
      }
    }, __jsx("button", {
      onClick: () => this.handleNavigate("/wallet?ruby", 0),
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 475,
        columnNumber: 21
      }
    }, __jsx("a", {
      className: "mb-1 text-base font-semibold leading-4 text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 478,
        columnNumber: 23
      }
    }, "Rubys", __jsx("div", {
      className: "flex items-center gap-1",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 480,
        columnNumber: 25
      }
    }, __jsx("div", {
      className: "ml-2",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 481,
        columnNumber: 27
      }
    }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_20__["RubyIcon"], {
      className: "w-5 h-5",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 482,
        columnNumber: 29
      }
    }), __jsx("span", {
      className: "text-sm font-light",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 483,
        columnNumber: 29
      }
    }, Number.isInteger(user === null || user === void 0 ? void 0 : user.rubyBalance) ? user === null || user === void 0 ? void 0 : user.rubyBalance : Math.floor((user === null || user === void 0 ? void 0 : user.rubyBalance) * 10) / 10)))))), (user === null || user === void 0 ? void 0 : user.balance) > 0 && __jsx("div", {
      className: "w-1/2",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 496,
        columnNumber: 21
      }
    }, __jsx("button", {
      onClick: () => this.handleNavigate("/wallet?diamond", 1),
      className: "pl-4",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 497,
        columnNumber: 23
      }
    }, __jsx("a", {
      className: "mb-1 text-base font-semibold leading-4 text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 504,
        columnNumber: 25
      }
    }, "Diamonds", __jsx("div", {
      className: "flex items-center gap-1",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 506,
        columnNumber: 27
      }
    }, __jsx(src_icons__WEBPACK_IMPORTED_MODULE_20__["DiamondIcon"], {
      className: "w-5 h-5",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 507,
        columnNumber: 29
      }
    }), __jsx("span", {
      className: "text-sm font-light",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 508,
        columnNumber: 29
      }
    }, Number.isInteger(user === null || user === void 0 ? void 0 : user.balance) ? user === null || user === void 0 ? void 0 : user.balance : Math.floor((user === null || user === void 0 ? void 0 : user.balance) * 10) / 10)))))), __jsx("div", {
      className: "flex  items-center ",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 521,
        columnNumber: 17
      }
    }, !(user !== null && user !== void 0 && (_user$roles = user.roles) !== null && _user$roles !== void 0 && _user$roles.includes(src_constants__WEBPACK_IMPORTED_MODULE_8__["ROLE_PERMISSIONS"].ROLE_HOST_PRIVATE)) && __jsx("div", {
      className: "w-1/2 border-r-1 border-base-400",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 526,
        columnNumber: 23
      }
    }, __jsx("div", {
      className: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 527,
        columnNumber: 25
      }
    }, __jsx("button", {
      onClick: () => this.handleNavigate(`/model/list-follow?id=${user._id} `, 2),
      className: "mb-1 text-sm font-semibold leading-4 text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 528,
        columnNumber: 25
      }
    }, __jsx("div", {
      className: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 529,
        columnNumber: 28
      }
    }, __jsx("p", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 530,
        columnNumber: 28
      }
    }, "Fans"), __jsx("p", {
      className: "text-sm font-light text-left",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 531,
        columnNumber: 29
      }
    }, user === null || user === void 0 ? void 0 : (_user$stats = user.stats) === null || _user$stats === void 0 ? void 0 : _user$stats.totalFollower)))), __jsx("button", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 538,
        columnNumber: 25
      }
    })), __jsx("div", {
      className: "w-1/2 pl-4",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 544,
        columnNumber: 19
      }
    }, __jsx("div", {
      className: "mt-[-1.5em]",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 545,
        columnNumber: 21
      }
    }, __jsx("button", {
      onClick: () => this.handleNavigate(`/model/list-follow?id=${user._id}`, 3),
      className: "mb-1 text-sm font-semibold leading-4 text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 546,
        columnNumber: 23
      }
    }, __jsx("p", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 547,
        columnNumber: 25
      }
    }, "Following"), __jsx("p", {
      className: "text-sm font-light text-left",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 548,
        columnNumber: 25
      }
    }, user === null || user === void 0 ? void 0 : (_user$stats2 = user.stats) === null || _user$stats2 === void 0 ? void 0 : _user$stats2.totalFollowing)))))), __jsx("nav", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 559,
        columnNumber: 15
      }
    }, __jsx("ul", {
      className: "",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 563,
        columnNumber: 17
      }
    }, __jsx(_components_create_feed_toggle_photo_and_video_create_post__WEBPACK_IMPORTED_MODULE_21__["TogglePhotoAndVideoCreatePost"], {
      modals: modals,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 564,
        columnNumber: 19
      }
    }), __jsx("li", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 565,
        columnNumber: 19
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: "/model/account",
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 566,
        columnNumber: 21
      }
    }, __jsx("a", {
      className: `menu-link ${(router.pathname.startsWith("/model/profile") || router.pathname.startsWith("/model/account")) && "font-semibold"}`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 567,
        columnNumber: 23
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      fill: "none",
      viewBox: "0 0 24 24",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 573,
        columnNumber: 25
      }
    }, __jsx("mask", {
      id: "a",
      width: "24",
      height: "24",
      x: "0",
      y: "0",
      maskUnits: "userSpaceOnUse",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 580,
        columnNumber: 27
      }
    }, __jsx("path", {
      fill: "#D9D9D9",
      d: "M0 0h24v24H0z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 588,
        columnNumber: 29
      }
    })), __jsx("g", {
      mask: "url(#a)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 590,
        columnNumber: 27
      }
    }, __jsx("path", {
      fill: "#121212",
      d: "M6.523 17.792c.85-.63 1.776-1.129 2.778-1.494a9.264 9.264 0 0 1 3.199-.548c1.13 0 2.197.183 3.199.548 1.002.366 1.928.864 2.778 1.494a7.882 7.882 0 0 0 1.478-2.373A7.714 7.714 0 0 0 20.5 12.5c0-2.217-.78-4.104-2.337-5.663C16.604 5.28 14.717 4.5 12.5 4.5s-4.104.78-5.663 2.337C5.28 8.396 4.5 10.283 4.5 12.5c0 1.047.182 2.02.545 2.92a7.888 7.888 0 0 0 1.478 2.372ZM12.5 13.25c-.913 0-1.683-.313-2.31-.94s-.94-1.397-.94-2.31.313-1.683.94-2.31 1.397-.94 2.31-.94 1.683.313 2.31.94.94 1.397.94 2.31-.313 1.683-.94 2.31-1.397.94-2.31.94Zm0 8.75a9.31 9.31 0 0 1-3.713-.744 9.54 9.54 0 0 1-3.016-2.027 9.54 9.54 0 0 1-2.027-3.017A9.31 9.31 0 0 1 3 12.5c0-1.32.248-2.557.744-3.713a9.54 9.54 0 0 1 2.027-3.016 9.54 9.54 0 0 1 3.016-2.027A9.31 9.31 0 0 1 12.5 3a9.31 9.31 0 0 1 3.712.744 9.54 9.54 0 0 1 3.017 2.027 9.54 9.54 0 0 1 2.027 3.016A9.31 9.31 0 0 1 22 12.5a9.31 9.31 0 0 1-.744 3.712 9.54 9.54 0 0 1-2.027 3.017 9.54 9.54 0 0 1-3.017 2.027A9.31 9.31 0 0 1 12.5 22Zm0-1.5c.902 0 1.773-.145 2.61-.436a7.405 7.405 0 0 0 2.232-1.218 7.607 7.607 0 0 0-2.203-1.175 8.081 8.081 0 0 0-2.639-.421 8.21 8.21 0 0 0-2.644.416 7.251 7.251 0 0 0-2.198 1.18c.65.522 1.394.928 2.231 1.218.838.29 1.708.436 2.611.436Zm0-8.75c.497 0 .913-.167 1.248-.502.335-.335.502-.75.502-1.248 0-.497-.167-.913-.502-1.248-.335-.335-.75-.502-1.248-.502s-.914.167-1.248.502c-.335.335-.502.75-.502 1.248 0 .497.167.913.502 1.248.334.335.75.502 1.248.502Z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 591,
        columnNumber: 29
      }
    }))), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 598,
        columnNumber: 25
      }
    }, " Manage Profile")))), __jsx("li", {
      className: "border-b border-base-400",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 620,
        columnNumber: 19
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: "/model/bookmarks",
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 621,
        columnNumber: 21
      }
    }, __jsx("a", {
      className: `menu-link ${router.pathname === "/model/bookmarks" && "font-semibold"}`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 622,
        columnNumber: 23
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      fill: "none",
      viewBox: "0 0 24 24",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 627,
        columnNumber: 25
      }
    }, __jsx("mask", {
      id: "a",
      width: "24",
      height: "24",
      x: "0",
      y: "0",
      maskUnits: "userSpaceOnUse",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 634,
        columnNumber: 27
      }
    }, __jsx("path", {
      fill: "#D9D9D9",
      d: "M0 0h24v24H0z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 642,
        columnNumber: 29
      }
    })), __jsx("g", {
      mask: "url(#a)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 644,
        columnNumber: 27
      }
    }, __jsx("path", {
      fill: "#121212",
      d: "M5.5 20.25V5.308c0-.505.175-.933.525-1.283.35-.35.778-.525 1.283-.525h9.384c.505 0 .933.175 1.283.525.35.35.525.778.525 1.283V20.25L12 17.462 5.5 20.25Zm1.5-2.3 5-2.15 5 2.15V5.308a.294.294 0 0 0-.096-.212.294.294 0 0 0-.212-.096H7.308a.294.294 0 0 0-.212.096.294.294 0 0 0-.096.212V17.95Z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 645,
        columnNumber: 29
      }
    }))), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 652,
        columnNumber: 25
      }
    }, " Bookmarks")))), __jsx("li", {
      className: "border-b border-base-400 py-2 ",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 726,
        columnNumber: 19
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: "/broadcaster-dashboard",
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 727,
        columnNumber: 21
      }
    }, __jsx("a", {
      className: `menu-link ${router.pathname === "/broadcaster-dashboard" && "font-semibold"}`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 728,
        columnNumber: 23
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      fill: "none",
      viewBox: "0 0 24 24",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 733,
        columnNumber: 25
      }
    }, __jsx("mask", {
      id: "a",
      width: "24",
      height: "24",
      x: "0",
      y: "0",
      maskUnits: "userSpaceOnUse",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 740,
        columnNumber: 27
      }
    }, __jsx("path", {
      fill: "#D9D9D9",
      d: "M0 0h24v24H0z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 748,
        columnNumber: 29
      }
    })), __jsx("g", {
      mask: "url(#a)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 750,
        columnNumber: 27
      }
    }, __jsx("path", {
      fill: "#121212",
      d: "M11.998 19.711a3.298 3.298 0 0 1-2.421-1.002 3.299 3.299 0 0 1-1.002-2.42 3.3 3.3 0 0 1 1.002-2.422 3.298 3.298 0 0 1 2.421-1.002c.946 0 1.753.334 2.421 1.002a3.298 3.298 0 0 1 1.002 2.421c0 .946-.334 1.753-1.002 2.421a3.298 3.298 0 0 1-2.421 1.002Zm.002-1.5c.53 0 .982-.188 1.358-.565a1.86 1.86 0 0 0 .563-1.36c0-.53-.188-.982-.565-1.357a1.857 1.857 0 0 0-1.36-.564c-.53 0-.982.189-1.358.566a1.86 1.86 0 0 0-.563 1.36c0 .529.188.981.565 1.357.377.375.83.563 1.36.563ZM4 8.62 2.9 7.581a13.299 13.299 0 0 1 4.08-2.72c1.543-.664 3.215-.996 5.018-.996s3.475.332 5.018.995a13.298 13.298 0 0 1 4.08 2.72l-1.1 1.039a11.874 11.874 0 0 0-3.627-2.387 11.085 11.085 0 0 0-4.371-.867c-1.551 0-3.008.289-4.371.867A11.874 11.874 0 0 0 4 8.619Zm12.75 3.108a7.024 7.024 0 0 0-2.165-1.382 6.861 6.861 0 0 0-2.587-.48c-.93 0-1.79.16-2.575.48-.786.32-1.511.78-2.177 1.382l-1.1-1.039A8.988 8.988 0 0 1 8.84 8.97a8.27 8.27 0 0 1 3.159-.604 8.2 8.2 0 0 1 3.15.604 9.009 9.009 0 0 1 2.686 1.72l-1.084 1.038Z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 751,
        columnNumber: 29
      }
    }))), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 758,
        columnNumber: 25
      }
    }, " ", "Broadcaster ", __jsx("br", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 760,
        columnNumber: 39
      }
    }), " dashboard")))), __jsx("li", {
      className: "border-b border-base-400",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 786,
        columnNumber: 19
      }
    }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: "/help",
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 787,
        columnNumber: 21
      }
    }, __jsx("a", {
      className: "menu-link",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 788,
        columnNumber: 23
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      fill: "none",
      viewBox: "0 0 24 24",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 789,
        columnNumber: 25
      }
    }, __jsx("path", {
      fill: "#121212",
      d: "m13.375 22-.25-2.75h-1c-2.383 0-4.417-.842-6.1-2.525-1.683-1.683-2.525-3.717-2.525-6.1 0-2.383.846-4.417 2.537-6.1C7.73 2.842 9.775 2 12.175 2c1.183 0 2.28.212 3.287.638A7.99 7.99 0 0 1 18.1 4.425a8.336 8.336 0 0 1 1.762 2.713c.426 1.041.638 2.179.638 3.412 0 1.1-.163 2.2-.488 3.3A12.98 12.98 0 0 1 18.6 17c-.617 1-1.367 1.925-2.25 2.775A15.223 15.223 0 0 1 13.375 22Zm1.25-2.7a12.598 12.598 0 0 0 3.212-4.063C18.613 13.68 19 12.117 19 10.55c0-2.067-.646-3.758-1.938-5.075-1.291-1.317-2.92-1.975-4.887-1.975-2 0-3.696.696-5.088 2.088C5.697 6.979 5 8.658 5 10.625s.696 3.646 2.088 5.037c1.391 1.392 3.07 2.088 5.037 2.088h2.5v1.55Zm-2.45-2.875a.918.918 0 0 0 .675-.275.918.918 0 0 0 .275-.675.918.918 0 0 0-.275-.675.918.918 0 0 0-.675-.275.918.918 0 0 0-.675.275.918.918 0 0 0-.275.675c0 .267.092.492.275.675a.918.918 0 0 0 .675.275Zm-.675-3.4h1.25c0-.417.07-.763.213-1.037.141-.275.437-.638.887-1.088.45-.45.767-.863.95-1.238.183-.375.275-.779.275-1.212 0-.75-.254-1.367-.762-1.85-.509-.483-1.188-.725-2.038-.725a3.3 3.3 0 0 0-1.875.55 3.3 3.3 0 0 0-1.225 1.5l1.15.475c.183-.433.438-.754.763-.963a2.016 2.016 0 0 1 1.112-.312c.5 0 .892.12 1.175.362.283.242.425.563.425.963 0 .317-.092.638-.275.963-.183.325-.508.729-.975 1.212-.45.467-.738.842-.863 1.125-.124.283-.187.708-.187 1.275Z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 796,
        columnNumber: 27
      }
    })), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 802,
        columnNumber: 25
      }
    }, " Help Center")))), __jsx("li", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 807,
        columnNumber: 19
      }
    }, __jsx("button", {
      onClick: () => this.beforeLogout(),
      className: "menu-link",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 808,
        columnNumber: 21
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      fill: "none",
      viewBox: "0 0 24 24",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 812,
        columnNumber: 23
      }
    }, __jsx("mask", {
      id: "a",
      width: "24",
      height: "24",
      x: "0",
      y: "0",
      maskUnits: "userSpaceOnUse",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 819,
        columnNumber: 25
      }
    }, __jsx("path", {
      fill: "#D9D9D9",
      d: "M0 0h24v24H0z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 827,
        columnNumber: 27
      }
    })), __jsx("g", {
      mask: "url(#a)",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 829,
        columnNumber: 25
      }
    }, __jsx("path", {
      fill: "#121212",
      d: "M5.308 20.5c-.505 0-.933-.175-1.283-.525a1.745 1.745 0 0 1-.525-1.283V5.308c0-.505.175-.933.525-1.283.35-.35.778-.525 1.283-.525h6.702V5H5.308a.294.294 0 0 0-.212.096.294.294 0 0 0-.096.212v13.384c0 .077.032.148.096.212a.294.294 0 0 0 .212.096h6.702v1.5H5.308Zm10.923-4.23-1.039-1.085 2.435-2.435h-8.53v-1.5h8.53l-2.435-2.435 1.039-1.084L20.5 12l-4.27 4.27Z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 830,
        columnNumber: 27
      }
    }))), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 837,
        columnNumber: 23
      }
    }, " Logout"))), __jsx("li", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 841,
        columnNumber: 19
      }
    }, __jsx("p", {
      className: "flex items-center h-12 gap-3 px-3 mt-2 text-xs text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 842,
        columnNumber: 21
      }
    }, "\xA9 2024 ", __jsx("br", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 843,
        columnNumber: 35
      }
    }), "Caster Widenet LLC"))))), !loggedIn && __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx("h2", {
      className: "mb-3 text-xl text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 854,
        columnNumber: 15
      }
    }, "Welcome to Caster!"), __jsx("ul", {
      className: "mb-1 text-sm text-black px-6 sidebar_features",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 855,
        columnNumber: 15
      }
    }, __jsx("li", {
      className: "text-black text-[14px] font-[500]",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 856,
        columnNumber: 17
      }
    }, "Live Streaming"), __jsx("li", {
      className: "text-black text-[14px] font-[500]",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 859,
        columnNumber: 17
      }
    }, "Short Videos"), __jsx("li", {
      className: "text-black text-[14px] font-[500]",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 862,
        columnNumber: 17
      }
    }, "Photos")), __jsx("p", {
      className: "text-black px-6",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 865,
        columnNumber: 15
      }
    }, "of ", __jsx("b", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 866,
        columnNumber: 20
      }
    }, "Appealing Creators")), __jsx("p", {
      className: "text-black px-6",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 868,
        columnNumber: 15
      }
    }, "for their ", __jsx("b", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 869,
        columnNumber: 27
      }
    }, "Supportive Fans")), __jsx("button", {
      type: "button",
      onClick: () => updateModals({
        isRegisterModalOpen: true
      }),
      className: `${Object(_components_ui_shared_AppButton__WEBPACK_IMPORTED_MODULE_18__["buttonVariants"])()} w-full mt-6 mb-6`,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 872,
        columnNumber: 15
      }
    }, "Sign up"), __jsx(next_link__WEBPACK_IMPORTED_MODULE_4___default.a, {
      href: "/help",
      passHref: true,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 880,
        columnNumber: 15
      }
    }, __jsx("a", {
      href: "#",
      className: "menu-link",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 881,
        columnNumber: 17
      }
    }, __jsx("svg", {
      xmlns: "http://www.w3.org/2000/svg",
      width: "24",
      height: "24",
      fill: "none",
      viewBox: "0 0 24 24",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 882,
        columnNumber: 19
      }
    }, __jsx("path", {
      fill: "#121212",
      d: "m13.375 22-.25-2.75h-1c-2.383 0-4.417-.842-6.1-2.525-1.683-1.683-2.525-3.717-2.525-6.1 0-2.383.846-4.417 2.537-6.1C7.73 2.842 9.775 2 12.175 2c1.183 0 2.28.212 3.287.638A7.99 7.99 0 0 1 18.1 4.425a8.336 8.336 0 0 1 1.762 2.713c.426 1.041.638 2.179.638 3.412 0 1.1-.163 2.2-.488 3.3A12.98 12.98 0 0 1 18.6 17c-.617 1-1.367 1.925-2.25 2.775A15.223 15.223 0 0 1 13.375 22Zm1.25-2.7a12.598 12.598 0 0 0 3.212-4.063C18.613 13.68 19 12.117 19 10.55c0-2.067-.646-3.758-1.938-5.075-1.291-1.317-2.92-1.975-4.887-1.975-2 0-3.696.696-5.088 2.088C5.697 6.979 5 8.658 5 10.625s.696 3.646 2.088 5.037c1.391 1.392 3.07 2.088 5.037 2.088h2.5v1.55Zm-2.45-2.875a.918.918 0 0 0 .675-.275.918.918 0 0 0 .275-.675.918.918 0 0 0-.275-.675.918.918 0 0 0-.675-.275.918.918 0 0 0-.675.275.918.918 0 0 0-.275.675c0 .267.092.492.275.675a.918.918 0 0 0 .675.275Zm-.675-3.4h1.25c0-.417.07-.763.213-1.037.141-.275.437-.638.887-1.088.45-.45.767-.863.95-1.238.183-.375.275-.779.275-1.212 0-.75-.254-1.367-.762-1.85-.509-.483-1.188-.725-2.038-.725a3.3 3.3 0 0 0-1.875.55 3.3 3.3 0 0 0-1.225 1.5l1.15.475c.183-.433.438-.754.763-.963a2.016 2.016 0 0 1 1.112-.312c.5 0 .892.12 1.175.362.283.242.425.563.425.963 0 .317-.092.638-.275.963-.183.325-.508.729-.975 1.212-.45.467-.738.842-.863 1.125-.124.283-.187.708-.187 1.275Z",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 889,
        columnNumber: 21
      }
    })), __jsx("span", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 895,
        columnNumber: 19
      }
    }, " Help Center"))), __jsx("p", {
      className: "flex items-center h-12 gap-3 px-3 mt-2 text-xs text-black",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 899,
        columnNumber: 15
      }
    }, "\xA9 2024 ", __jsx("br", {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 900,
        columnNumber: 29
      }
    }), "Caster Widenet Inc."))));
  }
}
Sidebar.contextType = src_socket__WEBPACK_IMPORTED_MODULE_10__["SocketContext"];
const mapState = state => _objectSpread(_objectSpread({
  user: _objectSpread({}, state.user.current),
  ui: _objectSpread({}, state.ui),
  config: _objectSpread({}, state.settings)
}, state.streaming), {}, {
  notificationCount: state.notification.total,
  isUnreadsNotification: state.notification.isUnreadsNotification,
  fetchNotificationSuccess: state.notification.success,
  loggedIn: state.auth.loggedIn,
  modals: _objectSpread({}, state.modals)
});
const mapDispatch = {
  logout: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_5__["logout"],
  logoutSuccess: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_5__["logoutSuccess"],
  addPrivateRequest: _redux_streaming_actions__WEBPACK_IMPORTED_MODULE_11__["addPrivateRequest"],
  accessPrivateRequest: _redux_streaming_actions__WEBPACK_IMPORTED_MODULE_11__["accessPrivateRequest"],
  setUnreadCount: _redux_notification_actions__WEBPACK_IMPORTED_MODULE_12__["setUnreadCount"],
  updateUIValue: src_redux_ui_actions__WEBPACK_IMPORTED_MODULE_13__["updateUIValue"],
  updateBalance: _redux_user_actions__WEBPACK_IMPORTED_MODULE_14__["updateBalance"],
  cancelPrivateRequest: _redux_streaming_actions__WEBPACK_IMPORTED_MODULE_11__["cancelPrivateRequest"],
  updateCurrentUser: _redux_user_actions__WEBPACK_IMPORTED_MODULE_14__["updateCurrentUser"],
  addMuted: _redux_streaming_actions__WEBPACK_IMPORTED_MODULE_11__["addMuted"],
  updateModals: _redux_modals_actions__WEBPACK_IMPORTED_MODULE_19__["updateModals"],
  updateTabValue: src_redux_ui_actions__WEBPACK_IMPORTED_MODULE_13__["updateTabValue"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(next_router__WEBPACK_IMPORTED_MODULE_7__["withRouter"])(Object(react_redux__WEBPACK_IMPORTED_MODULE_2__["connect"])(mapState, mapDispatch)(Sidebar)));

/***/ }),

/***/ "./src/layouts/stream-sidebar-layout.tsx":
/*!***********************************************!*\
  !*** ./src/layouts/stream-sidebar-layout.tsx ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dynamic */ "next/dynamic");
/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dynamic__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _redux_ui_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @redux/ui/actions */ "./src/redux/ui/actions.ts");
/* harmony import */ var _components_common_layout_sidebar_layout_stream_sidebar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @components/common/layout/sidebar-layout/stream-sidebar */ "./src/components/common/layout/sidebar-layout/stream-sidebar.tsx");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./primary-layout.less */ "./src/layouts/primary-layout.less");
/* harmony import */ var _primary_layout_less__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_primary_layout_less__WEBPACK_IMPORTED_MODULE_7__);
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\layouts\\stream-sidebar-layout.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }








const Header = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(() => __webpack_require__.e(/*! import() */ 2).then(__webpack_require__.bind(null, /*! @components/common/layout/header */ "./src/components/common/layout/header.tsx")), {
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/common/layout/header */ "./src/components/common/layout/header.tsx")],
    modules: ['@components/common/layout/header']
  }
});
const Loader = next_dynamic__WEBPACK_IMPORTED_MODULE_1___default()(() => __webpack_require__.e(/*! import() */ 0).then(__webpack_require__.bind(null, /*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")), {
  loadableGenerated: {
    webpack: () => [/*require.resolve*/(/*! @components/common/base/loader */ "./src/components/common/base/loader.tsx")],
    modules: ['@components/common/base/loader']
  }
});
class StreamSidebarLayout extends react__WEBPACK_IMPORTED_MODULE_0__["PureComponent"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "state", {
      routerChange: false
    });
  }
  componentDidMount() {
    const {
      loadUIValue: handleLoadUI
    } = this.props;
     false && false;
     false && false;
  }
  handleStateChange() {
    next_router__WEBPACK_IMPORTED_MODULE_4__["Router"].events.on('routeChangeStart', async () => this.setState({
      routerChange: true
    }));
    next_router__WEBPACK_IMPORTED_MODULE_4__["Router"].events.on('routeChangeComplete', async () => this.setState({
      routerChange: false
    }));
  }
  render() {
    const {
      children,
      ui
    } = this.props;
    const {
      routerChange
    } = this.state;
    return __jsx(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, null, __jsx(Header, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 45,
        columnNumber: 9
      }
    }), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Layout"], {
      className: "main-container",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 46,
        columnNumber: 9
      }
    }, __jsx("div", {
      className: (ui === null || ui === void 0 ? void 0 : ui.theme) === 'dark' ? 'container dark' : 'container',
      id: "primaryLayout",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 47,
        columnNumber: 11
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Row"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 51,
        columnNumber: 13
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      md: 18,
      className: "primary-content",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 52,
        columnNumber: 15
      }
    }, __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Layout"].Content, {
      className: "content",
      style: {
        position: 'relative'
      },
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53,
        columnNumber: 17
      }
    }, routerChange && __jsx(Loader, {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 57,
        columnNumber: 36
      }
    }), children), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["BackTop"], {
      className: "backTop",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60,
        columnNumber: 17
      }
    })), __jsx(antd__WEBPACK_IMPORTED_MODULE_2__["Col"], {
      xs: 24,
      md: 6,
      id: "right-sidebar-sidebar",
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 62,
        columnNumber: 15
      }
    }, __jsx(_components_common_layout_sidebar_layout_stream_sidebar__WEBPACK_IMPORTED_MODULE_6__["default"], {
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 63,
        columnNumber: 17
      }
    }))))));
  }
}
const mapStateToProps = state => ({
  ui: _objectSpread({}, state.ui)
});
const mapDispatchToProps = {
  loadUIValue: _redux_ui_actions__WEBPACK_IMPORTED_MODULE_5__["loadUIValue"]
};
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStateToProps, mapDispatchToProps)(StreamSidebarLayout));

/***/ }),

/***/ "./src/lib/firebase.ts":
/*!*****************************!*\
  !*** ./src/lib/firebase.ts ***!
  \*****************************/
/*! exports provided: auth, provider, signInWithPopup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "auth", function() { return auth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "provider", function() { return provider; });
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ "firebase/app");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(firebase_app__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ "firebase/auth");
/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(firebase_auth__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "signInWithPopup", function() { return firebase_auth__WEBPACK_IMPORTED_MODULE_1__["signInWithPopup"]; });



const firebaseConfig = {
  apiKey: "AIzaSyBCRxJrjnk3_f1WD5pel4_4xTHsJIQ4KqU",
  authDomain: "caster-42104.firebaseapp.com",
  projectId: "caster-42104",
  messagingSenderId: "389245181850",
  appId: "1:389245181850:web:fa3bd77eda962808422423"
};
const app = Object(firebase_app__WEBPACK_IMPORTED_MODULE_0__["getApps"])().length === 0 ? Object(firebase_app__WEBPACK_IMPORTED_MODULE_0__["initializeApp"])(firebaseConfig) : Object(firebase_app__WEBPACK_IMPORTED_MODULE_0__["getApp"])();
const auth = Object(firebase_auth__WEBPACK_IMPORTED_MODULE_1__["getAuth"])(app);
const provider = new firebase_auth__WEBPACK_IMPORTED_MODULE_1__["GoogleAuthProvider"]();


/***/ }),

/***/ "./src/lib/redux.ts":
/*!**************************!*\
  !*** ./src/lib/redux.ts ***!
  \**************************/
/*! exports provided: createSagas, createAction, createAsyncAction, createAsyncActions, createSelectorsA, handleActions, createReducers, createSelectors, createSelector, createJSSelectors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSagas", function() { return createSagas; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAction", function() { return createAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsyncAction", function() { return createAsyncAction; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createAsyncActions", function() { return createAsyncActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelectorsA", function() { return createSelectorsA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "handleActions", function() { return handleActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createReducers", function() { return createReducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createSelectors", function() { return createSelectors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createJSSelectors", function() { return createJSSelectors; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! reselect */ "reselect");
/* harmony import */ var reselect__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(reselect__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "createSelector", function() { return reselect__WEBPACK_IMPORTED_MODULE_1__["createSelector"]; });

/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! redux-actions */ "redux-actions");
/* harmony import */ var redux_actions__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(redux_actions__WEBPACK_IMPORTED_MODULE_3__);
/* eslint-disable no-param-reassign */
/* eslint-disable func-names */




function createAction(type) {
  const action = Object(redux_actions__WEBPACK_IMPORTED_MODULE_3__["createAction"])(type);
  action.is = aType => action.toString() === aType;
  return action;
}

/* tslint:disable-next-line */
function createAsyncAction(action, type) {
  return {
    [action]: createAction(type),
    [`${action}Success`]: createAction(`${type}_SUCCESS`),
    [`${action}Fail`]: createAction(`${type}_FAIL`)
  };
}
function createAsyncActions(type) {
  return [createAction(type), createAction(`${type}_SUCCESS`), createAction(`${type}_FAIL`)];
}

/* tslint:disable */
function handleActions(actions, initialState) {
  return Object(redux_actions__WEBPACK_IMPORTED_MODULE_3__["handleActions"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(actions, (reducer, handler, action) => {
    reducer[action] = (state, act) => handler(state.set('action', action), act);
    return reducer;
  }, {}), initialState);
}
function createReducers(stateContext, reducers, initialState, preventResetting = false) {
  return {
    [stateContext]: Object(redux_actions__WEBPACK_IMPORTED_MODULE_3__["handleActions"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])(reducers), (reducer, action) => {
      if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(action.on)) {
        action.on.forEach(act => {
          reducer[act] = action.reducer;
        });
      } else reducer[action.on] = action.reducer;
      return reducer;
    }, preventResetting ? {} : {
      APP_STATE_RESET: () => initialState
    }), initialState)
  };
}
function createSagas(sagas) {
  return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])(sagas).map(saga => {
    const {
      on,
      effect = redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["takeLatest"],
      worker
    } = saga;
    return function* () {
      yield effect(on, function* (action) {
        yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["delay"])(0);
        yield worker(action);
      });
    };
  });
}
function createSelectorsA(context, keys = []) {
  const stateSelector = state => state[context];
  if (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isEmpty"])(keys)) return stateSelector;
  return keys.map(key => state => Object(lodash__WEBPACK_IMPORTED_MODULE_0__["isArray"])(key) ? stateSelector(state).getIn(key) : stateSelector(state).get(key));
}
function createSelectors(context, keys) {
  const stateSelector = state => state[context];
  return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(keys, (selectors, key) => {
    selectors[`${key}Selector`] = state => stateSelector(state).get(key);
    return selectors;
  }, {});
}
function createJSSelectors(context, keys) {
  const stateSelector = state => state[context];
  return Object(lodash__WEBPACK_IMPORTED_MODULE_0__["reduce"])(keys, (selectors, key) => {
    selectors[`${key}Selector`] = state => stateSelector(state)[key];
    return selectors;
  }, {});
}


/***/ }),

/***/ "./src/lib/storeHolder.ts":
/*!********************************!*\
  !*** ./src/lib/storeHolder.ts ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
let store = null;
/* harmony default export */ __webpack_exports__["default"] = ({
  getStore: () => store,
  setStore: s => {
    store = s;
  }
});

/***/ }),

/***/ "./src/lib/string.ts":
/*!***************************!*\
  !*** ./src/lib/string.ts ***!
  \***************************/
/*! exports provided: isUrl, capitalizeFirstLetter, isEmail, generateUuid, checkHeadTitle */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isUrl", function() { return isUrl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "capitalizeFirstLetter", function() { return capitalizeFirstLetter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isEmail", function() { return isEmail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "generateUuid", function() { return generateUuid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "checkHeadTitle", function() { return checkHeadTitle; });
/* eslint-disable no-useless-escape */
function isUrl(url) {
  const regex = /(http|https):\/\/(\w+:{0,1}\w*)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%!\-\/]))?/;
  return regex.test(url);
}
function capitalizeFirstLetter(str) {
  return (str === null || str === void 0 ? void 0 : str.charAt(0).toUpperCase()) + (str === null || str === void 0 ? void 0 : str.slice(1));
}
function isEmail(email) {
  return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(email);
}
const generateUuid = () => 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {
  /* eslint-disable */
  const r = Math.random() * 16 | 0;
  const v = c === 'x' ? r : r & 0x3 | 0x8;
  return v.toString(16);
});
function checkHeadTitle(tab) {
  switch (tab) {
    case 'video':
      return 'Discover Videos';
    case 'photo':
      return 'Discover Photos';
    case 'hashtag':
      return 'Discover HashTags';
    default:
      break;
  }
}

/***/ }),

/***/ "./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/*! exports provided: arrayToTree, pathMatchRegexp, queryAncestors, getResponseError, delay, redirect404 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arrayToTree", function() { return arrayToTree; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pathMatchRegexp", function() { return pathMatchRegexp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "queryAncestors", function() { return queryAncestors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getResponseError", function() { return getResponseError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "delay", function() { return delay; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "redirect404", function() { return redirect404; });
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path-to-regexp */ "path-to-regexp");
/* harmony import */ var path_to_regexp__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path_to_regexp__WEBPACK_IMPORTED_MODULE_2__);




/**
 * Convert an array to a tree-structured array.
 * @param   {array}     array     The Array need to Converted.
 * @param   {string}    id        The alias of the unique ID of the object in the array.
 * @param   {string}    parentId       The alias of the parent ID of the object in the array.
 * @param   {string}    children  The alias of children of the object in the array.
 * @return  {array}    Return a tree-structured array.
 */
function arrayToTree(array, id = 'id', parentId = 'pid', children = 'children') {
  const result = [];
  const hash = {};
  const data = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["cloneDeep"])(array);
  data.forEach((item, index) => {
    hash[data[index][id]] = data[index];
  });
  data.forEach(item => {
    const hashParent = hash[item[parentId]];
    if (hashParent) {
      !hashParent[children] && (hashParent[children] = []);
      hashParent[children].push(item);
    } else {
      result.push(item);
    }
  });
  return result;
}

/**
 * Whether the path matches the regexp if the language prefix is ignored, https://github.com/pillarjs/path-to-regexp.
 * @param   {string|regexp|array}     regexp     Specify a string, array of strings, or a regular expression.
 * @param   {string}                  pathname   Specify the pathname to match.
 * @return  {array|null}              Return the result of the match or null.
 */
function pathMatchRegexp(regexp, pathname) {
  return path_to_regexp__WEBPACK_IMPORTED_MODULE_2__["pathToRegexp"](regexp).exec(pathname);
}

/**
 * In an array of objects, specify an object that traverses the objects whose parent ID matches.
 * @param   {array}     array     The Array need to Converted.
 * @param   {string}    current   Specify the object that needs to be queried.
 * @param   {string}    parentId  The alias of the parent ID of the object in the array.
 * @param   {string}    id        The alias of the unique ID of the object in the array.
 * @return  {array}    Return a key array.
 */
function queryAncestors(array, current, parentId, id = 'id') {
  const result = [current];
  const hashMap = new Map();
  array.forEach(item => hashMap.set(item[id], item));
  const getPath = pr => {
    const currentParentId = hashMap.get(pr[id])[parentId];
    if (currentParentId) {
      result.push(hashMap.get(currentParentId));
      getPath(hashMap.get(currentParentId));
    }
  };
  getPath(current);
  return result;
}
function getResponseError(data) {
  if (!data) {
    return '';
  }
  if (Array.isArray(data.message)) {
    const item = data.message[0];
    if (!item.constraints) {
      return data.error || 'Bad request!';
    }
    return Object.values(item.constraints)[0];
  }

  // TODO - parse for langauge or others
  return typeof data.message === 'string' ? data.message : 'Bad request!';
}
function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
function redirect404(ctx = null) {
  if (false) {}
  if (!ctx) return {};
  ctx.res.writeHead && ctx.res.writeHead(302, {
    Location: '/404'
  });
  ctx.res.end && ctx.res.end();
  // getInitialProps should not return undefined
  return {};
}

/***/ }),

/***/ "./src/redux/auth/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/auth/actions.ts ***!
  \***********************************/
/*! exports provided: login, loginSuccess, loginFail, loginPerformer, loginSocial, registerFan, registerFanSuccess, registerFanFail, verifiedFanSuccess, registerPerformer, registerPerformerSuccess, registerPerformerFail, forgot, forgotSuccess, forgotFail, logout, logoutSuccess, getCurrentUser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "login", function() { return login; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginSuccess", function() { return loginSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginFail", function() { return loginFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginPerformer", function() { return loginPerformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loginSocial", function() { return loginSocial; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerFan", function() { return registerFan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerFanSuccess", function() { return registerFanSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerFanFail", function() { return registerFanFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "verifiedFanSuccess", function() { return verifiedFanSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerPerformer", function() { return registerPerformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerPerformerSuccess", function() { return registerPerformerSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "registerPerformerFail", function() { return registerPerformerFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forgot", function() { return forgot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forgotSuccess", function() { return forgotSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "forgotFail", function() { return forgotFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logout", function() { return logout; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logoutSuccess", function() { return logoutSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCurrentUser", function() { return getCurrentUser; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  login,
  loginSuccess,
  loginFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('login', 'LOGIN');
const {
  loginPerformer
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loginPerformer', 'LOGINPERFORMER');
const {
  loginSocial
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loginSocial', 'LOGINSOCIAL');
const {
  registerFan,
  registerFanSuccess,
  registerFanFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('registerFan', 'REGISTERFAN');
const {
  verifiedFanSuccess
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('verifiedFanSuccess', 'VERIFIEDFANSUCCESS');
const {
  registerPerformer,
  registerPerformerSuccess,
  registerPerformerFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('registerPerformer', 'REGISTERPERFORMER');
const {
  forgot,
  forgotSuccess,
  forgotFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('forgot', 'FORGOT');
const logout = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('logout');
const logoutSuccess = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('logoutSuccess');
const getCurrentUser = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('getCurrentUser');

/***/ }),

/***/ "./src/redux/auth/reducers.ts":
/*!************************************!*\
  !*** ./src/redux/auth/reducers.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/auth/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  isLoading: false,
  verified: false,
  loggedIn: false,
  authUser: null,
  loginAuth: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  registerFanData: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  registerPerformerData: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  forgotData: {
    requesting: false,
    error: null,
    data: null,
    success: false
  }
};
const authReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["login"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      loginAuth: {
        requesting: true,
        error: null,
        data: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loginPerformer"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      loginAuth: {
        requesting: true,
        error: null,
        data: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loginSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      loggedIn: true,
      loginAuth: {
        requesting: false,
        error: null,
        data: data.payload,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loginFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      loggedIn: false,
      loginAuth: {
        requesting: false,
        error: data.payload,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["registerFan"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerFanData: {
        requesting: true,
        error: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["registerFanSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerFanData: {
        requesting: false,
        error: null,
        data: data.payload,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["verifiedFanSuccess"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      verified: true
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["registerFanFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerFanData: {
        requesting: false,
        error: data.payload,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["registerPerformer"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerPerformerData: {
        requesting: true,
        error: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["registerPerformerSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerPerformerData: {
        requesting: false,
        error: null,
        data: data.payload,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["registerPerformerFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerPerformerData: {
        requesting: false,
        error: data.payload,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["forgotSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerFanData: {
        requesting: false,
        data: data.payload,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["forgotFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      registerFanData: {
        requesting: false,
        data: data.payload,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["logout"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      isLoading: true
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["logoutSuccess"],
  reducer(state) {
    return _objectSpread({}, initialState);
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('auth', [authReducers], initialState)));

/***/ }),

/***/ "./src/redux/auth/sagas.ts":
/*!*********************************!*\
  !*** ./src/redux/auth/sagas.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var src_services__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/services */ "./src/services/index.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _user_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../user/actions */ "./src/redux/user/actions.ts");
/* harmony import */ var _redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @redux/modals/actions */ "./src/redux/modals/actions.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var _feed_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../feed/actions */ "./src/redux/feed/actions.ts");
/* harmony import */ var _lib_storeHolder__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @lib/storeHolder */ "./src/lib/storeHolder.ts");











const authSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["login"],
  *worker(data) {
    try {
      var _userResp$data;
      const payload = data.payload;
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_feed_actions__WEBPACK_IMPORTED_MODULE_9__["resetFeeds"])());
      const resp = (yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].login(payload)).data;
      // store token, update store and redirect to dashboard page
      yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].setToken(resp.token, payload === null || payload === void 0 ? void 0 : payload.remember);
      const userResp = yield src_services__WEBPACK_IMPORTED_MODULE_4__["userService"].me();
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_user_actions__WEBPACK_IMPORTED_MODULE_6__["updateCurrentUser"])(userResp.data));
      // yield put(loginSuccess(userResp.data));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__["updateModals"])({
        isLoginModalOpen: false
      }));
      userResp !== null && userResp !== void 0 && userResp.data && (_userResp$data = userResp.data) !== null && _userResp$data !== void 0 && _userResp$data.isUpdateProfile ? next_router__WEBPACK_IMPORTED_MODULE_3___default.a.push('/home') : next_router__WEBPACK_IMPORTED_MODULE_3___default.a.push('/model/account');
    } catch (e) {
      const error = yield Promise.resolve(e);
      if ((error === null || error === void 0 ? void 0 : error.statusCode) === 404) {
        antd__WEBPACK_IMPORTED_MODULE_5__["message"].error('This account does not appear to exist. Please sign up to get started.');
      } else {
        antd__WEBPACK_IMPORTED_MODULE_5__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Incorrect credentials!');
        yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["loginFail"])(error));
      }
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["loginSocial"],
  *worker(data) {
    try {
      var _userResp$data2, _userResp$data3;
      const payload = data.payload;
      const {
        token
      } = payload;
      yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].setToken(token);
      const userResp = yield src_services__WEBPACK_IMPORTED_MODULE_4__["userService"].me();
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_user_actions__WEBPACK_IMPORTED_MODULE_6__["updateCurrentUser"])(userResp.data));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["loginSuccess"])());
      if (!(userResp !== null && userResp !== void 0 && (_userResp$data2 = userResp.data) !== null && _userResp$data2 !== void 0 && _userResp$data2.isPerformer)) {
        next_router__WEBPACK_IMPORTED_MODULE_3___default.a.push(!userResp.data.email || !userResp.data.username ? '/user/account' : '/home');
      }
      if (userResp !== null && userResp !== void 0 && (_userResp$data3 = userResp.data) !== null && _userResp$data3 !== void 0 && _userResp$data3.isPerformer) {
        !userResp.data.email || !userResp.data.username ? next_router__WEBPACK_IMPORTED_MODULE_3___default.a.push('/model/account') : next_router__WEBPACK_IMPORTED_MODULE_3___default.a.push({
          pathname: '/model/profile',
          query: {
            username: userResp.data.username || userResp.data._id
          }
        }, `/${userResp.data.username || userResp.data._id}`);
      }
    } catch (e) {
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_5__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Incorrect credentials!');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["loginFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["registerFan"],
  *worker(data) {
    try {
      const payload = data.payload;
      const resp = (yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].register(payload)).data;
      const store = _lib_storeHolder__WEBPACK_IMPORTED_MODULE_10__["default"].getStore();
      store.dispatch(Object(_redux_modals_actions__WEBPACK_IMPORTED_MODULE_7__["updateModals"])({
        isLoginModalOpen: true,
        isRegisterModalOpen: false
      }));
      antd__WEBPACK_IMPORTED_MODULE_5__["message"].success((resp === null || resp === void 0 ? void 0 : resp.message) || 'Sign up success!', 10);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["registerFanSuccess"])(resp));
    } catch (e) {
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_5__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'This Username or email address has been already taken.', 5);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["registerFanFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["registerPerformer"],
  *worker(data) {
    try {
      const verificationFiles = [{
        fieldname: 'idVerification',
        file: data.payload.idVerificationFile
      }, {
        fieldname: 'documentVerification',
        file: data.payload.documentVerificationFile
      }];
      const payload = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["pick"])(data.payload, ['name', 'username', 'password', 'gender', 'email', 'firstName', 'lastName', 'country', 'dateOfBirth']);
      const resp = (yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].registerPerformer(verificationFiles, payload, () => {})).data;
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["registerPerformerSuccess"])(resp));
    } catch (e) {
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_5__["message"].error(error.message || 'An error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["registerPerformerFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["logout"],
  *worker() {
    window.location.replace("/home");
    yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].removeToken();
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["forgot"],
  *worker(data) {
    try {
      const payload = data.payload;
      const resp = (yield src_services__WEBPACK_IMPORTED_MODULE_4__["authService"].resetPassword(payload)).data;
      antd__WEBPACK_IMPORTED_MODULE_5__["message"].success('We\'ve sent an email to reset your password, please check your inbox.', 10);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["forgotSuccess"])(resp));
    } catch (e) {
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_5__["message"].error(error && error.message || 'Something went wrong. Please try again later', 5);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_8__["forgotFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_8__["getCurrentUser"],
  *worker() {
    try {
      const userResp = yield src_services__WEBPACK_IMPORTED_MODULE_4__["userService"].me();
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_user_actions__WEBPACK_IMPORTED_MODULE_6__["updateCurrentUser"])(userResp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      // eslint-disable-next-line no-console
      console.log(error);
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(authSagas)]));

/***/ }),

/***/ "./src/redux/cart/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/cart/actions.ts ***!
  \***********************************/
/*! exports provided: addCart, removeCart, clearCart, updateItemCart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addCart", function() { return addCart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeCart", function() { return removeCart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "clearCart", function() { return clearCart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateItemCart", function() { return updateItemCart; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  addCart
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('addCart', 'ADD_CART');
const {
  removeCart
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('removeCart', 'REMOVE_CART');
const {
  clearCart
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('clearCart', 'CLEAR_CART');
const {
  updateItemCart
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updateItemCart', 'UPDATE_ITEM_CART');

/***/ }),

/***/ "./src/redux/cart/reducers.ts":
/*!************************************!*\
  !*** ./src/redux/cart/reducers.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/cart/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  total: 0,
  items: []
};
const cartReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["addCart"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      total: state.total + data.payload.length,
      items: [...state.items, ...data.payload]
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["removeCart"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      total: state.total - data.payload.length,
      items: [...state.items.filter(item => data.payload.indexOf(item) > -1)]
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["clearCart"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      total: 0,
      items: []
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateItemCart"],
  reducer(state, data) {
    const index = state.items.findIndex(element => element._id === data.payload.data._id);
    const newArray = [...state.items];
    if (index > -1) {
      newArray[index] = _objectSpread(_objectSpread({}, newArray[index]), {}, {
        quantity: data.payload.quantity || 1
      });
    }
    return _objectSpread(_objectSpread({}, state), {}, {
      items: newArray
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('cart', [cartReducers], initialState)));

/***/ }),

/***/ "./src/redux/comment/actions.ts":
/*!**************************************!*\
  !*** ./src/redux/comment/actions.ts ***!
  \**************************************/
/*! exports provided: getComments, getCommentsSuccess, getCommentsFail, moreComment, moreCommentSuccess, moreCommentFail, createComment, createCommentSuccess, createCommentFail, deleteComment, deleteCommentSuccess, deleteCommentFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getComments", function() { return getComments; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCommentsSuccess", function() { return getCommentsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCommentsFail", function() { return getCommentsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreComment", function() { return moreComment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreCommentSuccess", function() { return moreCommentSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreCommentFail", function() { return moreCommentFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createComment", function() { return createComment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCommentSuccess", function() { return createCommentSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createCommentFail", function() { return createCommentFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteComment", function() { return deleteComment; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteCommentSuccess", function() { return deleteCommentSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteCommentFail", function() { return deleteCommentFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getComments,
  getCommentsSuccess,
  getCommentsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getComments', 'GET_THE_COMMENTS');
const {
  moreComment,
  moreCommentSuccess,
  moreCommentFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreComment', 'MORE_COMMENT');
const {
  createComment,
  createCommentSuccess,
  createCommentFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('createComment', 'CREATE_COMMENT');
const {
  deleteComment,
  deleteCommentSuccess,
  deleteCommentFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('deleteComment', 'DELETE_COMMENT');

/***/ }),

/***/ "./src/redux/comment/reducers.ts":
/*!***************************************!*\
  !*** ./src/redux/comment/reducers.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/comment/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  activeObject: {},
  commentMapping: {},
  comment: {
    requesting: false,
    error: null,
    success: false,
    data: null
  }
};
const commentReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getComments"],
  reducer(state, data) {
    const {
      objectId
    } = data.payload;
    const nextState = _objectSpread({}, state);
    nextState.activeObject._id = objectId;
    nextState.commentMapping[objectId] = {
      requesting: true,
      items: [],
      total: 0
    };
    return _objectSpread({}, nextState);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getCommentsSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : nextState.activeObject._id;
    if (objectId) {
      nextState.commentMapping[objectId] = {
        items: data.payload.data,
        total: data.payload.total,
        requesting: false
      };
    }
    return _objectSpread(_objectSpread({}, nextState), {}, {
      // Remove me
      comment: {
        requesting: false,
        error: null,
        success: false,
        data: null
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getCommentsFail"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : nextState.activeObject._id;
    if (objectId) {
      nextState.commentMapping[objectId] = {
        items: [],
        total: 0,
        requesting: false
      };
    }
    return _objectSpread({}, nextState);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreComment"],
  reducer(state, data) {
    const {
      objectId
    } = data.payload;
    const nextState = _objectSpread({}, state);
    nextState.commentMapping[objectId].requesting = true;
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreCommentSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : null;
    if (objectId) {
      nextState.commentMapping[objectId] = {
        items: [...nextState.commentMapping[objectId].items, ...data.payload.data],
        total: data.payload.total,
        requesting: false
      };
    }
    return _objectSpread(_objectSpread({}, nextState), {}, {
      // Remove me
      comment: {
        requesting: false,
        error: null,
        success: false,
        data: null
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreCommentFail"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const objectId = data.payload.data && data.payload.data.length ? data.payload.data[0].objectId : null;
    if (objectId) {
      nextState.commentMapping[objectId] = {
        items: [],
        total: 0,
        requesting: false
      };
    }
    return _objectSpread({}, nextState);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["createComment"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      comment: _objectSpread(_objectSpread({}, state.comment), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["createCommentSuccess"],
  reducer(state, data) {
    var _nextState$commentMap;
    const nextState = _objectSpread({}, state);
    const {
      objectId
    } = data.payload;
    if (!(nextState !== null && nextState !== void 0 && nextState.commentMapping[objectId]) || !(nextState !== null && nextState !== void 0 && (_nextState$commentMap = nextState.commentMapping[objectId]) !== null && _nextState$commentMap !== void 0 && _nextState$commentMap.items)) {
      nextState.commentMapping[objectId] = {};
      nextState.commentMapping[objectId].items = [];
      nextState.commentMapping[objectId].total = 0;
    }
    nextState.commentMapping[objectId].items.unshift(data.payload);
    nextState.commentMapping[objectId].total += 1;
    return _objectSpread(_objectSpread({}, nextState), {}, {
      comment: {
        requesting: false,
        data: data.payload,
        error: null,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["createCommentFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      comment: {
        requesting: false,
        data: null,
        error: data.payload,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["deleteCommentSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const {
      objectId,
      _id
    } = data.payload;
    nextState.commentMapping[objectId].items.splice(nextState.commentMapping[objectId].items.findIndex(item => item._id === _id), 1);
    nextState.commentMapping[objectId].total -= 1;
    return _objectSpread({}, nextState);
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('comment', [commentReducers], initialState)));

/***/ }),

/***/ "./src/redux/comment/sagas.ts":
/*!************************************!*\
  !*** ./src/redux/comment/sagas.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions */ "./src/redux/comment/actions.ts");






const commentSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["getComments"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["commentService"].search(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getCommentsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getCommentsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["moreComment"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["commentService"].search(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["moreCommentSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["moreCommentFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["createComment"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["commentService"].create(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["createCommentSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield antd__WEBPACK_IMPORTED_MODULE_4__["message"].error('Error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["createCommentFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["deleteComment"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["commentService"].delete(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["deleteCommentSuccess"])(resp.data));
      yield antd__WEBPACK_IMPORTED_MODULE_4__["message"].success('Removed successfully!');
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield antd__WEBPACK_IMPORTED_MODULE_4__["message"].error('Error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["deleteCommentFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(commentSagas)]));

/***/ }),

/***/ "./src/redux/feed/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/feed/actions.ts ***!
  \***********************************/
/*! exports provided: getFeeds, getFeedsSuccess, getFeedsFail, moreFeeds, moreFeedsSuccess, moreFeedsFail, getFollowingFeeds, getFollowingFeedsSuccess, getFollowingFeedsFail, moreFollowingFeeds, moreFollowingFeedsSuccess, moreFollowingFeedsFail, getRecommendFeeds, getRecommendFeedsSuccess, getRecommendFeedsFail, moreRecommendFeeds, moreRecommendFeedsSuccess, moreRecommendFeedsFail, getTrendingFeeds, getTrendingFeedsSuccess, getTrendingFeedsFail, moreTrendingFeeds, moreTrendingFeedsSuccess, moreTrendingFeedsFail, getHashTagFeeds, getHashTagFeedsSuccess, getHashTagFeedsFail, moreHashTagFeeds, moreHashTagFeedsSuccess, moreHashTagFeedsFail, getVideoFeeds, getVideoFeedsSuccess, getVideoFeedsFail, moreVideoFeeds, moreVideoFeedsSuccess, moreVideoFeedsFail, getPhotoFeeds, getPhotoFeedsSuccess, getPhotoFeedsFail, morePhotoFeeds, morePhotoFeedsSuccess, morePhotoFeedsFail, getRelatedFeedsSuccess, removeFeedSuccess, removeTrendingFeedSuccess, resetFeeds, setMetaThumbnail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeeds", function() { return getFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeedsSuccess", function() { return getFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFeedsFail", function() { return getFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFeeds", function() { return moreFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFeedsSuccess", function() { return moreFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFeedsFail", function() { return moreFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFollowingFeeds", function() { return getFollowingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFollowingFeedsSuccess", function() { return getFollowingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getFollowingFeedsFail", function() { return getFollowingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFollowingFeeds", function() { return moreFollowingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFollowingFeedsSuccess", function() { return moreFollowingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreFollowingFeedsFail", function() { return moreFollowingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecommendFeeds", function() { return getRecommendFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecommendFeedsSuccess", function() { return getRecommendFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRecommendFeedsFail", function() { return getRecommendFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreRecommendFeeds", function() { return moreRecommendFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreRecommendFeedsSuccess", function() { return moreRecommendFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreRecommendFeedsFail", function() { return moreRecommendFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendingFeeds", function() { return getTrendingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendingFeedsSuccess", function() { return getTrendingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getTrendingFeedsFail", function() { return getTrendingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreTrendingFeeds", function() { return moreTrendingFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreTrendingFeedsSuccess", function() { return moreTrendingFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreTrendingFeedsFail", function() { return moreTrendingFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHashTagFeeds", function() { return getHashTagFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHashTagFeedsSuccess", function() { return getHashTagFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getHashTagFeedsFail", function() { return getHashTagFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreHashTagFeeds", function() { return moreHashTagFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreHashTagFeedsSuccess", function() { return moreHashTagFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreHashTagFeedsFail", function() { return moreHashTagFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideoFeeds", function() { return getVideoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideoFeedsSuccess", function() { return getVideoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideoFeedsFail", function() { return getVideoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFeeds", function() { return moreVideoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFeedsSuccess", function() { return moreVideoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFeedsFail", function() { return moreVideoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotoFeeds", function() { return getPhotoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotoFeedsSuccess", function() { return getPhotoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getPhotoFeedsFail", function() { return getPhotoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "morePhotoFeeds", function() { return morePhotoFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "morePhotoFeedsSuccess", function() { return morePhotoFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "morePhotoFeedsFail", function() { return morePhotoFeedsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedFeedsSuccess", function() { return getRelatedFeedsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeFeedSuccess", function() { return removeFeedSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeTrendingFeedSuccess", function() { return removeTrendingFeedSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetFeeds", function() { return resetFeeds; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setMetaThumbnail", function() { return setMetaThumbnail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getFeeds,
  getFeedsSuccess,
  getFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getFeeds', 'GET_FEEDS');
const {
  moreFeeds,
  moreFeedsSuccess,
  moreFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreFeeds', 'GET_MODE_FEEDS');
const {
  getFollowingFeeds,
  getFollowingFeedsSuccess,
  getFollowingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getFollowingFeeds', 'GET_FOLLOWING_FEEDS');
const {
  moreFollowingFeeds,
  moreFollowingFeedsSuccess,
  moreFollowingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreFollowingFeeds', 'GET_MODE_FOLLOWING_FEEDS');
const {
  getRecommendFeeds,
  getRecommendFeedsSuccess,
  getRecommendFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRecommendFeeds', 'GET_RECOMMEND_FEEDS');
const {
  moreRecommendFeeds,
  moreRecommendFeedsSuccess,
  moreRecommendFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreRecommendFeeds', 'GET_MODE_RECOMMEND_FEEDS');
const {
  getTrendingFeeds,
  getTrendingFeedsSuccess,
  getTrendingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getTrendingFeeds', 'GET_TRENDING_FEEDS');
const {
  moreTrendingFeeds,
  moreTrendingFeedsSuccess,
  moreTrendingFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreTrendingFeeds', 'GET_MODE_TRENDING_FEEDS');
const {
  getHashTagFeeds,
  getHashTagFeedsSuccess,
  getHashTagFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getHashTagFeeds', 'GET_HASHTAG_FEEDS');
const {
  moreHashTagFeeds,
  moreHashTagFeedsSuccess,
  moreHashTagFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreHashTagFeeds', 'GET_MORE_HASHTAG_FEEDS');
const {
  getVideoFeeds,
  getVideoFeedsSuccess,
  getVideoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getVideoFeeds', 'GET_VIDEO_FEEDS');
const {
  moreVideoFeeds,
  moreVideoFeedsSuccess,
  moreVideoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreVideoFeeds', 'GET_MODE_VIDEO_FEEDS');
const {
  getPhotoFeeds,
  getPhotoFeedsSuccess,
  getPhotoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getPhotoFeeds', 'GET_PHOTO_FEEDS');
const {
  morePhotoFeeds,
  morePhotoFeedsSuccess,
  morePhotoFeedsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('morePhotoFeeds', 'GET_MODE_PHOTO_FEEDS');
const {
  getRelatedFeedsSuccess
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRelatedFeeds', 'GET_RELATED_FEEDS');
const removeFeedSuccess = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('removeFeedSuccess');
const removeTrendingFeedSuccess = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('removeTrendingFeedSuccess');
const resetFeeds = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('resetFeeds');
const setMetaThumbnail = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('setMetaThumbnail');

/***/ }),

/***/ "./src/redux/feed/reducers.ts":
/*!************************************!*\
  !*** ./src/redux/feed/reducers.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _redux_performer_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @redux/performer/actions */ "./src/redux/performer/actions.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions */ "./src/redux/feed/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable no-param-reassign */




const initialState = {
  feeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  recommendFeeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  followingFeeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  trendingFeeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  hashtagFeeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  videoFeeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  photoFeeds: {
    requesting: false,
    error: null,
    data: null,
    success: false
  },
  metaDataThumbnail: null
};
const feedReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, initialState.feeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, prevState.feeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, prevState.feeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, prevState.feeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, prevState.feeds), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.feeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, prevState.feeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getFollowingFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      followingFeeds: _objectSpread(_objectSpread({}, initialState.followingFeeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getFollowingFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      followingFeeds: _objectSpread(_objectSpread({}, prevState.followingFeeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getFollowingFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      followingFeeds: _objectSpread(_objectSpread({}, prevState.followingFeeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreFollowingFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      followingFeeds: _objectSpread(_objectSpread({}, prevState.followingFeeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreFollowingFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      followingFeeds: _objectSpread(_objectSpread({}, prevState.followingFeeds), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.followingFeeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreFollowingFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      followingFeeds: _objectSpread(_objectSpread({}, prevState.followingFeeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getRecommendFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      recommendFeeds: _objectSpread(_objectSpread({}, initialState.recommendFeeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getRecommendFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      recommendFeeds: _objectSpread(_objectSpread({}, prevState.recommendFeeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getRecommendFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      recommendFeeds: _objectSpread(_objectSpread({}, prevState.recommendFeeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreRecommendFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      recommendFeeds: _objectSpread(_objectSpread({}, prevState.recommendFeeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreRecommendFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      recommendFeeds: _objectSpread(_objectSpread({}, prevState.recommendFeeds), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.recommendFeeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreRecommendFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      recommendFeeds: _objectSpread(_objectSpread({}, prevState.recommendFeeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getTrendingFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: _objectSpread(_objectSpread({}, initialState.trendingFeeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getTrendingFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: _objectSpread(_objectSpread({}, prevState.trendingFeeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getTrendingFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: _objectSpread(_objectSpread({}, prevState.trendingFeeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreTrendingFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: _objectSpread(_objectSpread({}, prevState.trendingFeeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreTrendingFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: _objectSpread(_objectSpread({}, prevState.trendingFeeds), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.trendingFeeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreTrendingFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: _objectSpread(_objectSpread({}, prevState.trendingFeeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getHashTagFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      hashtagFeeds: _objectSpread(_objectSpread({}, initialState.hashtagFeeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getHashTagFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      hashtagFeeds: _objectSpread(_objectSpread({}, prevState.hashtagFeeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getHashTagFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      hashtagFeeds: _objectSpread(_objectSpread({}, prevState.hashtagFeeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreHashTagFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      hashtagFeeds: _objectSpread(_objectSpread({}, prevState.hashtagFeeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreHashTagFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      hashtagFeeds: _objectSpread(_objectSpread({}, prevState.hashtagFeeds), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.hashtagFeeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreHashTagFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      hashtagFeeds: _objectSpread(_objectSpread({}, prevState.hashtagFeeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getVideoFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      videoFeeds: _objectSpread(_objectSpread({}, initialState.videoFeeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getVideoFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      videoFeeds: _objectSpread(_objectSpread({}, prevState.videoFeeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getVideoFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      videoFeeds: _objectSpread(_objectSpread({}, prevState.videoFeeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreVideoFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      videoFeeds: _objectSpread(_objectSpread({}, prevState.videoFeeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreVideoFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      videoFeeds: _objectSpread(_objectSpread({}, prevState.videoFeed), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.videoFeeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["moreVideoFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      videoFeeds: _objectSpread(_objectSpread({}, prevState.videoFeeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getPhotoFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      photoFeeds: _objectSpread(_objectSpread({}, initialState.photoFeeds), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getPhotoFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      photoFeeds: _objectSpread(_objectSpread({}, prevState.photoFeeds), {}, {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getPhotoFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      photoFeeds: _objectSpread(_objectSpread({}, prevState.photoFeeds), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["morePhotoFeeds"],
  reducer(prevState) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      photoFeeds: _objectSpread(_objectSpread({}, prevState.photoFeeds), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["morePhotoFeedsSuccess"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      photoFeeds: _objectSpread(_objectSpread({}, prevState.photoFeeds), {}, {
        requesting: false,
        total: data.payload.total,
        items: [...prevState.photoFeeds.items, ...data.payload.data],
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["morePhotoFeedsFail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      photoFeeds: _objectSpread(_objectSpread({}, prevState.photoFeeds), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["getRelatedFeedsSuccess"],
  reducer(prevState, data) {
    const {
      items
    } = prevState.feeds || [];
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: _objectSpread(_objectSpread({}, prevState.feeds), {}, {
        requesting: false,
        items: [data.payload].concat(items),
        total: prevState.total + 1,
        success: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["removeFeedSuccess"],
  reducer(prevState, data) {
    const {
      feed
    } = data.payload;
    const {
      items
    } = prevState.feeds || [];
    items && items.length && items.splice(items.findIndex(f => f._id === feed._id), 1);
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: {
        total: prevState.total - 1,
        items
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["removeTrendingFeedSuccess"],
  reducer(prevState, data) {
    const {
      feed
    } = data.payload;
    const {
      items
    } = prevState.trendingFeeds || [];
    items && items.length && items.splice(items.findIndex(f => f._id === feed._id), 1);
    return _objectSpread(_objectSpread({}, prevState), {}, {
      trendingFeeds: {
        total: prevState.total - 1,
        items
      }
    });
  }
}, {
  on: _redux_performer_actions__WEBPACK_IMPORTED_MODULE_2__["onFollow"],
  reducer(prevState, data) {
    const {
      action,
      performerId
    } = data.payload;
    const {
      items
    } = prevState.feeds || [];
    return _objectSpread(_objectSpread({}, prevState), {}, {
      feeds: {
        total: prevState.total - 1,
        items: items && items.length > 0 ? items.map(item => {
          if (item.fromSourceId === performerId) {
            // eslint-disable-next-line no-return-assign
            return _objectSpread(_objectSpread({}, item), {}, {
              performer: _objectSpread(_objectSpread({}, item.performer), {}, {
                isFollowed: action === 'create',
                stats: _objectSpread(_objectSpread({}, item.performer.stats), {}, {
                  totalFollower: action === 'create' ? item.performer.stats.totalFollower += 1 : item.performer.stats.totalFollower -= 1
                })
              })
            });
          }
          return item;
        }) : []
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["resetFeeds"],
  reducer() {
    return {
      feeds: _objectSpread({}, initialState.feeds),
      trendingFeeds: _objectSpread({}, initialState.feeds),
      hashtagFeeds: _objectSpread({}, initialState.feeds)
    };
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["setMetaThumbnail"],
  reducer(prevState, data) {
    return _objectSpread(_objectSpread({}, prevState), {}, {
      metaDataThumbnail: data.payload
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('feed', [feedReducers], initialState)));

/***/ }),

/***/ "./src/redux/feed/sagas.ts":
/*!*********************************!*\
  !*** ./src/redux/feed/sagas.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/feed/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





const performerSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getFeeds"],
  *worker(data) {
    try {
      const resp = data.payload.isHome ? yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userHomeFeeds(data.payload) : yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreFeeds"],
  *worker(data) {
    try {
      const resp = data.payload.isHome ? yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userHomeFeeds(data.payload) : yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getTrendingFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].trendingSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getTrendingFeedsSuccess"])(resp.data));
      // yield put(getFeedsSuccess(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreTrendingFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreTrendingFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreTrendingFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreTrendingFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getFollowingFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].followingSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getFollowingFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFollowingFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreFollowingFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].followingSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFollowingFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFollowingFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getHashTagFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getHashTagFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getHashTagFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreHashTagFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreHashTagFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreHashTagFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getRecommendFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userRecommendSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getRecommendFeedsSuccess"])(resp.data));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getRecommendFeedsFail"])(error));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreRecommendFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userRecommendSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreRecommendFeedsSuccess"])(resp.data));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreRecommendFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getVideoFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {
        postType: 'video'
      }));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getVideoFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getVideoFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreVideoFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {
        postType: 'video'
      }));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getPhotoFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {
        postType: 'photo'
      }));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getPhotoFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getPhotoFeedsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["morePhotoFeeds"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["feedService"].userSearch(_objectSpread(_objectSpread({}, data.payload), {}, {
        postType: 'photo'
      }));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["morePhotoFeedsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["morePhotoFeedsFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(performerSagas)]));

/***/ }),

/***/ "./src/redux/gallery/actions.ts":
/*!**************************************!*\
  !*** ./src/redux/gallery/actions.ts ***!
  \**************************************/
/*! exports provided: getGalleries, getGalleriesSuccess, getGalleriesFail, moreGalleries, moreGalleriesSuccess, moreGalleriesFail, getRelatedGalleries, getRelatedGalleriesSuccess, getRelatedGalleriesFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGalleries", function() { return getGalleries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGalleriesSuccess", function() { return getGalleriesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGalleriesFail", function() { return getGalleriesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGalleries", function() { return moreGalleries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGalleriesSuccess", function() { return moreGalleriesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGalleriesFail", function() { return moreGalleriesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedGalleries", function() { return getRelatedGalleries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedGalleriesSuccess", function() { return getRelatedGalleriesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedGalleriesFail", function() { return getRelatedGalleriesFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getGalleries,
  getGalleriesSuccess,
  getGalleriesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getGalleries', 'GET_GALLERIES');
const {
  moreGalleries,
  moreGalleriesSuccess,
  moreGalleriesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreGalleries', 'MORE_GALLERIES');
const {
  getRelatedGalleries,
  getRelatedGalleriesSuccess,
  getRelatedGalleriesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRelatedGalleries', 'GET_RELATED_GALLERIES');

/***/ }),

/***/ "./src/redux/gallery/reducers.ts":
/*!***************************************!*\
  !*** ./src/redux/gallery/reducers.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/gallery/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  galleries: {
    requesting: false,
    items: [],
    total: 0,
    error: null,
    success: false
  },
  relatedGalleries: {
    requesting: false,
    error: null,
    success: false,
    items: [],
    total: 0
  }
};
const galleryReducer = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getGalleries"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      galleries: _objectSpread(_objectSpread({}, state.galleries), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getGalleriesSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      galleries: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getGalleriesFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      galleries: _objectSpread(_objectSpread({}, state.galleries), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreGalleries"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      galleries: _objectSpread(_objectSpread({}, state.galleries), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreGalleriesSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      galleries: {
        requesting: false,
        total: data.payload.total,
        items: [...state.galleries.items, ...data.payload.data],
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreGalleriesFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      galleries: _objectSpread(_objectSpread({}, state.galleries), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getRelatedGalleries"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      related: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getRelatedGalleriesSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      relatedGalleries: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getRelatedGalleriesFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      relatedGalleries: _objectSpread(_objectSpread({}, state.galleries), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_1__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createReducers"])('gallery', [galleryReducer], initialState)));

/***/ }),

/***/ "./src/redux/gallery/sagas.ts":
/*!************************************!*\
  !*** ./src/redux/gallery/sagas.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var src_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services */ "./src/services/index.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/gallery/actions.ts");





const gallerySagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getGalleries"],
  *worker(data) {
    try {
      const resp = yield src_services__WEBPACK_IMPORTED_MODULE_0__["galleryService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getGalleriesSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getGalleriesFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreGalleries"],
  *worker(data) {
    try {
      const resp = yield src_services__WEBPACK_IMPORTED_MODULE_0__["galleryService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreGalleriesSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreGalleriesFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getRelatedGalleries"],
  *worker(data) {
    try {
      const resp = yield src_services__WEBPACK_IMPORTED_MODULE_0__["galleryService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getRelatedGalleriesSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getRelatedGalleriesFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_1__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_3__["createSagas"])(gallerySagas)]));

/***/ }),

/***/ "./src/redux/gift/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/gift/actions.ts ***!
  \***********************************/
/*! exports provided: getGift, getGiftSuccess, getGiftFail, moreGift, moreGiftSuccess, moreGiftFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGift", function() { return getGift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGiftSuccess", function() { return getGiftSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGiftFail", function() { return getGiftFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGift", function() { return moreGift; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGiftSuccess", function() { return moreGiftSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreGiftFail", function() { return moreGiftFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getGift,
  getGiftSuccess,
  getGiftFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getGift', 'GET_GIFT');
const {
  moreGift,
  moreGiftSuccess,
  moreGiftFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreGift', 'MORE_GIFT');

/***/ }),

/***/ "./src/redux/gift/reducers.ts":
/*!************************************!*\
  !*** ./src/redux/gift/reducers.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/gift/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  gifts: {
    requesting: false,
    items: [],
    total: 0,
    error: null,
    success: false
  }
};
const giftReducer = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getGift"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      Gift: _objectSpread(_objectSpread({}, state.Gift), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getGiftSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      Gift: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getGiftFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      Gift: _objectSpread(_objectSpread({}, state.Gift), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreGift"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      Gift: _objectSpread(_objectSpread({}, state.Gift), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreGiftSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      Gift: {
        requesting: false,
        total: data.payload.total,
        items: [...state.Gift.items, ...data.payload.data],
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreGiftFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      Gift: _objectSpread(_objectSpread({}, state.Gift), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_1__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createReducers"])('gift', [giftReducer], initialState)));

/***/ }),

/***/ "./src/redux/gift/sagas.ts":
/*!*********************************!*\
  !*** ./src/redux/gift/sagas.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var src_services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! src/services */ "./src/services/index.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/gift/actions.ts");





const giftSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getGift"],
  *worker(data) {
    try {
      const resp = yield src_services__WEBPACK_IMPORTED_MODULE_0__["giftService"].search(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getGiftSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getGiftFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreGift"],
  *worker(data) {
    try {
      const resp = yield src_services__WEBPACK_IMPORTED_MODULE_0__["giftService"].search(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreGiftSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_2__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreGiftFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_1__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_3__["createSagas"])(giftSagas)]));

/***/ }),

/***/ "./src/redux/message/actions.ts":
/*!**************************************!*\
  !*** ./src/redux/message/actions.ts ***!
  \**************************************/
/*! exports provided: getConversations, getConversationsSuccess, getConversationsFail, searchConversations, searchConversationsSuccess, searchConversationsFail, readMessages, sendMessage, sendMessageSuccess, sendMessageFail, receiveMessageSuccess, sentFileSuccess, deactiveConversation, setActiveConversation, setActiveConversationSuccess, setActiveConversationFail, loadMessages, loadMessagesSuccess, loadMessagesFail, loadMoreMessages, loadMoreMessagesSuccess, loadMoreMessagesFail, fetchingMessage, resetMessageState, getConversationDetail, getConversationDetailSuccess, getConversationDetailFail, deleteConversation, deleteConversationSuccess, deleteConversationFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getConversations", function() { return getConversations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getConversationsSuccess", function() { return getConversationsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getConversationsFail", function() { return getConversationsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchConversations", function() { return searchConversations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchConversationsSuccess", function() { return searchConversationsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchConversationsFail", function() { return searchConversationsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "readMessages", function() { return readMessages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendMessage", function() { return sendMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendMessageSuccess", function() { return sendMessageSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendMessageFail", function() { return sendMessageFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "receiveMessageSuccess", function() { return receiveMessageSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sentFileSuccess", function() { return sentFileSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deactiveConversation", function() { return deactiveConversation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setActiveConversation", function() { return setActiveConversation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setActiveConversationSuccess", function() { return setActiveConversationSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setActiveConversationFail", function() { return setActiveConversationFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMessages", function() { return loadMessages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMessagesSuccess", function() { return loadMessagesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMessagesFail", function() { return loadMessagesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMoreMessages", function() { return loadMoreMessages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMoreMessagesSuccess", function() { return loadMoreMessagesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMoreMessagesFail", function() { return loadMoreMessagesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchingMessage", function() { return fetchingMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetMessageState", function() { return resetMessageState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getConversationDetail", function() { return getConversationDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getConversationDetailSuccess", function() { return getConversationDetailSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getConversationDetailFail", function() { return getConversationDetailFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteConversation", function() { return deleteConversation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteConversationSuccess", function() { return deleteConversationSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteConversationFail", function() { return deleteConversationFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getConversations,
  getConversationsSuccess,
  getConversationsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getConversations', 'LOAD_CONVERSATIONS');
const {
  searchConversations,
  searchConversationsSuccess,
  searchConversationsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('searchConversations', 'SEARCH_CONVERSATIONS');
const {
  readMessages
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('readMessages', 'READ_MESSAGES');
const {
  sendMessage,
  sendMessageSuccess,
  sendMessageFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('sendMessage', 'SEND_MESSAGE');
const {
  receiveMessageSuccess
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('receiveMessageSuccess', 'RECEIVE_MESSAGE_SUCCESS');
const {
  sentFileSuccess
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('sentFileSuccess', 'SENT_FILE_SUCCESS');
const {
  deactiveConversation
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('deactiveConversation', 'DEACTIVE_CONVERSATION');
const {
  setActiveConversation,
  setActiveConversationSuccess,
  setActiveConversationFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('setActiveConversation', 'SET_ACTIVE_CONVERSATION_RECEIVER');
const {
  loadMessages,
  loadMessagesSuccess,
  loadMessagesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loadMessages', 'LOAD_MESSAGES');
const {
  loadMoreMessages,
  loadMoreMessagesSuccess,
  loadMoreMessagesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loadMoreMessages', 'LOAD_MORE_MESSAGES');
const fetchingMessage = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('fetchingMessage');
const resetMessageState = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('resetMessageState');
const {
  getConversationDetail,
  getConversationDetailSuccess,
  getConversationDetailFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getConversationDetail', 'LOAD_CONVERSATION_ITEM');
const {
  deleteConversation,
  deleteConversationSuccess,
  deleteConversationFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('deleteConversation', 'DELETE_CONVERSATION');

/***/ }),

/***/ "./src/redux/message/reducers.ts":
/*!***************************************!*\
  !*** ./src/redux/message/reducers.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/message/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialConversationState = {
  list: {
    requesting: false,
    error: null,
    data: [],
    total: 0,
    success: false
  },
  mapping: {},
  activeConversation: {}
};
const initialMessageState = {
  // conversationId => { fetching: boolean, items: [] }
  conversationMap: {},
  sendMessage: {},
  receiveMessage: {}
};
const conversationReducer = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["resetMessageState"],
  reducer(state) {
    let {
      list,
      mapping,
      activeConversation
    } = state;
    list = {
      requesting: false,
      error: null,
      data: [],
      total: 0,
      success: false
    };
    mapping = {};
    activeConversation = {};
    return _objectSpread(_objectSpread({}, state), {}, {
      list,
      mapping,
      activeConversation
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getConversations"],
  reducer(state) {
    const nextState = _objectSpread({}, state);
    nextState.list.requesting = true;
    return _objectSpread({}, nextState);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getConversationsSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const {
      list,
      mapping
    } = nextState;
    const {
      data: items,
      total
    } = data.payload;
    const Ids = items.map(c => c._id);
    list.data = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["uniq"])(Ids);
    list.total = total;
    list.success = true;
    list.requesting = false;
    list.error = false;
    items.forEach(c => {
      mapping[c._id] = c;
    });
    return _objectSpread(_objectSpread(_objectSpread({}, nextState), list), mapping);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getConversationsFail"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      list: {
        requesting: false,
        error: data.payload,
        data: [],
        total: 0,
        success: false
      },
      mapping: {},
      activeConversation: {}
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["searchConversations"],
  reducer(state) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      list: {
        requesting: true,
        error: null,
        data: [],
        total: 0,
        success: false
      },
      mapping: {},
      activeConversation: {}
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["searchConversationsSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const {
      list,
      mapping
    } = nextState;
    const {
      data: items,
      total
    } = data.payload;
    const Ids = items.map(c => c._id);
    list.data = Ids;
    list.total = total;
    list.success = true;
    list.requesting = false;
    list.error = false;
    items.forEach(c => {
      mapping[c._id] = c;
    });
    return _objectSpread(_objectSpread({}, nextState), {}, {
      list,
      mapping
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["searchConversationsFail"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      list: {
        requesting: false,
        error: data.payload,
        data: [],
        total: 0,
        success: false
      },
      mapping: {},
      activeConversation: {}
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["setActiveConversationSuccess"],
  reducer(state, data) {
    const conversation = data.payload;
    const list = state.list.data;
    const {
      mapping
    } = state;
    const check = list.find(c => c === conversation._id);
    if (!check) {
      list.unshift(conversation._id);
      mapping[conversation._id] = conversation;
    }
    return _objectSpread(_objectSpread({}, state), {}, {
      activeConversation: conversation
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["deleteConversationSuccess"],
  reducer(state, data) {
    const conversationId = data.payload;
    const nextState = _objectSpread({}, state);
    const list = nextState.list.data;
    const {
      mapping
    } = nextState;
    const index = list.indexOf(conversationId);
    if (index !== -1) {
      list.splice(index, 1);
      delete mapping[conversationId];
    }
    return _objectSpread(_objectSpread({}, nextState), {}, {
      activeConversation: {}
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getConversationDetailSuccess"],
  reducer(state, data) {
    const {
      list,
      mapping
    } = state;
    const conversation = data.payload;
    if (!list.data.includes(conversation._id)) {
      list.data.unshift(conversation._id);
      mapping[conversation._id] = conversation;
    }
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["readMessages"],
  reducer(state, data) {
    const conversationId = data.payload;
    const {
      mapping
    } = state;
    mapping[conversationId].totalNotSeenMessages = 0;
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["deactiveConversation"],
  reducer(state) {
    const nextState = _objectSpread({}, state);
    nextState.activeConversation = {};
    return _objectSpread({}, nextState);
  }
}];
const messageReducer = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["fetchingMessage"],
  reducer(state, data) {
    const {
      conversationMap
    } = state;
    const {
      conversationId
    } = data.payload;
    conversationMap[conversationId] = _objectSpread(_objectSpread({}, conversationMap[conversationId]), {}, {
      fetching: true
    });
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loadMessagesSuccess"],
  reducer(state, data) {
    const {
      conversationMap
    } = state;
    const {
      conversationId,
      items,
      total
    } = data.payload;
    conversationMap[conversationId] = {
      items: [...items.reverse()],
      total,
      fetching: false
    };
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loadMoreMessagesSuccess"],
  reducer(state, data) {
    const {
      conversationMap
    } = state;
    const {
      conversationId,
      items,
      total
    } = data.payload;
    conversationMap[conversationId] = {
      items: [...items.reverse(), ...(conversationMap[conversationId].items || [])],
      total,
      fetching: false
    };
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sendMessage"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      sendMessage: {
        sending: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sendMessageSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    if (!nextState.conversationMap[data.payload.conversationId] || !nextState.conversationMap[data.payload.conversationId].items) {
      nextState.conversationMap[data.payload.conversationId].items = [];
    }
    nextState.conversationMap[data.payload.conversationId].items.push(data.payload);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      sendMessage: {
        sending: false,
        success: true,
        data: data.payload
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sendMessageFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      sendMessage: {
        sending: false,
        success: false,
        error: data.payload
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["receiveMessageSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    if (!nextState.conversationMap[data.payload.conversationId]) {
      return _objectSpread({}, nextState);
    }
    nextState.conversationMap[data.payload.conversationId].items.push(data.payload);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      receiveMessage: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sentFileSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    if (!nextState.conversationMap[data.payload.conversationId] || !nextState.conversationMap[data.payload.conversationId].items) {
      nextState.conversationMap[data.payload.conversationId].items = [];
    }
    nextState.conversationMap[data.payload.conversationId].items.push(data.payload);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      sendMessage: {
        sending: false,
        success: true,
        data: data.payload
      }
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('conversation', [conversationReducer], initialConversationState), Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('message', [messageReducer], initialMessageState)));

/***/ }),

/***/ "./src/redux/message/sagas.ts":
/*!************************************!*\
  !*** ./src/redux/message/sagas.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_message_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/message.service */ "./src/services/message.service.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions */ "./src/redux/message/actions.ts");






const conversationSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["getConversations"],
  *worker(data) {
    try {
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getConversations(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getConversationsSuccess"])(resp.data));
    } catch (e) {
      // TODO - alert error
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getConversationsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["searchConversations"],
  *worker(data) {
    try {
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getConversations(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["searchConversationsSuccess"])(resp.data));
    } catch (e) {
      // TODO - alert error
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["searchConversationsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["setActiveConversation"],
  *worker(data) {
    try {
      const {
        source,
        sourceId,
        conversationId
      } = data.payload;
      const conversationMapping = yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["select"])(state => state.conversation.mapping);
      if (conversationId) {
        if (conversationMapping[conversationId]) {
          yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setActiveConversationSuccess"])(conversationMapping[conversationId]));
          const readAllMessages = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].readAllInConversation(conversationId);
          if (readAllMessages) {
            yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["readMessages"])(conversationId));
          }
          yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMessages"])({
            conversationId,
            limit: 25,
            offset: 0
          }));
        }
      } else {
        const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].createConversation({
          source,
          sourceId
        });
        const conversation = resp.data;
        if (conversationMapping[conversation._id]) {
          yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setActiveConversationSuccess"])(conversationMapping[conversation._id]));
        } else {
          yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setActiveConversationSuccess"])(conversation));
        }
        yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMessages"])({
          conversationId: conversation._id,
          limit: 25,
          offset: 0
        }));
      }
    } catch (e) {
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error('Error occured, please try again later');
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["getConversationDetail"],
  *worker(data) {
    try {
      const conversation = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getConversationDetail(data.payload.id);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getConversationDetailSuccess"])(conversation.data));
    } catch (e) {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getConversationsFail"])(e));
    }
  }
}];
const messageSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["loadMessages"],
  *worker(data) {
    try {
      const messageMap = Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["select"])(state => state.message.mapping);
      const {
        conversationId,
        offset,
        limit
      } = data.payload;
      if (messageMap[conversationId] && messageMap[conversationId].fetching) {
        // do nothing if it is fetching
        return;
      }
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["fetchingMessage"])({
        conversationId
      }));
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getMessages(conversationId, {
        offset,
        limit
      });
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMessagesSuccess"])({
        conversationId,
        items: resp.data.data,
        total: resp.data.total
      }));
    } catch (e) {
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error('Error occured, please try again later');
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["loadMoreMessages"],
  *worker(data) {
    try {
      const messageMap = Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["select"])(state => state.message.mapping);
      const {
        conversationId,
        offset,
        limit
      } = data.payload;
      if (messageMap[conversationId] && messageMap[conversationId].fetching) {
        // do nothing if it is fetching
        return;
      }
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["fetchingMessage"])({
        conversationId
      }));
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getMessages(conversationId, {
        offset,
        limit
      });
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMoreMessagesSuccess"])({
        conversationId,
        items: resp.data.data,
        total: resp.data.total
      }));
    } catch (e) {
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error('Error occured, please try again later');
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["sendMessage"],
  *worker(req) {
    try {
      const {
        conversationId,
        data
      } = req.payload;
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].sendMessage(conversationId, data);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["sendMessageSuccess"])(resp.data));
    } catch (e) {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["sendMessageFail"])(e));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["deleteConversation"],
  *worker(data) {
    try {
      const {
        conversationId
      } = data.payload;
      yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].deleteConversation(conversationId);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["deleteConversationSuccess"])(conversationId));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["deleteConversationFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(conversationSagas), Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(messageSagas)]));

/***/ }),

/***/ "./src/redux/modals/actions.ts":
/*!*************************************!*\
  !*** ./src/redux/modals/actions.ts ***!
  \*************************************/
/*! exports provided: updateModals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateModals", function() { return updateModals; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const updateModals = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateModals');

/***/ }),

/***/ "./src/redux/modals/reducers.ts":
/*!**************************************!*\
  !*** ./src/redux/modals/reducers.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/modals/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  isGoLiveModalOpen: false,
  isLoginModalOpen: false,
  isRegisterModalOpen: false,
  isForgotPasswordModalOpen: false,
  isPasswordResetModalOpen: false,
  isDeleteAccountModalOpen: false,
  isDonateRubiesModalOpen: false,
  isBuyRubiesModalOpen: false,
  isAddCommentModalOpen: false,
  isPurchaseRubiesCompleteModalOpen: false,
  isBuyRubiesWithDiamondsModalOpen: false,
  isPayoutRequestModalOpen: false,
  isLinkPaypalAccountModalOpen: false,
  isChangePaypalAccountModalOpen: false,
  isPaypalSuccessfulModalOpen: false,
  isPaypalUnsuccessfulModal: false,
  isNotEnoughRubysLiveModal: false,
  confirmPrivateVideoModal: {
    isOpen: false,
    performerInfos: null,
    performerTotalFollowers: 0
  },
  isWaitingForModelModal: false,
  uploadPhotoModal: {
    isOpen: false,
    imageInfos: {
      fileList: [],
      fileIds: []
    }
  },
  isPhotoCameraModal: false,
  uploadVideoModal: {
    isOpen: false,
    videoPreviewUrl: null,
    imageInfos: {
      fileList: [],
      fileIds: []
    }
  },
  isVideoCameraModal: false,
  isEndLiveStreamModal: false,
  isReportLiveStreamModal: false,
  isStreamMutedListModalOpen: false,
  streamMutedList: [],
  crossPromotionPurchaseModal: {
    isOpen: false,
    performerId: ''
  },
  crossPromotionPurchaseSuccessModal: {
    isOpen: false,
    performerId: ''
  }
};
const updateModalsReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateModals"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), data.payload);
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('modals', [updateModalsReducers], initialState)));

/***/ }),

/***/ "./src/redux/notification/actions.ts":
/*!*******************************************!*\
  !*** ./src/redux/notification/actions.ts ***!
  \*******************************************/
/*! exports provided: fetchNotificaion, fetchNotificaionSuccess, fetchNotificaionFail, addNotificaion, addNotificaionSuccess, addNotificaionFail, setUnreadsNotification, setNotificationLoading, setUnreadCount, setReadItem */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchNotificaion", function() { return fetchNotificaion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchNotificaionSuccess", function() { return fetchNotificaionSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchNotificaionFail", function() { return fetchNotificaionFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNotificaion", function() { return addNotificaion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNotificaionSuccess", function() { return addNotificaionSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addNotificaionFail", function() { return addNotificaionFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUnreadsNotification", function() { return setUnreadsNotification; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setNotificationLoading", function() { return setNotificationLoading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUnreadCount", function() { return setUnreadCount; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setReadItem", function() { return setReadItem; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  fetchNotificaion,
  fetchNotificaionSuccess,
  fetchNotificaionFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('fetchNotificaion', 'FETCH_NOTIFICATION');
const {
  addNotificaion,
  addNotificaionSuccess,
  addNotificaionFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('addNotificaion', 'ADD_NOTIFICATION');
const setUnreadsNotification = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('setUnreadsNotification');
const setNotificationLoading = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('SET_NOTIFICATION_LOADING');
const setUnreadCount = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('SET_NOTIFICATION_UNREAD');
const setReadItem = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('SET_NOTIFICATION_READ');

/***/ }),

/***/ "./src/redux/notification/reducers.ts":
/*!********************************************!*\
  !*** ./src/redux/notification/reducers.ts ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/notification/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  loading: false,
  error: null,
  success: false,
  notificationIds: [],
  notificationMapping: {},
  dataSource: [],
  page: 1,
  total: 0,
  isUnreadsNotification: false
};
const reducer = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["setNotificationLoading"],
  reducer: (state, action) => _objectSpread(_objectSpread({}, state), {}, {
    loading: action.payload
  })
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["setUnreadsNotification"],
  reducer: (state, action) => _objectSpread(_objectSpread({}, state), {}, {
    isUnreadsNotification: action.payload
  })
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["fetchNotificaionSuccess"],
  reducer(state, action) {
    const notificationIds = action.payload.data.map(data => data._id);
    const notificationMapping = action.payload.data.reduce((previousValue, currentValue) => _objectSpread(_objectSpread({}, previousValue), {}, {
      [currentValue._id]: currentValue
    }), {});
    return _objectSpread(_objectSpread({}, state), {}, {
      loading: false,
      notificationIds,
      notificationMapping,
      dataSource: action.payload.data,
      page: state.page + 1,
      error: null,
      success: true
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["fetchNotificaionFail"],
  reducer(state, action) {
    return _objectSpread(_objectSpread({}, state), {}, {
      loading: false,
      error: action.payload,
      success: false
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["addNotificaionSuccess"],
  reducer(state, action) {
    const notificationIds = action.payload.data.map(data => data._id);
    const notificationMapping = action.payload.data.reduce((previousValue, currentValue) => _objectSpread(_objectSpread({}, previousValue), {}, {
      [currentValue._id]: currentValue
    }), {});
    return _objectSpread(_objectSpread({}, state), {}, {
      loading: false,
      notificationIds: [...state.notificationIds, ...notificationIds],
      notificationMapping: Object.assign(state.notificationMapping, notificationMapping),
      dataSource: [...state.dataSource, ...action.payload.data],
      page: state.page + 1,
      error: null,
      success: true
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["addNotificaionFail"],
  reducer(state, action) {
    return _objectSpread(_objectSpread({}, state), {}, {
      loading: false,
      error: action.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["setUnreadCount"],
  reducer(state, action) {
    return _objectSpread(_objectSpread({}, state), {}, {
      total: action.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["setReadItem"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      total: state.total ? state.total - 1 : 0
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_1__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createReducers"])('notification', [reducer], initialState)));

/***/ }),

/***/ "./src/redux/notification/sagas.ts":
/*!*****************************************!*\
  !*** ./src/redux/notification/sagas.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/notification/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





const bannerSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["fetchNotificaion"],
  *worker(data) {
    try {
      yield Object(_actions__WEBPACK_IMPORTED_MODULE_4__["setNotificationLoading"])(true);
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["notificationService"].search(_objectSpread({
        limit: 12,
        sort: 'desc',
        sortBy: 'updatedAt'
      }, data.payload));
      const unread = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["notificationService"].countUnread();
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["fetchNotificaionSuccess"])(resp.data));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["setUnreadCount"])(unread.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["fetchNotificaionFail"])(error));
    } finally {
      yield Object(_actions__WEBPACK_IMPORTED_MODULE_4__["setNotificationLoading"])(false);
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["addNotificaion"],
  *worker(data) {
    try {
      yield Object(_actions__WEBPACK_IMPORTED_MODULE_4__["setNotificationLoading"])(true);
      const page = yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["select"])(state => state.notification.page);
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["notificationService"].search(_objectSpread({
        limit: 12,
        offset: (page - 1) * 1,
        sort: 'desc',
        sortBy: 'updatedAt'
      }, data.payload));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["addNotificaionSuccess"])(resp.data));
      const unread = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["notificationService"].countUnread();
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["setUnreadCount"])(unread.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["addNotificaionFail"])(error));
    } finally {
      yield Object(_actions__WEBPACK_IMPORTED_MODULE_4__["setNotificationLoading"])(false);
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(bannerSagas)]));

/***/ }),

/***/ "./src/redux/performer/actions.ts":
/*!****************************************!*\
  !*** ./src/redux/performer/actions.ts ***!
  \****************************************/
/*! exports provided: getList, getListSuccess, getListFail, getProfile, getProfileSuccess, getProfileFail, onFollow */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getList", function() { return getList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getListSuccess", function() { return getListSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getListFail", function() { return getListFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfile", function() { return getProfile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfileSuccess", function() { return getProfileSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getProfileFail", function() { return getProfileFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onFollow", function() { return onFollow; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getList,
  getListSuccess,
  getListFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getList', 'GET_LIST');
const {
  getProfile,
  getProfileSuccess,
  getProfileFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getProfile', 'GET_PROFILE');
const onFollow = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('onFollow');

/***/ }),

/***/ "./src/redux/performer/reducers.ts":
/*!*****************************************!*\
  !*** ./src/redux/performer/reducers.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/performer/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  performerListing: {
    requesting: false,
    error: null,
    data: null,
    success: false,
    total: 0
  },
  performerProfile: {
    requesting: false,
    error: null,
    data: null,
    success: false
  }
};
const performerReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getList"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      performerListing: {
        requesting: true,
        error: null,
        data: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getListSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      performerListing: {
        requesting: false,
        error: null,
        data: data.payload.data,
        total: data.payload.total,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getListFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      performerListing: {
        requesting: false,
        error: data.payload,
        data: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getProfile"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      performerProfile: {
        requesting: true,
        error: null,
        data: null,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getProfileSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      performerProfile: {
        requesting: false,
        error: null,
        data: data.payload,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getProfileFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      performerProfile: {
        requesting: false,
        error: data.payload,
        data: null,
        success: false
      }
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('performer', [performerReducers], initialState)));

/***/ }),

/***/ "./src/redux/performer/sagas.ts":
/*!**************************************!*\
  !*** ./src/redux/performer/sagas.ts ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/performer/actions.ts");





const performerSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getList"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["performerService"].search(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getListSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getListFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getProfile"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["performerService"].findOne(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getProfileSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getProfileFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(performerSagas)]));

/***/ }),

/***/ "./src/redux/product/actions.ts":
/*!**************************************!*\
  !*** ./src/redux/product/actions.ts ***!
  \**************************************/
/*! exports provided: listProducts, listProductsSuccess, listProductsFail, moreProduct, moreProductSuccess, moreProductFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listProducts", function() { return listProducts; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listProductsSuccess", function() { return listProductsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "listProductsFail", function() { return listProductsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreProduct", function() { return moreProduct; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreProductSuccess", function() { return moreProductSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreProductFail", function() { return moreProductFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  listProducts,
  listProductsSuccess,
  listProductsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('listProducts', 'LIST_PRODUCT');
const {
  moreProduct,
  moreProductSuccess,
  moreProductFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreProduct', 'MORE_PRODUCT');

/***/ }),

/***/ "./src/redux/product/reducers.ts":
/*!***************************************!*\
  !*** ./src/redux/product/reducers.ts ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/product/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  products: {
    requesting: false,
    error: null,
    success: false,
    items: [],
    total: 0
  }
};
const productReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["listProducts"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      products: _objectSpread(_objectSpread({}, state.products), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["listProductsSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      products: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["listProductsFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      products: _objectSpread(_objectSpread({}, state.products), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreProduct"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      products: _objectSpread(_objectSpread({}, state.products), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreProductSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      products: {
        requesting: false,
        total: data.payload.total,
        items: [...state.products.items, ...data.payload.data],
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreProductFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      products: _objectSpread(_objectSpread({}, state.products), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('product', [productReducers], initialState)));

/***/ }),

/***/ "./src/redux/product/sagas.ts":
/*!************************************!*\
  !*** ./src/redux/product/sagas.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/product/actions.ts");





const productSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["listProducts"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["productService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["listProductsSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["listProductsFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreProduct"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["productService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreProductSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreProductFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(productSagas)]));

/***/ }),

/***/ "./src/redux/rootReducer.ts":
/*!**********************************!*\
  !*** ./src/redux/rootReducer.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux */ "redux");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _settings_reducers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings/reducers */ "./src/redux/settings/reducers.ts");
/* harmony import */ var _ui_reducers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ui/reducers */ "./src/redux/ui/reducers.ts");
/* harmony import */ var _user_reducers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./user/reducers */ "./src/redux/user/reducers.ts");
/* harmony import */ var _auth_reducers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/reducers */ "./src/redux/auth/reducers.ts");
/* harmony import */ var _performer_reducers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./performer/reducers */ "./src/redux/performer/reducers.ts");
/* harmony import */ var _video_reducers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./video/reducers */ "./src/redux/video/reducers.ts");
/* harmony import */ var _gallery_reducers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gallery/reducers */ "./src/redux/gallery/reducers.ts");
/* harmony import */ var _product_reducers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./product/reducers */ "./src/redux/product/reducers.ts");
/* harmony import */ var _comment_reducers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./comment/reducers */ "./src/redux/comment/reducers.ts");
/* harmony import */ var _cart_reducers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cart/reducers */ "./src/redux/cart/reducers.ts");
/* harmony import */ var _message_reducers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./message/reducers */ "./src/redux/message/reducers.ts");
/* harmony import */ var _feed_reducers__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./feed/reducers */ "./src/redux/feed/reducers.ts");
/* harmony import */ var _streaming_reducers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./streaming/reducers */ "./src/redux/streaming/reducers.ts");
/* harmony import */ var _stream_chat_reducers__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./stream-chat/reducers */ "./src/redux/stream-chat/reducers.ts");
/* harmony import */ var _gift_reducers__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./gift/reducers */ "./src/redux/gift/reducers.ts");
/* harmony import */ var _notification_reducers__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./notification/reducers */ "./src/redux/notification/reducers.ts");
/* harmony import */ var _modals_reducers__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./modals/reducers */ "./src/redux/modals/reducers.ts");



// load reducer here

















const reducers = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])(_settings_reducers__WEBPACK_IMPORTED_MODULE_2__["default"], _ui_reducers__WEBPACK_IMPORTED_MODULE_3__["default"], _user_reducers__WEBPACK_IMPORTED_MODULE_4__["default"], _auth_reducers__WEBPACK_IMPORTED_MODULE_5__["default"], _performer_reducers__WEBPACK_IMPORTED_MODULE_6__["default"], _gallery_reducers__WEBPACK_IMPORTED_MODULE_8__["default"], _video_reducers__WEBPACK_IMPORTED_MODULE_7__["default"], _product_reducers__WEBPACK_IMPORTED_MODULE_9__["default"], _comment_reducers__WEBPACK_IMPORTED_MODULE_10__["default"], _cart_reducers__WEBPACK_IMPORTED_MODULE_11__["default"], _message_reducers__WEBPACK_IMPORTED_MODULE_12__["default"], _feed_reducers__WEBPACK_IMPORTED_MODULE_13__["default"], _streaming_reducers__WEBPACK_IMPORTED_MODULE_14__["default"], _stream_chat_reducers__WEBPACK_IMPORTED_MODULE_15__["default"], _gift_reducers__WEBPACK_IMPORTED_MODULE_16__["default"], _notification_reducers__WEBPACK_IMPORTED_MODULE_17__["default"], _modals_reducers__WEBPACK_IMPORTED_MODULE_18__["default"]);
/* harmony default export */ __webpack_exports__["default"] = (Object(redux__WEBPACK_IMPORTED_MODULE_1__["combineReducers"])(reducers));

/***/ }),

/***/ "./src/redux/rootSaga.ts":
/*!*******************************!*\
  !*** ./src/redux/rootSaga.ts ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _user_sagas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user/sagas */ "./src/redux/user/sagas.ts");
/* harmony import */ var _auth_sagas__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth/sagas */ "./src/redux/auth/sagas.ts");
/* harmony import */ var _performer_sagas__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./performer/sagas */ "./src/redux/performer/sagas.ts");
/* harmony import */ var _video_sagas__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./video/sagas */ "./src/redux/video/sagas.ts");
/* harmony import */ var _product_sagas__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./product/sagas */ "./src/redux/product/sagas.ts");
/* harmony import */ var _comment_sagas__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./comment/sagas */ "./src/redux/comment/sagas.ts");
/* harmony import */ var _gallery_sagas__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./gallery/sagas */ "./src/redux/gallery/sagas.ts");
/* harmony import */ var _gift_sagas__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./gift/sagas */ "./src/redux/gift/sagas.ts");
/* harmony import */ var _message_sagas__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./message/sagas */ "./src/redux/message/sagas.ts");
/* harmony import */ var _feed_sagas__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./feed/sagas */ "./src/redux/feed/sagas.ts");
/* harmony import */ var _stream_chat_sagas__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./stream-chat/sagas */ "./src/redux/stream-chat/sagas.ts");
/* harmony import */ var _notification_sagas__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./notification/sagas */ "./src/redux/notification/sagas.ts");













function* rootSaga() {
  yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__["all"])([..._auth_sagas__WEBPACK_IMPORTED_MODULE_2__["default"], ..._user_sagas__WEBPACK_IMPORTED_MODULE_1__["default"], ..._performer_sagas__WEBPACK_IMPORTED_MODULE_3__["default"], ..._video_sagas__WEBPACK_IMPORTED_MODULE_4__["default"], ..._product_sagas__WEBPACK_IMPORTED_MODULE_5__["default"], ..._comment_sagas__WEBPACK_IMPORTED_MODULE_6__["default"], ..._gallery_sagas__WEBPACK_IMPORTED_MODULE_7__["default"], ..._message_sagas__WEBPACK_IMPORTED_MODULE_9__["default"], ..._feed_sagas__WEBPACK_IMPORTED_MODULE_10__["default"], ..._stream_chat_sagas__WEBPACK_IMPORTED_MODULE_11__["default"], ..._gift_sagas__WEBPACK_IMPORTED_MODULE_8__["default"], ..._notification_sagas__WEBPACK_IMPORTED_MODULE_12__["default"]].map(redux_saga_effects__WEBPACK_IMPORTED_MODULE_0__["spawn"]));
}
/* harmony default export */ __webpack_exports__["default"] = (rootSaga);

/***/ }),

/***/ "./src/redux/settings/actions.ts":
/*!***************************************!*\
  !*** ./src/redux/settings/actions.ts ***!
  \***************************************/
/*! exports provided: updateSettings */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateSettings", function() { return updateSettings; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const updateSettings = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateSettings');

/***/ }),

/***/ "./src/redux/settings/reducers.ts":
/*!****************************************!*\
  !*** ./src/redux/settings/reducers.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/settings/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




// TODO -
const initialState = {
  requireEmailVerification: false,
  googleReCaptchaSiteKey: '',
  enableGoogleReCaptcha: false,
  googleClientId: '131651031881-pljcapjv7kuamrtbicm77lurk75fvoe6.apps.googleusercontent.com',
  twitterClientId: '',
  tokenConversionRate: 1,
  stripePublishableKey: '',
  stripeEnable: false,
  ccbillEnable: false,
  bitpayEnable: false,
  paypalEnable: false,
  totalFollowerForPrivateChat: 0,
  totalFollowerForLive: 0,
  crossPromotionDescription: {},
  salesRubyHeaderPage: '',
  exchangeRateWebValue: 0.01
};
const settingReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateSettings"],
  reducer(state, data) {
    return _objectSpread({}, data.payload);
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('settings', [settingReducers], initialState)));

/***/ }),

/***/ "./src/redux/store.ts":
/*!****************************!*\
  !*** ./src/redux/store.ts ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! redux */ "redux");
/* harmony import */ var redux__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(redux__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga */ "redux-saga");
/* harmony import */ var redux_saga__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_storeHolder__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/storeHolder */ "./src/lib/storeHolder.ts");
/* harmony import */ var _rootReducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rootReducer */ "./src/redux/rootReducer.ts");
/* harmony import */ var _rootSaga__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rootSaga */ "./src/redux/rootSaga.ts");





const bindMiddleware = middleware => Object(redux__WEBPACK_IMPORTED_MODULE_0__["applyMiddleware"])(...middleware);
function configureStore(initialState) {
  const sagaMiddleware = redux_saga__WEBPACK_IMPORTED_MODULE_1___default()();
  const store = Object(redux__WEBPACK_IMPORTED_MODULE_0__["createStore"])(_rootReducer__WEBPACK_IMPORTED_MODULE_3__["default"], initialState, bindMiddleware([sagaMiddleware]));
  store.sagaTask = sagaMiddleware.run(_rootSaga__WEBPACK_IMPORTED_MODULE_4__["default"]);
  _lib_storeHolder__WEBPACK_IMPORTED_MODULE_2__["default"].setStore(store);
  return store;
}
/* harmony default export */ __webpack_exports__["default"] = (configureStore);

/***/ }),

/***/ "./src/redux/stream-chat/actions.ts":
/*!******************************************!*\
  !*** ./src/redux/stream-chat/actions.ts ***!
  \******************************************/
/*! exports provided: getStreamConversation, getStreamConversationSuccess, getStreamConversationFail, sendStreamMessage, sendStreamMessageSuccess, sendStreamMessageFail, receiveStreamMessageSuccess, loadStreamMessages, loadStreamMessagesSuccess, loadStreamMessagesFail, loadMoreStreamMessages, loadMoreStreamMessagesSuccess, loadMoreStreamMessagesFail, fetchingStreamMessage, resetStreamMessage, resetMuteStreamMessage, resetAllStreamMessage, deleteMessage, deleteMessageSuccess, deleteMessageFail, muteUser, muteUserSuccess, muteUserFail, loadMuteUsers, loadMuteUsersSuccess, loadMuteUsersFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStreamConversation", function() { return getStreamConversation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStreamConversationSuccess", function() { return getStreamConversationSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getStreamConversationFail", function() { return getStreamConversationFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendStreamMessage", function() { return sendStreamMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendStreamMessageSuccess", function() { return sendStreamMessageSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendStreamMessageFail", function() { return sendStreamMessageFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "receiveStreamMessageSuccess", function() { return receiveStreamMessageSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadStreamMessages", function() { return loadStreamMessages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadStreamMessagesSuccess", function() { return loadStreamMessagesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadStreamMessagesFail", function() { return loadStreamMessagesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMoreStreamMessages", function() { return loadMoreStreamMessages; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMoreStreamMessagesSuccess", function() { return loadMoreStreamMessagesSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMoreStreamMessagesFail", function() { return loadMoreStreamMessagesFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fetchingStreamMessage", function() { return fetchingStreamMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetStreamMessage", function() { return resetStreamMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetMuteStreamMessage", function() { return resetMuteStreamMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "resetAllStreamMessage", function() { return resetAllStreamMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteMessage", function() { return deleteMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteMessageSuccess", function() { return deleteMessageSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "deleteMessageFail", function() { return deleteMessageFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "muteUser", function() { return muteUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "muteUserSuccess", function() { return muteUserSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "muteUserFail", function() { return muteUserFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMuteUsers", function() { return loadMuteUsers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMuteUsersSuccess", function() { return loadMuteUsersSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadMuteUsersFail", function() { return loadMuteUsersFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getStreamConversation,
  getStreamConversationSuccess,
  getStreamConversationFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getStreamConversation', 'GET_STREAM_CONVERSATION');
const {
  sendStreamMessage,
  sendStreamMessageSuccess,
  sendStreamMessageFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('sendStreamMessage', 'SEND_STREAM_MESSAGE');
const {
  receiveStreamMessageSuccess
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('receiveStreamMessageSuccess', 'RECEIVE_STREAM_MESSAGE_SUCCESS');
const {
  loadStreamMessages,
  loadStreamMessagesSuccess,
  loadStreamMessagesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loadStreamMessages', 'LOAD_STREAM_MESSAGES');
const {
  loadMoreStreamMessages,
  loadMoreStreamMessagesSuccess,
  loadMoreStreamMessagesFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loadMoreStreamMessages', 'LOAD_MORE_STREAM_MESSAGES');
const fetchingStreamMessage = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('fetchingStreamMessage');
const resetStreamMessage = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('resetStreamMessage');
const resetMuteStreamMessage = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('resetMuteStreamMessage');
const resetAllStreamMessage = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('resetAllStreamMessage');
const {
  deleteMessage,
  deleteMessageSuccess,
  deleteMessageFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('deleteMessage', 'DELETE_MESSAGE');
const {
  muteUser,
  muteUserSuccess,
  muteUserFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('muteUser', 'MUTE_USER');
const {
  loadMuteUsers,
  loadMuteUsersSuccess,
  loadMuteUsersFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('loadMuteUsers', 'LOAD_MUTE_USERS');

/***/ }),

/***/ "./src/redux/stream-chat/reducers.ts":
/*!*******************************************!*\
  !*** ./src/redux/stream-chat/reducers.ts ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/stream-chat/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialMessageState = {
  activeConversation: {},
  sendMessage: {
    sending: false
  },
  muteMessage: {
    sending: false,
    success: false
  },
  receiveMessage: {},
  conversationMap: {}
};
const streamMessageReducer = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getStreamConversation"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      activeConversation: {
        fetching: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getStreamConversationSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      activeConversation: {
        fetching: false,
        data: data.payload.data
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["fetchingStreamMessage"],
  reducer(state, data) {
    const {
      conversationMap
    } = state;
    const {
      conversationId
    } = data.payload;
    conversationMap[conversationId] = _objectSpread(_objectSpread({}, conversationMap[conversationId]), {}, {
      fetching: true
    });
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loadStreamMessagesSuccess"],
  reducer(state, data) {
    const {
      conversationMap
    } = state;
    const {
      conversationId,
      items,
      total
    } = data.payload;
    conversationMap[conversationId] = {
      items: [...items.reverse()],
      total,
      fetching: false
    };
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loadMoreStreamMessagesSuccess"],
  reducer(state, data) {
    const {
      conversationMap
    } = state;
    const {
      conversationId,
      items,
      total
    } = data.payload;
    conversationMap[conversationId] = {
      items: [...items.reverse(), ...(conversationMap[conversationId].items || [])],
      total,
      fetching: false
    };
    return _objectSpread({}, state);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sendStreamMessage"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      sendMessage: {
        sending: true,
        success: false,
        data: null
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sendStreamMessageSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      sendMessage: {
        sending: false,
        success: true,
        data: data.payload
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["sendStreamMessageFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      sendMessage: {
        sending: false,
        success: false,
        error: data.payload
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["receiveStreamMessageSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const {
      conversationId
    } = data.payload;
    if (!nextState.conversationMap[conversationId] || !nextState.conversationMap[conversationId].items) {
      nextState.conversationMap[conversationId] = {
        items: []
      };
    }
    nextState.conversationMap[conversationId].items.push(data.payload);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      receiveMessage: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["resetStreamMessage"],
  reducer(state) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      activeConversation: {},
      sendMessage: {
        sending: false
      },
      receiveMessage: {},
      conversationMap: {}
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["resetMuteStreamMessage"],
  reducer(state) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      muteMessage: {
        sending: false,
        success: false
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["resetAllStreamMessage"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const {
      conversationId
    } = data.payload;
    nextState.conversationMap[conversationId] = {
      items: []
    };
    return _objectSpread({}, nextState);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["deleteMessageSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    const {
      conversationId,
      _id
    } = data.payload;
    if (nextState.conversationMap[conversationId] && nextState.conversationMap[conversationId].items) {
      const i = Object(lodash__WEBPACK_IMPORTED_MODULE_0__["findIndex"])(nextState.conversationMap[conversationId].items, item => item && item._id === _id);
      nextState.conversationMap[conversationId].items[i].text = 'Message deleted';
      nextState.conversationMap[conversationId].items[i].isDeleted = true;
    }
    return _objectSpread({}, nextState);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["muteUserSuccess"],
  reducer(state, data) {
    const nextState = _objectSpread({}, state);
    return _objectSpread(_objectSpread({}, nextState), {}, {
      muteMessage: {
        sending: false,
        success: true,
        data: data.payload
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["muteUserFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      muteMessage: {
        sending: false,
        success: false,
        error: data.payload
      }
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('streamMessage', [streamMessageReducer], initialMessageState)));

/***/ }),

/***/ "./src/redux/stream-chat/sagas.ts":
/*!****************************************!*\
  !*** ./src/redux/stream-chat/sagas.ts ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_message_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/message.service */ "./src/services/message.service.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions */ "./src/redux/stream-chat/actions.ts");
/* eslint-disable no-console */






const streamMessageSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["getStreamConversation"],
  *worker(data) {
    try {
      const {
        conversation
      } = data.payload;
      const {
        type
      } = conversation;
      const resp = type === 'stream_public' ? yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].findPublicConversationPerformer(conversation.performerId) : yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getConversationByStreamId(conversation.streamId);
      if (resp && resp.data) {
        yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["getStreamConversationSuccess"])({
          data: resp.data
        }));
        yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadStreamMessages"])({
          conversationId: resp.data._id,
          limit: 25,
          offset: 0,
          type
        }));
      }
    } catch (e) {
      // load error
      console.log('err-get-conversation', e);
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["loadStreamMessages"],
  *worker(data) {
    try {
      const {
        conversationId,
        offset,
        limit
      } = data.payload;
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["fetchingStreamMessage"])({
        conversationId
      }));
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getPublicMessages(conversationId, {
        offset,
        limit
      });
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadStreamMessagesSuccess"])({
        conversationId,
        items: resp.data.data,
        total: resp.data.total
      }));
    } catch (e) {
      // load error
      console.log('err', e);
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["loadMoreStreamMessages"],
  *worker(data) {
    try {
      const messageMap = Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["select"])(state => state.streamMessage.messages);
      const {
        conversationId,
        offset,
        limit
      } = data.payload;
      if (messageMap && messageMap.fetching) {
        return;
      }
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["fetchingStreamMessage"])({
        conversationId
      }));
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].getPublicMessages(conversationId, {
        offset,
        limit
      });
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMoreStreamMessagesSuccess"])({
        conversationId,
        items: resp.data.data,
        total: resp.data.total
      }));
    } catch (e) {
      // load error
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error('Error occured, please try again later');
      console.log('err', e);
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["sendStreamMessage"],
  *worker(req) {
    try {
      const {
        conversationId,
        data
      } = req.payload;
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].sendStreamMessage(conversationId, data);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["sendStreamMessageSuccess"])(resp.data));
    } catch (e) {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["sendStreamMessageSuccess"])(e));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["deleteMessage"],
  *worker(req) {
    try {
      const {
        messageId
      } = req.payload;
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].deleteMessage(messageId);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["deleteMessageSuccess"])(resp.data));
    } catch (e) {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["deleteMessageFail"])(e));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["muteUser"],
  *worker(req) {
    try {
      const {
        conversationId,
        performerId,
        userId
      } = req.payload;
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].muteUser(conversationId, {
        performerId,
        userId
      });
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["muteUserSuccess"])(resp.data));
    } catch (e) {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["muteUserFail"])(e));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["loadMuteUsers"],
  *worker(req) {
    try {
      const {
        performerId
      } = req.payload;
      const resp = yield _services_message_service__WEBPACK_IMPORTED_MODULE_3__["messageService"].loadMuteUsers(performerId);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMuteUsersSuccess"])(resp.data));
    } catch (e) {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["loadMuteUsersFail"])(e));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(streamMessageSagas)]));

/***/ }),

/***/ "./src/redux/streaming/actions.ts":
/*!****************************************!*\
  !*** ./src/redux/streaming/actions.ts ***!
  \****************************************/
/*! exports provided: addPrivateRequest, accessPrivateRequest, updateLiveStreamSettings, cancelPrivateRequest, addMuted */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addPrivateRequest", function() { return addPrivateRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "accessPrivateRequest", function() { return accessPrivateRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateLiveStreamSettings", function() { return updateLiveStreamSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cancelPrivateRequest", function() { return cancelPrivateRequest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addMuted", function() { return addMuted; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const addPrivateRequest = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('ADD_PRIVATE_REQUEST');
const accessPrivateRequest = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('ACCESS_PRIVATE_REQUSET');
const updateLiveStreamSettings = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('UPDATE_LIVE_STREAM_SETTINGS');
const cancelPrivateRequest = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('CANCEL_PRIVATE_REQUEST');
const addMuted = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('ADD_MUTED');

/***/ }),

/***/ "./src/redux/streaming/reducers.ts":
/*!*****************************************!*\
  !*** ./src/redux/streaming/reducers.ts ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/streaming/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  privateRequests: [],
  beenMuted: [],
  settings: {
    viewerURL: '',
    publisherURL: '',
    optionForBroadcast: 'hls',
    optionForGroup: 'hls',
    optionForPrivate: 'hls',
    secureOption: false,
    agoraEnable: false
  }
};
const reducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["addPrivateRequest"],
  reducer(state, action) {
    var _state$privateRequest, _state$privateRequest2;
    const {
      user
    } = action.payload;
    const {
      privateRequests
    } = state;
    const privateIndex = privateRequests.findIndex(item => item.user._id === user._id);
    return _objectSpread(_objectSpread({}, state), {}, {
      // eslint-disable-next-line no-nested-ternary
      privateRequests: privateIndex > -1 ? state.privateRequests : ((_state$privateRequest = state.privateRequests[0]) === null || _state$privateRequest === void 0 ? void 0 : (_state$privateRequest2 = _state$privateRequest.user) === null || _state$privateRequest2 === void 0 ? void 0 : _state$privateRequest2.rubyBalance) > (user === null || user === void 0 ? void 0 : user.rubyBalance) ? [...state.privateRequests, _objectSpread({}, action.payload)] : [_objectSpread({}, action.payload), ...state.privateRequests]
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["addMuted"],
  reducer(state, action) {
    const {
      performerId
    } = action.payload;
    const {
      beenMuted
    } = state;
    const muteIndex = beenMuted.findIndex(item => item === performerId);
    return _objectSpread(_objectSpread({}, state), {}, {
      beenMuted: muteIndex > -1 ? state.beenMuted : [...state.beenMuted, performerId]
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["accessPrivateRequest"],
  reducer(state, action) {
    return _objectSpread(_objectSpread({}, state), {}, {
      privateRequests: state.privateRequests.filter(p => p.conversationId !== action.payload)
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["cancelPrivateRequest"],
  reducer(state, action) {
    return _objectSpread(_objectSpread({}, state), {}, {
      privateRequests: [...state.privateRequests.filter(p => p.conversationId !== action.payload)]
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateLiveStreamSettings"],
  reducer(state, action) {
    return _objectSpread(_objectSpread({}, state), {}, {
      settings: _objectSpread(_objectSpread({}, state.settings), action.payload)
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('streaming', [reducers], initialState)));

/***/ }),

/***/ "./src/redux/ui/actions.ts":
/*!*********************************!*\
  !*** ./src/redux/ui/actions.ts ***!
  \*********************************/
/*! exports provided: updateUIValue, loadUIValue, updateSidebarCollapseValue, updateTabValue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUIValue", function() { return updateUIValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadUIValue", function() { return loadUIValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateSidebarCollapseValue", function() { return updateSidebarCollapseValue; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateTabValue", function() { return updateTabValue; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const updateUIValue = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateUIValue');
const loadUIValue = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('loadUIValue');
const updateSidebarCollapseValue = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateSidebarCollapseValue');
const updateTabValue = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateTabValue');

/***/ }),

/***/ "./src/redux/ui/reducers.ts":
/*!**********************************!*\
  !*** ./src/redux/ui/reducers.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/ui/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const selectedTabIndex =  false ? undefined : 0;
const initialState = {
  theme: 'light',
  siteName: '',
  logo: '',
  menus: [],
  favicon: '/static/favicon.ico',
  loginPlaceholderImage: '',
  footerContent: '',
  modelBenefit: '',
  userBenefit: '',
  selectedTabIndex: selectedTabIndex,
  sidebarCollapse: false,
  fans: 0,
  following: 0
};
const uiReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateUIValue"],
  reducer(state, data) {
    if (false) {}
    return _objectSpread(_objectSpread({}, state), data.payload);
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateTabValue"],
  reducer(state, data) {
    if (false) {}
    return _objectSpread(_objectSpread({}, state), {}, {
      selectedTabIndex: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["updateSidebarCollapseValue"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      sidebarCollapse: !state.sidebarCollapse
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["loadUIValue"],
  reducer(state) {
    const newVal = {};
    if (false) {}
    return _objectSpread(_objectSpread({}, state), newVal);
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('ui', [uiReducers], initialState)));

/***/ }),

/***/ "./src/redux/user/actions.ts":
/*!***********************************!*\
  !*** ./src/redux/user/actions.ts ***!
  \***********************************/
/*! exports provided: updateCurrentUser, updateCurrentUserAvatar, updateCurrentUserCover, updateUser, updateUserSuccess, updateUserFail, updatePerformer, setUpdating, updatePassword, updatePasswordSuccess, updatePasswordFail, updateBanking, updateBankingSuccess, updateBankingFail, setUpdatingBanking, updateBlockCountries, updateBalance, updateStatsView */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCurrentUser", function() { return updateCurrentUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCurrentUserAvatar", function() { return updateCurrentUserAvatar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateCurrentUserCover", function() { return updateCurrentUserCover; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUser", function() { return updateUser; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUserSuccess", function() { return updateUserSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateUserFail", function() { return updateUserFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePerformer", function() { return updatePerformer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUpdating", function() { return setUpdating; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePassword", function() { return updatePassword; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePasswordSuccess", function() { return updatePasswordSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updatePasswordFail", function() { return updatePasswordFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBanking", function() { return updateBanking; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBankingSuccess", function() { return updateBankingSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBankingFail", function() { return updateBankingFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setUpdatingBanking", function() { return setUpdatingBanking; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBlockCountries", function() { return updateBlockCountries; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateBalance", function() { return updateBalance; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "updateStatsView", function() { return updateStatsView; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const updateCurrentUser = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateCurrentUser');
const updateCurrentUserAvatar = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateCurrentUserAvatar');
const updateCurrentUserCover = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateCurrentUserCover');
const {
  updateUser,
  updateUserSuccess,
  updateUserFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updateUser', 'UPDATE_USER');
const {
  updatePerformer
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updatePerformer', 'UPDATE_PERFORMER');
const setUpdating = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updatingUser');
const {
  updatePassword,
  updatePasswordSuccess,
  updatePasswordFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updatePassword', 'UPDATE_PASSWORD');
const {
  updateBanking,
  updateBankingSuccess,
  updateBankingFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('updateBanking', 'UPDATE_BANKING');
const setUpdatingBanking = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updatingBanking');
const updateBlockCountries = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateBlockCountries');
const updateBalance = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateBalance');
const updateStatsView = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAction"])('updateStatsView');

/***/ }),

/***/ "./src/redux/user/reducers.ts":
/*!************************************!*\
  !*** ./src/redux/user/reducers.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _redux_auth_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @redux/auth/actions */ "./src/redux/auth/actions.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./actions */ "./src/redux/user/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




const initialState = {
  current: {
    _id: null,
    avatar: '/static/no-avatar.png',
    cover: null,
    name: '',
    email: ''
  },
  error: null,
  updateSuccess: false,
  updating: false
};
const userReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateCurrentUser"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateCurrentUserAvatar"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: _objectSpread(_objectSpread({}, state.current), {}, {
        avatar: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateCurrentUserCover"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: _objectSpread(_objectSpread({}, state.current), {}, {
        cover: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateUserSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: data.payload,
      updateSuccess: true,
      error: null
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateUserFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updateUser: null,
      updateSuccess: false,
      error: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["setUpdating"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updating: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updatePasswordSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updateSuccess: true,
      updatedPassword: data.payload,
      error: null
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updatePasswordFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updateSuccess: false,
      updatedPassword: null,
      error: data.payload
    });
  }
},
// Update banking
// TODO add interface
{
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["setUpdatingBanking"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updating: data.payload,
      updateSuccess: false
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateBanking"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updateSuccess: false,
      updatedPassword: null,
      error: data.payload
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateBankingSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updateSuccess: true,
      updatedBanking: data.payload,
      current: _objectSpread(_objectSpread({}, state.current), {
        bankingInformation: data.payload
      }),
      error: null,
      updating: false
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateBankingFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      updateSuccess: false,
      error: data.payload,
      updating: false
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateBlockCountries"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      current: _objectSpread(_objectSpread({}, state.current), {
        blockCountries: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateBalance"],
  reducer(state, data) {
    const {
      token,
      type
    } = data.payload;
    const dataState = _objectSpread({}, state);
    const newState = type === 'ruby-balance' ? _objectSpread(_objectSpread({}, state.current), {}, {
      rubyBalance: dataState.current.rubyBalance += token
    }) : _objectSpread(_objectSpread({}, state.current), {}, {
      balance: dataState.current.balance += token
    });
    return _objectSpread(_objectSpread({}, state), {}, {
      current: _objectSpread({}, newState)
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_3__["updateStatsView"],
  reducer(state, data) {
    const {
      views
    } = data.payload;
    const dataState = _objectSpread({}, state);
    const newState = _objectSpread(_objectSpread({}, state.current), {}, {
      stats: _objectSpread(_objectSpread({}, dataState.current.stats), {}, {
        views: dataState.current.stats.views += views
      })
    });
    return _objectSpread(_objectSpread({}, state), {}, {
      current: _objectSpread({}, newState)
    });
  }
}, {
  on: _redux_auth_actions__WEBPACK_IMPORTED_MODULE_2__["logout"],
  reducer() {
    return _objectSpread({}, initialState);
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('user', [userReducers], initialState)));

/***/ }),

/***/ "./src/redux/user/sagas.ts":
/*!*********************************!*\
  !*** ./src/redux/user/sagas.ts ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./actions */ "./src/redux/user/actions.ts");






const userSagas = [
// TODO - defind update current user or get from auth user info to reload current user data if needed
{
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["updateUser"],
  *worker(data) {
    try {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdating"])(true));
      const updated = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["userService"].updateMe(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updateUserSuccess"])(updated.data));
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].success('Changes saved');
    } catch (e) {
      // TODO - alert error
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updateUserFail"])(error));
    } finally {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdating"])(false));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["updatePerformer"],
  *worker(data) {
    try {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdating"])(true));
      const updated = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["performerService"].updateMe(data.payload._id, data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updateUserSuccess"])(updated.data));
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].success('Changes saved');
    } catch (e) {
      // TODO - alert error
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updateUserFail"])(error));
    } finally {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdating"])(false));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["updatePassword"],
  *worker(data) {
    try {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdating"])(true));
      const updated = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["authService"].updatePassword(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updatePasswordSuccess"])(updated.data));
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].success('Changes saved');
    } catch (e) {
      // TODO - alert error
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updatePasswordFail"])(error));
    } finally {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdating"])(false));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_5__["updateBanking"],
  *worker(data) {
    try {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdatingBanking"])(true));
      const updated = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["performerService"].updateBanking(data.payload.performerId, data.payload);
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].success('Changes saved');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updateBankingSuccess"])(updated.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      antd__WEBPACK_IMPORTED_MODULE_4__["message"].error((error === null || error === void 0 ? void 0 : error.message) || 'Error occured, please try again later');
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["updateBankingFail"])(error));
    } finally {
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_5__["setUpdatingBanking"])(false));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(userSagas)]));

/***/ }),

/***/ "./src/redux/video/actions.ts":
/*!************************************!*\
  !*** ./src/redux/video/actions.ts ***!
  \************************************/
/*! exports provided: getVideos, getVideosSuccess, getVideosFail, getVods, getVodsSuccess, getVodsFail, moreVideo, moreVideoSuccess, moreVideoFail, moreVod, moreVodSuccess, moreVodFail, getRelated, getRelatedSuccess, getRelatedFail */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideos", function() { return getVideos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideosSuccess", function() { return getVideosSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVideosFail", function() { return getVideosFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVods", function() { return getVods; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVodsSuccess", function() { return getVodsSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getVodsFail", function() { return getVodsFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideo", function() { return moreVideo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoSuccess", function() { return moreVideoSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVideoFail", function() { return moreVideoFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVod", function() { return moreVod; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVodSuccess", function() { return moreVodSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "moreVodFail", function() { return moreVodFail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelated", function() { return getRelated; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedSuccess", function() { return getRelatedSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getRelatedFail", function() { return getRelatedFail; });
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");

const {
  getVideos,
  getVideosSuccess,
  getVideosFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getVideos', 'GET_VIDEOS');
const {
  getVods,
  getVodsSuccess,
  getVodsFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getVods', 'GET_VODS');
const {
  moreVideo,
  moreVideoSuccess,
  moreVideoFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreVideo', 'LOAD_MORE');
const {
  moreVod,
  moreVodSuccess,
  moreVodFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('moreVod', 'MORE_VOD');
const {
  getRelated,
  getRelatedSuccess,
  getRelatedFail
} = Object(_lib_redux__WEBPACK_IMPORTED_MODULE_0__["createAsyncAction"])('getRelated', 'GET_RELATED');

/***/ }),

/***/ "./src/redux/video/reducers.ts":
/*!*************************************!*\
  !*** ./src/redux/video/reducers.ts ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./actions */ "./src/redux/video/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }



const initialState = {
  videos: {
    requesting: false,
    error: null,
    success: false,
    items: [],
    total: 0
  },
  saleVideos: {
    requesting: false,
    error: null,
    success: false,
    items: [],
    total: 0
  },
  relatedVideos: {
    requesting: false,
    error: null,
    success: false,
    items: [],
    total: 0
  }
};
const videoReducers = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getVideos"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      videos: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getVideosSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      videos: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getVideosFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      videos: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreVideo"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      videos: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreVideoSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      videos: {
        requesting: false,
        total: data.payload.total,
        items: [...state.videos.items, ...data.payload.data],
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreVideoFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      videos: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getVods"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      saleVideos: _objectSpread(_objectSpread({}, state.saleVideos), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getVodsSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      saleVideos: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getVodsFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      saleVideos: _objectSpread(_objectSpread({}, state.saleVideos), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreVod"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      saleVideos: _objectSpread(_objectSpread({}, state.saleVideos), {}, {
        requesting: true,
        error: null,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreVodSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      saleVideos: {
        requesting: false,
        total: data.payload.total,
        items: [...state.saleVideos.items, ...data.payload.data],
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["moreVodFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      saleVideos: _objectSpread(_objectSpread({}, state.saleVideos), {}, {
        requesting: false,
        error: data.payload,
        success: false
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getRelated"],
  reducer(state) {
    return _objectSpread(_objectSpread({}, state), {}, {
      relatedVideos: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: true
      })
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getRelatedSuccess"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      relatedVideos: {
        requesting: false,
        items: data.payload.data,
        total: data.payload.total,
        success: true
      }
    });
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_2__["getRelatedFail"],
  reducer(state, data) {
    return _objectSpread(_objectSpread({}, state), {}, {
      relatedVideos: _objectSpread(_objectSpread({}, state.videos), {}, {
        requesting: false,
        error: data.payload
      })
    });
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["merge"])({}, Object(_lib_redux__WEBPACK_IMPORTED_MODULE_1__["createReducers"])('video', [videoReducers], initialState)));

/***/ }),

/***/ "./src/redux/video/sagas.ts":
/*!**********************************!*\
  !*** ./src/redux/video/sagas.ts ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash */ "lodash");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! redux-saga/effects */ "redux-saga/effects");
/* harmony import */ var redux_saga_effects__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _lib_redux__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @lib/redux */ "./src/lib/redux.ts");
/* harmony import */ var _services_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @services/index */ "./src/services/index.ts");
/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./actions */ "./src/redux/video/actions.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }





const videoSagas = [{
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getVideos"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["videoService"].userSearch(_objectSpread({}, data.payload));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getVideosSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getVideosFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["moreVideo"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["videoService"].userSearch(_objectSpread({}, data.payload));
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreVideoSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["moreVideoFail"])(error));
    }
  }
}, {
  on: _actions__WEBPACK_IMPORTED_MODULE_4__["getRelated"],
  *worker(data) {
    try {
      const resp = yield _services_index__WEBPACK_IMPORTED_MODULE_3__["videoService"].userSearch(data.payload);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getRelatedSuccess"])(resp.data));
    } catch (e) {
      const error = yield Promise.resolve(e);
      yield Object(redux_saga_effects__WEBPACK_IMPORTED_MODULE_1__["put"])(Object(_actions__WEBPACK_IMPORTED_MODULE_4__["getRelatedFail"])(error));
    }
  }
}];
/* harmony default export */ __webpack_exports__["default"] = (Object(lodash__WEBPACK_IMPORTED_MODULE_0__["flatten"])([Object(_lib_redux__WEBPACK_IMPORTED_MODULE_2__["createSagas"])(videoSagas)]));

/***/ }),

/***/ "./src/redux/withReduxSaga.ts":
/*!************************************!*\
  !*** ./src/redux/withReduxSaga.ts ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-redux-wrapper */ "next-redux-wrapper");
/* harmony import */ var next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_redux_saga__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-redux-saga */ "next-redux-saga");
/* harmony import */ var next_redux_saga__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_redux_saga__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store */ "./src/redux/store.ts");
/* eslint-disable func-names */



/* harmony default export */ __webpack_exports__["default"] = (function (BaseComponent) {
  return next_redux_wrapper__WEBPACK_IMPORTED_MODULE_0___default()(_store__WEBPACK_IMPORTED_MODULE_2__["default"])(next_redux_saga__WEBPACK_IMPORTED_MODULE_1___default()(BaseComponent));
});

/***/ }),

/***/ "./src/services/api-request.ts":
/*!*************************************!*\
  !*** ./src/services/api-request.ts ***!
  \*************************************/
/*! exports provided: TOKEN, APIRequest */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TOKEN", function() { return TOKEN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "APIRequest", function() { return APIRequest; });
/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-unfetch */ "isomorphic-unfetch");
/* harmony import */ var isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-cookie */ "js-cookie");
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _lib_string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @lib/string */ "./src/lib/string.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable indent */





const TOKEN = 'token';
class APIRequest {
  setAuthHeaderToken(token) {
    APIRequest.token = token;
  }

  /**
   * Parses the JSON returned by a network request
   *
   * @param  {object} response A response from a network request
   *x
   * @return {object}          The parsed JSON from the request
   */
  parseJSON(response) {
    if ((response === null || response === void 0 ? void 0 : response.status) === 204 || (response === null || response === void 0 ? void 0 : response.status) === 205) {
      return null;
    }
    return response === null || response === void 0 ? void 0 : response.json();
  }

  /**
   * Checks if a network request came back fine, and throws an error if not
   *
   * @param  {object} response   A response from a network request
   *
   * @return {object|undefined} Returns either the response, or throws an error
   */
  checkStatus(response) {
    if ((response === null || response === void 0 ? void 0 : response.status) >= 200 && (response === null || response === void 0 ? void 0 : response.status) < 300) {
      return response;
    }
    if ((response === null || response === void 0 ? void 0 : response.status) === 401) {
      if (false) {}

      // throw new Error('Please login!');
    }

    // if (response.status === 403) {
    //   throw new Error('Please login!');
    // }

    // const error = new Error(response.statusText) as any;
    // error.response = response;
    // throw error;
    throw response.clone().json();
  }
  request(url, method, body, headers) {
    const verb = (method || 'get').toUpperCase();
    const updatedHeader = _objectSpread({
      'Content-Type': 'application/json',
      // TODO - check me
      Authorization: APIRequest.token || js_cookie__WEBPACK_IMPORTED_MODULE_2___default.a.get(TOKEN) || null
    }, headers || {});
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_4__["getGlobalConfig"])();
    return isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default()(Object(_lib_string__WEBPACK_IMPORTED_MODULE_3__["isUrl"])(url) ? url : `${process.env.API_ENDPOINT || "https://caster-api.staging.domandtom.com"}${url}`, {
      method: verb,
      headers: updatedHeader,
      body: body ? JSON.stringify(body) : null
    }).then(this.checkStatus).then(this.parseJSON);
  }
  buildUrl(baseUrl, params) {
    if (!params) {
      return baseUrl;
    }
    const queryString = Object.keys(params).map(k => {
      if (Array.isArray(params[k])) {
        return params[k].map(param => `${encodeURIComponent(k)}=${encodeURIComponent(param)}`).join('&');
      }
      return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;
    }).join('&');
    return `${baseUrl}?${queryString}`;
  }
  get(url, headers) {
    return this.request(url, 'get', null, headers);
  }
  post(url, data, headers) {
    return this.request(url, 'post', data, headers);
  }
  put(url, data, headers) {
    return this.request(url, 'put', data, headers);
  }
  del(url, data, headers) {
    return this.request(url, 'delete', data, headers);
  }
  upload(url, files, options = {
    onProgress() {},
    method: 'POST'
  }) {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_4__["getGlobalConfig"])();
    const uploadUrl = Object(_lib_string__WEBPACK_IMPORTED_MODULE_3__["isUrl"])(url) ? url : `${process.env.API_ENDPOINT || "https://caster-api.staging.domandtom.com"}${url}`;
    return new Promise((resolve, reject) => {
      const req = new XMLHttpRequest();
      req.upload.addEventListener('progress', event => {
        if (event.lengthComputable) {
          options.onProgress({
            percentage: event.loaded / event.total * 100
          });
        }
      });
      req.addEventListener('load', () => {
        const success = req.status >= 200 && req.status < 300;
        const {
          response
        } = req;
        if (!success) {
          return reject(response);
        }
        return resolve(response);
      });
      req.upload.addEventListener('error', () => {
        reject(req.response);
      });
      const formData = new FormData();
      files.forEach(f => formData.append(f.fieldname, f.file, f.file.name));
      options.customData && Object.keys(options.customData).forEach(fieldname => {
        if (typeof options.customData[fieldname] !== 'undefined' && !Array.isArray(options.customData[fieldname])) formData.append(fieldname, options.customData[fieldname]);
        if (typeof options.customData[fieldname] !== 'undefined' && Array.isArray(options.customData[fieldname])) {
          if (options.customData[fieldname].length) {
            for (let i = 0; i < options.customData[fieldname].length; i += 1) {
              formData.append(fieldname, options.customData[fieldname][i]);
            }
          }
        }
      });
      req.responseType = 'json';
      req.open(options.method || 'POST', uploadUrl);
      const token = APIRequest.token || js_cookie__WEBPACK_IMPORTED_MODULE_2___default.a.get(TOKEN);
      req.setRequestHeader('Authorization', token || '');
      req.send(formData);
    });
  }
  async uploadUrl({
    url,
    body,
    file,
    type,
    fieldName = 'file',
    onProgress = () => {},
    fileMetadata = null
  }) {
    // load file metadata if needed
    const {
      data
    } = await this.post(url, _objectSpread(_objectSpread({}, body || {}), {}, {
      type
    }));
    const {
        uploadUrl,
        fields = [],
        method = 'POST',
        fileId
      } = data,
      rests = _objectWithoutProperties(data, ["uploadUrl", "fields", "method", "fileId"]);
    // overwrite / update metadata if provided
    if (fileMetadata && fileId) {
      await this.put(`/files/${data.fileId}/metadata`, fileMetadata);
    }
    return new Promise((resolve, reject) => {
      const req = new XMLHttpRequest();
      req.upload.addEventListener('progress', event => {
        if (event.lengthComputable) {
          onProgress({
            percentage: event.loaded / event.total * 100
          });
        }
      });
      req.addEventListener('load', () => {
        const success = req.status >= 200 && req.status < 300;
        const {
          response
        } = req;
        if (!success) {
          return reject(response);
        }
        return resolve(_objectSpread(_objectSpread({}, rests), {}, {
          fileId,
          status: success
        }));
      });
      req.upload.addEventListener('error', () => {
        reject(req.response);
      });
      const formData = new FormData();
      if (fields && Object.keys(fields).length) {
        Object.keys(fields).forEach(key => {
          formData.append(key, fields[key]);
        });
      }
      // append file at last is required for AWS upload
      formData.append(fieldName, file, file.name);
      req.responseType = 'json';
      req.open(method || 'POST', uploadUrl);
      req.send(formData);
    });
  }
  async uploadFileAndGetUrl({
    url,
    body,
    file,
    type
  }) {
    const formData = new FormData();

    // Append the file to the formData object
    if (file) {
      formData.append('file', file);
    }

    // Append other body fields to the formData
    for (const key in body) {
      if (body.hasOwnProperty(key)) {
        formData.append(key, body[key]);
      }
    }

    // Append type if needed
    formData.append('type', type);
    let Headers = {
      Authorization: APIRequest.token || js_cookie__WEBPACK_IMPORTED_MODULE_2___default.a.get(TOKEN) || null
    };
    const response = await isomorphic_unfetch__WEBPACK_IMPORTED_MODULE_0___default()(Object(_lib_string__WEBPACK_IMPORTED_MODULE_3__["isUrl"])(url) ? url : `${process.env.API_ENDPOINT || "https://caster-api.staging.domandtom.com"}${url}`, {
      method: 'POST',
      headers: Headers,
      body: formData
    });
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }
    return await response.json();
  }
}
_defineProperty(APIRequest, "token", '');

/***/ }),

/***/ "./src/services/auth.service.ts":
/*!**************************************!*\
  !*** ./src/services/auth.service.ts ***!
  \**************************************/
/*! exports provided: AuthService, authService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return AuthService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "authService", function() { return authService; });
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ "js-cookie");
/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


class AuthService extends _api_request__WEBPACK_IMPORTED_MODULE_1__["APIRequest"] {
  async login(data) {
    return this.post('/auth/login', data);
  }
  async loginTwitter() {
    return this.get(this.buildUrl('/auth/twitter/login'));
  }
  async loginGoogle(data) {
    return this.post('/auth/google/login', data);
  }
  async callbackLoginTwitter(data) {
    return this.get(this.buildUrl('/auth/twitter/callback', data));
  }
  async verifyEmail(data) {
    return this.post('/auth/email-verification', data);
  }
  setToken(token, remember = true) {
    const expired = {
      expires: !remember ? 1 : 365
    };
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set(_api_request__WEBPACK_IMPORTED_MODULE_1__["TOKEN"], token, expired);
    this.setAuthHeaderToken(token);
  }
  getToken() {
    return js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get(_api_request__WEBPACK_IMPORTED_MODULE_1__["TOKEN"]);
  }
  setTwitterToken(data, role) {
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set('oauthToken', data.oauthToken, {
      expires: 1
    });
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set('oauthTokenSecret', data.oauthTokenSecret, {
      expires: 1
    });
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.set('role', role, {
      expires: 1
    });
  }
  getTwitterToken() {
    const oauthToken = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get('oauthToken');
    const oauthTokenSecret = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get('oauthTokenSecret');
    const role = js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.get('role');
    return {
      oauthToken,
      oauthTokenSecret,
      role
    };
  }
  removeToken() {
    js_cookie__WEBPACK_IMPORTED_MODULE_0___default.a.remove(_api_request__WEBPACK_IMPORTED_MODULE_1__["TOKEN"]);
  }
  updatePassword(data) {
    return this.put('/auth/users/me/password', data);
  }
  resetPassword(data) {
    return this.post('/auth/users/forgot', data);
  }
  updateForgotPassword(data, token) {
    return this.post(`/auth/password-change?token=${token}`, _objectSpread(_objectSpread({}, data), {}, {
      source: 'user'
    }));
  }
  register(data) {
    return this.post('/auth/users/register', data);
  }
  registerPerformer(documents, data, onProgress) {
    return this.upload('/auth/performers/register', documents, {
      onProgress,
      customData: data
    });
  }
  userSwitchToPerformer(userId) {
    return this.post(`/auth/users/${userId}/switch-to-performer`);
  }
}
const authService = new AuthService();

/***/ }),

/***/ "./src/services/banner.service.ts":
/*!****************************************!*\
  !*** ./src/services/banner.service.ts ***!
  \****************************************/
/*! exports provided: BannerService, bannerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BannerService", function() { return BannerService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bannerService", function() { return bannerService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class BannerService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/site-promo/search', query));
  }
}
const bannerService = new BannerService();

/***/ }),

/***/ "./src/services/block.service.ts":
/*!***************************************!*\
  !*** ./src/services/block.service.ts ***!
  \***************************************/
/*! exports provided: BlockService, blockService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BlockService", function() { return BlockService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "blockService", function() { return blockService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class BlockService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  blockCountries(payload) {
    return this.post('/performer-blocks/countries', payload);
  }
  blockUser(payload) {
    return this.post('/performer-blocks/user', payload);
  }
  unBlockUser(id) {
    this.del(`/performer-blocks/user/${id}`);
  }
  getBlockListUsers(query) {
    return this.get(this.buildUrl('/performer-blocks/users', query));
  }
  checkCountryBlock() {
    return this.get('/country-block/check');
  }
}
const blockService = new BlockService();

/***/ }),

/***/ "./src/services/cart.service.ts":
/*!**************************************!*\
  !*** ./src/services/cart.service.ts ***!
  \**************************************/
/*! exports provided: CartService, cartService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CartService", function() { return CartService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartService", function() { return cartService; });
class CartService {
  getCartByUser(userId) {
    let existCart = localStorage.getItem(`cart_${userId}`);
    existCart = existCart && existCart.length ? JSON.parse(existCart) : [];
    return existCart;
  }
}
const cartService = new CartService();

/***/ }),

/***/ "./src/services/comment.service.ts":
/*!*****************************************!*\
  !*** ./src/services/comment.service.ts ***!
  \*****************************************/
/*! exports provided: CommentService, commentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommentService", function() { return CommentService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "commentService", function() { return commentService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class CommentService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/comments', payload);
  }
  update(id, payload) {
    return this.upload(`/comments/${id}`, payload);
  }
  search(query) {
    return this.get(this.buildUrl('/comments/search', query));
  }
  delete(id) {
    return this.del(`/comments/${id}`);
  }
}
const commentService = new CommentService();

/***/ }),

/***/ "./src/services/config.ts":
/*!********************************!*\
  !*** ./src/services/config.ts ***!
  \********************************/
/*! exports provided: setGlobalConfig, getGlobalConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setGlobalConfig", function() { return setGlobalConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGlobalConfig", function() { return getGlobalConfig; });
let globalConfig = {};
const setGlobalConfig = config => {
  globalConfig = config;
};
const getGlobalConfig = () => globalConfig;

/***/ }),

/***/ "./src/services/cookies.service.ts":
/*!*****************************************!*\
  !*** ./src/services/cookies.service.ts ***!
  \*****************************************/
/*! exports provided: CookieService, cookieService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CookieService", function() { return CookieService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cookieService", function() { return cookieService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class CookieService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  setCookie(cname, cvalue, exTime) {
    const d = new Date();
    d.setTime(d.getTime() + exTime * 60 * 1000);
    const expires = `expires=${d.toUTCString()}`;
    document.cookie = `${cname}=${cvalue};${expires};path=/`;
  }
  getCookie(cname) {
    const name = `${cname}=`;
    const decodedCookie = decodeURIComponent(document.cookie);
    const ca = decodedCookie.split(';');
    for (let i = 0; i < ca.length; i += 1) {
      let c = ca[i];
      while (c.charAt(0) === ' ') {
        c = c.substring(1);
      }
      if (c.indexOf(name) === 0) {
        return c.substring(name.length, c.length);
      }
    }
    return '';
  }
}
const cookieService = new CookieService();

/***/ }),

/***/ "./src/services/earning.service.ts":
/*!*****************************************!*\
  !*** ./src/services/earning.service.ts ***!
  \*****************************************/
/*! exports provided: EarningService, earningService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return EarningService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "earningService", function() { return earningService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class EarningService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  performerStats(param) {
    return this.get(this.buildUrl('/earning/performer/stats', param));
  }
  performerSearch(param) {
    return this.get(this.buildUrl('/earning/performer/search', param));
  }
}
const earningService = new EarningService();

/***/ }),

/***/ "./src/services/feed.service.ts":
/*!**************************************!*\
  !*** ./src/services/feed.service.ts ***!
  \**************************************/
/*! exports provided: FeedService, feedService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FeedService", function() { return FeedService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "feedService", function() { return feedService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class FeedService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/feeds/performers', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/feeds/users', query));
  }
  userRecommendSearch(query) {
    return this.get(this.buildUrl('/feeds/users/search/recommended', query));
  }
  followingSearch(query) {
    return this.get(this.buildUrl('/feeds/users/search/following', query));
  }
  trendingSearch(query) {
    return this.get(this.buildUrl('/feeds/users/search/trending', query));
  }
  userHomeFeeds(query) {
    if (query.q === '') {
      return this.get(this.buildUrl('/feeds/users/home-feeds', query));
    }
    return this.get(this.buildUrl('/feeds/users', query));
  }
  delete(id) {
    return this.del(`/feeds/performers/${id}`);
  }
  findById(id, headers) {
    return this.get(`/feeds/performers/${id}`, headers);
  }
  findByHashtag(hashtag, headers) {
    return this.get(`/feeds/users/?hashTag=${hashtag}`, headers);
  }
  findOne(id, headers) {
    return this.get(`/feeds/users/${id}`, headers);
  }
  update(id, payload) {
    return this.put(`/feeds/performers/${id}`, payload);
  }
  create(data) {
    return this.post('/feeds/performers', data);
  }
  uploadPhoto(file, payload, onProgress) {
    return this.upload('/feeds/performers/photo/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadThumbnail(file, payload, onProgress) {
    return this.upload('/feeds/performers/thumbnail/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadVideo(file, payload, onProgress) {
    return this.upload('/feeds/performers/video/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadTeaser(file, payload, onProgress) {
    return this.upload('/feeds/performers/teaser/upload', [{
      fieldname: 'file',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  uploadFile(file, body, onProgress, fileMetadata) {
    return this.uploadFileAndGetUrl({
      type: file !== null && file !== void 0 && file.type.includes('video') ? 'video' : 'image',
      file,
      url: '/feeds/performers/upload-url',
      body,
      onProgress: onProgress || function next() {},
      fileMetadata
    });
  }
  addPoll(payload) {
    return this.post('/feeds/performers/polls', payload);
  }
  votePoll(pollId) {
    return this.post(`/feeds/users/vote/${pollId}`);
  }
  getBookmark(payload) {
    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));
  }
  addView(id) {
    return this.post(`/feeds/users/${id}/view`);
  }
  getTrendingHashtag(type, payload) {
    return this.get(this.buildUrl(`/feed-hashtags/trending/${type}`, payload));
  }
  getHashtagAlphabet(payload) {
    return this.get(this.buildUrl('/feed-hashtags/alphabetically', payload));
  }
  userGetHashtagAlphabet(type) {
    return this.get(this.buildUrl(`/feed-hashtags/user/alphabetically/${type}`));
  }
}
const feedService = new FeedService();

/***/ }),

/***/ "./src/services/file.service.ts":
/*!**************************************!*\
  !*** ./src/services/file.service.ts ***!
  \**************************************/
/*! exports provided: FileService, fileService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileService", function() { return FileService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fileService", function() { return fileService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class FileService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  getSignUrlById(payload) {
    return this.post('/files/sign-url', payload);
  }
  getPublicInfo(payload) {
    return this.post('/files/public-info', payload);
  }
  getSignUrlsByIds(payload) {
    return this.post('/files/sign-urls', payload);
  }
}
const fileService = new FileService();

/***/ }),

/***/ "./src/services/follow.service.ts":
/*!****************************************!*\
  !*** ./src/services/follow.service.ts ***!
  \****************************************/
/*! exports provided: FollowService, followService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FollowService", function() { return FollowService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "followService", function() { return followService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class FollowService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(type, query) {
    return this.get(this.buildUrl(`/follow/search/${type}`, query));
  }
  create(payload) {
    return this.post('/follow', payload);
  }
  delete(performerId) {
    return this.del(`/follow/${performerId}`);
  }
}
const followService = new FollowService();

/***/ }),

/***/ "./src/services/gallery.service.ts":
/*!*****************************************!*\
  !*** ./src/services/gallery.service.ts ***!
  \*****************************************/
/*! exports provided: galleryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "galleryService", function() { return galleryService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class GalleryService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/performer/performer-assets/galleries', payload);
  }
  search(param) {
    return this.get(this.buildUrl('/performer/performer-assets/galleries/search', param));
  }
  userSearch(param) {
    return this.get(this.buildUrl('/user/performer-assets/galleries/search', param));
  }
  update(id, payload) {
    return this.put(`/performer/performer-assets/galleries/${id}`, payload);
  }
  findById(id) {
    return this.get(`/performer/performer-assets/galleries/${id}/view`);
  }
  userViewDetails(id, headers) {
    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);
  }
  delete(id) {
    return this.del(`/performer/performer-assets/galleries/${id}`);
  }
  getBookmarks(payload) {
    return this.get(this.buildUrl('/reactions/galleries/bookmark', payload));
  }
}
const galleryService = new GalleryService();

/***/ }),

/***/ "./src/services/gift.service.ts":
/*!**************************************!*\
  !*** ./src/services/gift.service.ts ***!
  \**************************************/
/*! exports provided: GiftService, giftService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GiftService", function() { return GiftService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "giftService", function() { return giftService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class GiftService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/gifts/all', query));
  }
  favoriteGift() {
    return this.get(this.buildUrl('/gifts/favorite'));
  }
  addfavoriteGift(payload) {
    return this.post('/gifts/add-to-favorite', payload);
  }
}
const giftService = new GiftService();

/***/ }),

/***/ "./src/services/index.ts":
/*!*******************************!*\
  !*** ./src/services/index.ts ***!
  \*******************************/
/*! exports provided: AuthService, authService, UserService, userService, FeedService, feedService, PerformerService, performerService, ProductService, productService, CommentService, commentService, ReactionService, reactionService, PaymentService, paymentService, UtilsService, utilsService, isMobile, BannerService, bannerService, EarningService, earningService, CartService, cartService, MessageService, messageService, subscriptionService, OrderService, orderService, SettingService, settingService, PostService, postService, PostCategoryService, postCategoryService, streamService, SearchService, searchService, VideoService, videoService, galleryService, TokenPackageService, tokenPackageService, PhotoService, photoService, TokenTransctionService, tokenTransctionService, payoutRequestService, BlockService, blockService, ReportService, reportService, CookieService, cookieService, FollowService, followService, GiftService, giftService, paymentTokenService, notificationService, FileService, fileService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _auth_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth.service */ "./src/services/auth.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuthService", function() { return _auth_service__WEBPACK_IMPORTED_MODULE_0__["AuthService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "authService", function() { return _auth_service__WEBPACK_IMPORTED_MODULE_0__["authService"]; });

/* harmony import */ var _user_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user.service */ "./src/services/user.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return _user_service__WEBPACK_IMPORTED_MODULE_1__["UserService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "userService", function() { return _user_service__WEBPACK_IMPORTED_MODULE_1__["userService"]; });

/* harmony import */ var _feed_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./feed.service */ "./src/services/feed.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FeedService", function() { return _feed_service__WEBPACK_IMPORTED_MODULE_2__["FeedService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "feedService", function() { return _feed_service__WEBPACK_IMPORTED_MODULE_2__["feedService"]; });

/* harmony import */ var _performer_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./performer.service */ "./src/services/performer.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PerformerService", function() { return _performer_service__WEBPACK_IMPORTED_MODULE_3__["PerformerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "performerService", function() { return _performer_service__WEBPACK_IMPORTED_MODULE_3__["performerService"]; });

/* harmony import */ var _product_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./product.service */ "./src/services/product.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ProductService", function() { return _product_service__WEBPACK_IMPORTED_MODULE_4__["ProductService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "productService", function() { return _product_service__WEBPACK_IMPORTED_MODULE_4__["productService"]; });

/* harmony import */ var _comment_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comment.service */ "./src/services/comment.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CommentService", function() { return _comment_service__WEBPACK_IMPORTED_MODULE_5__["CommentService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "commentService", function() { return _comment_service__WEBPACK_IMPORTED_MODULE_5__["commentService"]; });

/* harmony import */ var _reaction_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./reaction.service */ "./src/services/reaction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReactionService", function() { return _reaction_service__WEBPACK_IMPORTED_MODULE_6__["ReactionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reactionService", function() { return _reaction_service__WEBPACK_IMPORTED_MODULE_6__["reactionService"]; });

/* harmony import */ var _payment_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./payment.service */ "./src/services/payment.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PaymentService", function() { return _payment_service__WEBPACK_IMPORTED_MODULE_7__["PaymentService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "paymentService", function() { return _payment_service__WEBPACK_IMPORTED_MODULE_7__["paymentService"]; });

/* harmony import */ var _utils_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils.service */ "./src/services/utils.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "UtilsService", function() { return _utils_service__WEBPACK_IMPORTED_MODULE_8__["UtilsService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "utilsService", function() { return _utils_service__WEBPACK_IMPORTED_MODULE_8__["utilsService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isMobile", function() { return _utils_service__WEBPACK_IMPORTED_MODULE_8__["isMobile"]; });

/* harmony import */ var _banner_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./banner.service */ "./src/services/banner.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BannerService", function() { return _banner_service__WEBPACK_IMPORTED_MODULE_9__["BannerService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bannerService", function() { return _banner_service__WEBPACK_IMPORTED_MODULE_9__["bannerService"]; });

/* harmony import */ var _earning_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./earning.service */ "./src/services/earning.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EarningService", function() { return _earning_service__WEBPACK_IMPORTED_MODULE_10__["EarningService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "earningService", function() { return _earning_service__WEBPACK_IMPORTED_MODULE_10__["earningService"]; });

/* harmony import */ var _cart_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./cart.service */ "./src/services/cart.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CartService", function() { return _cart_service__WEBPACK_IMPORTED_MODULE_11__["CartService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cartService", function() { return _cart_service__WEBPACK_IMPORTED_MODULE_11__["cartService"]; });

/* harmony import */ var _message_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./message.service */ "./src/services/message.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageService", function() { return _message_service__WEBPACK_IMPORTED_MODULE_12__["MessageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "messageService", function() { return _message_service__WEBPACK_IMPORTED_MODULE_12__["messageService"]; });

/* harmony import */ var _subscription_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./subscription.service */ "./src/services/subscription.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subscriptionService", function() { return _subscription_service__WEBPACK_IMPORTED_MODULE_13__["subscriptionService"]; });

/* harmony import */ var _order_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./order.service */ "./src/services/order.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OrderService", function() { return _order_service__WEBPACK_IMPORTED_MODULE_14__["OrderService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "orderService", function() { return _order_service__WEBPACK_IMPORTED_MODULE_14__["orderService"]; });

/* harmony import */ var _setting_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./setting.service */ "./src/services/setting.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SettingService", function() { return _setting_service__WEBPACK_IMPORTED_MODULE_15__["SettingService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "settingService", function() { return _setting_service__WEBPACK_IMPORTED_MODULE_15__["settingService"]; });

/* harmony import */ var _post_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./post.service */ "./src/services/post.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostService", function() { return _post_service__WEBPACK_IMPORTED_MODULE_16__["PostService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "postService", function() { return _post_service__WEBPACK_IMPORTED_MODULE_16__["postService"]; });

/* harmony import */ var _post_category_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./post-category.service */ "./src/services/post-category.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PostCategoryService", function() { return _post_category_service__WEBPACK_IMPORTED_MODULE_17__["PostCategoryService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "postCategoryService", function() { return _post_category_service__WEBPACK_IMPORTED_MODULE_17__["postCategoryService"]; });

/* harmony import */ var _stream_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./stream.service */ "./src/services/stream.service.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "streamService", function() { return _stream_service__WEBPACK_IMPORTED_MODULE_18__["streamService"]; });

/* harmony import */ var _search_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./search.service */ "./src/services/search.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SearchService", function() { return _search_service__WEBPACK_IMPORTED_MODULE_19__["SearchService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "searchService", function() { return _search_service__WEBPACK_IMPORTED_MODULE_19__["searchService"]; });

/* harmony import */ var _video_service__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./video.service */ "./src/services/video.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VideoService", function() { return _video_service__WEBPACK_IMPORTED_MODULE_20__["VideoService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "videoService", function() { return _video_service__WEBPACK_IMPORTED_MODULE_20__["videoService"]; });

/* harmony import */ var _gallery_service__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./gallery.service */ "./src/services/gallery.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "galleryService", function() { return _gallery_service__WEBPACK_IMPORTED_MODULE_21__["galleryService"]; });

/* harmony import */ var _token_package_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./token-package.service */ "./src/services/token-package.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TokenPackageService", function() { return _token_package_service__WEBPACK_IMPORTED_MODULE_22__["TokenPackageService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tokenPackageService", function() { return _token_package_service__WEBPACK_IMPORTED_MODULE_22__["tokenPackageService"]; });

/* harmony import */ var _photo_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./photo.service */ "./src/services/photo.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PhotoService", function() { return _photo_service__WEBPACK_IMPORTED_MODULE_23__["PhotoService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "photoService", function() { return _photo_service__WEBPACK_IMPORTED_MODULE_23__["photoService"]; });

/* harmony import */ var _token_transaction_service__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./token-transaction.service */ "./src/services/token-transaction.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TokenTransctionService", function() { return _token_transaction_service__WEBPACK_IMPORTED_MODULE_24__["TokenTransctionService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tokenTransctionService", function() { return _token_transaction_service__WEBPACK_IMPORTED_MODULE_24__["tokenTransctionService"]; });

/* harmony import */ var _payout_request_service__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./payout-request.service */ "./src/services/payout-request.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "payoutRequestService", function() { return _payout_request_service__WEBPACK_IMPORTED_MODULE_25__["payoutRequestService"]; });

/* harmony import */ var _block_service__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./block.service */ "./src/services/block.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "BlockService", function() { return _block_service__WEBPACK_IMPORTED_MODULE_26__["BlockService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "blockService", function() { return _block_service__WEBPACK_IMPORTED_MODULE_26__["blockService"]; });

/* harmony import */ var _report_service__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./report.service */ "./src/services/report.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ReportService", function() { return _report_service__WEBPACK_IMPORTED_MODULE_27__["ReportService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reportService", function() { return _report_service__WEBPACK_IMPORTED_MODULE_27__["reportService"]; });

/* harmony import */ var _cookies_service__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./cookies.service */ "./src/services/cookies.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CookieService", function() { return _cookies_service__WEBPACK_IMPORTED_MODULE_28__["CookieService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cookieService", function() { return _cookies_service__WEBPACK_IMPORTED_MODULE_28__["cookieService"]; });

/* harmony import */ var _follow_service__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./follow.service */ "./src/services/follow.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FollowService", function() { return _follow_service__WEBPACK_IMPORTED_MODULE_29__["FollowService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "followService", function() { return _follow_service__WEBPACK_IMPORTED_MODULE_29__["followService"]; });

/* harmony import */ var _gift_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./gift.service */ "./src/services/gift.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GiftService", function() { return _gift_service__WEBPACK_IMPORTED_MODULE_30__["GiftService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "giftService", function() { return _gift_service__WEBPACK_IMPORTED_MODULE_30__["giftService"]; });

/* harmony import */ var _payment_token_service__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./payment-token.service */ "./src/services/payment-token.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "paymentTokenService", function() { return _payment_token_service__WEBPACK_IMPORTED_MODULE_31__["paymentTokenService"]; });

/* harmony import */ var _notification_service__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./notification.service */ "./src/services/notification.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "notificationService", function() { return _notification_service__WEBPACK_IMPORTED_MODULE_32__["notificationService"]; });

/* harmony import */ var _file_service__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./file.service */ "./src/services/file.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FileService", function() { return _file_service__WEBPACK_IMPORTED_MODULE_33__["FileService"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fileService", function() { return _file_service__WEBPACK_IMPORTED_MODULE_33__["fileService"]; });




































/***/ }),

/***/ "./src/services/message.service.ts":
/*!*****************************************!*\
  !*** ./src/services/message.service.ts ***!
  \*****************************************/
/*! exports provided: MessageService, messageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageService", function() { return MessageService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "messageService", function() { return messageService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");


class MessageService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  getConversations(query) {
    return this.get(this.buildUrl('/conversations', query));
  }
  searchConversations(query) {
    return this.get(this.buildUrl('/conversations/search', query));
  }
  createConversation(data) {
    return this.post('/conversations', data);
  }
  getConversationDetail(id) {
    return this.get(`/conversations/${id}`);
  }
  getMessages(conversationId, query) {
    return this.get(this.buildUrl(`/messages/conversations/${conversationId}`, query));
  }
  loadMuteUsers(query) {
    return this.get(this.buildUrl('/messages/mute-users', query));
  }
  sendMessage(conversationId, data) {
    return this.post(`/messages/conversations/${conversationId}`, data);
  }
  countTotalNotRead() {
    return this.get('/messages/counting-not-read-messages');
  }
  readAllInConversation(conversationId) {
    return this.post(`/messages/read-all/${conversationId}`);
  }
  getMessageUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/messages/private/file`;
  }
  getConversationByStreamId(streamId) {
    return this.get(`/conversations/stream/${streamId}`);
  }
  getPublicMessages(conversationId, query) {
    return this.get(this.buildUrl(`/messages/conversations/public/${conversationId}`, query));
  }
  sendStreamMessage(conversationId, data) {
    return this.post(`/messages/stream/conversations/${conversationId}`, data);
  }
  sendPublicStreamMessage(conversationId, data) {
    return this.post(`/messages/stream/public/conversations/${conversationId}`, data);
  }
  findPublicConversationPerformer(performerId) {
    return this.get(`/conversations/stream/public/${performerId}`);
  }
  deleteMessage(id) {
    return this.del(`/messages/${id}`);
  }
  deleteAllMessageInConversation(conversationId) {
    return this.del(`/messages/${conversationId}/remove-all-message`);
  }
  updateConversationName(conversationId, data) {
    return this.put(`/conversations/${conversationId}/update`, data);
  }
  muteUser(conversationId, data) {
    return this.post(`/messages/mute-user/${conversationId}`, data);
  }
  checkMuteUser(performerId) {
    return this.get(this.buildUrl(`/messages/check-mute-chat/${performerId}`));
  }
  unMuteUser(id) {
    return this.del(`/messages/mute-user/${id}`);
  }
  deleteConversation(conversationId) {
    return this.del(`/conversations/${conversationId}`);
  }
}
const messageService = new MessageService();

/***/ }),

/***/ "./src/services/notification.service.ts":
/*!**********************************************!*\
  !*** ./src/services/notification.service.ts ***!
  \**********************************************/
/*! exports provided: notificationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "notificationService", function() { return notificationService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class NotificationService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/notification', query));
  }
  countUnread() {
    return this.get('/notification/total-unread');
  }
  readAll() {
    return this.put('/notification/read-all');
  }
  read(id) {
    return this.put(`/notification/${id}/read`);
  }
  hasHolderId(id) {
    return NotificationService.HOLDER_IDS.includes(id);
  }
  addHolderId(id) {
    NotificationService.HOLDER_IDS.push(id);
  }
}
_defineProperty(NotificationService, "HOLDER_IDS", []);
const notificationService = new NotificationService();

/***/ }),

/***/ "./src/services/order.service.ts":
/*!***************************************!*\
  !*** ./src/services/order.service.ts ***!
  \***************************************/
/*! exports provided: OrderService, orderService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OrderService", function() { return OrderService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orderService", function() { return orderService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class OrderService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  performerSearch(payload) {
    return this.get(this.buildUrl('/orders/search', payload));
  }
  userSearch(payload) {
    return this.get(this.buildUrl('/orders/users/search', payload));
  }
  findById(id) {
    return this.get(`/orders/${id}`);
  }
  update(id, data) {
    return this.put(`/orders/${id}/update`, data);
  }
  getDownloadLinkDigital(productId) {
    return this.get(`/user/performer-assets/products/${productId}/download-link`);
  }
}
const orderService = new OrderService();

/***/ }),

/***/ "./src/services/payment-token.service.ts":
/*!***********************************************!*\
  !*** ./src/services/payment-token.service.ts ***!
  \***********************************************/
/*! exports provided: paymentTokenService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paymentTokenService", function() { return paymentTokenService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PaymentTokenService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(param) {
    return this.get(this.buildUrl('/payment-token/user/search', param));
  }
  sendTip(performerId, data) {
    return this.post(`/payment-token/send-tip-token/${performerId}`, data);
  }
}
const paymentTokenService = new PaymentTokenService();

/***/ }),

/***/ "./src/services/payment.service.ts":
/*!*****************************************!*\
  !*** ./src/services/payment.service.ts ***!
  \*****************************************/
/*! exports provided: PaymentService, paymentService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PaymentService", function() { return PaymentService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "paymentService", function() { return paymentService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PaymentService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  subscribePerformer(payload) {
    return this.post('/payment/subscribe/performers', payload);
  }
  userSearch(payload) {
    return this.get(this.buildUrl('/transactions/user/search', payload));
  }
  purchaseTokenPackage(id) {
    return this.post(`/payment/purchase-tokens/${id}`, {
      paymentGateway: "paypal"
    });
  }
  applyCoupon(code) {
    return this.post(`/coupons/${code}/apply-coupon`);
  }
  connectStripeAccount() {
    return this.post('/stripe/accounts');
  }
  getStripeCards() {
    return this.get('/stripe/user/cards');
  }
  addStripeCard(payload) {
    return this.post('/stripe/user/cards', payload);
  }
  removeStripeCard(id) {
    return this.del(`/stripe/user/cards/${id}`);
  }
  retrieveStripeAccount() {
    return this.get('/stripe/accounts/me');
  }
  loginLink() {
    return this.get('/stripe/accounts/me/login-link');
  }
  getCards(req) {
    return this.get(this.buildUrl('/payment-cards', req));
  }
  addCard(gateway, payload) {
    return this.post(`/${gateway}/cards`, payload);
  }
  removeCard(id) {
    return this.del(`/payment-cards/${id}`);
  }
  sendSavePaypalCredentials({
    performerId,
    email
  }) {
    return this.post(`/performers/payment-gateway-settings`, {
      performerId,
      key: 'paypal',
      status: 'active',
      value: email
    });
  }
  tradeDiamond(amount) {
    return this.post('/payment/trade-diamonds', {
      amount
    });
  }
  paypalCallback(paypalOrderId) {
    return this.post(`/paypal/cheking/${paypalOrderId}`);
  }
  paypalCallhook({
    eventType,
    orderId
  }) {
    return this.post(`/payment/paypal/callhook`, {
      event_type: eventType,
      resource: {
        id: orderId
      }
    });
  }
}
const paymentService = new PaymentService();

/***/ }),

/***/ "./src/services/payout-request.service.ts":
/*!************************************************!*\
  !*** ./src/services/payout-request.service.ts ***!
  \************************************************/
/*! exports provided: payoutRequestService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "payoutRequestService", function() { return payoutRequestService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PayoutRequestService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  calculate() {
    return this.post('/payout-requests/performer/calculate');
  }
  search(query) {
    return this.get(this.buildUrl('/payout-requests/performer/search', query));
  }
  create(body) {
    return this.post('/payout-requests/performer', body);
  }
  update(id, body) {
    return this.put(`/payout-requests/performer/${id}`, body);
  }
  detail(id, headers) {
    return this.get(`/payout-requests/performer/${id}/view`, headers);
  }
}
const payoutRequestService = new PayoutRequestService();

/***/ }),

/***/ "./src/services/performer.service.ts":
/*!*******************************************!*\
  !*** ./src/services/performer.service.ts ***!
  \*******************************************/
/*! exports provided: PerformerService, performerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PerformerService", function() { return PerformerService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "performerService", function() { return performerService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");


class PerformerService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/performers/user/search', query));
  }
  randomSearch(query) {
    return this.get(this.buildUrl('/performers/search/random', query));
  }
  me(headers) {
    return this.get('/performers/me', headers);
  }
  findOne(id, headers) {
    return this.get(`/performers/${id}`, headers);
  }
  findByEmail(email, headers) {
    return this.get(`/performers/findbyEmail/${email}`, headers);
  }

  // getAvatarUploadUrl(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {
  //   return this.uploadUrl({
  //     type: file?.type.includes('video') ? 'video' : 'image',
  //     file,
  //     url: '/performers/avatar/upload',
  //     body,
  //     onProgress: onProgress || function next() {},
  //     fileMetadata
  //   });
  // }

  getAvatarUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/avatar/upload`;
  }
  getCoverUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/cover/upload`;
  }
  getVideoUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/welcome-video/upload`;
  }
  getDocumentUploadUrl() {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/documents/upload`;
  }
  updateMe(id, payload) {
    return this.put(`/performers/${id}`, payload);
  }
  getTopPerformer(query) {
    return this.get(this.buildUrl('/performers/top', query));
  }
  updateBanking(id, payload) {
    return this.put(`/performers/${id}/banking-settings`, payload);
  }
  updatePaymentGateway(id, payload) {
    return this.put(`/performers/${id}/payment-gateway-settings`, payload);
  }
  getBookmarked(payload) {
    return this.get(this.buildUrl('/reactions/performers/bookmark', payload));
  }
  uploadDocumentFiles(file, body, onProgress, type) {
    return this.uploadFileAndGetUrl({
      file: file,
      url: '/performers/documents/upload-url',
      body,
      onProgress: onProgress || function next() {},
      type
    });
  }
  uploadAvatarFiles(file, body, onProgress, fileMetadata) {
    return this.uploadUrl({
      file,
      url: '/performers/avatar/upload-url',
      body,
      onProgress: onProgress || function next() {},
      fileMetadata
    });
  }
  uploadCoverFiles(file, body, onProgress, fileMetadata) {
    return this.uploadUrl({
      file,
      url: '/performers/cover/upload-url',
      body,
      onProgress: onProgress || function next() {},
      fileMetadata
    });
  }
  uploadDocument(payload) {
    return this.post('/performers/documents/upload', payload);
  }
  updateNotificationSetting(id, payload) {
    return this.put(`/performers/${id}/notification-settings`, payload);
  }
  setInternalProfile() {
    return this.post('/internal-profile/detect-login');
  }
  getRanking() {
    return this.get('/users/ranking');
  }
  getBoardCasterAnalytics(type, payload) {
    return this.get(this.buildUrl(`/performer/performer-analytics/${type}`, payload));
  }
  getNextSupportedRanking(performerId) {
    return this.get(`/performer/performer-analytics/ruby-to-nextRank/${performerId}`);
  }
  checkRole(payload) {
    return this.get(this.buildUrl('/performers/check-role', payload));
  }
  getMileStones() {
    return this.get(this.buildUrl('/performers/me/roles'));
  }
  getDocumentCheckStatus() {
    return this.get(this.buildUrl('/documents/auth/check'));
  }
}
const performerService = new PerformerService();

/***/ }),

/***/ "./src/services/photo.service.ts":
/*!***************************************!*\
  !*** ./src/services/photo.service.ts ***!
  \***************************************/
/*! exports provided: PhotoService, photoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PhotoService", function() { return PhotoService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "photoService", function() { return photoService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PhotoService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  searchByUser(query) {
    const {
      performerId
    } = query;
    return this.get(this.buildUrl(`/user/performer-assets/photos/${performerId}`, query));
  }
  searchByPerformer(query) {
    return this.get(this.buildUrl('/performer/performer-assets/photos/search', query));
  }
  update(id, payload) {
    return this.put(`/performer/performer-assets/photos/${id}`, payload);
  }
  setCoverGallery(id) {
    return this.post(`/performer/performer-assets/photos/set-cover/${id}`);
  }
  delete(id) {
    return this.del(`/performer/performer-assets/photos/${id}`);
  }
  uploadImages(file, payload, onProgress) {
    return this.upload('/performer/performer-assets/photos/upload', [{
      fieldname: 'photo',
      file
    }], {
      onProgress,
      customData: payload
    });
  }
  searchPhotosInGallery(payload) {
    return this.get(this.buildUrl('/performer/performer-assets/photos/search', payload));
  }
  userSearch(payload) {
    return this.get(this.buildUrl('/user/performer-assets/photos', payload));
  }
}
const photoService = new PhotoService();

/***/ }),

/***/ "./src/services/post-category.service.ts":
/*!***********************************************!*\
  !*** ./src/services/post-category.service.ts ***!
  \***********************************************/
/*! exports provided: PostCategoryService, postCategoryService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostCategoryService", function() { return PostCategoryService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "postCategoryService", function() { return postCategoryService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PostCategoryService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/post-categories', payload);
  }
  search(query) {
    return this.get(this.buildUrl('/post-categories', query));
  }
  findById(id) {
    return this.get(`/post-categories/${id}`);
  }
  update(id, payload) {
    return this.put(`/post-categories/${id}`, payload);
  }
  delete(id) {
    return this.del(`/post-categories/${id}`);
  }
}
const postCategoryService = new PostCategoryService();

/***/ }),

/***/ "./src/services/post.service.ts":
/*!**************************************!*\
  !*** ./src/services/post.service.ts ***!
  \**************************************/
/*! exports provided: PostService, postService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PostService", function() { return PostService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "postService", function() { return postService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class PostService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/posts', query));
  }
  findById(id) {
    return this.get(`/posts/${id}`);
  }
}
const postService = new PostService();

/***/ }),

/***/ "./src/services/product.service.ts":
/*!*****************************************!*\
  !*** ./src/services/product.service.ts ***!
  \*****************************************/
/*! exports provided: ProductService, productService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductService", function() { return ProductService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "productService", function() { return productService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class ProductService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  createProduct(files, payload, onProgress) {
    return this.upload('/performer/performer-assets/products', files, {
      onProgress,
      customData: payload
    });
  }
  update(id, files, payload, onProgress) {
    return this.upload(`/performer/performer-assets/products/${id}`, files, {
      onProgress,
      customData: payload,
      method: 'PUT'
    });
  }
  search(query) {
    return this.get(this.buildUrl('/performer/performer-assets/products/search', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/user/performer-assets/products/search', query));
  }
  userView(productId, headers) {
    return this.get(`/user/performer-assets/products/${productId}`, headers);
  }
  findById(id) {
    return this.get(`/performer/performer-assets/products/${id}/view`);
  }
  delete(id) {
    return this.del(`/performer/performer-assets/products/${id}`);
  }
  getBookmarked(payload) {
    return this.get(this.buildUrl('/reactions/products/bookmark', payload));
  }
}
const productService = new ProductService();

/***/ }),

/***/ "./src/services/reaction.service.ts":
/*!******************************************!*\
  !*** ./src/services/reaction.service.ts ***!
  \******************************************/
/*! exports provided: ReactionService, reactionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReactionService", function() { return ReactionService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reactionService", function() { return reactionService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class ReactionService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/reactions', payload);
  }
  delete(payload) {
    return this.del('/reactions', payload);
  }
  search(query) {
    return this.get(this.buildUrl('/reactions/search', query));
  }
}
const reactionService = new ReactionService();

/***/ }),

/***/ "./src/services/report.service.ts":
/*!****************************************!*\
  !*** ./src/services/report.service.ts ***!
  \****************************************/
/*! exports provided: ReportService, reportService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ReportService", function() { return ReportService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reportService", function() { return reportService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class ReportService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  create(payload) {
    return this.post('/reports', payload);
  }
}
const reportService = new ReportService();

/***/ }),

/***/ "./src/services/search.service.ts":
/*!****************************************!*\
  !*** ./src/services/search.service.ts ***!
  \****************************************/
/*! exports provided: SearchService, searchService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SearchService", function() { return SearchService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "searchService", function() { return searchService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class SearchService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  searchByKeyword(payload) {
    return this.post('/search/keywords', payload);
  }
  listByKeyword(query) {
    return this.get(this.buildUrl('/search/list/keywords', query));
  }
}
const searchService = new SearchService();

/***/ }),

/***/ "./src/services/setting.service.ts":
/*!*****************************************!*\
  !*** ./src/services/setting.service.ts ***!
  \*****************************************/
/*! exports provided: SettingService, settingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingService", function() { return SettingService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "settingService", function() { return settingService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class SettingService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_settings", {});
  }
  async all(group = '', forceReload = false) {
    const settingGroup = group || 'all';
    if (this._settings[settingGroup] && !forceReload) {
      return this._settings[settingGroup];
    }
    const resp = await this.get(this.buildUrl('/settings/public', {
      group
    }));
    this._settings[settingGroup] = resp;
    return resp;
  }
  contact(data) {
    return this.post('/contact', data);
  }
}
const settingService = new SettingService();

/***/ }),

/***/ "./src/services/stream.service.tsx":
/*!*****************************************!*\
  !*** ./src/services/stream.service.tsx ***!
  \*****************************************/
/*! exports provided: streamService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "streamService", function() { return streamService; });
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! moment */ "moment");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @lib/utils */ "./src/lib/utils.ts");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! antd */ "antd");
/* harmony import */ var antd__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(antd__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* eslint-disable @typescript-eslint/no-unused-vars */





class StreamService extends _api_request__WEBPACK_IMPORTED_MODULE_3__["APIRequest"] {
  getSessionId(id, type) {
    return this.get(`/streaming/session/${id}/${type}`);
  }
  goLive() {
    return this.post('/streaming/live');
  }
  joinPublicChat(performerId) {
    return this.post(`/streaming/join/${performerId}`);
  }
  requestPrivateChat(performerId) {
    return this.post(`/streaming/private-chat/${performerId}`);
  }
  acceptPrivateChat(id) {
    return this.get(`/streaming/private-chat/${id}`);
  }
  startGroupChat() {
    return this.post('/streaming/group-chat');
  }
  joinGroupChat(id) {
    return this.get(`/streaming/group-chat/${id}`);
  }
  generateOneTimeToken(data) {
    return this.post('/streaming/token', data);
  }
  async getPublishToken(options, expireDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().add(1, 'd').toDate().getTime()) {
    try {
      const {
        settings,
        streamId
      } = options;
      const {
        secureOption
      } = settings;
      if (secureOption) {
        const resp = await this.generateOneTimeToken({
          id: streamId,
          type: 'publish',
          expireDate
        });
        return resp.data.tokenId;
      }
      return null;
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["getResponseError"])(error));
      return null;
    }
  }
  async getSubscriberToken(options, expireDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().add(1, 'd').toDate().getTime()) {
    try {
      const {
        settings,
        streamId
      } = options;
      const {
        secureOption
      } = settings;
      if (secureOption) {
        const resp = await this.generateOneTimeToken({
          id: streamId,
          type: 'play',
          expireDate
        });
        return resp.data.tokenId;
      }
      return null;
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["getResponseError"])(error));
      return null;
    }
  }
  async getLiveStreamOrVodURL(options, expireDate = moment__WEBPACK_IMPORTED_MODULE_0___default()().add(1, 'd').toDate().getTime(), _player = 'hls') {
    // http://[IP_Address]/<Application_Name>/streams/streamID.mp4?token=tokenId
    // http://[IP_Address]/<Application_Name>/streams/streamID.m3u8?token=tokenId
    // http://[IP_Address]/<Application_Name>/play.html?name=streamID&playOrder=hls&token=tokenId
    try {
      // const src = `https://${viewerURL}:5443/${appName}/streams/${streamId}.m3u8${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;
      // eslint-disable-next-line no-shadow
      const {
        appName,
        settings,
        streamId
      } = options;
      const {
        secureOption,
        viewerURL
      } = settings;
      const extension = _player === 'hls' ? 'm3u8' : 'mp4';
      if (!viewerURL || !appName) {
        return '';
      }
      let oneTimeToken = '';
      if (secureOption) {
        const resp = await this.generateOneTimeToken({
          id: streamId,
          type: 'play',
          expireDate
        });
        oneTimeToken = resp.data.tokenId;
      }
      const {
        protocol
      } = window.location;
      return `https://${viewerURL}/${appName}/streams/${streamId}.${extension}${oneTimeToken ? `?token=${oneTimeToken}` : ''}`;
    } catch (err) {
      const error = await Promise.resolve(err);
      antd__WEBPACK_IMPORTED_MODULE_2__["message"].error(Object(_lib_utils__WEBPACK_IMPORTED_MODULE_1__["getResponseError"])(error));
      return '';
    }
  }
  togglePrivateChatStatus() {
    return this.put('/streaming/private-chat/toggle-status').then(resp => resp.data);
  }
  cancelPrivateChat(conversationId) {
    return this.post(`/streaming/private-chat/cancel/${conversationId}`).then(resp => resp.data);
  }
  timeOutPrivateChat(conversationId, performerId) {
    return this.post(`/streaming/private-chat/timeout/${conversationId}/${performerId}`).then(resp => resp.data);
  }
  getLiveStreaming(performerId) {
    return this.get(`/streaming/live/${performerId}`);
  }
  adminRemoveStream(conversationId) {
    return this.del(`/admin/streaming/remove/${conversationId}`);
  }
  getPublicStreams(isStreaming = true) {
    return this.get(`/streaming/list/public?isStreaming=${isStreaming}`);
  }
}
const streamService = new StreamService();

/***/ }),

/***/ "./src/services/subscription.service.ts":
/*!**********************************************!*\
  !*** ./src/services/subscription.service.ts ***!
  \**********************************************/
/*! exports provided: subscriptionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "subscriptionService", function() { return subscriptionService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class SubscriptionService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/subscriptions/performer/search', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/subscriptions/user/search', query));
  }
  cancelSubscription(id, gateway) {
    return this.post(`/payment/${gateway}/cancel-subscription/${id}`);
  }
}
const subscriptionService = new SubscriptionService();

/***/ }),

/***/ "./src/services/token-package.service.ts":
/*!***********************************************!*\
  !*** ./src/services/token-package.service.ts ***!
  \***********************************************/
/*! exports provided: TokenPackageService, tokenPackageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenPackageService", function() { return TokenPackageService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenPackageService", function() { return tokenPackageService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* eslint-disable linebreak-style */
/* eslint-disable indent */

class TokenPackageService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/package/token/search', query));
  }
}
const tokenPackageService = new TokenPackageService();

/***/ }),

/***/ "./src/services/token-transaction.service.ts":
/*!***************************************************!*\
  !*** ./src/services/token-transaction.service.ts ***!
  \***************************************************/
/*! exports provided: TokenTransctionService, tokenTransctionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TokenTransctionService", function() { return TokenTransctionService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tokenTransctionService", function() { return tokenTransctionService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class TokenTransctionService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  sendTip(performerId, payload) {
    return this.post(`/token-transactions/tip/${performerId}`, payload);
  }
  sendGift(performerId, payload) {
    return this.post(`/token-transactions/gifts/${performerId}`, payload);
  }
  sendPaidToken(conversationId, payload) {
    return this.post(`/token-transactions/pay-token/${conversationId}`, payload);
  }
  purchaseFeed(id, payload) {
    return this.post(`/token-transactions/feed/${id}`, payload);
  }
  purchaseProduct(id, payload) {
    return this.post(`/token-transactions/product/${id}`, payload);
  }
  purchaseVideo(id, payload) {
    return this.post(`/token-transactions/video/${id}`, payload);
  }
  purchaseGallery(id, payload) {
    return this.post(`/token-transactions/gallery/${id}`, payload);
  }
  purchaseMessage(id, payload) {
    return this.post(`/token-transactions/message/${id}`, payload);
  }
  purchaseStream(id) {
    return this.post(`/token-transactions/stream/${id}`);
  }
  boostPromotion(bracketId, payload) {
    return this.post(`/token-transactions/booking-cross-promotion/${bracketId}`, payload);
  }
  userSearch(query) {
    return this.get(this.buildUrl('/token-transactions/user/search', query));
  }
  userTransactions(query) {
    return this.get(this.buildUrl('/transactions/user/search', query));
  }
}
const tokenTransctionService = new TokenTransctionService();

/***/ }),

/***/ "./src/services/user.service.ts":
/*!**************************************!*\
  !*** ./src/services/user.service.ts ***!
  \**************************************/
/*! exports provided: UserService, userService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "userService", function() { return userService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config */ "./src/services/config.ts");


class UserService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  me(headers) {
    return this.get('/users/me', headers);
  }
  updateMe(payload) {
    return this.put('/users', payload);
  }
  getAvatarUploadUrl(userId) {
    const config = Object(_config__WEBPACK_IMPORTED_MODULE_1__["getGlobalConfig"])();
    if (userId) {
      return `${config.NEXT_PUBLIC_API_ENDPOINT}/users/${userId}/avatar/upload`;
    }
    return `${config.NEXT_PUBLIC_API_ENDPOINT}/users/avatar/upload`;
  }
  search(query) {
    return this.get(this.buildUrl('/users/search', query));
  }
  findById(id) {
    return this.get(`/users/view/${id}`);
  }
}
const userService = new UserService();

/***/ }),

/***/ "./src/services/utils.service.ts":
/*!***************************************!*\
  !*** ./src/services/utils.service.ts ***!
  \***************************************/
/*! exports provided: UtilsService, utilsService, isMobile */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UtilsService", function() { return UtilsService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utilsService", function() { return utilsService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isMobile", function() { return isMobile; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

class UtilsService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  constructor(...args) {
    super(...args);
    _defineProperty(this, "_countries", []);
  }
  async countriesList() {
    if (this._countries.length) {
      return this._countries;
    }
    const resp = await this.get('/countries/list');
    this._countries = resp;
    return resp;
  }
  languagesList() {
    return this.get('/languages/list');
  }
  phoneCodesList() {
    return this.get('/phone-codes/list');
  }
  bodyInfo() {
    return this.get('/user-additional');
  }
  verifyRecaptcha(token) {
    return this.post('/re-captcha/verify', {
      token
    });
  }
  statesList(countryCode) {
    return this.get(`/states/${countryCode}`);
  }
  citiesList(countryCode, state) {
    return this.get(`/cities/${countryCode}/${state}`);
  }
}
const utilsService = new UtilsService();
function isMobile() {
  let check = false;
  (function checkMobile(a) {
    if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i.test(a.substr(0, 4))) check = true;
  })(navigator.userAgent || navigator.vendor);
  return check;
}

/***/ }),

/***/ "./src/services/video.service.ts":
/*!***************************************!*\
  !*** ./src/services/video.service.ts ***!
  \***************************************/
/*! exports provided: VideoService, videoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VideoService", function() { return VideoService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "videoService", function() { return videoService; });
/* harmony import */ var _api_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api-request */ "./src/services/api-request.ts");

class VideoService extends _api_request__WEBPACK_IMPORTED_MODULE_0__["APIRequest"] {
  search(query) {
    return this.get(this.buildUrl('/performer/performer-assets/videos/search', query));
  }
  userSearch(query) {
    return this.get(this.buildUrl('/user/performer-assets/videos/search', query));
  }
  delete(id) {
    return this.del(`/performer/performer-assets/videos/${id}`);
  }
  findById(id, headers) {
    return this.get(`/performer/performer-assets/videos/${id}/view`, headers);
  }
  findOne(id, headers) {
    return this.get(`/user/performer-assets/videos/${id}`, headers);
  }
  update(id, files, payload, onProgress) {
    return this.upload(`/performer/performer-assets/videos/edit/${id}`, files, {
      onProgress,
      customData: payload,
      method: 'PUT'
    });
  }
  deleteFile(id, type) {
    return this.del(`/performer/performer-assets/videos/remove-file/${id}`, {
      type
    });
  }
  uploadVideo(files, payload, onProgress) {
    return this.upload('/performer/performer-assets/videos/upload', files, {
      onProgress,
      customData: payload
    });
  }
  getBookmarks(payload) {
    return this.get(this.buildUrl('/reactions/videos/bookmark', payload));
  }
}
const videoService = new VideoService();

/***/ }),

/***/ "./src/socket/Event.tsx":
/*!******************************!*\
  !*** ./src/socket/Event.tsx ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/router */ "next/router");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _SocketContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SocketContext */ "./src/socket/SocketContext.tsx");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./src/socket/utils.ts");
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/* eslint-disable react/require-default-props */




class Event extends react__WEBPACK_IMPORTED_MODULE_1__["PureComponent"] {
  constructor(props) {
    super(props);
    _defineProperty(this, "_handleRouteChangeComplete", () => {
      const {
        handleRouterChange,
        event,
        handler
      } = this.props;
      const socket = this.context;
      handleRouterChange && socket.on(event, handler);
    });
  }
  componentDidMount() {
    const {
      event,
      handler
    } = this.props;
    const socket = this.context;
    if (!socket) {
      Object(_utils__WEBPACK_IMPORTED_MODULE_3__["warning"])('Socket IO connection has not been established.');
      return;
    }
    socket.on(event, handler);
  }
  componentWillUnmount() {
    const {
      event
    } = this.props;
    const socket = this.context;
    if (!socket) {
      Object(_utils__WEBPACK_IMPORTED_MODULE_3__["warning"])('Socket IO connection has not been established.');
      return;
    }
    socket.off(event);
    next_router__WEBPACK_IMPORTED_MODULE_0___default.a.events.off('routeChangeComplete', this._handleRouteChangeComplete);
  }
  render() {
    return false;
  }
}
Event.contextType = _SocketContext__WEBPACK_IMPORTED_MODULE_2__["SocketContext"];
/* harmony default export */ __webpack_exports__["default"] = (Event);

/***/ }),

/***/ "./src/socket/Socket.tsx":
/*!*******************************!*\
  !*** ./src/socket/Socket.tsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! socket.io-client */ "socket.io-client");
/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(socket_io_client__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @services/auth.service */ "./src/services/auth.service.ts");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-redux */ "react-redux");
/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _services_config__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @services/config */ "./src/services/config.ts");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ "./src/socket/utils.ts");
/* harmony import */ var _SocketContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SocketContext */ "./src/socket/SocketContext.tsx");
var _jsxFileName = "C:\\Users\\roman\\Pictures\\Case\\row\\src\\socket\\Socket.tsx";

var __jsx = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }







class Socket extends react__WEBPACK_IMPORTED_MODULE_0__["Component"] {
  constructor(props) {
    super(props);
    _defineProperty(this, "socket", void 0);
    this.connect();
  }
  shouldComponentUpdate(nextProps) {
    const {
      loggedIn
    } = this.props;
    if (nextProps.loggedIn === loggedIn) {
      this.connect();
    }
    return true;
  }
  componentWillUnmount() {
    this.socket && this.socket.close();
  }
  login() {
    if (!this.socket) {
      return false;
    }
    const token = _services_auth_service__WEBPACK_IMPORTED_MODULE_2__["authService"].getToken();
    return this.socket.emit('auth/login', {
      token
    });
  }
  connect() {
    const token = _services_auth_service__WEBPACK_IMPORTED_MODULE_2__["authService"].getToken();
    if (true) {
      return;
    }
    const config = Object(_services_config__WEBPACK_IMPORTED_MODULE_4__["getGlobalConfig"])();
    const {
      uri = config.NEXT_PUBLIC_SOCKET_ENDPOINT
    } = this.props;
    const options = {
      transports: ['websocket', 'polling', 'long-polling'],
      query: token ? `token=${token}` : ''
    };
    this.socket = socket_io_client__WEBPACK_IMPORTED_MODULE_1___default()(uri, this.mergeOptions(options));
    this.socket.status = 'initialized';
    this.socket.on('connect', () => {
      this.socket.status = 'connected';
      if (token) {
        this.login();
      }
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["debug"])('connected');
    });
    this.socket.on('disconnect', () => {
      this.socket.status = 'disconnected';
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["debug"])('disconnect');
    });
    this.socket.on('error', err => {
      this.socket.status = 'failed';
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["warning"])('error', err);
    });
    this.socket.on('reconnect', data => {
      this.socket.status = 'connected';
      if (token) {
        this.login();
      }
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["debug"])('reconnect', data);
    });
    this.socket.on('reconnect_attempt', () => {
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["debug"])('reconnect_attempt');
    });
    this.socket.on('reconnecting', () => {
      this.socket.status = 'reconnecting';
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["debug"])('reconnecting');
    });
    this.socket.on('reconnect_failed', error => {
      this.socket.status = 'failed';
      Object(_utils__WEBPACK_IMPORTED_MODULE_5__["warning"])('reconnect_failed', error);
    });
  }
  mergeOptions(options = {}) {
    const defaultOptions = {
      reconnection: true,
      reconnectionAttempts: Infinity,
      reconnectionDelay: 1 * 1000,
      reconnectionDelayMax: 10 * 1000,
      autoConnect: true,
      transports: ['websocket', 'polling', 'long-polling'],
      rejectUnauthorized: true
    };
    return _objectSpread(_objectSpread({}, defaultOptions), options);
  }
  render() {
    const {
      children
    } = this.props;
    return __jsx(_SocketContext__WEBPACK_IMPORTED_MODULE_6__["SocketContext"].Provider, {
      value: this.socket,
      __self: this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 119,
        columnNumber: 7
      }
    }, react__WEBPACK_IMPORTED_MODULE_0__["Children"].only(children));
  }
}
const mapStates = state => ({
  loggedIn: state.auth.loggedIn
});
/* harmony default export */ __webpack_exports__["default"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__["connect"])(mapStates, null)(Socket));

/***/ }),

/***/ "./src/socket/SocketContext.tsx":
/*!**************************************!*\
  !*** ./src/socket/SocketContext.tsx ***!
  \**************************************/
/*! exports provided: SocketContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SocketContext", function() { return SocketContext; });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const SocketContext = /*#__PURE__*/Object(react__WEBPACK_IMPORTED_MODULE_0__["createContext"])('socket');

/***/ }),

/***/ "./src/socket/index.ts":
/*!*****************************!*\
  !*** ./src/socket/index.ts ***!
  \*****************************/
/*! exports provided: Socket, Event, SocketContext */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Socket__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Socket */ "./src/socket/Socket.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Socket", function() { return _Socket__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _Event__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Event */ "./src/socket/Event.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Event", function() { return _Event__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _SocketContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SocketContext */ "./src/socket/SocketContext.tsx");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SocketContext", function() { return _SocketContext__WEBPACK_IMPORTED_MODULE_2__["SocketContext"]; });




if (false) {}


/***/ }),

/***/ "./src/socket/utils.ts":
/*!*****************************!*\
  !*** ./src/socket/utils.ts ***!
  \*****************************/
/*! exports provided: warning, debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "warning", function() { return warning; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
/* eslint-disable func-names */
/* eslint-disable prefer-spread */
/**
 * Prints a warning in the console if it exists.
 *
 * @param {String} message The warning message.
 * @returns {void}
 */

const warning = function (...args) {
  // debug on development and staging.
  if (false) {}

  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error.apply(console, args);
  }
  /* eslint-enable no-console */
  try {
    // This error was thrown as a convenience so that if you enable
    // "break on all exceptions" in your console,
    // it would pause the execution at this line.

    throw new Error(args.join(' '));
    /* eslint-disable no-empty */
  } catch (e) {}
  /* eslint-enable no-empty */
};
const debug = function (...args) {
  // debug on development and staging.
  if (false) {}

  /* eslint-disable no-console */
  if (typeof console !== 'undefined' && typeof console.debug === 'function') {
    console.debug.apply(console, args);
  }
};

/***/ }),

/***/ "./style/global.css":
/*!**************************!*\
  !*** ./style/global.css ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ "./style/index.less":
/*!**************************!*\
  !*** ./style/index.less ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ 0:
/*!*****************************************!*\
  !*** multi private-next-pages/_app.tsx ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! private-next-pages/_app.tsx */"./pages/_app.tsx");


/***/ }),

/***/ "@ant-design/icons":
/*!************************************!*\
  !*** external "@ant-design/icons" ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@ant-design/icons");

/***/ }),

/***/ "@hookform/resolvers/yup":
/*!******************************************!*\
  !*** external "@hookform/resolvers/yup" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@hookform/resolvers/yup");

/***/ }),

/***/ "@rajesh896/video-thumbnails-generator":
/*!********************************************************!*\
  !*** external "@rajesh896/video-thumbnails-generator" ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("@rajesh896/video-thumbnails-generator");

/***/ }),

/***/ "antd":
/*!***********************!*\
  !*** external "antd" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("antd");

/***/ }),

/***/ "class-variance-authority":
/*!*******************************************!*\
  !*** external "class-variance-authority" ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("class-variance-authority");

/***/ }),

/***/ "dotenv":
/*!*************************!*\
  !*** external "dotenv" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("dotenv");

/***/ }),

/***/ "firebase/app":
/*!*******************************!*\
  !*** external "firebase/app" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("firebase/app");

/***/ }),

/***/ "firebase/auth":
/*!********************************!*\
  !*** external "firebase/auth" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("firebase/auth");

/***/ }),

/***/ "isomorphic-unfetch":
/*!*************************************!*\
  !*** external "isomorphic-unfetch" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("isomorphic-unfetch");

/***/ }),

/***/ "js-cookie":
/*!****************************!*\
  !*** external "js-cookie" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("js-cookie");

/***/ }),

/***/ "lodash":
/*!*************************!*\
  !*** external "lodash" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("lodash");

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("moment");

/***/ }),

/***/ "next-cookies":
/*!*******************************!*\
  !*** external "next-cookies" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next-cookies");

/***/ }),

/***/ "next-redux-saga":
/*!**********************************!*\
  !*** external "next-redux-saga" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next-redux-saga");

/***/ }),

/***/ "next-redux-wrapper":
/*!*************************************!*\
  !*** external "next-redux-wrapper" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next-redux-wrapper");

/***/ }),

/***/ "next/dist/next-server/lib/router-context":
/*!***********************************************************!*\
  !*** external "next/dist/next-server/lib/router-context" ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dist/next-server/lib/router-context");

/***/ }),

/***/ "next/dynamic":
/*!*******************************!*\
  !*** external "next/dynamic" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/dynamic");

/***/ }),

/***/ "next/head":
/*!****************************!*\
  !*** external "next/head" ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/head");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("next/router");

/***/ }),

/***/ "path-to-regexp":
/*!*********************************!*\
  !*** external "path-to-regexp" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("path-to-regexp");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react");

/***/ }),

/***/ "react-device-detect":
/*!**************************************!*\
  !*** external "react-device-detect" ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-device-detect");

/***/ }),

/***/ "react-google-recaptcha":
/*!*****************************************!*\
  !*** external "react-google-recaptcha" ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-google-recaptcha");

/***/ }),

/***/ "react-hook-form":
/*!**********************************!*\
  !*** external "react-hook-form" ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-hook-form");

/***/ }),

/***/ "react-icons/lu":
/*!*********************************!*\
  !*** external "react-icons/lu" ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-icons/lu");

/***/ }),

/***/ "react-infinite-scroll-component":
/*!**************************************************!*\
  !*** external "react-infinite-scroll-component" ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-infinite-scroll-component");

/***/ }),

/***/ "react-intersection-observer":
/*!**********************************************!*\
  !*** external "react-intersection-observer" ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-intersection-observer");

/***/ }),

/***/ "react-is":
/*!***************************!*\
  !*** external "react-is" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-is");

/***/ }),

/***/ "react-page-visibility":
/*!****************************************!*\
  !*** external "react-page-visibility" ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-page-visibility");

/***/ }),

/***/ "react-redux":
/*!******************************!*\
  !*** external "react-redux" ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-redux");

/***/ }),

/***/ "react-webcam":
/*!*******************************!*\
  !*** external "react-webcam" ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("react-webcam");

/***/ }),

/***/ "redux":
/*!************************!*\
  !*** external "redux" ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux");

/***/ }),

/***/ "redux-actions":
/*!********************************!*\
  !*** external "redux-actions" ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-actions");

/***/ }),

/***/ "redux-saga":
/*!*****************************!*\
  !*** external "redux-saga" ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-saga");

/***/ }),

/***/ "redux-saga/effects":
/*!*************************************!*\
  !*** external "redux-saga/effects" ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("redux-saga/effects");

/***/ }),

/***/ "reselect":
/*!***************************!*\
  !*** external "reselect" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("reselect");

/***/ }),

/***/ "socket.io-client":
/*!***********************************!*\
  !*** external "socket.io-client" ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("socket.io-client");

/***/ }),

/***/ "video.js":
/*!***************************!*\
  !*** external "video.js" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("video.js");

/***/ }),

/***/ "yup":
/*!**********************!*\
  !*** external "yup" ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = require("yup");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,