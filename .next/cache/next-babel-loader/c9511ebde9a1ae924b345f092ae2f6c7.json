{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rokibul\\\\Documents\\\\case\\\\src\\\\components\\\\performer\\\\block-countries-form.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/* eslint-disable react/require-default-props */\n/* eslint-disable no-template-curly-in-string */\nimport { PureComponent } from 'react';\nimport { Form, Button, Select } from 'antd';\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\nconst {\n  Option\n} = Select;\nexport class PerformerBlockCountriesForm extends PureComponent {\n  render() {\n    const {\n      onFinish,\n      blockCountries,\n      updating,\n      countries\n    } = this.props;\n    return __jsx(Form, _extends({}, layout, {\n      name: \"nest-messages\",\n      onFinish: onFinish.bind(this),\n      validateMessages: validateMessages,\n      initialValues: blockCountries,\n      labelAlign: \"left\",\n      className: \"account-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }), __jsx(Form.Item, {\n      name: \"countryCodes\",\n      label: \"Select countries you want to block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(Select, {\n      showSearch: true,\n      optionFilterProp: \"label\",\n      mode: \"multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, countries && countries.length > 0 && countries.map(c => __jsx(Option, {\n      value: c.code,\n      label: c.name,\n      key: c.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      alt: \"country_flag\",\n      src: c.flag,\n      width: \"25px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }), ' ', c.name)))), __jsx(Form.Item, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"primary\",\n      loading: updating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Save Changes\")));\n  }\n}","map":{"version":3,"names":["PureComponent","Form","Button","Select","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","range","Option","PerformerBlockCountriesForm","render","onFinish","blockCountries","updating","countries","props","__jsx","_extends","name","bind","initialValues","labelAlign","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","showSearch","optionFilterProp","mode","length","map","c","value","code","key","alt","src","flag","width","type","htmlType","loading"],"sources":["C:/Users/Rokibul/Documents/case/src/components/performer/block-countries-form.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\n/* eslint-disable no-template-curly-in-string */\nimport { PureComponent } from 'react';\nimport {\n  Form, Button, Select\n} from 'antd';\nimport { IBlockCountries, ICountry } from 'src/interfaces';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  },\n  number: {\n    range: 'Must be between ${min} and ${max}'\n  }\n};\n\ninterface IProps {\n  onFinish: Function;\n  blockCountries?: IBlockCountries;\n  updating?: boolean;\n  countries?: ICountry[];\n}\n\nconst { Option } = Select;\n\nexport class PerformerBlockCountriesForm extends PureComponent<IProps> {\n  render() {\n    const {\n      onFinish, blockCountries, updating, countries\n    } = this.props;\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish.bind(this)}\n        validateMessages={validateMessages}\n        initialValues={blockCountries}\n        labelAlign=\"left\"\n        className=\"account-form\"\n      >\n        <Form.Item name=\"countryCodes\" label=\"Select countries you want to block\">\n          <Select\n            showSearch\n            optionFilterProp=\"label\"\n            mode=\"multiple\"\n          >\n            {countries\n                  && countries.length > 0\n                  && countries.map((c) => (\n                    <Option value={c.code} label={c.name} key={c.code}>\n                      <img alt=\"country_flag\" src={c.flag} width=\"25px\" />\n                      {' '}\n                      {c.name}\n                    </Option>\n                  ))}\n          </Select>\n        </Form.Item>\n        <Form.Item className=\"text-center\">\n          <Button type=\"primary\" htmlType=\"submit\" className=\"primary\" loading={updating}>\n            Save Changes\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}