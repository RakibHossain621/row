{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class FeedService extends APIRequest {\n  search(query) {\n    return this.get(this.buildUrl('/feeds/performers', query));\n  }\n  userSearch(query) {\n    return this.get(this.buildUrl('/feeds/users', query));\n  }\n  userRecommendSearch(query) {\n    return this.get(this.buildUrl('/feeds/users/search/recommended', query));\n  }\n  followingSearch(query) {\n    return this.get(this.buildUrl('/feeds/users/search/following', query));\n  }\n  trendingSearch(query) {\n    return this.get(this.buildUrl('/feeds/users/search/trending', query));\n  }\n  userHomeFeeds(query) {\n    if (query.q === '') {\n      return this.get(this.buildUrl('/feeds/users/home-feeds', query));\n    }\n    return this.get(this.buildUrl('/feeds/users', query));\n  }\n  delete(id) {\n    return this.del(`/feeds/performers/${id}`);\n  }\n  findById(id, headers) {\n    return this.get(`/feeds/performers/${id}`, headers);\n  }\n  findByHashtag(hashtag, headers) {\n    return this.get(`/feeds/users/?hashTag=${hashtag}`, headers);\n  }\n  findOne(id, headers) {\n    return this.get(`/feeds/users/${id}`, headers);\n  }\n  update(id, payload) {\n    return this.put(`/feeds/performers/${id}`, payload);\n  }\n  create(data) {\n    return this.post('/feeds/performers', data);\n  }\n  uploadPhoto(file, payload, onProgress) {\n    return this.upload('/feeds/performers/photo/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n  uploadThumbnail(file, payload, onProgress) {\n    return this.upload('/feeds/performers/thumbnail/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n  uploadVideo(file, payload, onProgress) {\n    return this.upload('/feeds/performers/video/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n  uploadTeaser(file, payload, onProgress) {\n    return this.upload('/feeds/performers/teaser/upload', [{\n      fieldname: 'file',\n      file\n    }], {\n      onProgress,\n      customData: payload\n    });\n  }\n  uploadFile(file, body, onProgress, fileMetadata) {\n    return this.uploadFileAndGetUrl({\n      type: file !== null && file !== void 0 && file.type.includes('video') ? 'video' : 'image',\n      file,\n      url: '/feeds/performers/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n  addPoll(payload) {\n    return this.post('/feeds/performers/polls', payload);\n  }\n  votePoll(pollId) {\n    return this.post(`/feeds/users/vote/${pollId}`);\n  }\n  getBookmark(payload) {\n    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n  }\n  addView(id) {\n    return this.post(`/feeds/users/${id}/view`);\n  }\n  getTrendingHashtag(type, payload) {\n    return this.get(this.buildUrl(`/feed-hashtags/trending/${type}`, payload));\n  }\n  getHashtagAlphabet(payload) {\n    return this.get(this.buildUrl('/feed-hashtags/alphabetically', payload));\n  }\n  userGetHashtagAlphabet(type) {\n    return this.get(this.buildUrl(`/feed-hashtags/user/alphabetically/${type}`));\n  }\n}\nexport const feedService = new FeedService();","map":{"version":3,"names":["APIRequest","FeedService","search","query","get","buildUrl","userSearch","userRecommendSearch","followingSearch","trendingSearch","userHomeFeeds","q","delete","id","del","findById","headers","findByHashtag","hashtag","findOne","update","payload","put","create","data","post","uploadPhoto","file","onProgress","upload","fieldname","customData","uploadThumbnail","uploadVideo","uploadTeaser","uploadFile","body","fileMetadata","uploadFileAndGetUrl","type","includes","url","next","addPoll","votePoll","pollId","getBookmark","addView","getTrendingHashtag","getHashtagAlphabet","userGetHashtagAlphabet","feedService"],"sources":["C:/Users/Rokibul/Documents/case/src/services/feed.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\n\nexport class FeedService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/performers', query)\n    );\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users', query)\n    );\n  }\n\n  userRecommendSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/search/recommended', query)\n    );\n  }\n\n  followingSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/search/following', query)\n    );\n  }\n\n  trendingSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/search/trending', query)\n    );\n  }\n\n  userHomeFeeds(query?: { [key: string]: any }) {\n    if (query.q === '') {\n      return this.get(\n        this.buildUrl('/feeds/users/home-feeds', query)\n      );\n    }\n    return this.get(\n      this.buildUrl('/feeds/users', query)\n    );\n  }\n\n  delete(id: string) {\n    return this.del(`/feeds/performers/${id}`);\n  }\n\n  findById(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/performers/${id}`, headers);\n  }\n\n  findByHashtag(hashtag: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/users/?hashTag=${hashtag}`, headers);\n  }\n\n  findOne(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/users/${id}`, headers);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/feeds/performers/${id}`, payload);\n  }\n\n  create(data) {\n    return this.post('/feeds/performers', data);\n  }\n\n  uploadPhoto(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/photo/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadThumbnail(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/thumbnail/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadVideo(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/video/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadTeaser(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/teaser/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadFile(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n    return this.uploadFileAndGetUrl({\n      type: file?.type.includes('video') ? 'video' : 'image',\n      file,\n      url: '/feeds/performers/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n\n  addPoll(payload) {\n    return this.post('/feeds/performers/polls', payload);\n  }\n\n  votePoll(pollId: string) {\n    return this.post(`/feeds/users/vote/${pollId}`);\n  }\n\n  getBookmark(payload) {\n    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n  }\n\n  addView(id:string) {\n    return this.post(`/feeds/users/${id}/view`);\n  }\n\n  getTrendingHashtag(type, payload) {\n    return this.get(this.buildUrl(`/feed-hashtags/trending/${type}`, payload));\n  }\n\n  getHashtagAlphabet(payload) {\n    return this.get(this.buildUrl('/feed-hashtags/alphabetically', payload));\n  }\n\n  userGetHashtagAlphabet(type) {\n    return this.get(this.buildUrl(`/feed-hashtags/user/alphabetically/${type}`));\n  }\n}\n\nexport const feedService = new FeedService();\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,WAAW,SAASD,UAAU,CAAC;EAC1CE,MAAMA,CAACC,KAA8B,EAAE;IACrC,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,mBAAmB,EAAEF,KAAK,CAC1C,CAAC;EACH;EAEAG,UAAUA,CAACH,KAA8B,EAAE;IACzC,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,cAAc,EAAEF,KAAK,CACrC,CAAC;EACH;EAEAI,mBAAmBA,CAACJ,KAA8B,EAAE;IAClD,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,iCAAiC,EAAEF,KAAK,CACxD,CAAC;EACH;EAEAK,eAAeA,CAACL,KAA8B,EAAE;IAC9C,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,+BAA+B,EAAEF,KAAK,CACtD,CAAC;EACH;EAEAM,cAAcA,CAACN,KAA8B,EAAE;IAC7C,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,8BAA8B,EAAEF,KAAK,CACrD,CAAC;EACH;EAEAO,aAAaA,CAACP,KAA8B,EAAE;IAC5C,IAAIA,KAAK,CAACQ,CAAC,KAAK,EAAE,EAAE;MAClB,OAAO,IAAI,CAACP,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,yBAAyB,EAAEF,KAAK,CAChD,CAAC;IACH;IACA,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,cAAc,EAAEF,KAAK,CACrC,CAAC;EACH;EAEAS,MAAMA,CAACC,EAAU,EAAE;IACjB,OAAO,IAAI,CAACC,GAAG,CAAC,qBAAqBD,EAAE,EAAE,CAAC;EAC5C;EAEAE,QAAQA,CAACF,EAAU,EAAEG,OAAmC,EAAE;IACxD,OAAO,IAAI,CAACZ,GAAG,CAAC,qBAAqBS,EAAE,EAAE,EAAEG,OAAO,CAAC;EACrD;EAEAC,aAAaA,CAACC,OAAe,EAAEF,OAAmC,EAAE;IAClE,OAAO,IAAI,CAACZ,GAAG,CAAC,yBAAyBc,OAAO,EAAE,EAAEF,OAAO,CAAC;EAC9D;EAEAG,OAAOA,CAACN,EAAU,EAAEG,OAAmC,EAAE;IACvD,OAAO,IAAI,CAACZ,GAAG,CAAC,gBAAgBS,EAAE,EAAE,EAAEG,OAAO,CAAC;EAChD;EAEAI,MAAMA,CAACP,EAAU,EAAEQ,OAAY,EAAE;IAC/B,OAAO,IAAI,CAACC,GAAG,CAAC,qBAAqBT,EAAE,EAAE,EAAEQ,OAAO,CAAC;EACrD;EAEAE,MAAMA,CAACC,IAAI,EAAE;IACX,OAAO,IAAI,CAACC,IAAI,CAAC,mBAAmB,EAAED,IAAI,CAAC;EAC7C;EAEAE,WAAWA,CAACC,IAAU,EAAEN,OAAY,EAAEO,UAAqB,EAAE;IAC3D,OAAO,IAAI,CAACC,MAAM,CAChB,gCAAgC,EAChC,CACE;MACEC,SAAS,EAAE,MAAM;MACjBH;IACF,CAAC,CACF,EACD;MACEC,UAAU;MACVG,UAAU,EAAEV;IACd,CACF,CAAC;EACH;EAEAW,eAAeA,CAACL,IAAU,EAAEN,OAAY,EAAEO,UAAqB,EAAE;IAC/D,OAAO,IAAI,CAACC,MAAM,CAChB,oCAAoC,EACpC,CACE;MACEC,SAAS,EAAE,MAAM;MACjBH;IACF,CAAC,CACF,EACD;MACEC,UAAU;MACVG,UAAU,EAAEV;IACd,CACF,CAAC;EACH;EAEAY,WAAWA,CAACN,IAAU,EAAEN,OAAY,EAAEO,UAAqB,EAAE;IAC3D,OAAO,IAAI,CAACC,MAAM,CAChB,gCAAgC,EAChC,CACE;MACEC,SAAS,EAAE,MAAM;MACjBH;IACF,CAAC,CACF,EACD;MACEC,UAAU;MACVG,UAAU,EAAEV;IACd,CACF,CAAC;EACH;EAEAa,YAAYA,CAACP,IAAU,EAAEN,OAAY,EAAEO,UAAqB,EAAE;IAC5D,OAAO,IAAI,CAACC,MAAM,CAChB,iCAAiC,EACjC,CACE;MACEC,SAAS,EAAE,MAAM;MACjBH;IACF,CAAC,CACF,EACD;MACEC,UAAU;MACVG,UAAU,EAAEV;IACd,CACF,CAAC;EACH;EAEAc,UAAUA,CAACR,IAAU,EAAES,IAAyB,EAAER,UAAoB,EAAES,YAAkB,EAAE;IAC1F,OAAO,IAAI,CAACC,mBAAmB,CAAC;MAC9BC,IAAI,EAAEZ,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEY,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,OAAO;MACtDb,IAAI;MACJc,GAAG,EAAE,8BAA8B;MACnCL,IAAI;MACJR,UAAU,EAAEA,UAAU,IAAI,SAASc,IAAIA,CAAA,EAAG,CAAC,CAAC;MAC5CL;IACF,CAAC,CAAC;EACJ;EAEAM,OAAOA,CAACtB,OAAO,EAAE;IACf,OAAO,IAAI,CAACI,IAAI,CAAC,yBAAyB,EAAEJ,OAAO,CAAC;EACtD;EAEAuB,QAAQA,CAACC,MAAc,EAAE;IACvB,OAAO,IAAI,CAACpB,IAAI,CAAC,qBAAqBoB,MAAM,EAAE,CAAC;EACjD;EAEAC,WAAWA,CAACzB,OAAO,EAAE;IACnB,OAAO,IAAI,CAACjB,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,2BAA2B,EAAEgB,OAAO,CAAC,CAAC;EACtE;EAEA0B,OAAOA,CAAClC,EAAS,EAAE;IACjB,OAAO,IAAI,CAACY,IAAI,CAAC,gBAAgBZ,EAAE,OAAO,CAAC;EAC7C;EAEAmC,kBAAkBA,CAACT,IAAI,EAAElB,OAAO,EAAE;IAChC,OAAO,IAAI,CAACjB,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,2BAA2BkC,IAAI,EAAE,EAAElB,OAAO,CAAC,CAAC;EAC5E;EAEA4B,kBAAkBA,CAAC5B,OAAO,EAAE;IAC1B,OAAO,IAAI,CAACjB,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,+BAA+B,EAAEgB,OAAO,CAAC,CAAC;EAC1E;EAEA6B,sBAAsBA,CAACX,IAAI,EAAE;IAC3B,OAAO,IAAI,CAACnC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,sCAAsCkC,IAAI,EAAE,CAAC,CAAC;EAC9E;AACF;AAEA,OAAO,MAAMY,WAAW,GAAG,IAAIlD,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}