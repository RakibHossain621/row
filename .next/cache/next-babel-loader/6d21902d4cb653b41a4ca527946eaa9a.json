{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"uploadUrl\", \"fields\", \"method\", \"fileId\"];\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\n/* eslint-disable indent */\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport cookie from 'js-cookie';\nimport { isUrl } from '@lib/string';\nimport { getGlobalConfig } from './config';\nexport var TOKEN = 'token';\nexport var APIRequest = /*#__PURE__*/function () {\n  function APIRequest() {\n    _classCallCheck(this, APIRequest);\n  }\n  return _createClass(APIRequest, [{\n    key: \"setAuthHeaderToken\",\n    value: function setAuthHeaderToken(token) {\n      APIRequest.token = token;\n    }\n\n    /**\r\n     * Parses the JSON returned by a network request\r\n     *\r\n     * @param  {object} response A response from a network request\r\n     *x\r\n     * @return {object}          The parsed JSON from the request\r\n     */\n  }, {\n    key: \"parseJSON\",\n    value: function parseJSON(response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) === 204 || (response === null || response === void 0 ? void 0 : response.status) === 205) {\n        return null;\n      }\n      return response === null || response === void 0 ? void 0 : response.json();\n    }\n\n    /**\r\n     * Checks if a network request came back fine, and throws an error if not\r\n     *\r\n     * @param  {object} response   A response from a network request\r\n     *\r\n     * @return {object|undefined} Returns either the response, or throws an error\r\n     */\n  }, {\n    key: \"checkStatus\",\n    value: function checkStatus(response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) >= 200 && (response === null || response === void 0 ? void 0 : response.status) < 300) {\n        return response;\n      }\n      if ((response === null || response === void 0 ? void 0 : response.status) === 401) {\n        if (true) {\n          Router.push('/login');\n        }\n\n        // throw new Error('Please login!');\n      }\n\n      // if (response.status === 403) {\n      //   throw new Error('Please login!');\n      // }\n\n      // const error = new Error(response.statusText) as any;\n      // error.response = response;\n      // throw error;\n      throw response.clone().json();\n    }\n  }, {\n    key: \"request\",\n    value: function request(url, method, body, headers) {\n      var verb = (method || 'get').toUpperCase();\n      var updatedHeader = _objectSpread({\n        'Content-Type': 'application/json',\n        // TODO - check me\n        Authorization: APIRequest.token || cookie.get(TOKEN) || null\n      }, headers || {});\n      var config = getGlobalConfig();\n      return fetch(isUrl(url) ? url : \"\".concat(process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT).concat(url), {\n        method: verb,\n        headers: updatedHeader,\n        body: body ? JSON.stringify(body) : null\n      }).then(this.checkStatus).then(this.parseJSON);\n    }\n  }, {\n    key: \"buildUrl\",\n    value: function buildUrl(baseUrl, params) {\n      if (!params) {\n        return baseUrl;\n      }\n      var queryString = Object.keys(params).map(function (k) {\n        if (Array.isArray(params[k])) {\n          return params[k].map(function (param) {\n            return \"\".concat(encodeURIComponent(k), \"=\").concat(encodeURIComponent(param));\n          }).join('&');\n        }\n        return \"\".concat(encodeURIComponent(k), \"=\").concat(encodeURIComponent(params[k]));\n      }).join('&');\n      return \"\".concat(baseUrl, \"?\").concat(queryString);\n    }\n  }, {\n    key: \"get\",\n    value: function get(url, headers) {\n      return this.request(url, 'get', null, headers);\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data, headers) {\n      return this.request(url, 'post', data, headers);\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data, headers) {\n      return this.request(url, 'put', data, headers);\n    }\n  }, {\n    key: \"del\",\n    value: function del(url, data, headers) {\n      return this.request(url, 'delete', data, headers);\n    }\n  }, {\n    key: \"upload\",\n    value: function upload(url, files) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        onProgress: function onProgress() {},\n        method: 'POST'\n      };\n      var config = getGlobalConfig();\n      var uploadUrl = isUrl(url) ? url : \"\".concat(process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT).concat(url);\n      return new Promise(function (resolve, reject) {\n        var req = new XMLHttpRequest();\n        req.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            options.onProgress({\n              percentage: event.loaded / event.total * 100\n            });\n          }\n        });\n        req.addEventListener('load', function () {\n          var success = req.status >= 200 && req.status < 300;\n          var response = req.response;\n          if (!success) {\n            return reject(response);\n          }\n          return resolve(response);\n        });\n        req.upload.addEventListener('error', function () {\n          reject(req.response);\n        });\n        var formData = new FormData();\n        files.forEach(function (f) {\n          return formData.append(f.fieldname, f.file, f.file.name);\n        });\n        options.customData && Object.keys(options.customData).forEach(function (fieldname) {\n          if (typeof options.customData[fieldname] !== 'undefined' && !Array.isArray(options.customData[fieldname])) formData.append(fieldname, options.customData[fieldname]);\n          if (typeof options.customData[fieldname] !== 'undefined' && Array.isArray(options.customData[fieldname])) {\n            if (options.customData[fieldname].length) {\n              for (var i = 0; i < options.customData[fieldname].length; i += 1) {\n                formData.append(fieldname, options.customData[fieldname][i]);\n              }\n            }\n          }\n        });\n        req.responseType = 'json';\n        req.open(options.method || 'POST', uploadUrl);\n        var token = APIRequest.token || cookie.get(TOKEN);\n        req.setRequestHeader('Authorization', token || '');\n        req.send(formData);\n      });\n    }\n  }, {\n    key: \"uploadUrl\",\n    value: function () {\n      var _uploadUrl = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(_ref) {\n        var url, body, file, type, _ref$fieldName, fieldName, _ref$onProgress, onProgress, _ref$fileMetadata, fileMetadata, _yield$this$post, data, uploadUrl, _data$fields, fields, _data$method, method, fileId, rests;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              url = _ref.url, body = _ref.body, file = _ref.file, type = _ref.type, _ref$fieldName = _ref.fieldName, fieldName = _ref$fieldName === void 0 ? 'file' : _ref$fieldName, _ref$onProgress = _ref.onProgress, onProgress = _ref$onProgress === void 0 ? function () {} : _ref$onProgress, _ref$fileMetadata = _ref.fileMetadata, fileMetadata = _ref$fileMetadata === void 0 ? null : _ref$fileMetadata;\n              _context.next = 3;\n              return this.post(url, _objectSpread(_objectSpread({}, body || {}), {}, {\n                type: type\n              }));\n            case 3:\n              _yield$this$post = _context.sent;\n              data = _yield$this$post.data;\n              uploadUrl = data.uploadUrl, _data$fields = data.fields, fields = _data$fields === void 0 ? [] : _data$fields, _data$method = data.method, method = _data$method === void 0 ? 'POST' : _data$method, fileId = data.fileId, rests = _objectWithoutProperties(data, _excluded); // overwrite / update metadata if provided\n              if (!(fileMetadata && fileId)) {\n                _context.next = 9;\n                break;\n              }\n              _context.next = 9;\n              return this.put(\"/files/\".concat(data.fileId, \"/metadata\"), fileMetadata);\n            case 9:\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.upload.addEventListener('progress', function (event) {\n                  if (event.lengthComputable) {\n                    onProgress({\n                      percentage: event.loaded / event.total * 100\n                    });\n                  }\n                });\n                req.addEventListener('load', function () {\n                  var success = req.status >= 200 && req.status < 300;\n                  var response = req.response;\n                  if (!success) {\n                    return reject(response);\n                  }\n                  return resolve(_objectSpread(_objectSpread({}, rests), {}, {\n                    fileId: fileId,\n                    status: success\n                  }));\n                });\n                req.upload.addEventListener('error', function () {\n                  reject(req.response);\n                });\n                var formData = new FormData();\n                if (fields && Object.keys(fields).length) {\n                  Object.keys(fields).forEach(function (key) {\n                    formData.append(key, fields[key]);\n                  });\n                }\n                // append file at last is required for AWS upload\n                formData.append(fieldName, file, file.name);\n                req.responseType = 'json';\n                req.open(method || 'POST', uploadUrl);\n                req.send(formData);\n              }));\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function uploadUrl(_x) {\n        return _uploadUrl.apply(this, arguments);\n      }\n      return uploadUrl;\n    }()\n  }, {\n    key: \"uploadFileAndGetUrl\",\n    value: function () {\n      var _uploadFileAndGetUrl = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref2) {\n        var url, body, file, type, formData, key, Headers, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              url = _ref2.url, body = _ref2.body, file = _ref2.file, type = _ref2.type;\n              formData = new FormData(); // Append the file to the formData object\n              if (file) {\n                formData.append('file', file);\n              }\n\n              // Append other body fields to the formData\n              for (key in body) {\n                if (body.hasOwnProperty(key)) {\n                  formData.append(key, body[key]);\n                }\n              }\n\n              // Append type if needed\n              formData.append('type', type);\n              Headers = {\n                Authorization: APIRequest.token || cookie.get(TOKEN) || null\n              };\n              _context2.next = 8;\n              return fetch(isUrl(url) ? url : \"\".concat(process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT).concat(url), {\n                method: 'POST',\n                headers: Headers,\n                body: formData\n              });\n            case 8:\n              response = _context2.sent;\n              if (response.ok) {\n                _context2.next = 11;\n                break;\n              }\n              throw new Error('Network response was not ok');\n            case 11:\n              _context2.next = 13;\n              return response.json();\n            case 13:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function uploadFileAndGetUrl(_x2) {\n        return _uploadFileAndGetUrl.apply(this, arguments);\n      }\n      return uploadFileAndGetUrl;\n    }()\n  }]);\n}();\n_defineProperty(APIRequest, \"token\", '');","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","fetch","Router","cookie","isUrl","getGlobalConfig","TOKEN","APIRequest","_classCallCheck","_createClass","key","setAuthHeaderToken","token","parseJSON","response","status","json","checkStatus","clone","request","url","body","headers","verb","toUpperCase","updatedHeader","Authorization","get","config","concat","process","env","API_ENDPOINT","NEXT_PUBLIC_API_ENDPOINT","JSON","stringify","buildUrl","baseUrl","params","queryString","map","k","Array","isArray","param","encodeURIComponent","join","post","data","put","del","upload","files","options","undefined","onProgress","uploadUrl","reject","req","XMLHttpRequest","addEventListener","event","lengthComputable","percentage","loaded","total","success","formData","FormData","append","fieldname","file","customData","responseType","open","setRequestHeader","send","_uploadUrl","_asyncToGenerator","_callee","_ref","_ref$fieldName","fieldName","_ref$onProgress","_ref$fileMetadata","fileMetadata","_yield$this$post","_data$fields","fields","_data$method","fileId","rests","_callee$","_context","_objectWithoutProperties","_excluded","_x","_uploadFileAndGetUrl","_callee2","_ref2","Headers","_callee2$","_context2","ok","uploadFileAndGetUrl","_x2"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/api-request.ts"],"sourcesContent":["/* eslint-disable indent */\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Router from 'next/router';\r\nimport cookie from 'js-cookie';\r\nimport { isUrl } from '@lib/string';\r\nimport { IFileUpload } from 'src/interfaces';\r\nimport { getGlobalConfig } from './config';\r\n\r\nexport interface IResponse<T> {\r\n  status: number;\r\n  data: T;\r\n}\r\n\r\nexport const TOKEN = 'token';\r\n\r\nexport abstract class APIRequest {\r\n  static token: string = '';\r\n\r\n  setAuthHeaderToken(token: string) {\r\n    APIRequest.token = token;\r\n  }\r\n\r\n  /**\r\n   * Parses the JSON returned by a network request\r\n   *\r\n   * @param  {object} response A response from a network request\r\n   *x\r\n   * @return {object}          The parsed JSON from the request\r\n   */\r\n  private parseJSON(response: Response) {\r\n    if (response?.status === 204 || response?.status === 205) {\r\n      return null;\r\n    }\r\n    return response?.json();\r\n  }\r\n\r\n  /**\r\n   * Checks if a network request came back fine, and throws an error if not\r\n   *\r\n   * @param  {object} response   A response from a network request\r\n   *\r\n   * @return {object|undefined} Returns either the response, or throws an error\r\n   */\r\n  private checkStatus(response: Response) {\r\n    if (response?.status >= 200 && response?.status < 300) {\r\n      return response;\r\n    }\r\n\r\n    if (response?.status === 401) {\r\n      if (process.browser) {\r\n        Router.push('/login');\r\n      }\r\n\r\n      // throw new Error('Please login!');\r\n    }\r\n\r\n    // if (response.status === 403) {\r\n    //   throw new Error('Please login!');\r\n    // }\r\n\r\n    // const error = new Error(response.statusText) as any;\r\n    // error.response = response;\r\n    // throw error;\r\n    throw response.clone().json();\r\n  }\r\n\r\n  request(url: string, method?: string, body?: any, headers?: { [key: string]: string }): Promise<IResponse<any>> {\r\n    const verb = (method || 'get').toUpperCase();\r\n    const updatedHeader = {\r\n      'Content-Type': 'application/json',\r\n      // TODO - check me\r\n      Authorization: APIRequest.token || cookie.get(TOKEN) || null,\r\n      ...(headers || {})\r\n    };\r\n    const config = getGlobalConfig();\r\n    return fetch(isUrl(url) ? url : `${process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`, {\r\n      method: verb,\r\n      headers: updatedHeader,\r\n      body: body ? JSON.stringify(body) : null\r\n    })\r\n      .then(this.checkStatus)\r\n      .then(this.parseJSON);\r\n  }\r\n\r\n  buildUrl(baseUrl: string, params?: { [key: string]: any }) {\r\n    if (!params) {\r\n      return baseUrl;\r\n    }\r\n\r\n    const queryString = Object.keys(params)\r\n      .map((k) => {\r\n        if (Array.isArray(params[k])) {\r\n          return params[k].map((param) => `${encodeURIComponent(k)}=${encodeURIComponent(param)}`).join('&');\r\n        }\r\n        return `${encodeURIComponent(k)}=${encodeURIComponent(params[k])}`;\r\n      })\r\n      .join('&');\r\n    return `${baseUrl}?${queryString}`;\r\n  }\r\n\r\n  get(url: string, headers?: { [key: string]: string }) {\r\n    return this.request(url, 'get', null, headers);\r\n  }\r\n\r\n  post(url: string, data?: any, headers?: { [key: string]: string }) {\r\n    return this.request(url, 'post', data, headers);\r\n  }\r\n\r\n  put(url: string, data?: any, headers?: { [key: string]: string }) {\r\n    return this.request(url, 'put', data, headers);\r\n  }\r\n\r\n  del(url: string, data?: any, headers?: { [key: string]: string }) {\r\n    return this.request(url, 'delete', data, headers);\r\n  }\r\n\r\n  upload(\r\n    url: string,\r\n    files: {\r\n      file: File;\r\n      fieldname: string;\r\n    }[],\r\n    options: {\r\n      onProgress: Function;\r\n      customData?: Record<any, any>;\r\n      method?: string;\r\n    } = {\r\n      onProgress() {},\r\n      method: 'POST'\r\n    }\r\n  ) {\r\n    const config = getGlobalConfig();\r\n    const uploadUrl = isUrl(url) ? url : `${process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`;\r\n    return new Promise((resolve, reject) => {\r\n      const req = new XMLHttpRequest();\r\n\r\n      req.upload.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          options.onProgress({\r\n            percentage: (event.loaded / event.total) * 100\r\n          });\r\n        }\r\n      });\r\n\r\n      req.addEventListener('load', () => {\r\n        const success = req.status >= 200 && req.status < 300;\r\n        const { response } = req;\r\n        if (!success) {\r\n          return reject(response);\r\n        }\r\n        return resolve(response);\r\n      });\r\n\r\n      req.upload.addEventListener('error', () => {\r\n        reject(req.response);\r\n      });\r\n\r\n      const formData = new FormData();\r\n      files.forEach((f) => formData.append(f.fieldname, f.file, f.file.name));\r\n      options.customData\r\n        && Object.keys(options.customData).forEach((fieldname) => {\r\n          if (typeof options.customData[fieldname] !== 'undefined' && !Array.isArray(options.customData[fieldname])) formData.append(fieldname, options.customData[fieldname]);\r\n          if (typeof options.customData[fieldname] !== 'undefined' && Array.isArray(options.customData[fieldname])) {\r\n            if (options.customData[fieldname].length) {\r\n              for (let i = 0; i < options.customData[fieldname].length; i += 1) {\r\n                formData.append(fieldname, options.customData[fieldname][i]);\r\n              }\r\n            }\r\n          }\r\n        });\r\n\r\n      req.responseType = 'json';\r\n      req.open(options.method || 'POST', uploadUrl);\r\n\r\n      const token: any = APIRequest.token || cookie.get(TOKEN);\r\n      req.setRequestHeader('Authorization', token || '');\r\n      req.send(formData);\r\n    });\r\n  }\r\n\r\n  async uploadUrl({\r\n    url,\r\n    body,\r\n    file,\r\n    type,\r\n    fieldName = 'file',\r\n    onProgress = () => { },\r\n    fileMetadata = null\r\n  }: IFileUpload): Promise<any> {\r\n    // load file metadata if needed\r\n    const { data } = await this.post(url, {\r\n      ...(body || {}),\r\n      type\r\n    });\r\n    const {\r\n      uploadUrl,\r\n      fields = [],\r\n      method = 'POST',\r\n      fileId,\r\n      ...rests\r\n    } = data;\r\n    // overwrite / update metadata if provided\r\n    if (fileMetadata && fileId) {\r\n      await this.put(`/files/${data.fileId}/metadata`, fileMetadata);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const req = new XMLHttpRequest();\r\n\r\n      req.upload.addEventListener('progress', (event) => {\r\n        if (event.lengthComputable) {\r\n          onProgress({\r\n            percentage: (event.loaded / event.total) * 100\r\n          });\r\n        }\r\n      });\r\n\r\n      req.addEventListener('load', () => {\r\n        const success = req.status >= 200 && req.status < 300;\r\n        const { response } = req;\r\n        if (!success) {\r\n          return reject(response);\r\n        }\r\n        return resolve({\r\n          ...rests,\r\n          fileId,\r\n          status: success\r\n        });\r\n      });\r\n\r\n      req.upload.addEventListener('error', () => {\r\n        reject(req.response);\r\n      });\r\n\r\n      const formData = new FormData();\r\n      if (fields && Object.keys(fields).length) {\r\n        Object.keys(fields).forEach((key) => {\r\n          formData.append(key, fields[key]);\r\n        });\r\n      }\r\n      // append file at last is required for AWS upload\r\n      formData.append(fieldName, file, file.name);\r\n      req.responseType = 'json';\r\n      req.open(method || 'POST', uploadUrl);\r\n      req.send(formData);\r\n    });\r\n  }\r\n\r\n  async uploadFileAndGetUrl({\r\n    url,\r\n    body,\r\n    file,\r\n    type\r\n  }: IFileUpload): Promise<any> {\r\n    const formData = new FormData();\r\n    \r\n    // Append the file to the formData object\r\n    if (file) {\r\n      formData.append('file', file);\r\n    }\r\n\r\n    // Append other body fields to the formData\r\n    for (const key in body) {\r\n      if (body.hasOwnProperty(key)) {\r\n        formData.append(key, body[key]);\r\n      }\r\n    }\r\n\r\n    // Append type if needed\r\n    formData.append('type', type);\r\n    let Headers = {\r\n      Authorization: APIRequest.token || cookie.get(TOKEN) || null,\r\n    }\r\n    const response = await fetch(isUrl(url) ? url : `${process.env.API_ENDPOINT || process.env.NEXT_PUBLIC_API_ENDPOINT}${url}`, {\r\n      method: 'POST',\r\n      headers: Headers,\r\n      body: formData\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}