{"ast":null,"code":"import { APIRequest } from './api-request';\nclass GalleryService extends APIRequest {\n  create(payload) {\n    return this.post('/performer/performer-assets/galleries', payload);\n  }\n  search(param) {\n    return this.get(this.buildUrl('/performer/performer-assets/galleries/search', param));\n  }\n  userSearch(param) {\n    return this.get(this.buildUrl('/user/performer-assets/galleries/search', param));\n  }\n  update(id, payload) {\n    return this.put(`/performer/performer-assets/galleries/${id}`, payload);\n  }\n  findById(id) {\n    return this.get(`/performer/performer-assets/galleries/${id}/view`);\n  }\n  userViewDetails(id, headers) {\n    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);\n  }\n  delete(id) {\n    return this.del(`/performer/performer-assets/galleries/${id}`);\n  }\n  getBookmarks(payload) {\n    return this.get(this.buildUrl('/reactions/galleries/bookmark', payload));\n  }\n}\nexport const galleryService = new GalleryService();","map":{"version":3,"names":["APIRequest","GalleryService","create","payload","post","search","param","get","buildUrl","userSearch","update","id","put","findById","userViewDetails","headers","delete","del","getBookmarks","galleryService"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/gallery.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\r\n\r\nclass GalleryService extends APIRequest {\r\n  create(payload) {\r\n    return this.post('/performer/performer-assets/galleries', payload);\r\n  }\r\n\r\n  search(param?: any) {\r\n    return this.get(this.buildUrl('/performer/performer-assets/galleries/search', param));\r\n  }\r\n\r\n  userSearch(param?: any) {\r\n    return this.get(this.buildUrl('/user/performer-assets/galleries/search', param));\r\n  }\r\n\r\n  update(id: string, payload) {\r\n    return this.put(`/performer/performer-assets/galleries/${id}`, payload);\r\n  }\r\n\r\n  findById(id: string) {\r\n    return this.get(`/performer/performer-assets/galleries/${id}/view`);\r\n  }\r\n\r\n  userViewDetails(id: string, headers?: any) {\r\n    return this.get(`/user/performer-assets/galleries/${id}/view`, headers);\r\n  }\r\n\r\n  delete(id: string) {\r\n    return this.del(`/performer/performer-assets/galleries/${id}`);\r\n  }\r\n\r\n  getBookmarks(payload) {\r\n    return this.get(this.buildUrl('/reactions/galleries/bookmark', payload));\r\n  }\r\n}\r\n\r\nexport const galleryService = new GalleryService();\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,MAAMC,cAAc,SAASD,UAAU,CAAC;EACtCE,MAAMA,CAACC,OAAO,EAAE;IACd,OAAO,IAAI,CAACC,IAAI,CAAC,uCAAuC,EAAED,OAAO,CAAC;EACpE;EAEAE,MAAMA,CAACC,KAAW,EAAE;IAClB,OAAO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,8CAA8C,EAAEF,KAAK,CAAC,CAAC;EACvF;EAEAG,UAAUA,CAACH,KAAW,EAAE;IACtB,OAAO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,yCAAyC,EAAEF,KAAK,CAAC,CAAC;EAClF;EAEAI,MAAMA,CAACC,EAAU,EAAER,OAAO,EAAE;IAC1B,OAAO,IAAI,CAACS,GAAG,CAAC,yCAAyCD,EAAE,EAAE,EAAER,OAAO,CAAC;EACzE;EAEAU,QAAQA,CAACF,EAAU,EAAE;IACnB,OAAO,IAAI,CAACJ,GAAG,CAAC,yCAAyCI,EAAE,OAAO,CAAC;EACrE;EAEAG,eAAeA,CAACH,EAAU,EAAEI,OAAa,EAAE;IACzC,OAAO,IAAI,CAACR,GAAG,CAAC,oCAAoCI,EAAE,OAAO,EAAEI,OAAO,CAAC;EACzE;EAEAC,MAAMA,CAACL,EAAU,EAAE;IACjB,OAAO,IAAI,CAACM,GAAG,CAAC,yCAAyCN,EAAE,EAAE,CAAC;EAChE;EAEAO,YAAYA,CAACf,OAAO,EAAE;IACpB,OAAO,IAAI,CAACI,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,+BAA+B,EAAEL,OAAO,CAAC,CAAC;EAC1E;AACF;AAEA,OAAO,MAAMgB,cAAc,GAAG,IAAIlB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}