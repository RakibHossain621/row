{"ast":null,"code":"/* eslint-disable no-param-reassign */\n/* eslint-disable func-names */\nimport { reduce, isArray, isEmpty, flatten } from 'lodash';\nimport { createSelector } from 'reselect';\nimport { takeLatest, delay } from 'redux-saga/effects';\nimport { createAction as ReduxCreateAction, handleActions as handleReduxActions } from 'redux-actions';\nfunction createAction(type) {\n  const action = ReduxCreateAction(type);\n  action.is = aType => action.toString() === aType;\n  return action;\n}\n\n/* tslint:disable-next-line */\nfunction createAsyncAction(action, type) {\n  return {\n    [action]: createAction(type),\n    [`${action}Success`]: createAction(`${type}_SUCCESS`),\n    [`${action}Fail`]: createAction(`${type}_FAIL`)\n  };\n}\nfunction createAsyncActions(type) {\n  return [createAction(type), createAction(`${type}_SUCCESS`), createAction(`${type}_FAIL`)];\n}\n\n/* tslint:disable */\nfunction handleActions(actions, initialState) {\n  return handleReduxActions(reduce(actions, (reducer, handler, action) => {\n    reducer[action] = (state, act) => handler(state.set('action', action), act);\n    return reducer;\n  }, {}), initialState);\n}\nfunction createReducers(stateContext, reducers, initialState, preventResetting = false) {\n  return {\n    [stateContext]: handleReduxActions(reduce(flatten(reducers), (reducer, action) => {\n      if (isArray(action.on)) {\n        action.on.forEach(act => {\n          reducer[act] = action.reducer;\n        });\n      } else reducer[action.on] = action.reducer;\n      return reducer;\n    }, preventResetting ? {} : {\n      APP_STATE_RESET: () => initialState\n    }), initialState)\n  };\n}\nexport function createSagas(sagas) {\n  return flatten(sagas).map(saga => {\n    const {\n      on,\n      effect = takeLatest,\n      worker\n    } = saga;\n    return function* () {\n      yield effect(on, function* (action) {\n        yield delay(0);\n        yield worker(action);\n      });\n    };\n  });\n}\nfunction createSelectorsA(context, keys = []) {\n  const stateSelector = state => state[context];\n  if (isEmpty(keys)) return stateSelector;\n  return keys.map(key => state => isArray(key) ? stateSelector(state).getIn(key) : stateSelector(state).get(key));\n}\nfunction createSelectors(context, keys) {\n  const stateSelector = state => state[context];\n  return reduce(keys, (selectors, key) => {\n    selectors[`${key}Selector`] = state => stateSelector(state).get(key);\n    return selectors;\n  }, {});\n}\nfunction createJSSelectors(context, keys) {\n  const stateSelector = state => state[context];\n  return reduce(keys, (selectors, key) => {\n    selectors[`${key}Selector`] = state => stateSelector(state)[key];\n    return selectors;\n  }, {});\n}\nexport { createAction, createAsyncAction, createAsyncActions, createSelectorsA, handleActions, createReducers, createSelectors, createSelector, createJSSelectors };","map":{"version":3,"names":["reduce","isArray","isEmpty","flatten","createSelector","takeLatest","delay","createAction","ReduxCreateAction","handleActions","handleReduxActions","type","action","is","aType","toString","createAsyncAction","createAsyncActions","actions","initialState","reducer","handler","state","act","set","createReducers","stateContext","reducers","preventResetting","on","forEach","APP_STATE_RESET","createSagas","sagas","map","saga","effect","worker","createSelectorsA","context","keys","stateSelector","key","getIn","get","createSelectors","selectors","createJSSelectors"],"sources":["C:/Users/Rokibul/Documents/case/src/lib/redux.ts"],"sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable func-names */\nimport {\n  reduce, isArray, isEmpty, flatten\n} from 'lodash';\nimport { createSelector } from 'reselect';\nimport { takeLatest, delay } from 'redux-saga/effects';\nimport {\n  createAction as ReduxCreateAction,\n  handleActions as handleReduxActions,\n  Action\n} from 'redux-actions';\n\nexport type ActionFunction1<T1, R> = (t1?: T1) => R;\n\nexport interface ActionFunction<Payload>\n  extends ActionFunction1<Payload, Action<Payload>> {\n  is: (type: string) => boolean;\n}\n\nfunction createAction<Payload = any>(type: string): ActionFunction<Payload> {\n  const action = ReduxCreateAction<Payload>(type) as ActionFunction<Payload>;\n  action.is = (aType: string) => action.toString() === aType;\n  return action;\n}\n\n/* tslint:disable-next-line */\nfunction createAsyncAction(action: string, type: string): any {\n  return {\n    [action]: createAction(type),\n    [`${action}Success`]: createAction(`${type}_SUCCESS`),\n    [`${action}Fail`]: createAction(`${type}_FAIL`)\n  };\n}\n\nfunction createAsyncActions<\n  ActionData = any,\n  SuccessData = any,\n  ErrorData = Error\n>(\n  type: string\n): [\n  ActionFunction<ActionData>,\n  ActionFunction<SuccessData>,\n  ActionFunction<ErrorData>\n] {\n  return [\n    createAction<ActionData>(type),\n    createAction<SuccessData>(`${type}_SUCCESS`),\n    createAction<ErrorData>(`${type}_FAIL`)\n  ];\n}\n\n/* tslint:disable */\nfunction handleActions(actions: any, initialState: any) {\n  return handleReduxActions(\n    reduce(\n      actions,\n      (reducer: any, handler, action) => {\n        reducer[action] = (state: any, act: any) => handler(state.set('action', action), act);\n        return reducer;\n      },\n      {}\n    ),\n    initialState\n  );\n}\n\nfunction createReducers(\n  stateContext: string,\n  reducers: any[],\n  initialState: any,\n  preventResetting: boolean = false\n): any {\n  return {\n    [stateContext]: handleReduxActions(\n      reduce(\n        flatten(reducers),\n        (reducer: any, action: any) => {\n          if (isArray(action.on)) {\n            action.on.forEach((act: any) => {\n              reducer[act] = action.reducer;\n            });\n          } else reducer[action.on] = action.reducer;\n          return reducer;\n        },\n        preventResetting\n          ? {}\n          : {\n            APP_STATE_RESET: () => initialState\n          }\n      ),\n      initialState\n    )\n  };\n}\n\nexport function createSagas(sagas: any[]): any[] {\n  return flatten(sagas).map((saga: any) => {\n    const { on, effect = takeLatest, worker } = saga;\n    return function* () {\n      yield effect(on, function* (action: any) {\n        yield delay(0);\n        yield worker(action);\n      });\n    };\n  });\n}\n\nfunction createSelectorsA(context: string, keys: any[] = []): any {\n  const stateSelector = (state: any) => state[context];\n\n  if (isEmpty(keys)) return stateSelector;\n\n  return keys.map((key: any) => (state: any) => (isArray(key)\n    ? stateSelector(state).getIn(key)\n    : stateSelector(state).get(key)));\n}\n\nfunction createSelectors(context: string, keys: string[]): any {\n  const stateSelector = (state: any) => state[context];\n\n  return reduce(\n    keys,\n    (selectors: any, key) => {\n      selectors[`${key}Selector`] = (state: any) => stateSelector(state).get(key);\n      return selectors;\n    },\n    {}\n  );\n}\n\nfunction createJSSelectors(context: string, keys: string[]): any {\n  const stateSelector = (state: any) => state[context];\n\n  return reduce(\n    keys,\n    (selectors: any, key) => {\n      selectors[`${key}Selector`] = (state: any) => stateSelector(state)[key];\n      return selectors;\n    },\n    {}\n  );\n}\n\nexport {\n  createAction,\n  createAsyncAction,\n  createAsyncActions,\n  createSelectorsA,\n  handleActions,\n  createReducers,\n  createSelectors,\n  createSelector,\n  createJSSelectors\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}