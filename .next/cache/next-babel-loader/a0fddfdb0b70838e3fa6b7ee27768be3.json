{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { merge, uniq } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { getConversations, getConversationsSuccess, getConversationsFail, searchConversations, searchConversationsSuccess, searchConversationsFail, setActiveConversationSuccess, fetchingMessage, loadMessagesSuccess, sendMessage, sendMessageSuccess, sendMessageFail, getConversationDetailSuccess, receiveMessageSuccess, readMessages, sentFileSuccess, loadMoreMessagesSuccess, deactiveConversation, resetMessageState, deleteConversationSuccess } from './actions';\nvar initialConversationState = {\n  list: {\n    requesting: false,\n    error: null,\n    data: [],\n    total: 0,\n    success: false\n  },\n  mapping: {},\n  activeConversation: {}\n};\nvar initialMessageState = {\n  // conversationId => { fetching: boolean, items: [] }\n  conversationMap: {},\n  sendMessage: {},\n  receiveMessage: {}\n};\nvar conversationReducer = [{\n  on: resetMessageState,\n  reducer: function reducer(state) {\n    var list = state.list,\n      mapping = state.mapping,\n      activeConversation = state.activeConversation;\n    list = {\n      requesting: false,\n      error: null,\n      data: [],\n      total: 0,\n      success: false\n    };\n    mapping = {};\n    activeConversation = {};\n    return _objectSpread(_objectSpread({}, state), {}, {\n      list: list,\n      mapping: mapping,\n      activeConversation: activeConversation\n    });\n  }\n}, {\n  on: getConversations,\n  reducer: function reducer(state) {\n    var nextState = _objectSpread({}, state);\n    nextState.list.requesting = true;\n    return _objectSpread({}, nextState);\n  }\n}, {\n  on: getConversationsSuccess,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    var list = nextState.list,\n      mapping = nextState.mapping;\n    var _data$payload = data.payload,\n      items = _data$payload.data,\n      total = _data$payload.total;\n    var Ids = items.map(function (c) {\n      return c._id;\n    });\n    list.data = uniq(Ids);\n    list.total = total;\n    list.success = true;\n    list.requesting = false;\n    list.error = false;\n    items.forEach(function (c) {\n      mapping[c._id] = c;\n    });\n    return _objectSpread(_objectSpread(_objectSpread({}, nextState), list), mapping);\n  }\n}, {\n  on: getConversationsFail,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      list: {\n        requesting: false,\n        error: data.payload,\n        data: [],\n        total: 0,\n        success: false\n      },\n      mapping: {},\n      activeConversation: {}\n    });\n  }\n}, {\n  on: searchConversations,\n  reducer: function reducer(state) {\n    var nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      list: {\n        requesting: true,\n        error: null,\n        data: [],\n        total: 0,\n        success: false\n      },\n      mapping: {},\n      activeConversation: {}\n    });\n  }\n}, {\n  on: searchConversationsSuccess,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    var list = nextState.list,\n      mapping = nextState.mapping;\n    var _data$payload2 = data.payload,\n      items = _data$payload2.data,\n      total = _data$payload2.total;\n    var Ids = items.map(function (c) {\n      return c._id;\n    });\n    list.data = Ids;\n    list.total = total;\n    list.success = true;\n    list.requesting = false;\n    list.error = false;\n    items.forEach(function (c) {\n      mapping[c._id] = c;\n    });\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      list: list,\n      mapping: mapping\n    });\n  }\n}, {\n  on: searchConversationsFail,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      list: {\n        requesting: false,\n        error: data.payload,\n        data: [],\n        total: 0,\n        success: false\n      },\n      mapping: {},\n      activeConversation: {}\n    });\n  }\n}, {\n  on: setActiveConversationSuccess,\n  reducer: function reducer(state, data) {\n    var conversation = data.payload;\n    var list = state.list.data;\n    var mapping = state.mapping;\n    var check = list.find(function (c) {\n      return c === conversation._id;\n    });\n    if (!check) {\n      list.unshift(conversation._id);\n      mapping[conversation._id] = conversation;\n    }\n    return _objectSpread(_objectSpread({}, state), {}, {\n      activeConversation: conversation\n    });\n  }\n}, {\n  on: deleteConversationSuccess,\n  reducer: function reducer(state, data) {\n    var conversationId = data.payload;\n    var nextState = _objectSpread({}, state);\n    var list = nextState.list.data;\n    var mapping = nextState.mapping;\n    var index = list.indexOf(conversationId);\n    if (index !== -1) {\n      list.splice(index, 1);\n      delete mapping[conversationId];\n    }\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      activeConversation: {}\n    });\n  }\n}, {\n  on: getConversationDetailSuccess,\n  reducer: function reducer(state, data) {\n    var list = state.list,\n      mapping = state.mapping;\n    var conversation = data.payload;\n    if (!list.data.includes(conversation._id)) {\n      list.data.unshift(conversation._id);\n      mapping[conversation._id] = conversation;\n    }\n    return _objectSpread({}, state);\n  }\n}, {\n  on: readMessages,\n  reducer: function reducer(state, data) {\n    var conversationId = data.payload;\n    var mapping = state.mapping;\n    mapping[conversationId].totalNotSeenMessages = 0;\n    return _objectSpread({}, state);\n  }\n}, {\n  on: deactiveConversation,\n  reducer: function reducer(state) {\n    var nextState = _objectSpread({}, state);\n    nextState.activeConversation = {};\n    return _objectSpread({}, nextState);\n  }\n}];\nvar messageReducer = [{\n  on: fetchingMessage,\n  reducer: function reducer(state, data) {\n    var conversationMap = state.conversationMap;\n    var conversationId = data.payload.conversationId;\n    conversationMap[conversationId] = _objectSpread(_objectSpread({}, conversationMap[conversationId]), {}, {\n      fetching: true\n    });\n    return _objectSpread({}, state);\n  }\n}, {\n  on: loadMessagesSuccess,\n  reducer: function reducer(state, data) {\n    var conversationMap = state.conversationMap;\n    var _data$payload3 = data.payload,\n      conversationId = _data$payload3.conversationId,\n      items = _data$payload3.items,\n      total = _data$payload3.total;\n    conversationMap[conversationId] = {\n      items: _toConsumableArray(items.reverse()),\n      total: total,\n      fetching: false\n    };\n    return _objectSpread({}, state);\n  }\n}, {\n  on: loadMoreMessagesSuccess,\n  reducer: function reducer(state, data) {\n    var conversationMap = state.conversationMap;\n    var _data$payload4 = data.payload,\n      conversationId = _data$payload4.conversationId,\n      items = _data$payload4.items,\n      total = _data$payload4.total;\n    conversationMap[conversationId] = {\n      items: [].concat(_toConsumableArray(items.reverse()), _toConsumableArray(conversationMap[conversationId].items || [])),\n      total: total,\n      fetching: false\n    };\n    return _objectSpread({}, state);\n  }\n}, {\n  on: sendMessage,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      sendMessage: {\n        sending: true\n      }\n    });\n  }\n}, {\n  on: sendMessageSuccess,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    if (!nextState.conversationMap[data.payload.conversationId] || !nextState.conversationMap[data.payload.conversationId].items) {\n      nextState.conversationMap[data.payload.conversationId].items = [];\n    }\n    nextState.conversationMap[data.payload.conversationId].items.push(data.payload);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      sendMessage: {\n        sending: false,\n        success: true,\n        data: data.payload\n      }\n    });\n  }\n}, {\n  on: sendMessageFail,\n  reducer: function reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      sendMessage: {\n        sending: false,\n        success: false,\n        error: data.payload\n      }\n    });\n  }\n}, {\n  on: receiveMessageSuccess,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    if (!nextState.conversationMap[data.payload.conversationId]) {\n      return _objectSpread({}, nextState);\n    }\n    nextState.conversationMap[data.payload.conversationId].items.push(data.payload);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      receiveMessage: data.payload\n    });\n  }\n}, {\n  on: sentFileSuccess,\n  reducer: function reducer(state, data) {\n    var nextState = _objectSpread({}, state);\n    if (!nextState.conversationMap[data.payload.conversationId] || !nextState.conversationMap[data.payload.conversationId].items) {\n      nextState.conversationMap[data.payload.conversationId].items = [];\n    }\n    nextState.conversationMap[data.payload.conversationId].items.push(data.payload);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      sendMessage: {\n        sending: false,\n        success: true,\n        data: data.payload\n      }\n    });\n  }\n}];\nexport default merge({}, createReducers('conversation', [conversationReducer], initialConversationState), createReducers('message', [messageReducer], initialMessageState));","map":{"version":3,"names":["merge","uniq","createReducers","getConversations","getConversationsSuccess","getConversationsFail","searchConversations","searchConversationsSuccess","searchConversationsFail","setActiveConversationSuccess","fetchingMessage","loadMessagesSuccess","sendMessage","sendMessageSuccess","sendMessageFail","getConversationDetailSuccess","receiveMessageSuccess","readMessages","sentFileSuccess","loadMoreMessagesSuccess","deactiveConversation","resetMessageState","deleteConversationSuccess","initialConversationState","list","requesting","error","data","total","success","mapping","activeConversation","initialMessageState","conversationMap","receiveMessage","conversationReducer","on","reducer","state","_objectSpread","nextState","_data$payload","payload","items","Ids","map","c","_id","forEach","_data$payload2","conversation","check","find","unshift","conversationId","index","indexOf","splice","includes","totalNotSeenMessages","messageReducer","fetching","_data$payload3","_toConsumableArray","reverse","_data$payload4","concat","sending","push"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/message/reducers.ts"],"sourcesContent":["import { merge, uniq } from 'lodash';\r\nimport { createReducers } from '@lib/redux';\r\nimport { IReduxAction } from 'src/interfaces';\r\nimport {\r\n  getConversations,\r\n  getConversationsSuccess,\r\n  getConversationsFail,\r\n  searchConversations,\r\n  searchConversationsSuccess,\r\n  searchConversationsFail,\r\n  setActiveConversationSuccess,\r\n  fetchingMessage,\r\n  loadMessagesSuccess,\r\n  sendMessage,\r\n  sendMessageSuccess,\r\n  sendMessageFail,\r\n  getConversationDetailSuccess,\r\n  receiveMessageSuccess,\r\n  readMessages,\r\n  sentFileSuccess,\r\n  loadMoreMessagesSuccess,\r\n  deactiveConversation,\r\n  resetMessageState,\r\n  deleteConversationSuccess\r\n} from './actions';\r\n\r\nconst initialConversationState = {\r\n  list: {\r\n    requesting: false,\r\n    error: null,\r\n    data: [],\r\n    total: 0,\r\n    success: false\r\n  },\r\n  mapping: {},\r\n  activeConversation: {}\r\n};\r\n\r\nconst initialMessageState = {\r\n  // conversationId => { fetching: boolean, items: [] }\r\n  conversationMap: {},\r\n  sendMessage: {},\r\n  receiveMessage: {}\r\n};\r\n\r\nconst conversationReducer = [\r\n  {\r\n    on: resetMessageState,\r\n    reducer(state: any) {\r\n      let { list, mapping, activeConversation } = state;\r\n      list = {\r\n        requesting: false,\r\n        error: null,\r\n        data: [],\r\n        total: 0,\r\n        success: false\r\n      };\r\n      mapping = {};\r\n      activeConversation = {};\r\n      return {\r\n        ...state,\r\n        list,\r\n        mapping,\r\n        activeConversation\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: getConversations,\r\n    reducer(state: any) {\r\n      const nextState = { ...state };\r\n      nextState.list.requesting = true;\r\n      return {\r\n        ...nextState\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: getConversationsSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      const { list, mapping } = nextState;\r\n      const { data: items, total } = data.payload;\r\n      const Ids = items.map((c) => c._id);\r\n      list.data = uniq(Ids);\r\n      list.total = total;\r\n      list.success = true;\r\n      list.requesting = false;\r\n      list.error = false;\r\n      items.forEach((c) => {\r\n        mapping[c._id] = c;\r\n      });\r\n\r\n      return {\r\n        ...nextState,\r\n        ...list,\r\n        ...mapping\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: getConversationsFail,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      return {\r\n        ...nextState,\r\n        list: {\r\n          requesting: false,\r\n          error: data.payload,\r\n          data: [],\r\n          total: 0,\r\n          success: false\r\n        },\r\n        mapping: {},\r\n        activeConversation: {}\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: searchConversations,\r\n    reducer(state: any) {\r\n      const nextState = { ...state };\r\n      return {\r\n        ...nextState,\r\n        list: {\r\n          requesting: true,\r\n          error: null,\r\n          data: [],\r\n          total: 0,\r\n          success: false\r\n        },\r\n        mapping: {},\r\n        activeConversation: {}\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: searchConversationsSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      const { list, mapping } = nextState;\r\n      const { data: items, total } = data.payload;\r\n      const Ids = items.map((c) => c._id);\r\n      list.data = Ids;\r\n      list.total = total;\r\n      list.success = true;\r\n      list.requesting = false;\r\n      list.error = false;\r\n      items.forEach((c) => {\r\n        mapping[c._id] = c;\r\n      });\r\n      return {\r\n        ...nextState,\r\n        list,\r\n        mapping\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: searchConversationsFail,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      return {\r\n        ...nextState,\r\n        list: {\r\n          requesting: false,\r\n          error: data.payload,\r\n          data: [],\r\n          total: 0,\r\n          success: false\r\n        },\r\n        mapping: {},\r\n        activeConversation: {}\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: setActiveConversationSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const conversation = data.payload;\r\n      const list = state.list.data;\r\n      const { mapping } = state;\r\n      const check = list.find((c) => c === conversation._id);\r\n      if (!check) {\r\n        list.unshift(conversation._id);\r\n        mapping[conversation._id] = conversation;\r\n      }\r\n      return {\r\n        ...state,\r\n        activeConversation: conversation\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: deleteConversationSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const conversationId = data.payload;\r\n      const nextState = { ...state };\r\n      const list = nextState.list.data;\r\n      const { mapping } = nextState;\r\n      const index = list.indexOf(conversationId);\r\n      if (index !== -1) {\r\n        list.splice(index, 1);\r\n        delete mapping[conversationId];\r\n      }\r\n      return {\r\n        ...nextState,\r\n        activeConversation: {}\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: getConversationDetailSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const { list, mapping } = state;\r\n      const conversation = data.payload;\r\n      if (!list.data.includes(conversation._id)) {\r\n        list.data.unshift(conversation._id);\r\n        mapping[conversation._id] = conversation;\r\n      }\r\n\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: readMessages,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const conversationId = data.payload;\r\n      const { mapping } = state;\r\n      mapping[conversationId].totalNotSeenMessages = 0;\r\n      return {\r\n        ...state\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: deactiveConversation,\r\n    reducer(state: any) {\r\n      const nextState = { ...state };\r\n      nextState.activeConversation = {};\r\n      return {\r\n        ...nextState\r\n      };\r\n    }\r\n  }\r\n];\r\n\r\nconst messageReducer = [\r\n  {\r\n    on: fetchingMessage,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const { conversationMap } = state;\r\n      const { conversationId } = data.payload;\r\n      conversationMap[conversationId] = {\r\n        ...conversationMap[conversationId],\r\n        fetching: true\r\n      };\r\n      return { ...state };\r\n    }\r\n  },\r\n  {\r\n    on: loadMessagesSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const { conversationMap } = state;\r\n      const { conversationId, items, total } = data.payload;\r\n      conversationMap[conversationId] = {\r\n        items: [...items.reverse()],\r\n        total,\r\n        fetching: false\r\n      };\r\n      return { ...state };\r\n    }\r\n  },\r\n  {\r\n    on: loadMoreMessagesSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const { conversationMap } = state;\r\n      const { conversationId, items, total } = data.payload;\r\n      conversationMap[conversationId] = {\r\n        items: [\r\n          ...items.reverse(),\r\n          ...conversationMap[conversationId].items || []\r\n        ],\r\n        total,\r\n        fetching: false\r\n      };\r\n      return { ...state };\r\n    }\r\n  },\r\n  {\r\n    on: sendMessage,\r\n    reducer(state: any) {\r\n      return {\r\n        ...state,\r\n        sendMessage: {\r\n          sending: true\r\n        }\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: sendMessageSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      if (!nextState.conversationMap[data.payload.conversationId] || !nextState.conversationMap[data.payload.conversationId].items) {\r\n        nextState.conversationMap[data.payload.conversationId].items = [];\r\n      }\r\n      nextState.conversationMap[data.payload.conversationId].items.push(\r\n        data.payload\r\n      );\r\n      return {\r\n        ...nextState,\r\n        sendMessage: {\r\n          sending: false,\r\n          success: true,\r\n          data: data.payload\r\n        }\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: sendMessageFail,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      return {\r\n        ...state,\r\n        sendMessage: {\r\n          sending: false,\r\n          success: false,\r\n          error: data.payload\r\n        }\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: receiveMessageSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      if (!nextState.conversationMap[data.payload.conversationId]) {\r\n        return { ...nextState };\r\n      }\r\n      nextState.conversationMap[data.payload.conversationId].items.push(\r\n        data.payload\r\n      );\r\n      return {\r\n        ...nextState,\r\n        receiveMessage: data.payload\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: sentFileSuccess,\r\n    reducer(state: any, data: IReduxAction<any>) {\r\n      const nextState = { ...state };\r\n      if (!nextState.conversationMap[data.payload.conversationId] || !nextState.conversationMap[data.payload.conversationId].items) {\r\n        nextState.conversationMap[data.payload.conversationId].items = [];\r\n      }\r\n      nextState.conversationMap[data.payload.conversationId].items.push(\r\n        data.payload\r\n      );\r\n      return {\r\n        ...nextState,\r\n        sendMessage: {\r\n          sending: false,\r\n          success: true,\r\n          data: data.payload\r\n        }\r\n      };\r\n    }\r\n  }\r\n];\r\n\r\nexport default merge(\r\n  {},\r\n  createReducers(\r\n    'conversation',\r\n    [conversationReducer],\r\n    initialConversationState\r\n  ),\r\n  createReducers('message', [messageReducer], initialMessageState)\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}