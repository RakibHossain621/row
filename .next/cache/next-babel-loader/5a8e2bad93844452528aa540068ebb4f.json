{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\nexport var PerformerService = /*#__PURE__*/function (_APIRequest) {\n  function PerformerService() {\n    _classCallCheck(this, PerformerService);\n    return _callSuper(this, PerformerService, arguments);\n  }\n  _inherits(PerformerService, _APIRequest);\n  return _createClass(PerformerService, [{\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/performers/user/search', query));\n    }\n  }, {\n    key: \"randomSearch\",\n    value: function randomSearch(query) {\n      return this.get(this.buildUrl('/performers/search/random', query));\n    }\n  }, {\n    key: \"me\",\n    value: function me(headers) {\n      return this.get('/performers/me', headers);\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id, headers) {\n      return this.get(\"/performers/\".concat(id), headers);\n    }\n  }, {\n    key: \"findByEmail\",\n    value: function findByEmail(email, headers) {\n      return this.get(\"/performers/findbyEmail/\".concat(email), headers);\n    }\n\n    // getAvatarUploadUrl(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n    //   return this.uploadUrl({\n    //     type: file?.type.includes('video') ? 'video' : 'image',\n    //     file,\n    //     url: '/performers/avatar/upload',\n    //     body,\n    //     onProgress: onProgress || function next() {},\n    //     fileMetadata\n    //   });\n    // }\n  }, {\n    key: \"getAvatarUploadUrl\",\n    value: function getAvatarUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/avatar/upload\");\n    }\n  }, {\n    key: \"getCoverUploadUrl\",\n    value: function getCoverUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/cover/upload\");\n    }\n  }, {\n    key: \"getVideoUploadUrl\",\n    value: function getVideoUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/welcome-video/upload\");\n    }\n  }, {\n    key: \"getDocumentUploadUrl\",\n    value: function getDocumentUploadUrl() {\n      var config = getGlobalConfig();\n      return \"\".concat(config.NEXT_PUBLIC_API_ENDPOINT, \"/performers/documents/upload\");\n    }\n  }, {\n    key: \"updateMe\",\n    value: function updateMe(id, payload) {\n      return this.put(\"/performers/\".concat(id), payload);\n    }\n  }, {\n    key: \"getTopPerformer\",\n    value: function getTopPerformer(query) {\n      return this.get(this.buildUrl('/performers/top', query));\n    }\n  }, {\n    key: \"updateBanking\",\n    value: function updateBanking(id, payload) {\n      return this.put(\"/performers/\".concat(id, \"/banking-settings\"), payload);\n    }\n  }, {\n    key: \"updatePaymentGateway\",\n    value: function updatePaymentGateway(id, payload) {\n      return this.put(\"/performers/\".concat(id, \"/payment-gateway-settings\"), payload);\n    }\n  }, {\n    key: \"getBookmarked\",\n    value: function getBookmarked(payload) {\n      return this.get(this.buildUrl('/reactions/performers/bookmark', payload));\n    }\n  }, {\n    key: \"uploadDocumentFiles\",\n    value: function uploadDocumentFiles(file, body, onProgress, type) {\n      return this.uploadFileAndGetUrl({\n        file: file,\n        url: '/performers/documents/upload-url',\n        body: body,\n        onProgress: onProgress || function next() {},\n        type: type\n      });\n    }\n  }, {\n    key: \"uploadAvatarFiles\",\n    value: function uploadAvatarFiles(file, body, onProgress, fileMetadata) {\n      return this.uploadUrl({\n        file: file,\n        url: '/performers/avatar/upload-url',\n        body: body,\n        onProgress: onProgress || function next() {},\n        fileMetadata: fileMetadata\n      });\n    }\n  }, {\n    key: \"uploadCoverFiles\",\n    value: function uploadCoverFiles(file, body, onProgress, fileMetadata) {\n      return this.uploadUrl({\n        file: file,\n        url: '/performers/cover/upload-url',\n        body: body,\n        onProgress: onProgress || function next() {},\n        fileMetadata: fileMetadata\n      });\n    }\n  }, {\n    key: \"uploadDocument\",\n    value: function uploadDocument(payload) {\n      return this.post('/performers/documents/upload', payload);\n    }\n  }, {\n    key: \"updateNotificationSetting\",\n    value: function updateNotificationSetting(id, payload) {\n      return this.put(\"/performers/\".concat(id, \"/notification-settings\"), payload);\n    }\n  }, {\n    key: \"setInternalProfile\",\n    value: function setInternalProfile() {\n      return this.post('/internal-profile/detect-login');\n    }\n  }, {\n    key: \"getRanking\",\n    value: function getRanking() {\n      return this.get('/users/ranking');\n    }\n  }, {\n    key: \"getBoardCasterAnalytics\",\n    value: function getBoardCasterAnalytics(type, payload) {\n      return this.get(this.buildUrl(\"/performer/performer-analytics/\".concat(type), payload));\n    }\n  }, {\n    key: \"getNextSupportedRanking\",\n    value: function getNextSupportedRanking(performerId) {\n      return this.get(\"/performer/performer-analytics/ruby-to-nextRank/\".concat(performerId));\n    }\n  }, {\n    key: \"checkRole\",\n    value: function checkRole(payload) {\n      return this.get(this.buildUrl('/performers/check-role', payload));\n    }\n  }, {\n    key: \"getMileStones\",\n    value: function getMileStones() {\n      return this.get(this.buildUrl('/performers/me/roles'));\n    }\n  }, {\n    key: \"getDocumentCheckStatus\",\n    value: function getDocumentCheckStatus() {\n      return this.get(this.buildUrl('/documents/auth/check'));\n    }\n  }]);\n}(APIRequest);\nexport var performerService = new PerformerService();","map":{"version":3,"names":["APIRequest","getGlobalConfig","PerformerService","_APIRequest","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","search","query","get","buildUrl","randomSearch","me","headers","findOne","id","concat","findByEmail","email","getAvatarUploadUrl","config","NEXT_PUBLIC_API_ENDPOINT","getCoverUploadUrl","getVideoUploadUrl","getDocumentUploadUrl","updateMe","payload","put","getTopPerformer","updateBanking","updatePaymentGateway","getBookmarked","uploadDocumentFiles","file","body","onProgress","type","uploadFileAndGetUrl","url","next","uploadAvatarFiles","fileMetadata","uploadUrl","uploadCoverFiles","uploadDocument","post","updateNotificationSetting","setInternalProfile","getRanking","getBoardCasterAnalytics","getNextSupportedRanking","performerId","checkRole","getMileStones","getDocumentCheckStatus","performerService"],"sources":["C:/Users/Rokibul/Documents/case/src/services/performer.service.ts"],"sourcesContent":["import { IPerformer } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\nimport { getGlobalConfig } from './config';\n\nexport class PerformerService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/user/search', query));\n  }\n\n  randomSearch(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/search/random', query));\n  }\n\n  me(headers?: { [key: string]: string }): Promise<IResponse<IPerformer>> {\n    return this.get('/performers/me', headers);\n  }\n\n  findOne(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/performers/${id}`, headers);\n  }\n\n  findByEmail(email: string, headers?: { [key: string]: string }) {\n    return this.get(`/performers/findbyEmail/${email}`, headers);\n  }\n\n  // getAvatarUploadUrl(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n  //   return this.uploadUrl({\n  //     type: file?.type.includes('video') ? 'video' : 'image',\n  //     file,\n  //     url: '/performers/avatar/upload',\n  //     body,\n  //     onProgress: onProgress || function next() {},\n  //     fileMetadata\n  //   });\n  // }\n\n  getAvatarUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/avatar/upload`;\n  }\n\n  getCoverUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/cover/upload`;\n  }\n\n  getVideoUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/welcome-video/upload`;\n  }\n\n  getDocumentUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/documents/upload`;\n  }\n\n  updateMe(id: string, payload: any) {\n    return this.put(`/performers/${id}`, payload);\n  }\n\n  getTopPerformer(query?: { [key: string]: any }) {\n    return this.get(this.buildUrl('/performers/top', query));\n  }\n\n  updateBanking(id: string, payload) {\n    return this.put(`/performers/${id}/banking-settings`, payload);\n  }\n\n  updatePaymentGateway(id, payload) {\n    return this.put(`/performers/${id}/payment-gateway-settings`, payload);\n  }\n\n  getBookmarked(payload) {\n    return this.get(this.buildUrl('/reactions/performers/bookmark', payload));\n  }\n\n  uploadDocumentFiles(file: File, body: Record<string, any>, onProgress: Function, type: string) {\n    return this.uploadFileAndGetUrl({\n      file: file as File,\n      url: '/performers/documents/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      type\n    });\n  }\n\n  uploadAvatarFiles(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n    return this.uploadUrl({\n      file,\n      url: '/performers/avatar/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n\n  uploadCoverFiles(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n    return this.uploadUrl({\n      file,\n      url: '/performers/cover/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n\n  uploadDocument(payload : any) {\n    return this.post('/performers/documents/upload', payload);\n  }\n\n  updateNotificationSetting(id: string, payload: any) {\n    return this.put(`/performers/${id}/notification-settings`, payload);\n  }\n\n  setInternalProfile() {\n    return this.post('/internal-profile/detect-login');\n  }\n\n  getRanking() {\n    return this.get('/users/ranking');\n  }\n\n  getBoardCasterAnalytics(type:string, payload:any) {\n    return this.get(this.buildUrl(`/performer/performer-analytics/${type}`, payload));\n  }\n\n  getNextSupportedRanking(performerId: string) {\n    return this.get(`/performer/performer-analytics/ruby-to-nextRank/${performerId}`);\n  }\n\n  checkRole(payload:any) {\n    return this.get(this.buildUrl('/performers/check-role', payload));\n  }\n\n  getMileStones() {\n    return this.get(this.buildUrl('/performers/me/roles'));\n  }\n\n  getDocumentCheckStatus() {\n    return this.get(this.buildUrl('/documents/auth/check'))\n  }\n}\n\nexport const performerService = new PerformerService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}