{"ast":null,"code":"function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { APIRequest } from './api-request';\nexport class UtilsService extends APIRequest {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"_countries\", []);\n  }\n  async countriesList() {\n    if (this._countries.length) {\n      return this._countries;\n    }\n    const resp = await this.get('/countries/list');\n    this._countries = resp;\n    return resp;\n  }\n  languagesList() {\n    return this.get('/languages/list');\n  }\n  phoneCodesList() {\n    return this.get('/phone-codes/list');\n  }\n  bodyInfo() {\n    return this.get('/user-additional');\n  }\n  verifyRecaptcha(token) {\n    return this.post('/re-captcha/verify', {\n      token\n    });\n  }\n  statesList(countryCode) {\n    return this.get(`/states/${countryCode}`);\n  }\n  citiesList(countryCode, state) {\n    return this.get(`/cities/${countryCode}/${state}`);\n  }\n}\nexport const utilsService = new UtilsService();\nexport function isMobile() {\n  let check = false;\n  (function checkMobile(a) {\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i.test(a.substr(0, 4))) check = true;\n  })(navigator.userAgent || navigator.vendor);\n  return check;\n}","map":{"version":3,"names":["APIRequest","UtilsService","constructor","args","_defineProperty","countriesList","_countries","length","resp","get","languagesList","phoneCodesList","bodyInfo","verifyRecaptcha","token","post","statesList","countryCode","citiesList","state","utilsService","isMobile","check","checkMobile","a","test","substr","navigator","userAgent","vendor"],"sources":["C:/Users/Rokibul/Documents/case/src/services/utils.service.ts"],"sourcesContent":["import { ICountry, ILangguges, IPhoneCodes } from 'src/interfaces';\nimport { APIRequest, IResponse } from './api-request';\n\nexport class UtilsService extends APIRequest {\n  private _countries = [] as any;\n\n  async countriesList(): Promise<IResponse<ICountry>> {\n    if (this._countries.length) {\n      return this._countries;\n    }\n    const resp = await this.get('/countries/list');\n    this._countries = resp;\n    return resp;\n  }\n\n  languagesList(): Promise<IResponse<ILangguges>> {\n    return this.get('/languages/list');\n  }\n\n  phoneCodesList(): Promise<IResponse<IPhoneCodes>> {\n    return this.get('/phone-codes/list');\n  }\n\n  bodyInfo() {\n    return this.get('/user-additional');\n  }\n\n  verifyRecaptcha(token: string) {\n    return this.post('/re-captcha/verify', { token });\n  }\n\n  statesList(countryCode: string) {\n    return this.get(`/states/${countryCode}`);\n  }\n\n  citiesList(countryCode: string, state: string) {\n    return this.get(`/cities/${countryCode}/${state}`);\n  }\n}\n\nexport const utilsService = new UtilsService();\n\nexport function isMobile() {\n  let check = false;\n  (function checkMobile(a) { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw(n|u)|c55\\/|capi|ccwa|cdm|cell|chtm|cldc|cmd|co(mp|nd)|craw|da(it|ll|ng)|dbte|dcs|devi|dica|dmob|do(c|p)o|ds(12|d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(|_)|g1 u|g560|gene|gf5|gmo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd(m|p|t)|hei|hi(pt|ta)|hp( i|ip)|hsc|ht(c(| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i(20|go|ma)|i230|iac( ||\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|[a-w])|libw|lynx|m1w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|mcr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|([1-8]|c))|phil|pire|pl(ay|uc)|pn2|po(ck|rt|se)|prox|psio|ptg|qaa|qc(07|12|21|32|60|[2-7]|i)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h|oo|p)|sdk\\/|se(c(|0|1)|47|mc|nd|ri)|sgh|shar|sie(|m)|sk0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h|v|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl|tdg|tel(i|m)|tim|tmo|to(pl|sh)|ts(70|m|m3|m5)|tx9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas|your|zeto|zte/i.test(a.substr(0, 4))) check = true; }(navigator.userAgent || navigator.vendor));\n  return check;\n}\n"],"mappings":";;;AACA,SAASA,UAAU,QAAmB,eAAe;AAErD,OAAO,MAAMC,YAAY,SAASD,UAAU,CAAC;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,qBACtB,EAAE;EAAA;EAEvB,MAAMC,aAAaA,CAAA,EAAiC;IAClD,IAAI,IAAI,CAACC,UAAU,CAACC,MAAM,EAAE;MAC1B,OAAO,IAAI,CAACD,UAAU;IACxB;IACA,MAAME,IAAI,GAAG,MAAM,IAAI,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9C,IAAI,CAACH,UAAU,GAAGE,IAAI;IACtB,OAAOA,IAAI;EACb;EAEAE,aAAaA,CAAA,EAAmC;IAC9C,OAAO,IAAI,CAACD,GAAG,CAAC,iBAAiB,CAAC;EACpC;EAEAE,cAAcA,CAAA,EAAoC;IAChD,OAAO,IAAI,CAACF,GAAG,CAAC,mBAAmB,CAAC;EACtC;EAEAG,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACH,GAAG,CAAC,kBAAkB,CAAC;EACrC;EAEAI,eAAeA,CAACC,KAAa,EAAE;IAC7B,OAAO,IAAI,CAACC,IAAI,CAAC,oBAAoB,EAAE;MAAED;IAAM,CAAC,CAAC;EACnD;EAEAE,UAAUA,CAACC,WAAmB,EAAE;IAC9B,OAAO,IAAI,CAACR,GAAG,CAAC,WAAWQ,WAAW,EAAE,CAAC;EAC3C;EAEAC,UAAUA,CAACD,WAAmB,EAAEE,KAAa,EAAE;IAC7C,OAAO,IAAI,CAACV,GAAG,CAAC,WAAWQ,WAAW,IAAIE,KAAK,EAAE,CAAC;EACpD;AACF;AAEA,OAAO,MAAMC,YAAY,GAAG,IAAInB,YAAY,CAAC,CAAC;AAE9C,OAAO,SAASoB,QAAQA,CAAA,EAAG;EACzB,IAAIC,KAAK,GAAG,KAAK;EAChB,UAASC,WAAWA,CAACC,CAAC,EAAE;IAAE,IAAI,0TAA0T,CAACC,IAAI,CAACD,CAAC,CAAC,IAAI,6+CAA6+C,CAACC,IAAI,CAACD,CAAC,CAACE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAEJ,KAAK,GAAG,IAAI;EAAE,CAAC,EAACK,SAAS,CAACC,SAAS,IAAID,SAAS,CAACE,MAAM,CAAC;EACj6D,OAAOP,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module"}