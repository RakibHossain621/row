{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { APIRequest } from './api-request';\nexport var FeedService = /*#__PURE__*/function (_APIRequest) {\n  function FeedService() {\n    _classCallCheck(this, FeedService);\n    return _callSuper(this, FeedService, arguments);\n  }\n  _inherits(FeedService, _APIRequest);\n  return _createClass(FeedService, [{\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/feeds/performers', query));\n    }\n  }, {\n    key: \"userSearch\",\n    value: function userSearch(query) {\n      return this.get(this.buildUrl('/feeds/users', query));\n    }\n  }, {\n    key: \"userRecommendSearch\",\n    value: function userRecommendSearch(query) {\n      return this.get(this.buildUrl('/feeds/users/search/recommended', query));\n    }\n  }, {\n    key: \"followingSearch\",\n    value: function followingSearch(query) {\n      return this.get(this.buildUrl('/feeds/users/search/following', query));\n    }\n  }, {\n    key: \"trendingSearch\",\n    value: function trendingSearch(query) {\n      return this.get(this.buildUrl('/feeds/users/search/trending', query));\n    }\n  }, {\n    key: \"userHomeFeeds\",\n    value: function userHomeFeeds(query) {\n      if (query.q === '') {\n        return this.get(this.buildUrl('/feeds/users/home-feeds', query));\n      }\n      return this.get(this.buildUrl('/feeds/users', query));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/feeds/performers/\".concat(id));\n    }\n  }, {\n    key: \"findById\",\n    value: function findById(id, headers) {\n      return this.get(\"/feeds/performers/\".concat(id), headers);\n    }\n  }, {\n    key: \"findByHashtag\",\n    value: function findByHashtag(hashtag, headers) {\n      return this.get(\"/feeds/users/?hashTag=\".concat(hashtag), headers);\n    }\n  }, {\n    key: \"findOne\",\n    value: function findOne(id, headers) {\n      return this.get(\"/feeds/users/\".concat(id), headers);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.put(\"/feeds/performers/\".concat(id), payload);\n    }\n  }, {\n    key: \"create\",\n    value: function create(data) {\n      return this.post('/feeds/performers', data);\n    }\n  }, {\n    key: \"uploadPhoto\",\n    value: function uploadPhoto(file, payload, onProgress) {\n      return this.upload('/feeds/performers/photo/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadThumbnail\",\n    value: function uploadThumbnail(file, payload, onProgress) {\n      return this.upload('/feeds/performers/thumbnail/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadVideo\",\n    value: function uploadVideo(file, payload, onProgress) {\n      return this.upload('/feeds/performers/video/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadTeaser\",\n    value: function uploadTeaser(file, payload, onProgress) {\n      return this.upload('/feeds/performers/teaser/upload', [{\n        fieldname: 'file',\n        file: file\n      }], {\n        onProgress: onProgress,\n        customData: payload\n      });\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function uploadFile(file, body, onProgress, fileMetadata) {\n      return this.uploadFileAndGetUrl({\n        type: file !== null && file !== void 0 && file.type.includes('video') ? 'video' : 'image',\n        file: file,\n        url: '/feeds/performers/upload-url',\n        body: body,\n        onProgress: onProgress || function next() {},\n        fileMetadata: fileMetadata\n      });\n    }\n  }, {\n    key: \"addPoll\",\n    value: function addPoll(payload) {\n      return this.post('/feeds/performers/polls', payload);\n    }\n  }, {\n    key: \"votePoll\",\n    value: function votePoll(pollId) {\n      return this.post(\"/feeds/users/vote/\".concat(pollId));\n    }\n  }, {\n    key: \"getBookmark\",\n    value: function getBookmark(payload) {\n      return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n    }\n  }, {\n    key: \"addView\",\n    value: function addView(id) {\n      return this.post(\"/feeds/users/\".concat(id, \"/view\"));\n    }\n  }, {\n    key: \"getTrendingHashtag\",\n    value: function getTrendingHashtag(type, payload) {\n      return this.get(this.buildUrl(\"/feed-hashtags/trending/\".concat(type), payload));\n    }\n  }, {\n    key: \"getHashtagAlphabet\",\n    value: function getHashtagAlphabet(payload) {\n      return this.get(this.buildUrl('/feed-hashtags/alphabetically', payload));\n    }\n  }, {\n    key: \"userGetHashtagAlphabet\",\n    value: function userGetHashtagAlphabet(type) {\n      return this.get(this.buildUrl(\"/feed-hashtags/user/alphabetically/\".concat(type)));\n    }\n  }]);\n}(APIRequest);\nexport var feedService = new FeedService();","map":{"version":3,"names":["APIRequest","FeedService","_APIRequest","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","search","query","get","buildUrl","userSearch","userRecommendSearch","followingSearch","trendingSearch","userHomeFeeds","q","delete","id","del","concat","findById","headers","findByHashtag","hashtag","findOne","update","payload","put","create","data","post","uploadPhoto","file","onProgress","upload","fieldname","customData","uploadThumbnail","uploadVideo","uploadTeaser","uploadFile","body","fileMetadata","uploadFileAndGetUrl","type","includes","url","next","addPoll","votePoll","pollId","getBookmark","addView","getTrendingHashtag","getHashtagAlphabet","userGetHashtagAlphabet","feedService"],"sources":["C:/Users/Rokibul/Documents/case/src/services/feed.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\n\nexport class FeedService extends APIRequest {\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/performers', query)\n    );\n  }\n\n  userSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users', query)\n    );\n  }\n\n  userRecommendSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/search/recommended', query)\n    );\n  }\n\n  followingSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/search/following', query)\n    );\n  }\n\n  trendingSearch(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/feeds/users/search/trending', query)\n    );\n  }\n\n  userHomeFeeds(query?: { [key: string]: any }) {\n    if (query.q === '') {\n      return this.get(\n        this.buildUrl('/feeds/users/home-feeds', query)\n      );\n    }\n    return this.get(\n      this.buildUrl('/feeds/users', query)\n    );\n  }\n\n  delete(id: string) {\n    return this.del(`/feeds/performers/${id}`);\n  }\n\n  findById(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/performers/${id}`, headers);\n  }\n\n  findByHashtag(hashtag: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/users/?hashTag=${hashtag}`, headers);\n  }\n\n  findOne(id: string, headers?: { [key: string]: string }) {\n    return this.get(`/feeds/users/${id}`, headers);\n  }\n\n  update(id: string, payload: any) {\n    return this.put(`/feeds/performers/${id}`, payload);\n  }\n\n  create(data) {\n    return this.post('/feeds/performers', data);\n  }\n\n  uploadPhoto(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/photo/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadThumbnail(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/thumbnail/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadVideo(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/video/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadTeaser(file: File, payload: any, onProgress?: Function) {\n    return this.upload(\n      '/feeds/performers/teaser/upload',\n      [\n        {\n          fieldname: 'file',\n          file\n        }\n      ],\n      {\n        onProgress,\n        customData: payload\n      }\n    );\n  }\n\n  uploadFile(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n    return this.uploadFileAndGetUrl({\n      type: file?.type.includes('video') ? 'video' : 'image',\n      file,\n      url: '/feeds/performers/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n\n  addPoll(payload) {\n    return this.post('/feeds/performers/polls', payload);\n  }\n\n  votePoll(pollId: string) {\n    return this.post(`/feeds/users/vote/${pollId}`);\n  }\n\n  getBookmark(payload) {\n    return this.get(this.buildUrl('/reactions/feeds/bookmark', payload));\n  }\n\n  addView(id:string) {\n    return this.post(`/feeds/users/${id}/view`);\n  }\n\n  getTrendingHashtag(type, payload) {\n    return this.get(this.buildUrl(`/feed-hashtags/trending/${type}`, payload));\n  }\n\n  getHashtagAlphabet(payload) {\n    return this.get(this.buildUrl('/feed-hashtags/alphabetically', payload));\n  }\n\n  userGetHashtagAlphabet(type) {\n    return this.get(this.buildUrl(`/feed-hashtags/user/alphabetically/${type}`));\n  }\n}\n\nexport const feedService = new FeedService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}