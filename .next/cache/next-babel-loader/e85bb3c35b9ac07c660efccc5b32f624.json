{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\roman\\\\Pictures\\\\Case\\\\row\\\\src\\\\socket\\\\Socket.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { Component, Children } from 'react';\nimport SocketIO from 'socket.io-client';\nimport { authService } from '@services/auth.service';\nimport { connect } from 'react-redux';\nimport { getGlobalConfig } from '@services/config';\nimport { warning, debug } from './utils';\nimport { SocketContext } from './SocketContext';\nclass Socket extends Component {\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"socket\", void 0);\n    this.connect();\n  }\n  shouldComponentUpdate(nextProps) {\n    const {\n      loggedIn\n    } = this.props;\n    if (nextProps.loggedIn === loggedIn) {\n      this.connect();\n    }\n    return true;\n  }\n  componentWillUnmount() {\n    this.socket && this.socket.close();\n  }\n  login() {\n    if (!this.socket) {\n      return false;\n    }\n    const token = authService.getToken();\n    return this.socket.emit('auth/login', {\n      token\n    });\n  }\n  connect() {\n    const token = authService.getToken();\n    if (!false || !token) {\n      return;\n    }\n    const config = getGlobalConfig();\n    const {\n      uri = config.NEXT_PUBLIC_SOCKET_ENDPOINT\n    } = this.props;\n    const options = {\n      transports: ['websocket', 'polling', 'long-polling'],\n      query: token ? `token=${token}` : ''\n    };\n    this.socket = SocketIO(uri, this.mergeOptions(options));\n    this.socket.status = 'initialized';\n    this.socket.on('connect', () => {\n      this.socket.status = 'connected';\n      if (token) {\n        this.login();\n      }\n      debug('connected');\n    });\n    this.socket.on('disconnect', () => {\n      this.socket.status = 'disconnected';\n      debug('disconnect');\n    });\n    this.socket.on('error', err => {\n      this.socket.status = 'failed';\n      warning('error', err);\n    });\n    this.socket.on('reconnect', data => {\n      this.socket.status = 'connected';\n      if (token) {\n        this.login();\n      }\n      debug('reconnect', data);\n    });\n    this.socket.on('reconnect_attempt', () => {\n      debug('reconnect_attempt');\n    });\n    this.socket.on('reconnecting', () => {\n      this.socket.status = 'reconnecting';\n      debug('reconnecting');\n    });\n    this.socket.on('reconnect_failed', error => {\n      this.socket.status = 'failed';\n      warning('reconnect_failed', error);\n    });\n  }\n  mergeOptions(options = {}) {\n    const defaultOptions = {\n      reconnection: true,\n      reconnectionAttempts: Infinity,\n      reconnectionDelay: 1 * 1000,\n      reconnectionDelayMax: 10 * 1000,\n      autoConnect: true,\n      transports: ['websocket', 'polling', 'long-polling'],\n      rejectUnauthorized: true\n    };\n    return _objectSpread(_objectSpread({}, defaultOptions), options);\n  }\n  render() {\n    const {\n      children\n    } = this.props;\n    return __jsx(SocketContext.Provider, {\n      value: this.socket,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, Children.only(children));\n  }\n}\nconst mapStates = state => ({\n  loggedIn: state.auth.loggedIn\n});\nexport default connect(mapStates, null)(Socket);","map":{"version":3,"names":["Component","Children","SocketIO","authService","connect","getGlobalConfig","warning","debug","SocketContext","Socket","constructor","props","_defineProperty","shouldComponentUpdate","nextProps","loggedIn","componentWillUnmount","socket","close","login","token","getToken","emit","config","uri","NEXT_PUBLIC_SOCKET_ENDPOINT","options","transports","query","mergeOptions","status","on","err","data","error","defaultOptions","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","autoConnect","rejectUnauthorized","_objectSpread","render","children","__jsx","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","only","mapStates","state","auth"],"sources":["C:/Users/roman/Pictures/Case/row/src/socket/Socket.tsx"],"sourcesContent":["import { Component, Children } from 'react';\r\nimport SocketIO from 'socket.io-client';\r\nimport { authService } from '@services/auth.service';\r\nimport { connect } from 'react-redux';\r\nimport { getGlobalConfig } from '@services/config';\r\nimport { warning, debug } from './utils';\r\nimport { SocketContext } from './SocketContext';\r\n\r\ninterface ISocketProps {\r\n  // eslint-disable-next-line react/require-default-props\r\n  uri?: string;\r\n  children: any;\r\n  loggedIn: boolean;\r\n}\r\n\r\nclass Socket extends Component<ISocketProps> {\r\n  socket;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.connect();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: any) {\r\n    const { loggedIn } = this.props;\r\n    if (nextProps.loggedIn === loggedIn) {\r\n      this.connect();\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.socket && this.socket.close();\r\n  }\r\n\r\n  login() {\r\n    if (!this.socket) {\r\n      return false;\r\n    }\r\n\r\n    const token = authService.getToken();\r\n    return this.socket.emit('auth/login', {\r\n      token\r\n    });\r\n  }\r\n\r\n  connect() {\r\n    const token = authService.getToken();\r\n    if (!process.browser || !token) {\r\n      return;\r\n    }\r\n    const config = getGlobalConfig();\r\n    const { uri = config.NEXT_PUBLIC_SOCKET_ENDPOINT } = this.props;\r\n    const options = {\r\n      transports: ['websocket', 'polling', 'long-polling'],\r\n      query: token ? `token=${token}` : ''\r\n    };\r\n    this.socket = SocketIO(uri, this.mergeOptions(options));\r\n\r\n    this.socket.status = 'initialized';\r\n\r\n    this.socket.on('connect', () => {\r\n      this.socket.status = 'connected';\r\n      if (token) {\r\n        this.login();\r\n      }\r\n      debug('connected');\r\n    });\r\n\r\n    this.socket.on('disconnect', () => {\r\n      this.socket.status = 'disconnected';\r\n      debug('disconnect');\r\n    });\r\n\r\n    this.socket.on('error', (err) => {\r\n      this.socket.status = 'failed';\r\n      warning('error', err);\r\n    });\r\n\r\n    this.socket.on('reconnect', (data) => {\r\n      this.socket.status = 'connected';\r\n      if (token) {\r\n        this.login();\r\n      }\r\n      debug('reconnect', data);\r\n    });\r\n\r\n    this.socket.on('reconnect_attempt', () => {\r\n      debug('reconnect_attempt');\r\n    });\r\n\r\n    this.socket.on('reconnecting', () => {\r\n      this.socket.status = 'reconnecting';\r\n      debug('reconnecting');\r\n    });\r\n\r\n    this.socket.on('reconnect_failed', (error) => {\r\n      this.socket.status = 'failed';\r\n      warning('reconnect_failed', error);\r\n    });\r\n  }\r\n\r\n  mergeOptions(options = {}) {\r\n    const defaultOptions = {\r\n      reconnection: true,\r\n      reconnectionAttempts: Infinity,\r\n      reconnectionDelay: 1 * 1000,\r\n      reconnectionDelayMax: 10 * 1000,\r\n      autoConnect: true,\r\n      transports: ['websocket', 'polling', 'long-polling'],\r\n      rejectUnauthorized: true\r\n    };\r\n    return { ...defaultOptions, ...options };\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <SocketContext.Provider value={this.socket}>\r\n        {Children.only(children)}\r\n      </SocketContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStates = (state: any) => ({\r\n  loggedIn: state.auth.loggedIn\r\n});\r\n\r\nexport default connect(mapStates, null)(Socket);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}