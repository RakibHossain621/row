{"ast":null,"code":"function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { APIRequest } from './api-request';\nexport class SettingService extends APIRequest {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"_settings\", {});\n  }\n  async all(group = '', forceReload = false) {\n    const settingGroup = group || 'all';\n    if (this._settings[settingGroup] && !forceReload) {\n      return this._settings[settingGroup];\n    }\n    const resp = await this.get(this.buildUrl('/settings/public', {\n      group\n    }));\n    this._settings[settingGroup] = resp;\n    return resp;\n  }\n  contact(data) {\n    return this.post('/contact', data);\n  }\n}\nexport const settingService = new SettingService();","map":{"version":3,"names":["APIRequest","SettingService","constructor","args","_defineProperty","all","group","forceReload","settingGroup","_settings","resp","get","buildUrl","contact","data","post","settingService"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/setting.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\r\n\r\nexport class SettingService extends APIRequest {\r\n  private _settings = {} as any;\r\n\r\n  async all(group = '', forceReload = false) {\r\n    const settingGroup = group || 'all';\r\n    if (this._settings[settingGroup] && !forceReload) {\r\n      return this._settings[settingGroup];\r\n    }\r\n    const resp = await this.get(this.buildUrl('/settings/public', { group }));\r\n    this._settings[settingGroup] = resp;\r\n    return resp;\r\n  }\r\n\r\n  contact(data) {\r\n    return this.post('/contact', data);\r\n  }\r\n}\r\n\r\nexport const settingService = new SettingService();\r\n"],"mappings":";;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,cAAc,SAASD,UAAU,CAAC;EAAAE,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,eAAA,oBACzB,CAAC,CAAC;EAAA;EAEtB,MAAMC,GAAGA,CAACC,KAAK,GAAG,EAAE,EAAEC,WAAW,GAAG,KAAK,EAAE;IACzC,MAAMC,YAAY,GAAGF,KAAK,IAAI,KAAK;IACnC,IAAI,IAAI,CAACG,SAAS,CAACD,YAAY,CAAC,IAAI,CAACD,WAAW,EAAE;MAChD,OAAO,IAAI,CAACE,SAAS,CAACD,YAAY,CAAC;IACrC;IACA,MAAME,IAAI,GAAG,MAAM,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,kBAAkB,EAAE;MAAEN;IAAM,CAAC,CAAC,CAAC;IACzE,IAAI,CAACG,SAAS,CAACD,YAAY,CAAC,GAAGE,IAAI;IACnC,OAAOA,IAAI;EACb;EAEAG,OAAOA,CAACC,IAAI,EAAE;IACZ,OAAO,IAAI,CAACC,IAAI,CAAC,UAAU,EAAED,IAAI,CAAC;EACpC;AACF;AAEA,OAAO,MAAME,cAAc,GAAG,IAAIf,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}