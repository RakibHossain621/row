{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rokibul\\\\Documents\\\\case\\\\src\\\\components\\\\comment\\\\comment-form.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/* eslint-disable react/require-default-props */\nimport { PureComponent } from 'react';\nimport { Form, Input, message } from 'antd';\nimport Router from 'next/router';\nimport './comment.less';\nimport { AppButton } from '@components/ui/shared/AppButton';\nexport default class CommentForm extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    _defineProperty(this, \"formRef\", void 0);\n    _defineProperty(this, \"state\", {\n      text: ''\n    });\n  }\n  onFinish(values) {\n    const {\n      onSubmit: handleComment,\n      objectId,\n      objectType,\n      creator\n    } = this.props;\n    const data = values;\n    if (!creator || !creator._id) {\n      message.error('Please login!');\n      return Router.push('/');\n    }\n    if (!data.content) {\n      return message.error('Please add a comment!');\n    }\n    if (data.content.length > 150) {\n      return message.error('Comment is over 150 characters');\n    }\n    data.objectId = objectId;\n    data.objectType = objectType || 'video';\n    this.formRef.resetFields(['content']);\n    return handleComment(data);\n  }\n  async onEmojiClick(emoji) {\n    const {\n      creator\n    } = this.props;\n    if (!creator || !creator._id) return;\n    const {\n      text\n    } = this.state;\n    const instance = this.formRef;\n    instance.setFieldsValue({\n      content: `${instance.getFieldValue('content')} ${emoji} `\n    });\n    this.setState({\n      text: `${text} ${emoji} `\n    });\n  }\n  render() {\n    const {\n      creator,\n      isReply,\n      siteName,\n      objectId\n    } = this.props;\n    return __jsx(Form, {\n      ref: ref => {\n        this.formRef = ref;\n      },\n      name: \"comment-form\",\n      onFinish: this.onFinish.bind(this),\n      initialValues: {\n        content: ''\n      },\n      style: {\n        width: '100%',\n        margin: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"flex flex-col items-stretch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"relative pb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Item, {\n      className: \"m-0\",\n      name: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      className: \"rounded-full p-2\",\n      onPressEnter: e => {\n        if (e.target.value.length < 2) return;\n        this.formRef.submit();\n      },\n      disabled: !creator || !creator._id,\n      maxLength: 150,\n      minLength: 2,\n      placeholder: !isReply ? 'Add a comment here' : 'Add a reply here',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }))), __jsx(AppButton, {\n      style: {\n        fontSize: '12px'\n      },\n      className: '',\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, !isReply ? 'Post' : 'Reply')));\n  }\n}","map":{"version":3,"names":["PureComponent","Form","Input","message","Router","AppButton","CommentForm","constructor","args","_defineProperty","text","onFinish","values","onSubmit","handleComment","objectId","objectType","creator","props","data","_id","error","push","content","length","formRef","resetFields","onEmojiClick","emoji","state","instance","setFieldsValue","getFieldValue","setState","render","isReply","siteName","__jsx","ref","name","bind","initialValues","style","width","margin","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Item","onPressEnter","e","target","value","submit","disabled","maxLength","minLength","placeholder","fontSize","type"],"sources":["C:/Users/Rokibul/Documents/case/src/components/comment/comment-form.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport { PureComponent } from 'react';\nimport {\n  Form, Input, Button, message, Popover, Image\n} from 'antd';\nimport { SendOutlined, SmileOutlined } from '@ant-design/icons';\nimport { IPerformer } from 'src/interfaces';\nimport { Emotions } from '@components/messages/emotions';\nimport { FormInstance } from 'antd/lib/form';\nimport { ICreateComment } from 'src/interfaces/comment';\nimport Router from 'next/router';\nimport './comment.less';\nimport { AppButton } from '@components/ui/shared/AppButton';\n\ninterface IProps {\n  objectId: string;\n  onSubmit: Function;\n  creator: IPerformer;\n  objectType?: string;\n  isReply?: boolean;\n  siteName?: string;\n}\n\nexport default class CommentForm extends PureComponent<IProps> {\n  formRef: FormInstance;\n\n  state = {\n    text: ''\n  };\n\n  onFinish(values: ICreateComment) {\n    const {\n      onSubmit: handleComment,\n      objectId,\n      objectType,\n      creator\n    } = this.props;\n    const data = values;\n\n    if (!creator || !creator._id) {\n      message.error('Please login!');\n      return Router.push('/');\n    }\n    if (!data.content) {\n      return message.error('Please add a comment!');\n    }\n    if (data.content.length > 150) {\n      return message.error('Comment is over 150 characters');\n    }\n    data.objectId = objectId;\n    data.objectType = objectType || 'video';\n    this.formRef.resetFields(['content']);\n    return handleComment(data);\n  }\n\n  async onEmojiClick(emoji) {\n    const { creator } = this.props;\n    if (!creator || !creator._id) return;\n    const { text } = this.state;\n    const instance = this.formRef as FormInstance;\n    instance.setFieldsValue({\n      content: `${instance.getFieldValue('content')} ${emoji} `\n    });\n    this.setState({ text: `${text} ${emoji} ` });\n  }\n\n  render() {\n    const {\n      creator, isReply, siteName, objectId\n    } = this.props;\n    return (\n      <Form\n        ref={(ref) => {\n          this.formRef = ref;\n        }}\n        name=\"comment-form\"\n        onFinish={this.onFinish.bind(this)}\n        initialValues={{\n          content: ''\n        }}\n        style={{ width: '100%', margin: 'auto'}}\n      >\n        <div className=\"flex flex-col items-stretch\">\n          <div className=\"relative pb-4\">\n            <Form.Item className='m-0' name=\"content\">\n              <Input\n              className='rounded-full p-2'\n                onPressEnter={(e: any) => {\n                  if (e.target.value.length < 2) return;\n                  this.formRef.submit();\n                }}\n                disabled={!creator || !creator._id}\n                maxLength={150}\n                minLength={2}\n                placeholder={\n                  !isReply ? 'Add a comment here' : 'Add a reply here'\n                }\n              />\n            </Form.Item>\n            {/* <Popover\n              key={objectId}\n              className=\"absolute right-4 m-auto top-0 bottom-0 flex items-center justify-center z-10\"\n              title={null}\n              trigger=\"click\"\n              content={(\n                <Emotions\n                  onEmojiClick={this.onEmojiClick.bind(this)}\n                  siteName={siteName}\n                />\n              )}\n            >\n              <div className=\"grp-emotions\">\n                <SmileOutlined />\n              </div>\n            </Popover> */}\n          </div>\n          <AppButton\n            style={{ fontSize: '12px' }}\n            className={''}\n            type='submit'\n          >\n            \n            {!isReply ? 'Post' : 'Reply'}\n          </AppButton>\n        </div>\n      </Form>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}