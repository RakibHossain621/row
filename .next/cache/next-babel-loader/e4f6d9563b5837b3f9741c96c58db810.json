{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { flatten } from 'lodash';\nimport { put, select } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { notificationService } from '@services/index';\nimport { fetchNotificaion, fetchNotificaionSuccess, fetchNotificaionFail, addNotificaion, addNotificaionFail, addNotificaionSuccess, setNotificationLoading, setUnreadCount } from './actions';\nconst bannerSagas = [{\n  on: fetchNotificaion,\n  *worker(data) {\n    try {\n      yield setNotificationLoading(true);\n      const resp = yield notificationService.search(_objectSpread({\n        limit: 12,\n        sort: 'desc',\n        sortBy: 'updatedAt'\n      }, data.payload));\n      const unread = yield notificationService.countUnread();\n      yield put(fetchNotificaionSuccess(resp.data));\n      yield put(setUnreadCount(unread.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(fetchNotificaionFail(error));\n    } finally {\n      yield setNotificationLoading(false);\n    }\n  }\n}, {\n  on: addNotificaion,\n  *worker(data) {\n    try {\n      yield setNotificationLoading(true);\n      const page = yield select(state => state.notification.page);\n      const resp = yield notificationService.search(_objectSpread({\n        limit: 12,\n        offset: (page - 1) * 1,\n        sort: 'desc',\n        sortBy: 'updatedAt'\n      }, data.payload));\n      yield put(addNotificaionSuccess(resp.data));\n      const unread = yield notificationService.countUnread();\n      yield put(setUnreadCount(unread.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(addNotificaionFail(error));\n    } finally {\n      yield setNotificationLoading(false);\n    }\n  }\n}];\nexport default flatten([createSagas(bannerSagas)]);","map":{"version":3,"names":["flatten","put","select","createSagas","notificationService","fetchNotificaion","fetchNotificaionSuccess","fetchNotificaionFail","addNotificaion","addNotificaionFail","addNotificaionSuccess","setNotificationLoading","setUnreadCount","bannerSagas","on","worker","data","resp","search","_objectSpread","limit","sort","sortBy","payload","unread","countUnread","e","error","Promise","resolve","page","state","notification","offset"],"sources":["C:/Users/Rokibul/Documents/case/src/redux/notification/sagas.ts"],"sourcesContent":["import { flatten } from 'lodash';\nimport { put, select } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { notificationService } from '@services/index';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  fetchNotificaion,\n  fetchNotificaionSuccess,\n  fetchNotificaionFail,\n  addNotificaion,\n  addNotificaionFail,\n  addNotificaionSuccess,\n  setNotificationLoading,\n  setUnreadCount\n} from './actions';\n\nconst bannerSagas = [\n  {\n    on: fetchNotificaion,\n    * worker(data: IReduxAction<any>) {\n      try {\n        yield setNotificationLoading(true);\n        const resp = yield notificationService.search({\n          limit: 12, sort: 'desc', sortBy: 'updatedAt', ...data.payload\n        });\n        const unread = yield notificationService.countUnread();\n        yield put(fetchNotificaionSuccess(resp.data));\n        yield put(setUnreadCount(unread.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(fetchNotificaionFail(error));\n      } finally {\n        yield setNotificationLoading(false);\n      }\n    }\n  },\n  {\n    on: addNotificaion,\n    * worker(data: IReduxAction<any>) {\n      try {\n        yield setNotificationLoading(true);\n        const page = yield select((state) => state.notification.page);\n        const resp = yield notificationService.search({\n          limit: 12, offset: (page - 1) * 1, sort: 'desc', sortBy: 'updatedAt', ...data.payload\n        });\n        yield put(addNotificaionSuccess(resp.data));\n        const unread = yield notificationService.countUnread();\n        yield put(setUnreadCount(unread.data));\n      } catch (e) {\n        const error = yield Promise.resolve(e);\n        yield put(addNotificaionFail(error));\n      } finally {\n        yield setNotificationLoading(false);\n      }\n    }\n  }\n];\n\nexport default flatten([createSagas(bannerSagas)]);\n"],"mappings":";;;;;AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,GAAG,EAAEC,MAAM,QAAQ,oBAAoB;AAChD,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,mBAAmB,QAAQ,iBAAiB;AAErD,SACEC,gBAAgB,EAChBC,uBAAuB,EACvBC,oBAAoB,EACpBC,cAAc,EACdC,kBAAkB,EAClBC,qBAAqB,EACrBC,sBAAsB,EACtBC,cAAc,QACT,WAAW;AAElB,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAET,gBAAgB;EACpB,CAAEU,MAAMA,CAACC,IAAuB,EAAE;IAChC,IAAI;MACF,MAAML,sBAAsB,CAAC,IAAI,CAAC;MAClC,MAAMM,IAAI,GAAG,MAAMb,mBAAmB,CAACc,MAAM,CAAAC,aAAA;QAC3CC,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAW,GAAKN,IAAI,CAACO,OAAO,CAC9D,CAAC;MACF,MAAMC,MAAM,GAAG,MAAMpB,mBAAmB,CAACqB,WAAW,CAAC,CAAC;MACtD,MAAMxB,GAAG,CAACK,uBAAuB,CAACW,IAAI,CAACD,IAAI,CAAC,CAAC;MAC7C,MAAMf,GAAG,CAACW,cAAc,CAACY,MAAM,CAACR,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOU,CAAC,EAAE;MACV,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC;MACtC,MAAMzB,GAAG,CAACM,oBAAoB,CAACoB,KAAK,CAAC,CAAC;IACxC,CAAC,SAAS;MACR,MAAMhB,sBAAsB,CAAC,KAAK,CAAC;IACrC;EACF;AACF,CAAC,EACD;EACEG,EAAE,EAAEN,cAAc;EAClB,CAAEO,MAAMA,CAACC,IAAuB,EAAE;IAChC,IAAI;MACF,MAAML,sBAAsB,CAAC,IAAI,CAAC;MAClC,MAAMmB,IAAI,GAAG,MAAM5B,MAAM,CAAE6B,KAAK,IAAKA,KAAK,CAACC,YAAY,CAACF,IAAI,CAAC;MAC7D,MAAMb,IAAI,GAAG,MAAMb,mBAAmB,CAACc,MAAM,CAAAC,aAAA;QAC3CC,KAAK,EAAE,EAAE;QAAEa,MAAM,EAAE,CAACH,IAAI,GAAG,CAAC,IAAI,CAAC;QAAET,IAAI,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAW,GAAKN,IAAI,CAACO,OAAO,CACtF,CAAC;MACF,MAAMtB,GAAG,CAACS,qBAAqB,CAACO,IAAI,CAACD,IAAI,CAAC,CAAC;MAC3C,MAAMQ,MAAM,GAAG,MAAMpB,mBAAmB,CAACqB,WAAW,CAAC,CAAC;MACtD,MAAMxB,GAAG,CAACW,cAAc,CAACY,MAAM,CAACR,IAAI,CAAC,CAAC;IACxC,CAAC,CAAC,OAAOU,CAAC,EAAE;MACV,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC;MACtC,MAAMzB,GAAG,CAACQ,kBAAkB,CAACkB,KAAK,CAAC,CAAC;IACtC,CAAC,SAAS;MACR,MAAMhB,sBAAsB,CAAC,KAAK,CAAC;IACrC;EACF;AACF,CAAC,CACF;AAED,eAAeX,OAAO,CAAC,CAACG,WAAW,CAACU,WAAW,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}