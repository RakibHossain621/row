{"ast":null,"code":"import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { commentService } from '@services/index';\nimport { message } from 'antd';\nimport { getComments, getCommentsSuccess, moreCommentSuccess, moreComment, getCommentsFail, moreCommentFail, createComment, createCommentSuccess, createCommentFail, deleteComment, deleteCommentFail, deleteCommentSuccess } from './actions';\nconst commentSagas = [{\n  on: getComments,\n  *worker(data) {\n    try {\n      const resp = yield commentService.search(data.payload);\n      yield put(getCommentsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getCommentsFail(error));\n    }\n  }\n}, {\n  on: moreComment,\n  *worker(data) {\n    try {\n      const resp = yield commentService.search(data.payload);\n      yield put(moreCommentSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreCommentFail(error));\n    }\n  }\n}, {\n  on: createComment,\n  *worker(data) {\n    try {\n      const resp = yield commentService.create(data.payload);\n      yield put(createCommentSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield message.error('Error occured, please try again later');\n      yield put(createCommentFail(error));\n    }\n  }\n}, {\n  on: deleteComment,\n  *worker(data) {\n    try {\n      const resp = yield commentService.delete(data.payload);\n      yield put(deleteCommentSuccess(resp.data));\n      yield message.success('Removed successfully!');\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield message.error('Error occured, please try again later');\n      yield put(deleteCommentFail(error));\n    }\n  }\n}];\nexport default flatten([createSagas(commentSagas)]);","map":{"version":3,"names":["flatten","put","createSagas","commentService","message","getComments","getCommentsSuccess","moreCommentSuccess","moreComment","getCommentsFail","moreCommentFail","createComment","createCommentSuccess","createCommentFail","deleteComment","deleteCommentFail","deleteCommentSuccess","commentSagas","on","worker","data","resp","search","payload","e","error","Promise","resolve","create","delete","success"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/comment/sagas.ts"],"sourcesContent":["import { flatten } from 'lodash';\r\nimport { put } from 'redux-saga/effects';\r\nimport { createSagas } from '@lib/redux';\r\nimport { commentService } from '@services/index';\r\nimport { IReduxAction } from 'src/interfaces';\r\nimport { message } from 'antd';\r\nimport {\r\n  getComments, getCommentsSuccess, moreCommentSuccess, moreComment, getCommentsFail, moreCommentFail,\r\n  createComment, createCommentSuccess, createCommentFail, deleteComment, deleteCommentFail, deleteCommentSuccess\r\n} from './actions';\r\n\r\nconst commentSagas = [\r\n  {\r\n    on: getComments,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield commentService.search(data.payload);\r\n        yield put(getCommentsSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield put(getCommentsFail(error));\r\n      }\r\n    }\r\n  },\r\n  {\r\n    on: moreComment,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield commentService.search(data.payload);\r\n        yield put(moreCommentSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield put(moreCommentFail(error));\r\n      }\r\n    }\r\n  },\r\n  {\r\n    on: createComment,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield commentService.create(data.payload);\r\n        yield put(createCommentSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield message.error('Error occured, please try again later');\r\n        yield put(createCommentFail(error));\r\n      }\r\n    }\r\n  },\r\n  {\r\n    on: deleteComment,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield commentService.delete(data.payload);\r\n        yield put(deleteCommentSuccess(resp.data));\r\n        yield message.success('Removed successfully!');\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield message.error('Error occured, please try again later');\r\n        yield put(deleteCommentFail(error));\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nexport default flatten([createSagas(commentSagas)]);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}