{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { merge, findIndex } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { getStreamConversation, getStreamConversationSuccess, fetchingStreamMessage, sendStreamMessage, sendStreamMessageSuccess, sendStreamMessageFail, receiveStreamMessageSuccess, loadMoreStreamMessagesSuccess, loadStreamMessagesSuccess, resetMuteStreamMessage, resetStreamMessage, resetAllStreamMessage, deleteMessageSuccess, muteUserSuccess, muteUserFail } from './actions';\nconst initialMessageState = {\n  activeConversation: {},\n  sendMessage: {\n    sending: false\n  },\n  muteMessage: {\n    sending: false,\n    success: false\n  },\n  receiveMessage: {},\n  conversationMap: {}\n};\nconst streamMessageReducer = [{\n  on: getStreamConversation,\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      activeConversation: {\n        fetching: true\n      }\n    });\n  }\n}, {\n  on: getStreamConversationSuccess,\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      activeConversation: {\n        fetching: false,\n        data: data.payload.data\n      }\n    });\n  }\n}, {\n  on: fetchingStreamMessage,\n  reducer(state, data) {\n    const {\n      conversationMap\n    } = state;\n    const {\n      conversationId\n    } = data.payload;\n    conversationMap[conversationId] = _objectSpread(_objectSpread({}, conversationMap[conversationId]), {}, {\n      fetching: true\n    });\n    return _objectSpread({}, state);\n  }\n}, {\n  on: loadStreamMessagesSuccess,\n  reducer(state, data) {\n    const {\n      conversationMap\n    } = state;\n    const {\n      conversationId,\n      items,\n      total\n    } = data.payload;\n    conversationMap[conversationId] = {\n      items: [...items.reverse()],\n      total,\n      fetching: false\n    };\n    return _objectSpread({}, state);\n  }\n}, {\n  on: loadMoreStreamMessagesSuccess,\n  reducer(state, data) {\n    const {\n      conversationMap\n    } = state;\n    const {\n      conversationId,\n      items,\n      total\n    } = data.payload;\n    conversationMap[conversationId] = {\n      items: [...items.reverse(), ...(conversationMap[conversationId].items || [])],\n      total,\n      fetching: false\n    };\n    return _objectSpread({}, state);\n  }\n}, {\n  on: sendStreamMessage,\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      sendMessage: {\n        sending: true,\n        success: false,\n        data: null\n      }\n    });\n  }\n}, {\n  on: sendStreamMessageSuccess,\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      sendMessage: {\n        sending: false,\n        success: true,\n        data: data.payload\n      }\n    });\n  }\n}, {\n  on: sendStreamMessageFail,\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      sendMessage: {\n        sending: false,\n        success: false,\n        error: data.payload\n      }\n    });\n  }\n}, {\n  on: receiveStreamMessageSuccess,\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n    const {\n      conversationId\n    } = data.payload;\n    if (!nextState.conversationMap[conversationId] || !nextState.conversationMap[conversationId].items) {\n      nextState.conversationMap[conversationId] = {\n        items: []\n      };\n    }\n    nextState.conversationMap[conversationId].items.push(data.payload);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      receiveMessage: data.payload\n    });\n  }\n}, {\n  on: resetStreamMessage,\n  reducer(state) {\n    const nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      activeConversation: {},\n      sendMessage: {\n        sending: false\n      },\n      receiveMessage: {},\n      conversationMap: {}\n    });\n  }\n}, {\n  on: resetMuteStreamMessage,\n  reducer(state) {\n    const nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      muteMessage: {\n        sending: false,\n        success: false\n      }\n    });\n  }\n}, {\n  on: resetAllStreamMessage,\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n    const {\n      conversationId\n    } = data.payload;\n    nextState.conversationMap[conversationId] = {\n      items: []\n    };\n    return _objectSpread({}, nextState);\n  }\n}, {\n  on: deleteMessageSuccess,\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n    const {\n      conversationId,\n      _id\n    } = data.payload;\n    if (nextState.conversationMap[conversationId] && nextState.conversationMap[conversationId].items) {\n      const i = findIndex(nextState.conversationMap[conversationId].items, item => item && item._id === _id);\n      nextState.conversationMap[conversationId].items[i].text = 'Message deleted';\n      nextState.conversationMap[conversationId].items[i].isDeleted = true;\n    }\n    return _objectSpread({}, nextState);\n  }\n}, {\n  on: muteUserSuccess,\n  reducer(state, data) {\n    const nextState = _objectSpread({}, state);\n    return _objectSpread(_objectSpread({}, nextState), {}, {\n      muteMessage: {\n        sending: false,\n        success: true,\n        data: data.payload\n      }\n    });\n  }\n}, {\n  on: muteUserFail,\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      muteMessage: {\n        sending: false,\n        success: false,\n        error: data.payload\n      }\n    });\n  }\n}];\nexport default merge({}, createReducers('streamMessage', [streamMessageReducer], initialMessageState));","map":{"version":3,"names":["merge","findIndex","createReducers","getStreamConversation","getStreamConversationSuccess","fetchingStreamMessage","sendStreamMessage","sendStreamMessageSuccess","sendStreamMessageFail","receiveStreamMessageSuccess","loadMoreStreamMessagesSuccess","loadStreamMessagesSuccess","resetMuteStreamMessage","resetStreamMessage","resetAllStreamMessage","deleteMessageSuccess","muteUserSuccess","muteUserFail","initialMessageState","activeConversation","sendMessage","sending","muteMessage","success","receiveMessage","conversationMap","streamMessageReducer","on","reducer","state","_objectSpread","fetching","data","payload","conversationId","items","total","reverse","nextState","error","push","_id","i","item","text","isDeleted"],"sources":["C:/Users/Rokibul/Documents/case/src/redux/stream-chat/reducers.ts"],"sourcesContent":["import { merge, findIndex } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { IReduxAction } from 'src/interfaces';\nimport {\n  getStreamConversation,\n  getStreamConversationSuccess,\n  fetchingStreamMessage,\n  sendStreamMessage,\n  sendStreamMessageSuccess,\n  sendStreamMessageFail,\n  receiveStreamMessageSuccess,\n  loadMoreStreamMessagesSuccess,\n  loadStreamMessagesSuccess,\n  resetMuteStreamMessage,\n  resetStreamMessage,\n  resetAllStreamMessage,\n  deleteMessageSuccess,\n  muteUserSuccess,\n  muteUserFail\n} from './actions';\n\nconst initialMessageState = {\n  activeConversation: {\n  },\n  sendMessage: {\n    sending: false\n  },\n  muteMessage: {\n    sending: false,\n    success: false\n  },\n  receiveMessage: {},\n  conversationMap: {}\n};\n\nconst streamMessageReducer = [\n  {\n    on: getStreamConversation,\n    reducer(state: any) {\n      return {\n        ...state,\n        activeConversation: { fetching: true }\n      };\n    }\n  },\n  {\n    on: getStreamConversationSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      return {\n        ...state,\n        activeConversation: {\n          fetching: false,\n          data: data.payload.data\n        }\n      };\n    }\n  },\n  {\n    on: fetchingStreamMessage,\n    reducer(state: any, data: IReduxAction<any>) {\n      const { conversationMap } = state;\n      const { conversationId } = data.payload;\n      conversationMap[conversationId] = {\n        ...conversationMap[conversationId],\n        fetching: true\n      };\n      return { ...state };\n    }\n  },\n  {\n    on: loadStreamMessagesSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      const { conversationMap } = state;\n      const { conversationId, items, total } = data.payload;\n      conversationMap[conversationId] = {\n        items: [...items.reverse()],\n        total,\n        fetching: false\n      };\n      return { ...state };\n    }\n  },\n  {\n    on: loadMoreStreamMessagesSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      const { conversationMap } = state;\n      const { conversationId, items, total } = data.payload;\n      conversationMap[conversationId] = {\n        items: [\n          ...items.reverse(),\n          ...conversationMap[conversationId].items || []\n        ],\n        total,\n        fetching: false\n      };\n      return { ...state };\n    }\n  },\n  {\n    on: sendStreamMessage,\n    reducer(state: any) {\n      return {\n        ...state,\n        sendMessage: {\n          sending: true,\n          success: false,\n          data: null\n        }\n      };\n    }\n  },\n  {\n    on: sendStreamMessageSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      const nextState = { ...state };\n      return {\n        ...nextState,\n        sendMessage: {\n          sending: false,\n          success: true,\n          data: data.payload\n        }\n      };\n    }\n  },\n  {\n    on: sendStreamMessageFail,\n    reducer(state: any, data: IReduxAction<any>) {\n      return {\n        ...state,\n        sendMessage: {\n          sending: false,\n          success: false,\n          error: data.payload\n        }\n      };\n    }\n  },\n  {\n    on: receiveStreamMessageSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      const nextState = { ...state };\n      const { conversationId } = data.payload;\n      if (!nextState.conversationMap[conversationId] || !nextState.conversationMap[conversationId].items) {\n        nextState.conversationMap[conversationId] = {\n          items: []\n        };\n      }\n      nextState.conversationMap[conversationId].items.push(\n        data.payload\n      );\n      return {\n        ...nextState,\n        receiveMessage: data.payload\n      };\n    }\n  },\n  {\n    on: resetStreamMessage,\n    reducer(state: any) {\n      const nextState = { ...state };\n      return {\n        ...nextState,\n        activeConversation: {},\n        sendMessage: {\n          sending: false\n        },\n        receiveMessage: {},\n        conversationMap: {}\n      };\n    }\n  },\n\n  {\n    on: resetMuteStreamMessage,\n    reducer(state: any) {\n      const nextState = { ...state };\n      return {\n        ...nextState,\n        muteMessage: {\n          sending: false,\n          success: false\n        }\n      };\n    }\n  },\n  {\n    on: resetAllStreamMessage,\n    reducer(state: any, data: IReduxAction<any>) {\n      const nextState = { ...state };\n      const { conversationId } = data.payload;\n      nextState.conversationMap[conversationId] = {\n        items: []\n      };\n      return {\n        ...nextState\n      };\n    }\n  },\n  {\n    on: deleteMessageSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      const nextState = { ...state };\n      const { conversationId, _id } = data.payload;\n      if (nextState.conversationMap[conversationId] && nextState.conversationMap[conversationId].items) {\n        const i = findIndex(nextState.conversationMap[conversationId].items, (item: any) => item && item._id === _id);\n        nextState.conversationMap[conversationId].items[i].text = 'Message deleted';\n        nextState.conversationMap[conversationId].items[i].isDeleted = true;\n      }\n      return {\n        ...nextState\n      };\n    }\n  },\n\n  {\n    on: muteUserSuccess,\n    reducer(state: any, data: IReduxAction<any>) {\n      const nextState = { ...state };\n      return {\n        ...nextState,\n        muteMessage: {\n          sending: false,\n          success: true,\n          data: data.payload\n        }\n      };\n    }\n  },\n  {\n    on: muteUserFail,\n    reducer(state: any, data: IReduxAction<any>) {\n      return {\n        ...state,\n        muteMessage: {\n          sending: false,\n          success: false,\n          error: data.payload\n        }\n      };\n    }\n  }\n];\n\nexport default merge(\n  {},\n  createReducers('streamMessage', [streamMessageReducer], initialMessageState)\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}