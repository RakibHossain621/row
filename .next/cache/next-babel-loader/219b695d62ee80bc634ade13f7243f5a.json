{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rokibul\\\\Documents\\\\case\\\\src\\\\components\\\\performer\\\\default-price.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { performerService } from '@services/performer.service';\nimport { Button, Col, Form, InputNumber, Row, message } from 'antd';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updatePerformer } from '@redux/user/actions';\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst DefaultPrice = ({\n  performer,\n  updatePerformer: handleUpdatePerformer\n}) => {\n  const {\n    0: submitting,\n    1: setSubmitting\n  } = useState(false);\n  const updateDefaultPrice = async ({\n    costPerMessage\n  }) => {\n    try {\n      setSubmitting(true);\n      await performerService.updateMe(performer._id, _objectSpread(_objectSpread({}, performer), {}, {\n        costPerMessage\n      }));\n      handleUpdatePerformer(_objectSpread(_objectSpread({}, performer), {}, {\n        costPerMessage\n      }));\n      message.success('Changes saved');\n      setSubmitting(false);\n    } catch (err) {\n      const error = await Promise.resolve(err);\n      message.error(error.message);\n      setSubmitting(false);\n    }\n  };\n  return __jsx(Form, _extends({}, layout, {\n    initialValues: {\n      costPerMessage: performer.costPerMessage\n    },\n    onFinish: updateDefaultPrice,\n    scrollToFirstError: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    lg: 12,\n    md: 12,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    name: \"costPerMessage\",\n    label: \"Cost Per Message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, __jsx(InputNumber, {\n    min: 0,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }))), __jsx(Col, {\n    lg: 24,\n    md: 24,\n    sm: 24,\n    xs: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: \"primary\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    disabled: submitting,\n    loading: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Save Changes\")))));\n};\nconst mapStates = () => ({});\nconst mapDispatchToProps = {\n  updatePerformer\n};\nexport default connect(mapStates, mapDispatchToProps)(DefaultPrice);","map":{"version":3,"names":["performerService","Button","Col","Form","InputNumber","Row","message","useState","connect","updatePerformer","layout","labelCol","span","wrapperCol","DefaultPrice","performer","handleUpdatePerformer","submitting","setSubmitting","updateDefaultPrice","costPerMessage","updateMe","_id","_objectSpread","success","err","error","Promise","resolve","__jsx","_extends","initialValues","onFinish","scrollToFirstError","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","lg","md","sm","xs","Item","name","label","min","style","width","className","type","htmlType","disabled","loading","mapStates","mapDispatchToProps"],"sources":["C:/Users/Rokibul/Documents/case/src/components/performer/default-price.tsx"],"sourcesContent":["import { IPerformer } from '@interfaces/performer';\nimport { performerService } from '@services/performer.service';\nimport {\n  Button,\n  Col, Form, InputNumber, Row,\n  message\n} from 'antd';\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updatePerformer } from '@redux/user/actions';\n\ninterface IProps {\n  performer: IPerformer;\n\n  // Dispatch redux\n  updatePerformer: Function;\n}\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst DefaultPrice = ({ performer, updatePerformer: handleUpdatePerformer }: IProps) => {\n  const [submitting, setSubmitting] = useState(false);\n\n  const updateDefaultPrice = async ({ costPerMessage }) => {\n    try {\n      setSubmitting(true);\n      await performerService.updateMe(performer._id, { ...performer, costPerMessage });\n      handleUpdatePerformer({\n        ...performer,\n        costPerMessage\n      });\n      message.success('Changes saved');\n      setSubmitting(false);\n    } catch (err) {\n      const error = await Promise.resolve(err);\n      message.error(error.message);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Form\n      {...layout}\n      initialValues={{\n        costPerMessage: performer.costPerMessage\n      }}\n      onFinish={updateDefaultPrice}\n      scrollToFirstError\n    >\n      <Row>\n        <Col lg={12} md={12} sm={24} xs={24}>\n          <Form.Item name=\"costPerMessage\" label=\"Cost Per Message\">\n            <InputNumber min={0} style={{ width: '100%' }} />\n          </Form.Item>\n        </Col>\n        <Col lg={24} md={24} sm={24} xs={24}>\n          <Form.Item>\n            <Button\n              className=\"primary\"\n              type=\"primary\"\n              htmlType=\"submit\"\n              disabled={submitting}\n              loading={submitting}\n            >\n              Save Changes\n            </Button>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nconst mapStates = () => ({});\n\nconst mapDispatchToProps = {\n  updatePerformer\n};\n\nexport default connect(mapStates, mapDispatchToProps)(DefaultPrice);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}