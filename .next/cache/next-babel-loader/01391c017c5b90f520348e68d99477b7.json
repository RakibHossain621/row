{"ast":null,"code":"import { APIRequest } from './api-request';\nimport { getGlobalConfig } from './config';\nexport class PerformerService extends APIRequest {\n  search(query) {\n    return this.get(this.buildUrl('/performers/user/search', query));\n  }\n  randomSearch(query) {\n    return this.get(this.buildUrl('/performers/search/random', query));\n  }\n  me(headers) {\n    return this.get('/performers/me', headers);\n  }\n  findOne(id, headers) {\n    return this.get(`/performers/${id}`, headers);\n  }\n  findByEmail(email, headers) {\n    return this.get(`/performers/findbyEmail/${email}`, headers);\n  }\n\n  // getAvatarUploadUrl(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\n  //   return this.uploadUrl({\n  //     type: file?.type.includes('video') ? 'video' : 'image',\n  //     file,\n  //     url: '/performers/avatar/upload',\n  //     body,\n  //     onProgress: onProgress || function next() {},\n  //     fileMetadata\n  //   });\n  // }\n\n  getAvatarUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/avatar/upload`;\n  }\n  getCoverUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/cover/upload`;\n  }\n  getVideoUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/welcome-video/upload`;\n  }\n  getDocumentUploadUrl() {\n    const config = getGlobalConfig();\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/documents/upload`;\n  }\n  updateMe(id, payload) {\n    return this.put(`/performers/${id}`, payload);\n  }\n  getTopPerformer(query) {\n    return this.get(this.buildUrl('/performers/top', query));\n  }\n  updateBanking(id, payload) {\n    return this.put(`/performers/${id}/banking-settings`, payload);\n  }\n  updatePaymentGateway(id, payload) {\n    return this.put(`/performers/${id}/payment-gateway-settings`, payload);\n  }\n  getBookmarked(payload) {\n    return this.get(this.buildUrl('/reactions/performers/bookmark', payload));\n  }\n  uploadDocumentFiles(file, body, onProgress, type) {\n    return this.uploadFileAndGetUrl({\n      file: file,\n      url: '/performers/documents/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      type\n    });\n  }\n  uploadAvatarFiles(file, body, onProgress, fileMetadata) {\n    return this.uploadUrl({\n      file,\n      url: '/performers/avatar/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n  uploadCoverFiles(file, body, onProgress, fileMetadata) {\n    return this.uploadUrl({\n      file,\n      url: '/performers/cover/upload-url',\n      body,\n      onProgress: onProgress || function next() {},\n      fileMetadata\n    });\n  }\n  uploadDocument(payload) {\n    return this.post('/performers/documents/upload', payload);\n  }\n  updateNotificationSetting(id, payload) {\n    return this.put(`/performers/${id}/notification-settings`, payload);\n  }\n  setInternalProfile() {\n    return this.post('/internal-profile/detect-login');\n  }\n  getRanking() {\n    return this.get('/users/ranking');\n  }\n  getBoardCasterAnalytics(type, payload) {\n    return this.get(this.buildUrl(`/performer/performer-analytics/${type}`, payload));\n  }\n  getNextSupportedRanking(performerId) {\n    return this.get(`/performer/performer-analytics/ruby-to-nextRank/${performerId}`);\n  }\n  checkRole(payload) {\n    return this.get(this.buildUrl('/performers/check-role', payload));\n  }\n  getMileStones() {\n    return this.get(this.buildUrl('/performers/me/roles'));\n  }\n  getDocumentCheckStatus() {\n    return this.get(this.buildUrl('/documents/auth/check'));\n  }\n}\nexport const performerService = new PerformerService();","map":{"version":3,"names":["APIRequest","getGlobalConfig","PerformerService","search","query","get","buildUrl","randomSearch","me","headers","findOne","id","findByEmail","email","getAvatarUploadUrl","config","NEXT_PUBLIC_API_ENDPOINT","getCoverUploadUrl","getVideoUploadUrl","getDocumentUploadUrl","updateMe","payload","put","getTopPerformer","updateBanking","updatePaymentGateway","getBookmarked","uploadDocumentFiles","file","body","onProgress","type","uploadFileAndGetUrl","url","next","uploadAvatarFiles","fileMetadata","uploadUrl","uploadCoverFiles","uploadDocument","post","updateNotificationSetting","setInternalProfile","getRanking","getBoardCasterAnalytics","getNextSupportedRanking","performerId","checkRole","getMileStones","getDocumentCheckStatus","performerService"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/performer.service.ts"],"sourcesContent":["import { IPerformer } from 'src/interfaces';\r\nimport { APIRequest, IResponse } from './api-request';\r\nimport { getGlobalConfig } from './config';\r\n\r\nexport class PerformerService extends APIRequest {\r\n  search(query?: { [key: string]: any }) {\r\n    return this.get(this.buildUrl('/performers/user/search', query));\r\n  }\r\n\r\n  randomSearch(query?: { [key: string]: any }) {\r\n    return this.get(this.buildUrl('/performers/search/random', query));\r\n  }\r\n\r\n  me(headers?: { [key: string]: string }): Promise<IResponse<IPerformer>> {\r\n    return this.get('/performers/me', headers);\r\n  }\r\n\r\n  findOne(id: string, headers?: { [key: string]: string }) {\r\n    return this.get(`/performers/${id}`, headers);\r\n  }\r\n\r\n  findByEmail(email: string, headers?: { [key: string]: string }) {\r\n    return this.get(`/performers/findbyEmail/${email}`, headers);\r\n  }\r\n\r\n  // getAvatarUploadUrl(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\r\n  //   return this.uploadUrl({\r\n  //     type: file?.type.includes('video') ? 'video' : 'image',\r\n  //     file,\r\n  //     url: '/performers/avatar/upload',\r\n  //     body,\r\n  //     onProgress: onProgress || function next() {},\r\n  //     fileMetadata\r\n  //   });\r\n  // }\r\n\r\n  getAvatarUploadUrl() {\r\n    const config = getGlobalConfig();\r\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/avatar/upload`;\r\n  }\r\n\r\n  getCoverUploadUrl() {\r\n    const config = getGlobalConfig();\r\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/cover/upload`;\r\n  }\r\n\r\n  getVideoUploadUrl() {\r\n    const config = getGlobalConfig();\r\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/welcome-video/upload`;\r\n  }\r\n\r\n  getDocumentUploadUrl() {\r\n    const config = getGlobalConfig();\r\n    return `${config.NEXT_PUBLIC_API_ENDPOINT}/performers/documents/upload`;\r\n  }\r\n\r\n  updateMe(id: string, payload: any) {\r\n    return this.put(`/performers/${id}`, payload);\r\n  }\r\n\r\n  getTopPerformer(query?: { [key: string]: any }) {\r\n    return this.get(this.buildUrl('/performers/top', query));\r\n  }\r\n\r\n  updateBanking(id: string, payload) {\r\n    return this.put(`/performers/${id}/banking-settings`, payload);\r\n  }\r\n\r\n  updatePaymentGateway(id, payload) {\r\n    return this.put(`/performers/${id}/payment-gateway-settings`, payload);\r\n  }\r\n\r\n  getBookmarked(payload) {\r\n    return this.get(this.buildUrl('/reactions/performers/bookmark', payload));\r\n  }\r\n\r\n  uploadDocumentFiles(file: File, body: Record<string, any>, onProgress: Function, type: string) {\r\n    return this.uploadFileAndGetUrl({\r\n      file: file as File,\r\n      url: '/performers/documents/upload-url',\r\n      body,\r\n      onProgress: onProgress || function next() {},\r\n      type\r\n    });\r\n  }\r\n\r\n  uploadAvatarFiles(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\r\n    return this.uploadUrl({\r\n      file,\r\n      url: '/performers/avatar/upload-url',\r\n      body,\r\n      onProgress: onProgress || function next() {},\r\n      fileMetadata\r\n    });\r\n  }\r\n\r\n  uploadCoverFiles(file: File, body: Record<string, any>, onProgress: Function, fileMetadata?: any) {\r\n    return this.uploadUrl({\r\n      file,\r\n      url: '/performers/cover/upload-url',\r\n      body,\r\n      onProgress: onProgress || function next() {},\r\n      fileMetadata\r\n    });\r\n  }\r\n\r\n  uploadDocument(payload : any) {\r\n    return this.post('/performers/documents/upload', payload);\r\n  }\r\n\r\n  updateNotificationSetting(id: string, payload: any) {\r\n    return this.put(`/performers/${id}/notification-settings`, payload);\r\n  }\r\n\r\n  setInternalProfile() {\r\n    return this.post('/internal-profile/detect-login');\r\n  }\r\n\r\n  getRanking() {\r\n    return this.get('/users/ranking');\r\n  }\r\n\r\n  getBoardCasterAnalytics(type:string, payload:any) {\r\n    return this.get(this.buildUrl(`/performer/performer-analytics/${type}`, payload));\r\n  }\r\n\r\n  getNextSupportedRanking(performerId: string) {\r\n    return this.get(`/performer/performer-analytics/ruby-to-nextRank/${performerId}`);\r\n  }\r\n\r\n  checkRole(payload:any) {\r\n    return this.get(this.buildUrl('/performers/check-role', payload));\r\n  }\r\n\r\n  getMileStones() {\r\n    return this.get(this.buildUrl('/performers/me/roles'));\r\n  }\r\n\r\n  getDocumentCheckStatus() {\r\n    return this.get(this.buildUrl('/documents/auth/check'))\r\n  }\r\n}\r\n\r\nexport const performerService = new PerformerService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}