{"ast":null,"code":"import { createAction, createAsyncAction } from '@lib/redux';\nexport const {\n  getStreamConversation,\n  getStreamConversationSuccess,\n  getStreamConversationFail\n} = createAsyncAction('getStreamConversation', 'GET_STREAM_CONVERSATION');\nexport const {\n  sendStreamMessage,\n  sendStreamMessageSuccess,\n  sendStreamMessageFail\n} = createAsyncAction('sendStreamMessage', 'SEND_STREAM_MESSAGE');\nexport const {\n  receiveStreamMessageSuccess\n} = createAsyncAction('receiveStreamMessageSuccess', 'RECEIVE_STREAM_MESSAGE_SUCCESS');\nexport const {\n  loadStreamMessages,\n  loadStreamMessagesSuccess,\n  loadStreamMessagesFail\n} = createAsyncAction('loadStreamMessages', 'LOAD_STREAM_MESSAGES');\nexport const {\n  loadMoreStreamMessages,\n  loadMoreStreamMessagesSuccess,\n  loadMoreStreamMessagesFail\n} = createAsyncAction('loadMoreStreamMessages', 'LOAD_MORE_STREAM_MESSAGES');\nexport const fetchingStreamMessage = createAction('fetchingStreamMessage');\nexport const resetStreamMessage = createAction('resetStreamMessage');\nexport const resetMuteStreamMessage = createAction('resetMuteStreamMessage');\nexport const resetAllStreamMessage = createAction('resetAllStreamMessage');\nexport const {\n  deleteMessage,\n  deleteMessageSuccess,\n  deleteMessageFail\n} = createAsyncAction('deleteMessage', 'DELETE_MESSAGE');\nexport const {\n  muteUser,\n  muteUserSuccess,\n  muteUserFail\n} = createAsyncAction('muteUser', 'MUTE_USER');\nexport const {\n  loadMuteUsers,\n  loadMuteUsersSuccess,\n  loadMuteUsersFail\n} = createAsyncAction('loadMuteUsers', 'LOAD_MUTE_USERS');","map":{"version":3,"names":["createAction","createAsyncAction","getStreamConversation","getStreamConversationSuccess","getStreamConversationFail","sendStreamMessage","sendStreamMessageSuccess","sendStreamMessageFail","receiveStreamMessageSuccess","loadStreamMessages","loadStreamMessagesSuccess","loadStreamMessagesFail","loadMoreStreamMessages","loadMoreStreamMessagesSuccess","loadMoreStreamMessagesFail","fetchingStreamMessage","resetStreamMessage","resetMuteStreamMessage","resetAllStreamMessage","deleteMessage","deleteMessageSuccess","deleteMessageFail","muteUser","muteUserSuccess","muteUserFail","loadMuteUsers","loadMuteUsersSuccess","loadMuteUsersFail"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/stream-chat/actions.ts"],"sourcesContent":["import { createAction, createAsyncAction } from '@lib/redux';\r\n\r\nexport const {\r\n  getStreamConversation,\r\n  getStreamConversationSuccess,\r\n  getStreamConversationFail\r\n} = createAsyncAction('getStreamConversation', 'GET_STREAM_CONVERSATION');\r\n\r\nexport const {\r\n  sendStreamMessage,\r\n  sendStreamMessageSuccess,\r\n  sendStreamMessageFail\r\n} = createAsyncAction('sendStreamMessage', 'SEND_STREAM_MESSAGE');\r\n\r\nexport const {\r\n  receiveStreamMessageSuccess\r\n} = createAsyncAction('receiveStreamMessageSuccess', 'RECEIVE_STREAM_MESSAGE_SUCCESS');\r\n\r\nexport const {\r\n  loadStreamMessages,\r\n  loadStreamMessagesSuccess,\r\n  loadStreamMessagesFail\r\n} = createAsyncAction('loadStreamMessages', 'LOAD_STREAM_MESSAGES');\r\n\r\nexport const {\r\n  loadMoreStreamMessages,\r\n  loadMoreStreamMessagesSuccess,\r\n  loadMoreStreamMessagesFail\r\n} = createAsyncAction('loadMoreStreamMessages', 'LOAD_MORE_STREAM_MESSAGES');\r\n\r\nexport const fetchingStreamMessage = createAction('fetchingStreamMessage');\r\n\r\nexport const resetStreamMessage = createAction('resetStreamMessage');\r\nexport const resetMuteStreamMessage = createAction('resetMuteStreamMessage');\r\nexport const resetAllStreamMessage = createAction('resetAllStreamMessage');\r\n\r\nexport const {\r\n  deleteMessage,\r\n  deleteMessageSuccess,\r\n  deleteMessageFail\r\n} = createAsyncAction('deleteMessage', 'DELETE_MESSAGE');\r\n\r\nexport const {\r\n  muteUser,\r\n  muteUserSuccess,\r\n  muteUserFail\r\n} = createAsyncAction('muteUser', 'MUTE_USER');\r\n\r\nexport const {\r\n  loadMuteUsers,\r\n  loadMuteUsersSuccess,\r\n  loadMuteUsersFail\r\n} = createAsyncAction('loadMuteUsers', 'LOAD_MUTE_USERS');\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,iBAAiB,QAAQ,YAAY;AAE5D,OAAO,MAAM;EACXC,qBAAqB;EACrBC,4BAA4B;EAC5BC;AACF,CAAC,GAAGH,iBAAiB,CAAC,uBAAuB,EAAE,yBAAyB,CAAC;AAEzE,OAAO,MAAM;EACXI,iBAAiB;EACjBC,wBAAwB;EACxBC;AACF,CAAC,GAAGN,iBAAiB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;AAEjE,OAAO,MAAM;EACXO;AACF,CAAC,GAAGP,iBAAiB,CAAC,6BAA6B,EAAE,gCAAgC,CAAC;AAEtF,OAAO,MAAM;EACXQ,kBAAkB;EAClBC,yBAAyB;EACzBC;AACF,CAAC,GAAGV,iBAAiB,CAAC,oBAAoB,EAAE,sBAAsB,CAAC;AAEnE,OAAO,MAAM;EACXW,sBAAsB;EACtBC,6BAA6B;EAC7BC;AACF,CAAC,GAAGb,iBAAiB,CAAC,wBAAwB,EAAE,2BAA2B,CAAC;AAE5E,OAAO,MAAMc,qBAAqB,GAAGf,YAAY,CAAC,uBAAuB,CAAC;AAE1E,OAAO,MAAMgB,kBAAkB,GAAGhB,YAAY,CAAC,oBAAoB,CAAC;AACpE,OAAO,MAAMiB,sBAAsB,GAAGjB,YAAY,CAAC,wBAAwB,CAAC;AAC5E,OAAO,MAAMkB,qBAAqB,GAAGlB,YAAY,CAAC,uBAAuB,CAAC;AAE1E,OAAO,MAAM;EACXmB,aAAa;EACbC,oBAAoB;EACpBC;AACF,CAAC,GAAGpB,iBAAiB,CAAC,eAAe,EAAE,gBAAgB,CAAC;AAExD,OAAO,MAAM;EACXqB,QAAQ;EACRC,eAAe;EACfC;AACF,CAAC,GAAGvB,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC;AAE9C,OAAO,MAAM;EACXwB,aAAa;EACbC,oBAAoB;EACpBC;AACF,CAAC,GAAG1B,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}