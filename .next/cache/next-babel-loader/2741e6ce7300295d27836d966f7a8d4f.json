{"ast":null,"code":"import { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { productService } from '@services/index';\nimport { listProducts, listProductsFail, listProductsSuccess, moreProductFail, moreProductSuccess, moreProduct } from './actions';\nconst productSagas = [{\n  on: listProducts,\n  *worker(data) {\n    try {\n      const resp = yield productService.userSearch(data.payload);\n      yield put(listProductsSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(listProductsFail(error));\n    }\n  }\n}, {\n  on: moreProduct,\n  *worker(data) {\n    try {\n      const resp = yield productService.userSearch(data.payload);\n      yield put(moreProductSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreProductFail(error));\n    }\n  }\n}];\nexport default flatten([createSagas(productSagas)]);","map":{"version":3,"names":["flatten","put","createSagas","productService","listProducts","listProductsFail","listProductsSuccess","moreProductFail","moreProductSuccess","moreProduct","productSagas","on","worker","data","resp","userSearch","payload","e","error","Promise","resolve"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/product/sagas.ts"],"sourcesContent":["import { flatten } from 'lodash';\r\nimport { put } from 'redux-saga/effects';\r\nimport { createSagas } from '@lib/redux';\r\nimport { productService } from '@services/index';\r\nimport { IReduxAction } from 'src/interfaces';\r\nimport {\r\n  listProducts, listProductsFail, listProductsSuccess, moreProductFail, moreProductSuccess, moreProduct\r\n} from './actions';\r\n\r\nconst productSagas = [\r\n  {\r\n    on: listProducts,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield productService.userSearch(data.payload);\r\n        yield put(listProductsSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield put(listProductsFail(error));\r\n      }\r\n    }\r\n  },\r\n  {\r\n    on: moreProduct,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield productService.userSearch(data.payload);\r\n        yield put(moreProductSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield put(moreProductFail(error));\r\n      }\r\n    }\r\n  }\r\n];\r\n\r\nexport default flatten([createSagas(productSagas)]);\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,QAAQ;AAChC,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,cAAc,QAAQ,iBAAiB;AAEhD,SACEC,YAAY,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,kBAAkB,EAAEC,WAAW,QAChG,WAAW;AAElB,MAAMC,YAAY,GAAG,CACnB;EACEC,EAAE,EAAEP,YAAY;EAChB,CAAEQ,MAAMA,CAACC,IAAuB,EAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMX,cAAc,CAACY,UAAU,CAACF,IAAI,CAACG,OAAO,CAAC;MAC1D,MAAMf,GAAG,CAACK,mBAAmB,CAACQ,IAAI,CAACD,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOI,CAAC,EAAE;MACV,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC;MACtC,MAAMhB,GAAG,CAACI,gBAAgB,CAACa,KAAK,CAAC,CAAC;IACpC;EACF;AACF,CAAC,EACD;EACEP,EAAE,EAAEF,WAAW;EACf,CAAEG,MAAMA,CAACC,IAAuB,EAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMX,cAAc,CAACY,UAAU,CAACF,IAAI,CAACG,OAAO,CAAC;MAC1D,MAAMf,GAAG,CAACO,kBAAkB,CAACM,IAAI,CAACD,IAAI,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOI,CAAC,EAAE;MACV,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC;MACtC,MAAMhB,GAAG,CAACM,eAAe,CAACW,KAAK,CAAC,CAAC;IACnC;EACF;AACF,CAAC,CACF;AAED,eAAelB,OAAO,CAAC,CAACE,WAAW,CAACQ,YAAY,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}