{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { APIRequest } from './api-request';\nexport var PaymentService = /*#__PURE__*/function (_APIRequest) {\n  function PaymentService() {\n    _classCallCheck(this, PaymentService);\n    return _callSuper(this, PaymentService, arguments);\n  }\n  _inherits(PaymentService, _APIRequest);\n  return _createClass(PaymentService, [{\n    key: \"subscribePerformer\",\n    value: function subscribePerformer(payload) {\n      return this.post('/payment/subscribe/performers', payload);\n    }\n  }, {\n    key: \"userSearch\",\n    value: function userSearch(payload) {\n      return this.get(this.buildUrl('/transactions/user/search', payload));\n    }\n  }, {\n    key: \"purchaseTokenPackage\",\n    value: function purchaseTokenPackage(id) {\n      return this.post(\"/payment/purchase-tokens/\".concat(id), {\n        paymentGateway: \"paypal\"\n      });\n    }\n  }, {\n    key: \"applyCoupon\",\n    value: function applyCoupon(code) {\n      return this.post(\"/coupons/\".concat(code, \"/apply-coupon\"));\n    }\n  }, {\n    key: \"connectStripeAccount\",\n    value: function connectStripeAccount() {\n      return this.post('/stripe/accounts');\n    }\n  }, {\n    key: \"getStripeCards\",\n    value: function getStripeCards() {\n      return this.get('/stripe/user/cards');\n    }\n  }, {\n    key: \"addStripeCard\",\n    value: function addStripeCard(payload) {\n      return this.post('/stripe/user/cards', payload);\n    }\n  }, {\n    key: \"removeStripeCard\",\n    value: function removeStripeCard(id) {\n      return this.del(\"/stripe/user/cards/\".concat(id));\n    }\n  }, {\n    key: \"retrieveStripeAccount\",\n    value: function retrieveStripeAccount() {\n      return this.get('/stripe/accounts/me');\n    }\n  }, {\n    key: \"loginLink\",\n    value: function loginLink() {\n      return this.get('/stripe/accounts/me/login-link');\n    }\n  }, {\n    key: \"getCards\",\n    value: function getCards(req) {\n      return this.get(this.buildUrl('/payment-cards', req));\n    }\n  }, {\n    key: \"addCard\",\n    value: function addCard(gateway, payload) {\n      return this.post(\"/\".concat(gateway, \"/cards\"), payload);\n    }\n  }, {\n    key: \"removeCard\",\n    value: function removeCard(id) {\n      return this.del(\"/payment-cards/\".concat(id));\n    }\n  }, {\n    key: \"sendSavePaypalCredentials\",\n    value: function sendSavePaypalCredentials(_ref) {\n      var performerId = _ref.performerId,\n        email = _ref.email;\n      return this.post(\"/performers/payment-gateway-settings\", {\n        performerId: performerId,\n        key: 'paypal',\n        status: 'active',\n        value: email\n      });\n    }\n  }, {\n    key: \"tradeDiamond\",\n    value: function tradeDiamond(amount) {\n      return this.post('/payment/trade-diamonds', {\n        amount: amount\n      });\n    }\n  }, {\n    key: \"paypalCallback\",\n    value: function paypalCallback(paypalOrderId) {\n      return this.post(\"/paypal/cheking/\".concat(paypalOrderId));\n    }\n  }, {\n    key: \"paypalCallhook\",\n    value: function paypalCallhook(_ref2) {\n      var eventType = _ref2.eventType,\n        orderId = _ref2.orderId;\n      return this.post(\"/payment/paypal/callhook\", {\n        event_type: eventType,\n        resource: {\n          id: orderId\n        }\n      });\n    }\n  }]);\n}(APIRequest);\nexport var paymentService = new PaymentService();","map":{"version":3,"names":["APIRequest","PaymentService","_APIRequest","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","subscribePerformer","payload","post","userSearch","get","buildUrl","purchaseTokenPackage","id","concat","paymentGateway","applyCoupon","code","connectStripeAccount","getStripeCards","addStripeCard","removeStripeCard","del","retrieveStripeAccount","loginLink","getCards","req","addCard","gateway","removeCard","sendSavePaypalCredentials","_ref","performerId","email","status","tradeDiamond","amount","paypalCallback","paypalOrderId","paypalCallhook","_ref2","eventType","orderId","event_type","resource","paymentService"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/payment.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\r\n\r\nexport class PaymentService extends APIRequest {\r\n  subscribePerformer(payload: any) {\r\n    return this.post('/payment/subscribe/performers', payload);\r\n  }\r\n\r\n  userSearch(payload) {\r\n    return this.get(this.buildUrl('/transactions/user/search', payload));\r\n  }\r\n\r\n  purchaseTokenPackage(id: string) {\r\n    return this.post(`/payment/purchase-tokens/${id}`, {\r\n      paymentGateway: \"paypal\"\r\n    });\r\n  }\r\n\r\n  applyCoupon(code: any) {\r\n    return this.post(`/coupons/${code}/apply-coupon`);\r\n  }\r\n\r\n  connectStripeAccount() {\r\n    return this.post('/stripe/accounts');\r\n  }\r\n\r\n  getStripeCards() {\r\n    return this.get('/stripe/user/cards');\r\n  }\r\n\r\n  addStripeCard(payload) {\r\n    return this.post('/stripe/user/cards', payload);\r\n  }\r\n\r\n  removeStripeCard(id) {\r\n    return this.del(`/stripe/user/cards/${id}`);\r\n  }\r\n\r\n  retrieveStripeAccount() {\r\n    return this.get('/stripe/accounts/me');\r\n  }\r\n\r\n  loginLink() {\r\n    return this.get('/stripe/accounts/me/login-link');\r\n  }\r\n\r\n  getCards(req: any) {\r\n    return this.get(this.buildUrl('/payment-cards', req));\r\n  }\r\n\r\n  addCard(gateway: string, payload: any) {\r\n    return this.post(`/${gateway}/cards`, payload);\r\n  }\r\n\r\n  removeCard(id: string) {\r\n    return this.del(`/payment-cards/${id}`);\r\n  }\r\n\r\n  sendSavePaypalCredentials({\r\n    performerId,\r\n    email\r\n  }: {\r\n    performerId: string,\r\n    email: string\r\n  }) {\r\n    return this.post(`/performers/payment-gateway-settings`, {\r\n      performerId,\r\n      key: 'paypal',\r\n      status: 'active',\r\n      value: email\r\n    })\r\n  }\r\n\r\n  tradeDiamond(amount: number) {\r\n    return this.post('/payment/trade-diamonds', {\r\n      amount\r\n    });\r\n  }\r\n\r\n  paypalCallback(paypalOrderId:string) {\r\n    return this.post(`/paypal/cheking/${paypalOrderId}`);\r\n  }\r\n\r\n  paypalCallhook({eventType, orderId} : { eventType: string, orderId: string }) {\r\n    return this.post(`/payment/paypal/callhook`, {\r\n      event_type: eventType,\r\n      resource: {\r\n          id: orderId\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const paymentService = new PaymentService();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}