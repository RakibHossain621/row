{"ast":null,"code":"import { message } from 'antd';\nconst INTERNET_CHECK_URL = 'https://google.com';\nexport const isHasInternetConnection = async () => {\n  try {\n    const res = await fetch(INTERNET_CHECK_URL, {\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        Pragma: 'no-cache',\n        Expires: 0\n      }\n    });\n    if (res.status === 404 || res.status === 401 || res.status === 403 || res.status === 500 || res.status >= 200 && res.status <= 300) {\n      return true;\n    }\n  } catch (exception) {\n    message.error(exception);\n  }\n  return false;\n};","map":{"version":3,"names":["message","INTERNET_CHECK_URL","isHasInternetConnection","res","fetch","headers","Pragma","Expires","status","exception","error"],"sources":["C:/Users/Rokibul/Documents/case/src/lib/internet.ts"],"sourcesContent":["import { message } from 'antd';\n\nconst INTERNET_CHECK_URL = 'https://google.com';\n\nexport const isHasInternetConnection = async (): Promise<boolean> => {\n  try {\n    const res = await fetch(INTERNET_CHECK_URL, {\n      headers: {\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\n        Pragma: 'no-cache',\n        Expires: 0\n      } as any\n    });\n    if (\n      res.status === 404\n      || res.status === 401\n      || res.status === 403\n      || res.status === 500\n      || (res.status >= 200 && res.status <= 300)\n    ) {\n      return true;\n    }\n  } catch (exception) {\n    message.error(exception);\n  }\n  return false;\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,MAAM;AAE9B,MAAMC,kBAAkB,GAAG,oBAAoB;AAE/C,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAA,KAA8B;EACnE,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,kBAAkB,EAAE;MAC1CI,OAAO,EAAE;QACP,eAAe,EAAE,qCAAqC;QACtDC,MAAM,EAAE,UAAU;QAClBC,OAAO,EAAE;MACX;IACF,CAAC,CAAC;IACF,IACEJ,GAAG,CAACK,MAAM,KAAK,GAAG,IACfL,GAAG,CAACK,MAAM,KAAK,GAAG,IAClBL,GAAG,CAACK,MAAM,KAAK,GAAG,IAClBL,GAAG,CAACK,MAAM,KAAK,GAAG,IACjBL,GAAG,CAACK,MAAM,IAAI,GAAG,IAAIL,GAAG,CAACK,MAAM,IAAI,GAAI,EAC3C;MACA,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOC,SAAS,EAAE;IAClBT,OAAO,CAACU,KAAK,CAACD,SAAS,CAAC;EAC1B;EACA,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}