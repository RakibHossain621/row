{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rokibul\\\\Documents\\\\case\\\\src\\\\components\\\\notifications\\\\NotificationsList.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { formatDateFromnow } from \"@lib/date\";\nimport { setUnreadsNotification } from \"@redux/notification/actions\";\nimport { notificationService } from \"@services/notification.service\";\nimport { useRouter } from \"next/router\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nconst NotificationsList = ({\n  setUnreadsNotification\n}) => {\n  const router = useRouter();\n  const {\n    0: notifications,\n    1: setNotifications\n  } = useState([]);\n  const {\n    0: totalUnread,\n    1: setTotalUnread\n  } = useState(0);\n  const getNotificationData = async () => {\n    const notificationsResponse = await notificationService.search({});\n    const totalNotificationsUnreadResponse = await notificationService.countUnread();\n    setNotifications(notificationsResponse.data.data);\n    setTotalUnread(totalNotificationsUnreadResponse.data);\n  };\n  const handleReadNotification = async (notificationId, type, refId) => {\n    await notificationService.read(notificationId);\n    if (type === 'comment' || type === 'created') {\n      router.push(`/post/${refId}`);\n    }\n  };\n  const handleReadAllNotifications = async () => {\n    await notificationService.readAll();\n    setUnreadsNotification(false);\n  };\n  useEffect(() => {\n    getNotificationData();\n  }, []);\n  return __jsx(\"section\", {\n    className: \"w-full p-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-black/90 text-2xl pb-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Notifications\"), __jsx(\"nav\", {\n    className: \"flex items-center gap-3 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Total unread: \", totalUnread), __jsx(\"button\", {\n    className: \"cursor-pointer ml-auto p-2 border font-semibold\",\n    onClick: handleReadAllNotifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Mark as read\"), __jsx(\"button\", {\n    className: \"cursor-pointer p-2 border font-semibold\",\n    onClick: () => router.push('/notification-setting'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Settings\")), __jsx(\"div\", {\n    className: \"flex flex-col gap-3 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, notifications.map(notification => __jsx(\"button\", {\n    onClick: () => handleReadNotification(notification._id, notification.type, notification.refId),\n    className: `cursor-pointer w-full rounded p-4 flex items-start justify-start ${notification.read ? '' : 'bg-purple-100'}`,\n    key: notification._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    className: \"w-10 h-10 rounded-full\",\n    src: notification.thumbnail,\n    alt: \"Notification Thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    className: \"text-black font-semibold pb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, notification.title), __jsx(\"p\", {\n    className: \"text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, formatDateFromnow(notification.createdAt)))))));\n};\nconst mapState = state => ({\n  user: _objectSpread({}, state.user.current),\n  ui: _objectSpread({}, state.ui)\n});\nconst mapDispatch = {\n  setUnreadsNotification\n};\nexport default connect(mapState, mapDispatch)(NotificationsList);","map":{"version":3,"names":["formatDateFromnow","setUnreadsNotification","notificationService","useRouter","useEffect","useState","connect","NotificationsList","router","notifications","setNotifications","totalUnread","setTotalUnread","getNotificationData","notificationsResponse","search","totalNotificationsUnreadResponse","countUnread","data","handleReadNotification","notificationId","type","refId","read","push","handleReadAllNotifications","readAll","__jsx","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","notification","_id","key","src","thumbnail","alt","title","createdAt","mapState","state","user","_objectSpread","current","ui","mapDispatch"],"sources":["C:/Users/Rokibul/Documents/case/src/components/notifications/NotificationsList.tsx"],"sourcesContent":["import { INotification } from \"@interfaces/notification\"\nimport { formatDate, formatDateFromnow } from \"@lib/date\"\nimport { setUnreadsNotification } from \"@redux/notification/actions\"\nimport { notificationService } from \"@services/notification.service\"\nimport { useRouter } from \"next/router\"\nimport { useEffect, useState } from \"react\"\nimport { connect } from \"react-redux\"\n\ninterface NotificationProps{\n  setUnreadsNotification:Function\n}\n\n const NotificationsList = ({ setUnreadsNotification } : NotificationProps) => {\n  const router = useRouter()\n\n  const [notifications, setNotifications] = useState<INotification[]>([])\n  const [totalUnread, setTotalUnread] = useState(0)\n\n  const getNotificationData = async () => {\n    const notificationsResponse = await notificationService.search({})\n\n    const totalNotificationsUnreadResponse = await notificationService.countUnread()\n\n    setNotifications(notificationsResponse.data.data)\n    setTotalUnread(totalNotificationsUnreadResponse.data)\n  }\n\n  const handleReadNotification = async (notificationId: string, type: string, refId: string) => {\n    await notificationService.read(notificationId)\n\n    if (type === 'comment' || type === 'created') {\n      router.push(`/post/${refId}`)\n    }\n  }\n\n  const handleReadAllNotifications = async () => {\n    await notificationService.readAll();\n    setUnreadsNotification(false)\n  }\n\n  useEffect(() => {\n    getNotificationData()\n  }, [])\n\n  return (\n    <section className=\"w-full p-6\">\n      <h1 className=\"text-black/90 text-2xl pb-6\">Notifications</h1>\n\n      <nav className=\"flex items-center gap-3 pb-4\">\n        <h2>Total unread: {totalUnread}</h2>\n        <button className=\"cursor-pointer ml-auto p-2 border font-semibold\" onClick={handleReadAllNotifications}>Mark as read</button>\n        <button className=\"cursor-pointer p-2 border font-semibold\" onClick={() => router.push('/notification-setting')}>Settings</button>\n      </nav>\n      <div className=\"flex flex-col gap-3 \">\n        {notifications.map((notification) => (\n          <button onClick={() => handleReadNotification(notification._id, notification.type, notification.refId)} className={`cursor-pointer w-full rounded p-4 flex items-start justify-start ${notification.read ? '' : 'bg-purple-100'}`} key={notification._id}>\n            <img className=\"w-10 h-10 rounded-full\" src={notification.thumbnail} alt=\"Notification Thumbnail\" />\n            <div className=\"px-4\">\n              <p className=\"text-black font-semibold pb-1\">{notification.title}</p>\n              <p className=\"text-left\">{formatDateFromnow(notification.createdAt as unknown as Date)}</p>\n            </div>\n          </button>\n        ))}\n      </div>\n    </section>\n  )\n}\n\n\nconst mapState = (state: any) => ({\n  user: { ...state.user.current },\n  ui: { ...state.ui },\n});\n\nconst mapDispatch = {\n  setUnreadsNotification\n};\n\nexport default connect(mapState, mapDispatch)(NotificationsList)"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}