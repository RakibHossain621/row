{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { createReducers } from '@lib/redux';\nimport { merge } from 'lodash';\nimport { fetchNotificaionSuccess, fetchNotificaionFail, addNotificaionSuccess, addNotificaionFail, setNotificationLoading, setUnreadCount, setReadItem, setUnreadsNotification } from './actions';\nconst initialState = {\n  loading: false,\n  error: null,\n  success: false,\n  notificationIds: [],\n  notificationMapping: {},\n  dataSource: [],\n  page: 1,\n  total: 0,\n  isUnreadsNotification: false\n};\nconst reducer = [{\n  on: setNotificationLoading,\n  reducer: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    loading: action.payload\n  })\n}, {\n  on: setUnreadsNotification,\n  reducer: (state, action) => _objectSpread(_objectSpread({}, state), {}, {\n    isUnreadsNotification: action.payload\n  })\n}, {\n  on: fetchNotificaionSuccess,\n  reducer(state, action) {\n    const notificationIds = action.payload.data.map(data => data._id);\n    const notificationMapping = action.payload.data.reduce((previousValue, currentValue) => _objectSpread(_objectSpread({}, previousValue), {}, {\n      [currentValue._id]: currentValue\n    }), {});\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      notificationIds,\n      notificationMapping,\n      dataSource: action.payload.data,\n      page: state.page + 1,\n      error: null,\n      success: true\n    });\n  }\n}, {\n  on: fetchNotificaionFail,\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      error: action.payload,\n      success: false\n    });\n  }\n}, {\n  on: addNotificaionSuccess,\n  reducer(state, action) {\n    const notificationIds = action.payload.data.map(data => data._id);\n    const notificationMapping = action.payload.data.reduce((previousValue, currentValue) => _objectSpread(_objectSpread({}, previousValue), {}, {\n      [currentValue._id]: currentValue\n    }), {});\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      notificationIds: [...state.notificationIds, ...notificationIds],\n      notificationMapping: Object.assign(state.notificationMapping, notificationMapping),\n      dataSource: [...state.dataSource, ...action.payload.data],\n      page: state.page + 1,\n      error: null,\n      success: true\n    });\n  }\n}, {\n  on: addNotificaionFail,\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      error: action.payload\n    });\n  }\n}, {\n  on: setUnreadCount,\n  reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: action.payload\n    });\n  }\n}, {\n  on: setReadItem,\n  reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: state.total ? state.total - 1 : 0\n    });\n  }\n}];\nexport default merge({}, createReducers('notification', [reducer], initialState));","map":{"version":3,"names":["createReducers","merge","fetchNotificaionSuccess","fetchNotificaionFail","addNotificaionSuccess","addNotificaionFail","setNotificationLoading","setUnreadCount","setReadItem","setUnreadsNotification","initialState","loading","error","success","notificationIds","notificationMapping","dataSource","page","total","isUnreadsNotification","reducer","on","state","action","_objectSpread","payload","data","map","_id","reduce","previousValue","currentValue","Object","assign"],"sources":["C:/Users/Rokibul/Documents/case/src/redux/notification/reducers.ts"],"sourcesContent":["import { IReduxAction } from '@interfaces/redux';\nimport { createReducers } from '@lib/redux';\nimport { merge } from 'lodash';\nimport {\n  fetchNotificaionSuccess,\n  fetchNotificaionFail,\n  addNotificaionSuccess,\n  addNotificaionFail,\n  setNotificationLoading,\n  setUnreadCount,\n  setReadItem,\n  setUnreadsNotification\n} from './actions';\n\nconst initialState = {\n  loading: false,\n  error: null,\n  success: false,\n  notificationIds: [],\n  notificationMapping: {},\n  dataSource: [],\n  page: 1,\n  total: 0,\n  isUnreadsNotification:false\n};\n\nconst reducer = [\n  {\n    on: setNotificationLoading,\n    reducer: (state, action: IReduxAction<boolean>) => ({\n      ...state,\n      loading: action.payload\n    })\n  },\n  {\n    on: setUnreadsNotification,\n    reducer: (state, action: IReduxAction<boolean>) => ({\n      ...state,\n      isUnreadsNotification: action.payload\n    })\n  },\n  {\n    on: fetchNotificaionSuccess,\n    reducer(state: any, action: IReduxAction<any>) {\n      const notificationIds = action.payload.data.map((data) => data._id);\n      const notificationMapping = action.payload.data.reduce(\n        (previousValue, currentValue) => ({\n          ...previousValue,\n          [currentValue._id]: currentValue\n        }),\n        {}\n      );\n      return {\n        ...state,\n        loading: false,\n        notificationIds,\n        notificationMapping,\n        dataSource: action.payload.data,\n        page: state.page + 1,\n        error: null,\n        success: true\n      };\n    }\n  },\n  {\n    on: fetchNotificaionFail,\n    reducer(state: any, action: IReduxAction<any>) {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n        success: false\n      };\n    }\n  },\n  {\n    on: addNotificaionSuccess,\n    reducer(state: any, action: IReduxAction<any>) {\n      const notificationIds = action.payload.data.map((data) => data._id);\n      const notificationMapping = action.payload.data.reduce(\n        (previousValue, currentValue) => ({\n          ...previousValue,\n          [currentValue._id]: currentValue\n        }),\n        {}\n      );\n      return {\n        ...state,\n        loading: false,\n        notificationIds: [...state.notificationIds, ...notificationIds],\n        notificationMapping: Object.assign(state.notificationMapping, notificationMapping),\n        dataSource: [...state.dataSource, ...action.payload.data],\n        page: state.page + 1,\n        error: null,\n        success: true\n      };\n    }\n  },\n  {\n    on: addNotificaionFail,\n    reducer(state: any, action: IReduxAction<any>) {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    }\n  },\n  {\n    on: setUnreadCount,\n    reducer(state: any, action: IReduxAction<any>) {\n      return {\n        ...state,\n        total: action.payload\n      };\n    }\n  },\n  {\n    on: setReadItem,\n    reducer(state: any) {\n      return {\n        ...state,\n        total: state.total ? state.total - 1 : 0\n      };\n    }\n  }\n];\n\nexport default merge(\n  {},\n  createReducers('notification', [reducer], initialState)\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}