{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createReducers } from '@lib/redux';\nimport { merge } from 'lodash';\nimport { fetchNotificaionSuccess, fetchNotificaionFail, addNotificaionSuccess, addNotificaionFail, setNotificationLoading, setUnreadCount, setReadItem, setUnreadsNotification } from './actions';\nvar initialState = {\n  loading: false,\n  error: null,\n  success: false,\n  notificationIds: [],\n  notificationMapping: {},\n  dataSource: [],\n  page: 1,\n  total: 0,\n  isUnreadsNotification: false\n};\nvar reducer = [{\n  on: setNotificationLoading,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: action.payload\n    });\n  }\n}, {\n  on: setUnreadsNotification,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      isUnreadsNotification: action.payload\n    });\n  }\n}, {\n  on: fetchNotificaionSuccess,\n  reducer: function reducer(state, action) {\n    var notificationIds = action.payload.data.map(function (data) {\n      return data._id;\n    });\n    var notificationMapping = action.payload.data.reduce(function (previousValue, currentValue) {\n      return _objectSpread(_objectSpread({}, previousValue), {}, _defineProperty({}, currentValue._id, currentValue));\n    }, {});\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      notificationIds: notificationIds,\n      notificationMapping: notificationMapping,\n      dataSource: action.payload.data,\n      page: state.page + 1,\n      error: null,\n      success: true\n    });\n  }\n}, {\n  on: fetchNotificaionFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      error: action.payload,\n      success: false\n    });\n  }\n}, {\n  on: addNotificaionSuccess,\n  reducer: function reducer(state, action) {\n    var notificationIds = action.payload.data.map(function (data) {\n      return data._id;\n    });\n    var notificationMapping = action.payload.data.reduce(function (previousValue, currentValue) {\n      return _objectSpread(_objectSpread({}, previousValue), {}, _defineProperty({}, currentValue._id, currentValue));\n    }, {});\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      notificationIds: [].concat(_toConsumableArray(state.notificationIds), _toConsumableArray(notificationIds)),\n      notificationMapping: Object.assign(state.notificationMapping, notificationMapping),\n      dataSource: [].concat(_toConsumableArray(state.dataSource), _toConsumableArray(action.payload.data)),\n      page: state.page + 1,\n      error: null,\n      success: true\n    });\n  }\n}, {\n  on: addNotificaionFail,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      loading: false,\n      error: action.payload\n    });\n  }\n}, {\n  on: setUnreadCount,\n  reducer: function reducer(state, action) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: action.payload\n    });\n  }\n}, {\n  on: setReadItem,\n  reducer: function reducer(state) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: state.total ? state.total - 1 : 0\n    });\n  }\n}];\nexport default merge({}, createReducers('notification', [reducer], initialState));","map":{"version":3,"names":["createReducers","merge","fetchNotificaionSuccess","fetchNotificaionFail","addNotificaionSuccess","addNotificaionFail","setNotificationLoading","setUnreadCount","setReadItem","setUnreadsNotification","initialState","loading","error","success","notificationIds","notificationMapping","dataSource","page","total","isUnreadsNotification","reducer","on","state","action","_objectSpread","payload","data","map","_id","reduce","previousValue","currentValue","_defineProperty","concat","_toConsumableArray","Object","assign"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/notification/reducers.ts"],"sourcesContent":["import { IReduxAction } from '@interfaces/redux';\r\nimport { createReducers } from '@lib/redux';\r\nimport { merge } from 'lodash';\r\nimport {\r\n  fetchNotificaionSuccess,\r\n  fetchNotificaionFail,\r\n  addNotificaionSuccess,\r\n  addNotificaionFail,\r\n  setNotificationLoading,\r\n  setUnreadCount,\r\n  setReadItem,\r\n  setUnreadsNotification\r\n} from './actions';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  success: false,\r\n  notificationIds: [],\r\n  notificationMapping: {},\r\n  dataSource: [],\r\n  page: 1,\r\n  total: 0,\r\n  isUnreadsNotification:false\r\n};\r\n\r\nconst reducer = [\r\n  {\r\n    on: setNotificationLoading,\r\n    reducer: (state, action: IReduxAction<boolean>) => ({\r\n      ...state,\r\n      loading: action.payload\r\n    })\r\n  },\r\n  {\r\n    on: setUnreadsNotification,\r\n    reducer: (state, action: IReduxAction<boolean>) => ({\r\n      ...state,\r\n      isUnreadsNotification: action.payload\r\n    })\r\n  },\r\n  {\r\n    on: fetchNotificaionSuccess,\r\n    reducer(state: any, action: IReduxAction<any>) {\r\n      const notificationIds = action.payload.data.map((data) => data._id);\r\n      const notificationMapping = action.payload.data.reduce(\r\n        (previousValue, currentValue) => ({\r\n          ...previousValue,\r\n          [currentValue._id]: currentValue\r\n        }),\r\n        {}\r\n      );\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        notificationIds,\r\n        notificationMapping,\r\n        dataSource: action.payload.data,\r\n        page: state.page + 1,\r\n        error: null,\r\n        success: true\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: fetchNotificaionFail,\r\n    reducer(state: any, action: IReduxAction<any>) {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n        success: false\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: addNotificaionSuccess,\r\n    reducer(state: any, action: IReduxAction<any>) {\r\n      const notificationIds = action.payload.data.map((data) => data._id);\r\n      const notificationMapping = action.payload.data.reduce(\r\n        (previousValue, currentValue) => ({\r\n          ...previousValue,\r\n          [currentValue._id]: currentValue\r\n        }),\r\n        {}\r\n      );\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        notificationIds: [...state.notificationIds, ...notificationIds],\r\n        notificationMapping: Object.assign(state.notificationMapping, notificationMapping),\r\n        dataSource: [...state.dataSource, ...action.payload.data],\r\n        page: state.page + 1,\r\n        error: null,\r\n        success: true\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: addNotificaionFail,\r\n    reducer(state: any, action: IReduxAction<any>) {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: setUnreadCount,\r\n    reducer(state: any, action: IReduxAction<any>) {\r\n      return {\r\n        ...state,\r\n        total: action.payload\r\n      };\r\n    }\r\n  },\r\n  {\r\n    on: setReadItem,\r\n    reducer(state: any) {\r\n      return {\r\n        ...state,\r\n        total: state.total ? state.total - 1 : 0\r\n      };\r\n    }\r\n  }\r\n];\r\n\r\nexport default merge(\r\n  {},\r\n  createReducers('notification', [reducer], initialState)\r\n);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}