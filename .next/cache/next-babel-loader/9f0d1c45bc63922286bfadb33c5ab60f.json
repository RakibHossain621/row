{"ast":null,"code":"function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { APIRequest } from './api-request';\nclass NotificationService extends APIRequest {\n  search(query) {\n    return this.get(this.buildUrl('/notification', query));\n  }\n  countUnread() {\n    return this.get('/notification/total-unread');\n  }\n  readAll() {\n    return this.put('/notification/read-all');\n  }\n  read(id) {\n    return this.put(`/notification/${id}/read`);\n  }\n  hasHolderId(id) {\n    return NotificationService.HOLDER_IDS.includes(id);\n  }\n  addHolderId(id) {\n    NotificationService.HOLDER_IDS.push(id);\n  }\n}\n_defineProperty(NotificationService, \"HOLDER_IDS\", []);\nexport const notificationService = new NotificationService();","map":{"version":3,"names":["APIRequest","NotificationService","search","query","get","buildUrl","countUnread","readAll","put","read","id","hasHolderId","HOLDER_IDS","includes","addHolderId","push","_defineProperty","notificationService"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/notification.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\r\n\r\nclass NotificationService extends APIRequest {\r\n  public static HOLDER_IDS = [] as any[];\r\n\r\n  search(query) {\r\n    return this.get(this.buildUrl('/notification', query));\r\n  }\r\n\r\n  countUnread() {\r\n    return this.get('/notification/total-unread');\r\n  }\r\n\r\n  readAll() {\r\n    return this.put('/notification/read-all');\r\n  }\r\n\r\n  read(id: string) {\r\n    return this.put(`/notification/${id}/read`);\r\n  }\r\n\r\n  hasHolderId(id) {\r\n    return NotificationService.HOLDER_IDS.includes(id);\r\n  }\r\n\r\n  addHolderId(id) {\r\n    NotificationService.HOLDER_IDS.push(id);\r\n  }\r\n}\r\n\r\nexport const notificationService = new NotificationService();\r\n"],"mappings":";;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,MAAMC,mBAAmB,SAASD,UAAU,CAAC;EAG3CE,MAAMA,CAACC,KAAK,EAAE;IACZ,OAAO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,eAAe,EAAEF,KAAK,CAAC,CAAC;EACxD;EAEAG,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACF,GAAG,CAAC,4BAA4B,CAAC;EAC/C;EAEAG,OAAOA,CAAA,EAAG;IACR,OAAO,IAAI,CAACC,GAAG,CAAC,wBAAwB,CAAC;EAC3C;EAEAC,IAAIA,CAACC,EAAU,EAAE;IACf,OAAO,IAAI,CAACF,GAAG,CAAC,iBAAiBE,EAAE,OAAO,CAAC;EAC7C;EAEAC,WAAWA,CAACD,EAAE,EAAE;IACd,OAAOT,mBAAmB,CAACW,UAAU,CAACC,QAAQ,CAACH,EAAE,CAAC;EACpD;EAEAI,WAAWA,CAACJ,EAAE,EAAE;IACdT,mBAAmB,CAACW,UAAU,CAACG,IAAI,CAACL,EAAE,CAAC;EACzC;AACF;AAACM,eAAA,CA1BKf,mBAAmB,gBACI,EAAE;AA2B/B,OAAO,MAAMgB,mBAAmB,GAAG,IAAIhB,mBAAmB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}