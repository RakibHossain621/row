{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { APIRequest } from './api-request';\nexport var BlockService = /*#__PURE__*/function (_APIRequest) {\n  function BlockService() {\n    _classCallCheck(this, BlockService);\n    return _callSuper(this, BlockService, arguments);\n  }\n  _inherits(BlockService, _APIRequest);\n  return _createClass(BlockService, [{\n    key: \"blockCountries\",\n    value: function blockCountries(payload) {\n      return this.post('/performer-blocks/countries', payload);\n    }\n  }, {\n    key: \"blockUser\",\n    value: function blockUser(payload) {\n      return this.post('/performer-blocks/user', payload);\n    }\n  }, {\n    key: \"unBlockUser\",\n    value: function unBlockUser(id) {\n      this.del(\"/performer-blocks/user/\".concat(id));\n    }\n  }, {\n    key: \"getBlockListUsers\",\n    value: function getBlockListUsers(query) {\n      return this.get(this.buildUrl('/performer-blocks/users', query));\n    }\n  }, {\n    key: \"checkCountryBlock\",\n    value: function checkCountryBlock() {\n      return this.get('/country-block/check');\n    }\n  }]);\n}(APIRequest);\nexport var blockService = new BlockService();","map":{"version":3,"names":["APIRequest","BlockService","_APIRequest","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","blockCountries","payload","post","blockUser","unBlockUser","id","del","concat","getBlockListUsers","query","get","buildUrl","checkCountryBlock","blockService"],"sources":["C:/Users/roman/Pictures/Case/row/src/services/block.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\r\n\r\nexport class BlockService extends APIRequest {\r\n  blockCountries(payload: any) {\r\n    return this.post('/performer-blocks/countries', payload);\r\n  }\r\n\r\n  blockUser(payload: any) {\r\n    return this.post('/performer-blocks/user', payload);\r\n  }\r\n\r\n  unBlockUser(id: string) {\r\n    this.del(`/performer-blocks/user/${id}`);\r\n  }\r\n\r\n  getBlockListUsers(query: any) {\r\n    return this.get(this.buildUrl('/performer-blocks/users', query));\r\n  }\r\n\r\n  checkCountryBlock() {\r\n    return this.get('/country-block/check');\r\n  }\r\n}\r\n\r\nexport const blockService = new BlockService();\r\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,WAAaC,YAAY,0BAAAC,WAAA;EAAA,SAAAD,aAAA;IAAAE,eAAA,OAAAF,YAAA;IAAA,OAAAG,UAAA,OAAAH,YAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,YAAA,EAAAC,WAAA;EAAA,OAAAK,YAAA,CAAAN,YAAA;IAAAO,GAAA;IAAAC,KAAA,EACvB,SAAAC,cAAcA,CAACC,OAAY,EAAE;MAC3B,OAAO,IAAI,CAACC,IAAI,CAAC,6BAA6B,EAAED,OAAO,CAAC;IAC1D;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAI,SAASA,CAACF,OAAY,EAAE;MACtB,OAAO,IAAI,CAACC,IAAI,CAAC,wBAAwB,EAAED,OAAO,CAAC;IACrD;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAK,WAAWA,CAACC,EAAU,EAAE;MACtB,IAAI,CAACC,GAAG,2BAAAC,MAAA,CAA2BF,EAAE,CAAE,CAAC;IAC1C;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAS,iBAAiBA,CAACC,KAAU,EAAE;MAC5B,OAAO,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,yBAAyB,EAAEF,KAAK,CAAC,CAAC;IAClE;EAAC;IAAAX,GAAA;IAAAC,KAAA,EAED,SAAAa,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACF,GAAG,CAAC,sBAAsB,CAAC;IACzC;EAAC;AAAA,EAnB+BpB,UAAU;AAsB5C,OAAO,IAAMuB,YAAY,GAAG,IAAItB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}