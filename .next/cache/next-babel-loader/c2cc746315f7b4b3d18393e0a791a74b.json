{"ast":null,"code":"/* eslint-disable func-names */\n/* eslint-disable prefer-spread */\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */\n\nexport var warning = function warning() {\n  // debug on development and staging.\n  if (false) return;\n\n  /* eslint-disable no-console */\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error.apply(console, args);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n\n    throw new Error(args.join(' '));\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n};\nexport var debug = function debug() {\n  // debug on development and staging.\n  if (false) return;\n\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    console.debug.apply(console, args);\n  }\n};","map":{"version":3,"names":["warning","_len","arguments","length","args","Array","_key","console","error","apply","Error","join","e","debug","_len2","_key2"],"sources":["C:/Users/roman/Pictures/Case/row/src/socket/utils.ts"],"sourcesContent":["/* eslint-disable func-names */\r\n/* eslint-disable prefer-spread */\r\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */\r\n\r\nexport const warning = function (...args) {\r\n  // debug on development and staging.\r\n  if (process.env.NODE_ENV === 'production') return;\r\n\r\n  /* eslint-disable no-console */\r\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\r\n    console.error.apply(console, args);\r\n  }\r\n  /* eslint-enable no-console */\r\n  try {\r\n    // This error was thrown as a convenience so that if you enable\r\n    // \"break on all exceptions\" in your console,\r\n    // it would pause the execution at this line.\r\n\r\n    throw new Error(args.join(' '));\r\n    /* eslint-disable no-empty */\r\n  } catch (e) {}\r\n  /* eslint-enable no-empty */\r\n};\r\n\r\nexport const debug = function (...args) {\r\n  // debug on development and staging.\r\n  if (process.env.NODE_ENV === 'production') return;\r\n\r\n  /* eslint-disable no-console */\r\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\r\n    console.debug.apply(console, args);\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMA,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAsB;EACxC;EACA,WAA2C;;EAE3C;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAJkCC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EAKtC,IAAI,OAAOC,OAAO,KAAK,WAAW,IAAI,OAAOA,OAAO,CAACC,KAAK,KAAK,UAAU,EAAE;IACzED,OAAO,CAACC,KAAK,CAACC,KAAK,CAACF,OAAO,EAAEH,IAAI,CAAC;EACpC;EACA;EACA,IAAI;IACF;IACA;IACA;;IAEA,MAAM,IAAIM,KAAK,CAACN,IAAI,CAACO,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;EACb;AACF,CAAC;AAED,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAsB;EACtC;EACA,WAA2C;;EAE3C;EACA,IAAI,OAAON,OAAO,KAAK,WAAW,IAAI,OAAOA,OAAO,CAACM,KAAK,KAAK,UAAU,EAAE;IAAA,SAAAC,KAAA,GAAAZ,SAAA,CAAAC,MAAA,EAL3CC,IAAI,OAAAC,KAAA,CAAAS,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAJX,IAAI,CAAAW,KAAA,IAAAb,SAAA,CAAAa,KAAA;IAAA;IAMlCR,OAAO,CAACM,KAAK,CAACJ,KAAK,CAACF,OAAO,EAAEH,IAAI,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}