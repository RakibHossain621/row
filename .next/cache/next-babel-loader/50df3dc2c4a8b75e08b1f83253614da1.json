{"ast":null,"code":"import { giftService } from 'src/services';\nimport { flatten } from 'lodash';\nimport { put } from 'redux-saga/effects';\nimport { createSagas } from '@lib/redux';\nimport { getGift, getGiftSuccess, getGiftFail, moreGift, moreGiftFail, moreGiftSuccess } from './actions';\nconst giftSagas = [{\n  on: getGift,\n  *worker(data) {\n    try {\n      const resp = yield giftService.search(data.payload);\n      yield put(getGiftSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(getGiftFail(error));\n    }\n  }\n}, {\n  on: moreGift,\n  *worker(data) {\n    try {\n      const resp = yield giftService.search(data.payload);\n      yield put(moreGiftSuccess(resp.data));\n    } catch (e) {\n      const error = yield Promise.resolve(e);\n      yield put(moreGiftFail(error));\n    }\n  }\n}];\nexport default flatten([createSagas(giftSagas)]);","map":{"version":3,"names":["giftService","flatten","put","createSagas","getGift","getGiftSuccess","getGiftFail","moreGift","moreGiftFail","moreGiftSuccess","giftSagas","on","worker","data","resp","search","payload","e","error","Promise","resolve"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/gift/sagas.ts"],"sourcesContent":["import { giftService } from 'src/services';\r\nimport { flatten } from 'lodash';\r\nimport { put } from 'redux-saga/effects';\r\nimport { createSagas } from '@lib/redux';\r\nimport { IReduxAction } from 'src/interfaces';\r\nimport {\r\n  getGift, getGiftSuccess, getGiftFail,\r\n  moreGift, moreGiftFail, moreGiftSuccess\r\n} from './actions';\r\n\r\nconst giftSagas = [\r\n  {\r\n    on: getGift,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield giftService.search(data.payload);\r\n        yield put(getGiftSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield put(getGiftFail(error));\r\n      }\r\n    }\r\n  },\r\n  {\r\n    on: moreGift,\r\n    * worker(data: IReduxAction<any>) {\r\n      try {\r\n        const resp = yield giftService.search(data.payload);\r\n        yield put(moreGiftSuccess(resp.data));\r\n      } catch (e) {\r\n        const error = yield Promise.resolve(e);\r\n        yield put(moreGiftFail(error));\r\n      }\r\n    }\r\n  }\r\n\r\n];\r\n\r\nexport default flatten([createSagas(giftSagas)]);\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,OAAO,QAAQ,QAAQ;AAChC,SAASC,GAAG,QAAQ,oBAAoB;AACxC,SAASC,WAAW,QAAQ,YAAY;AAExC,SACEC,OAAO,EAAEC,cAAc,EAAEC,WAAW,EACpCC,QAAQ,EAAEC,YAAY,EAAEC,eAAe,QAClC,WAAW;AAElB,MAAMC,SAAS,GAAG,CAChB;EACEC,EAAE,EAAEP,OAAO;EACX,CAAEQ,MAAMA,CAACC,IAAuB,EAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMd,WAAW,CAACe,MAAM,CAACF,IAAI,CAACG,OAAO,CAAC;MACnD,MAAMd,GAAG,CAACG,cAAc,CAACS,IAAI,CAACD,IAAI,CAAC,CAAC;IACtC,CAAC,CAAC,OAAOI,CAAC,EAAE;MACV,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC;MACtC,MAAMf,GAAG,CAACI,WAAW,CAACY,KAAK,CAAC,CAAC;IAC/B;EACF;AACF,CAAC,EACD;EACEP,EAAE,EAAEJ,QAAQ;EACZ,CAAEK,MAAMA,CAACC,IAAuB,EAAE;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMd,WAAW,CAACe,MAAM,CAACF,IAAI,CAACG,OAAO,CAAC;MACnD,MAAMd,GAAG,CAACO,eAAe,CAACK,IAAI,CAACD,IAAI,CAAC,CAAC;IACvC,CAAC,CAAC,OAAOI,CAAC,EAAE;MACV,MAAMC,KAAK,GAAG,MAAMC,OAAO,CAACC,OAAO,CAACH,CAAC,CAAC;MACtC,MAAMf,GAAG,CAACM,YAAY,CAACU,KAAK,CAAC,CAAC;IAChC;EACF;AACF,CAAC,CAEF;AAED,eAAejB,OAAO,CAAC,CAACE,WAAW,CAACO,SAAS,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}