{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { updateModals } from './actions';\nconst initialState = {\n  isGoLiveModalOpen: false,\n  isLoginModalOpen: false,\n  isRegisterModalOpen: false,\n  isForgotPasswordModalOpen: false,\n  isPasswordResetModalOpen: false,\n  isDeleteAccountModalOpen: false,\n  isDonateRubiesModalOpen: false,\n  isBuyRubiesModalOpen: false,\n  isAddCommentModalOpen: false,\n  isPurchaseRubiesCompleteModalOpen: false,\n  isBuyRubiesWithDiamondsModalOpen: false,\n  isPayoutRequestModalOpen: false,\n  isLinkPaypalAccountModalOpen: false,\n  isChangePaypalAccountModalOpen: false,\n  isPaypalSuccessfulModalOpen: false,\n  isPaypalUnsuccessfulModal: false,\n  isNotEnoughRubysLiveModal: false,\n  confirmPrivateVideoModal: {\n    isOpen: false,\n    performerInfos: null,\n    performerTotalFollowers: 0\n  },\n  isWaitingForModelModal: false,\n  uploadPhotoModal: {\n    isOpen: false,\n    imageInfos: {\n      fileList: [],\n      fileIds: []\n    }\n  },\n  isPhotoCameraModal: false,\n  uploadVideoModal: {\n    isOpen: false,\n    videoPreviewUrl: null,\n    imageInfos: {\n      fileList: [],\n      fileIds: []\n    }\n  },\n  isVideoCameraModal: false,\n  isEndLiveStreamModal: false,\n  isReportLiveStreamModal: false,\n  isStreamMutedListModalOpen: false,\n  streamMutedList: [],\n  crossPromotionPurchaseModal: {\n    isOpen: false,\n    performerId: ''\n  },\n  crossPromotionPurchaseSuccessModal: {\n    isOpen: false,\n    performerId: ''\n  }\n};\nconst updateModalsReducers = [{\n  on: updateModals,\n  reducer(state, data) {\n    return _objectSpread(_objectSpread({}, state), data.payload);\n  }\n}];\nexport default merge({}, createReducers('modals', [updateModalsReducers], initialState));","map":{"version":3,"names":["merge","createReducers","updateModals","initialState","isGoLiveModalOpen","isLoginModalOpen","isRegisterModalOpen","isForgotPasswordModalOpen","isPasswordResetModalOpen","isDeleteAccountModalOpen","isDonateRubiesModalOpen","isBuyRubiesModalOpen","isAddCommentModalOpen","isPurchaseRubiesCompleteModalOpen","isBuyRubiesWithDiamondsModalOpen","isPayoutRequestModalOpen","isLinkPaypalAccountModalOpen","isChangePaypalAccountModalOpen","isPaypalSuccessfulModalOpen","isPaypalUnsuccessfulModal","isNotEnoughRubysLiveModal","confirmPrivateVideoModal","isOpen","performerInfos","performerTotalFollowers","isWaitingForModelModal","uploadPhotoModal","imageInfos","fileList","fileIds","isPhotoCameraModal","uploadVideoModal","videoPreviewUrl","isVideoCameraModal","isEndLiveStreamModal","isReportLiveStreamModal","isStreamMutedListModalOpen","streamMutedList","crossPromotionPurchaseModal","performerId","crossPromotionPurchaseSuccessModal","updateModalsReducers","on","reducer","state","data","_objectSpread","payload"],"sources":["C:/Users/roman/Pictures/Case/row/src/redux/modals/reducers.ts"],"sourcesContent":["import { merge } from 'lodash';\r\nimport { createReducers } from '@lib/redux';\r\nimport { updateModals } from './actions';\r\nimport { IModals } from '@interfaces/modals';\r\n\r\nconst initialState: IModals = {\r\n  isGoLiveModalOpen: false,\r\n  isLoginModalOpen: false,\r\n  isRegisterModalOpen: false,\r\n  isForgotPasswordModalOpen: false,\r\n  isPasswordResetModalOpen: false,\r\n  isDeleteAccountModalOpen: false,\r\n  isDonateRubiesModalOpen: false,\r\n  isBuyRubiesModalOpen: false,\r\n  isAddCommentModalOpen: false,\r\n  isPurchaseRubiesCompleteModalOpen: false,\r\n  isBuyRubiesWithDiamondsModalOpen: false,\r\n  isPayoutRequestModalOpen: false,\r\n  isLinkPaypalAccountModalOpen: false,\r\n  isChangePaypalAccountModalOpen: false,\r\n  isPaypalSuccessfulModalOpen: false,\r\n  isPaypalUnsuccessfulModal: false,\r\n  isNotEnoughRubysLiveModal: false,\r\n  confirmPrivateVideoModal: {\r\n    isOpen: false,\r\n    performerInfos: null,\r\n    performerTotalFollowers: 0\r\n  },\r\n  isWaitingForModelModal: false,\r\n  uploadPhotoModal: {\r\n    isOpen: false,\r\n    imageInfos: {\r\n      fileList: [],\r\n      fileIds: []\r\n    }\r\n  },\r\n  isPhotoCameraModal: false,\r\n  uploadVideoModal: {\r\n    isOpen: false,\r\n    videoPreviewUrl: null,\r\n    imageInfos: {\r\n      fileList: [],\r\n      fileIds: []\r\n    }\r\n  },\r\n  isVideoCameraModal: false,\r\n  isEndLiveStreamModal: false,\r\n  isReportLiveStreamModal: false,\r\n  isStreamMutedListModalOpen: false,\r\n  streamMutedList: [],\r\n  crossPromotionPurchaseModal: {\r\n    isOpen: false,\r\n    performerId: ''\r\n  },\r\n  crossPromotionPurchaseSuccessModal: {\r\n    isOpen: false,\r\n    performerId: ''\r\n  }\r\n};\r\n\r\nconst updateModalsReducers = [\r\n  {\r\n    on: updateModals,\r\n    reducer(state: IModals, data: any) {\r\n      return {\r\n        ...state,\r\n        ...data.payload\r\n      };\r\n    }\r\n  }\r\n];\r\n\r\nexport default merge({}, createReducers('modals', [updateModalsReducers], initialState));\r\n"],"mappings":";;;;;AAAA,SAASA,KAAK,QAAQ,QAAQ;AAC9B,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,YAAY,QAAQ,WAAW;AAGxC,MAAMC,YAAqB,GAAG;EAC5BC,iBAAiB,EAAE,KAAK;EACxBC,gBAAgB,EAAE,KAAK;EACvBC,mBAAmB,EAAE,KAAK;EAC1BC,yBAAyB,EAAE,KAAK;EAChCC,wBAAwB,EAAE,KAAK;EAC/BC,wBAAwB,EAAE,KAAK;EAC/BC,uBAAuB,EAAE,KAAK;EAC9BC,oBAAoB,EAAE,KAAK;EAC3BC,qBAAqB,EAAE,KAAK;EAC5BC,iCAAiC,EAAE,KAAK;EACxCC,gCAAgC,EAAE,KAAK;EACvCC,wBAAwB,EAAE,KAAK;EAC/BC,4BAA4B,EAAE,KAAK;EACnCC,8BAA8B,EAAE,KAAK;EACrCC,2BAA2B,EAAE,KAAK;EAClCC,yBAAyB,EAAE,KAAK;EAChCC,yBAAyB,EAAE,KAAK;EAChCC,wBAAwB,EAAE;IACxBC,MAAM,EAAE,KAAK;IACbC,cAAc,EAAE,IAAI;IACpBC,uBAAuB,EAAE;EAC3B,CAAC;EACDC,sBAAsB,EAAE,KAAK;EAC7BC,gBAAgB,EAAE;IAChBJ,MAAM,EAAE,KAAK;IACbK,UAAU,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,kBAAkB,EAAE,KAAK;EACzBC,gBAAgB,EAAE;IAChBT,MAAM,EAAE,KAAK;IACbU,eAAe,EAAE,IAAI;IACrBL,UAAU,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDI,kBAAkB,EAAE,KAAK;EACzBC,oBAAoB,EAAE,KAAK;EAC3BC,uBAAuB,EAAE,KAAK;EAC9BC,0BAA0B,EAAE,KAAK;EACjCC,eAAe,EAAE,EAAE;EACnBC,2BAA2B,EAAE;IAC3BhB,MAAM,EAAE,KAAK;IACbiB,WAAW,EAAE;EACf,CAAC;EACDC,kCAAkC,EAAE;IAClClB,MAAM,EAAE,KAAK;IACbiB,WAAW,EAAE;EACf;AACF,CAAC;AAED,MAAME,oBAAoB,GAAG,CAC3B;EACEC,EAAE,EAAExC,YAAY;EAChByC,OAAOA,CAACC,KAAc,EAAEC,IAAS,EAAE;IACjC,OAAAC,aAAA,CAAAA,aAAA,KACKF,KAAK,GACLC,IAAI,CAACE,OAAO;EAEnB;AACF,CAAC,CACF;AAED,eAAe/C,KAAK,CAAC,CAAC,CAAC,EAAEC,cAAc,CAAC,QAAQ,EAAE,CAACwC,oBAAoB,CAAC,EAAEtC,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}