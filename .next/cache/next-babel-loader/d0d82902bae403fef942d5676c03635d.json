{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { updateSettings } from './actions';\n\n// TODO -\nvar initialState = {\n  requireEmailVerification: false,\n  googleReCaptchaSiteKey: '',\n  enableGoogleReCaptcha: false,\n  googleClientId: '131651031881-pljcapjv7kuamrtbicm77lurk75fvoe6.apps.googleusercontent.com',\n  twitterClientId: '',\n  tokenConversionRate: 1,\n  stripePublishableKey: '',\n  stripeEnable: false,\n  ccbillEnable: false,\n  bitpayEnable: false,\n  paypalEnable: false,\n  totalFollowerForPrivateChat: 0,\n  totalFollowerForLive: 0,\n  crossPromotionDescription: {},\n  salesRubyHeaderPage: '',\n  exchangeRateWebValue: 0.01\n};\nvar settingReducers = [{\n  on: updateSettings,\n  reducer: function reducer(state, data) {\n    return _objectSpread({}, data.payload);\n  }\n}];\nexport default merge({}, createReducers('settings', [settingReducers], initialState));","map":{"version":3,"names":["merge","createReducers","updateSettings","initialState","requireEmailVerification","googleReCaptchaSiteKey","enableGoogleReCaptcha","googleClientId","twitterClientId","tokenConversionRate","stripePublishableKey","stripeEnable","ccbillEnable","bitpayEnable","paypalEnable","totalFollowerForPrivateChat","totalFollowerForLive","crossPromotionDescription","salesRubyHeaderPage","exchangeRateWebValue","settingReducers","on","reducer","state","data","_objectSpread","payload"],"sources":["C:/Users/Rokibul/Documents/case/src/redux/settings/reducers.ts"],"sourcesContent":["import { merge } from 'lodash';\nimport { createReducers } from '@lib/redux';\nimport { updateSettings } from './actions';\n\n// TODO -\nconst initialState = {\n  requireEmailVerification: false,\n  googleReCaptchaSiteKey: '',\n  enableGoogleReCaptcha: false,\n  googleClientId: '131651031881-pljcapjv7kuamrtbicm77lurk75fvoe6.apps.googleusercontent.com',\n  twitterClientId: '',\n  tokenConversionRate: 1,\n  stripePublishableKey: '',\n  stripeEnable: false,\n  ccbillEnable: false,\n  bitpayEnable: false,\n  paypalEnable: false,\n  totalFollowerForPrivateChat: 0,\n  totalFollowerForLive: 0,\n  crossPromotionDescription: {},\n  salesRubyHeaderPage: '',\n  exchangeRateWebValue: 0.01\n};\n\nconst settingReducers = [\n  {\n    on: updateSettings,\n    reducer(state: any, data: any) {\n      return {\n        ...data.payload\n      };\n    }\n  }\n];\n\nexport default merge({}, createReducers('settings', [settingReducers], initialState));\n"],"mappings":";;;AAAA,SAASA,KAAK,QAAQ,QAAQ;AAC9B,SAASC,cAAc,QAAQ,YAAY;AAC3C,SAASC,cAAc,QAAQ,WAAW;;AAE1C;AACA,IAAMC,YAAY,GAAG;EACnBC,wBAAwB,EAAE,KAAK;EAC/BC,sBAAsB,EAAE,EAAE;EAC1BC,qBAAqB,EAAE,KAAK;EAC5BC,cAAc,EAAE,0EAA0E;EAC1FC,eAAe,EAAE,EAAE;EACnBC,mBAAmB,EAAE,CAAC;EACtBC,oBAAoB,EAAE,EAAE;EACxBC,YAAY,EAAE,KAAK;EACnBC,YAAY,EAAE,KAAK;EACnBC,YAAY,EAAE,KAAK;EACnBC,YAAY,EAAE,KAAK;EACnBC,2BAA2B,EAAE,CAAC;EAC9BC,oBAAoB,EAAE,CAAC;EACvBC,yBAAyB,EAAE,CAAC,CAAC;EAC7BC,mBAAmB,EAAE,EAAE;EACvBC,oBAAoB,EAAE;AACxB,CAAC;AAED,IAAMC,eAAe,GAAG,CACtB;EACEC,EAAE,EAAEnB,cAAc;EAClBoB,OAAO,WAAPA,OAAOA,CAACC,KAAU,EAAEC,IAAS,EAAE;IAC7B,OAAAC,aAAA,KACKD,IAAI,CAACE,OAAO;EAEnB;AACF,CAAC,CACF;AAED,eAAe1B,KAAK,CAAC,CAAC,CAAC,EAAEC,cAAc,CAAC,UAAU,EAAE,CAACmB,eAAe,CAAC,EAAEjB,YAAY,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}