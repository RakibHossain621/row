{"ast":null,"code":"/* eslint-disable func-names */\n/* eslint-disable prefer-spread */\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */\n\nexport const warning = function (...args) {\n  // debug on development and staging.\n  if (false) return;\n\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error.apply(console, args);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n\n    throw new Error(args.join(' '));\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n};\nexport const debug = function (...args) {\n  // debug on development and staging.\n  if (false) return;\n\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\n    console.debug.apply(console, args);\n  }\n};","map":{"version":3,"names":["warning","args","console","error","apply","Error","join","e","debug"],"sources":["C:/Users/roman/Pictures/Case/row/src/socket/utils.ts"],"sourcesContent":["/* eslint-disable func-names */\r\n/* eslint-disable prefer-spread */\r\n/**\r\n * Prints a warning in the console if it exists.\r\n *\r\n * @param {String} message The warning message.\r\n * @returns {void}\r\n */\r\n\r\nexport const warning = function (...args) {\r\n  // debug on development and staging.\r\n  if (process.env.NODE_ENV === 'production') return;\r\n\r\n  /* eslint-disable no-console */\r\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\r\n    console.error.apply(console, args);\r\n  }\r\n  /* eslint-enable no-console */\r\n  try {\r\n    // This error was thrown as a convenience so that if you enable\r\n    // \"break on all exceptions\" in your console,\r\n    // it would pause the execution at this line.\r\n\r\n    throw new Error(args.join(' '));\r\n    /* eslint-disable no-empty */\r\n  } catch (e) {}\r\n  /* eslint-enable no-empty */\r\n};\r\n\r\nexport const debug = function (...args) {\r\n  // debug on development and staging.\r\n  if (process.env.NODE_ENV === 'production') return;\r\n\r\n  /* eslint-disable no-console */\r\n  if (typeof console !== 'undefined' && typeof console.debug === 'function') {\r\n    console.debug.apply(console, args);\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMA,OAAO,GAAG,SAAAA,CAAU,GAAGC,IAAI,EAAE;EACxC;EACA,WAA2C;;EAE3C;EACA,IAAI,OAAOC,OAAO,KAAK,WAAW,IAAI,OAAOA,OAAO,CAACC,KAAK,KAAK,UAAU,EAAE;IACzED,OAAO,CAACC,KAAK,CAACC,KAAK,CAACF,OAAO,EAAED,IAAI,CAAC;EACpC;EACA;EACA,IAAI;IACF;IACA;IACA;;IAEA,MAAM,IAAII,KAAK,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE,CAAC;EACb;AACF,CAAC;AAED,OAAO,MAAMC,KAAK,GAAG,SAAAA,CAAU,GAAGP,IAAI,EAAE;EACtC;EACA,WAA2C;;EAE3C;EACA,IAAI,OAAOC,OAAO,KAAK,WAAW,IAAI,OAAOA,OAAO,CAACM,KAAK,KAAK,UAAU,EAAE;IACzEN,OAAO,CAACM,KAAK,CAACJ,KAAK,CAACF,OAAO,EAAED,IAAI,CAAC;EACpC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}