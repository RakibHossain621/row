{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rokibul\\\\Documents\\\\case\\\\src\\\\components\\\\performer\\\\paypalForm.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\n/* eslint-disable react/require-default-props */\nimport { PureComponent } from 'react';\nimport { Form, Button, Input, Row, Col } from 'antd';\nimport { ROLE_PERMISSIONS } from 'src/constants';\nimport './performer.less';\nconst layout = {\n  labelCol: {\n    span: 24\n  },\n  wrapperCol: {\n    span: 24\n  }\n};\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  }\n};\nexport class PerformerPaypalForm extends PureComponent {\n  render() {\n    var _user$paypalSetting;\n    const {\n      onFinish,\n      user,\n      updating\n    } = this.props;\n    return __jsx(Form, _extends({}, layout, {\n      name: \"nest-messages\",\n      onFinish: onFinish.bind(this),\n      validateMessages: validateMessages,\n      initialValues: (user === null || user === void 0 ? void 0 : (_user$paypalSetting = user.paypalSetting) === null || _user$paypalSetting === void 0 ? void 0 : _user$paypalSetting.value) || {\n        email: '',\n        phoneNumber: ''\n      },\n      labelAlign: \"left\",\n      className: \"paypal-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, __jsx(Col, {\n      lg: 12,\n      xs: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, __jsx(Form.Item, {\n      name: \"email\",\n      label: \"Receiving Paypal account\"\n      // help=\"You must upgrade to Business account to receive the payout from Admin\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, __jsx(Input, {\n      disabled: user.roles.includes(ROLE_PERMISSIONS.ROLE_MANAGED_ACCOUNT),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })))), __jsx(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      className: \"secondary\",\n      htmlType: \"submit\",\n      disabled: updating,\n      loading: updating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Save\")));\n  }\n}","map":{"version":3,"names":["PureComponent","Form","Button","Input","Row","Col","ROLE_PERMISSIONS","layout","labelCol","span","wrapperCol","validateMessages","required","types","email","number","PerformerPaypalForm","render","_user$paypalSetting","onFinish","user","updating","props","__jsx","_extends","name","bind","initialValues","paypalSetting","value","phoneNumber","labelAlign","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","lg","xs","Item","label","disabled","roles","includes","ROLE_MANAGED_ACCOUNT","htmlType","loading"],"sources":["C:/Users/Rokibul/Documents/case/src/components/performer/paypalForm.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props */\nimport { PureComponent } from 'react';\nimport {\n  Form, Button, Input, Row, Col\n} from 'antd';\nimport { IPerformer } from 'src/interfaces';\nimport { ROLE_PERMISSIONS } from 'src/constants';\nimport './performer.less';\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 }\n};\n\nconst validateMessages = {\n  required: 'This field is required!',\n  types: {\n    email: 'Not a validate email!',\n    number: 'Not a validate number!'\n  }\n};\n\ninterface IProps {\n  onFinish: Function;\n  user: IPerformer;\n  updating?: boolean;\n}\n\nexport class PerformerPaypalForm extends PureComponent<IProps> {\n  render() {\n    const { onFinish, user, updating } = this.props;\n    return (\n      <Form\n        {...layout}\n        name=\"nest-messages\"\n        onFinish={onFinish.bind(this)}\n        validateMessages={validateMessages}\n        initialValues={user?.paypalSetting?.value || {\n          email: '',\n          phoneNumber: ''\n        }}\n        labelAlign=\"left\"\n        className=\"paypal-form\"\n      >\n        <Row>\n          <Col lg={12} xs={24}>\n            <Form.Item\n              name=\"email\"\n              label=\"Receiving Paypal account\"\n              // help=\"You must upgrade to Business account to receive the payout from Admin\"\n            >\n              <Input disabled={user.roles.includes(ROLE_PERMISSIONS.ROLE_MANAGED_ACCOUNT)} />\n            </Form.Item>\n          </Col>\n          {/* <Col lg={12} xs={24}>\n            <Form.Item\n              name=\"phoneNumber\"\n              label=\"Paypal Phone Number\"\n              validateTrigger={['onChange', 'onBlur']}\n              rules={[{ required: true },\n                {\n                  pattern: new RegExp(/^\\s*(?:\\+?(\\d{1,3}))?[-. (]*(\\d{3})[-. )]*(\\d{3})[-. ]*(\\d{4})(?: *x(\\d+))?\\s*$/u),\n                  message: 'Please enter valid phone number format eg +86 800 555 1234'\n                }]}\n            >\n              <Input />\n            </Form.Item>\n          </Col> */}\n        </Row>\n        <Form.Item>\n          <Button className=\"secondary\" htmlType=\"submit\" disabled={updating} loading={updating}>\n            Save\n          </Button>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n"],"mappings":";;;;AAAA;AACA,SAASA,aAAa,QAAQ,OAAO;AACrC,SACEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,QACxB,MAAM;AAEb,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAO,kBAAkB;AAEzB,MAAMC,MAAM,GAAG;EACbC,QAAQ,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC;EACtBC,UAAU,EAAE;IAAED,IAAI,EAAE;EAAG;AACzB,CAAC;AAED,MAAME,gBAAgB,GAAG;EACvBC,QAAQ,EAAE,yBAAyB;EACnCC,KAAK,EAAE;IACLC,KAAK,EAAE,uBAAuB;IAC9BC,MAAM,EAAE;EACV;AACF,CAAC;AAQD,OAAO,MAAMC,mBAAmB,SAAShB,aAAa,CAAS;EAC7DiB,MAAMA,CAAA,EAAG;IAAA,IAAAC,mBAAA;IACP,MAAM;MAAEC,QAAQ;MAAEC,IAAI;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACC,KAAK;IAC/C,OACEC,KAAA,CAACtB,IAAI,EAAAuB,QAAA,KACCjB,MAAM;MACVkB,IAAI,EAAC,eAAe;MACpBN,QAAQ,EAAEA,QAAQ,CAACO,IAAI,CAAC,IAAI,CAAE;MAC9Bf,gBAAgB,EAAEA,gBAAiB;MACnCgB,aAAa,EAAE,CAAAP,IAAI,aAAJA,IAAI,wBAAAF,mBAAA,GAAJE,IAAI,CAAEQ,aAAa,cAAAV,mBAAA,uBAAnBA,mBAAA,CAAqBW,KAAK,KAAI;QAC3Cf,KAAK,EAAE,EAAE;QACTgB,WAAW,EAAE;MACf,CAAE;MACFC,UAAU,EAAC,MAAM;MACjBC,SAAS,EAAC,aAAa;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,IAEvBf,KAAA,CAACnB,GAAG;MAAA6B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACFf,KAAA,CAAClB,GAAG;MAACkC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,EAAG;MAAAP,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAClBf,KAAA,CAACtB,IAAI,CAACwC,IAAI;MACRhB,IAAI,EAAC,OAAO;MACZiB,KAAK,EAAC;MACN;MAAA;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAEAf,KAAA,CAACpB,KAAK;MAACwC,QAAQ,EAAEvB,IAAI,CAACwB,KAAK,CAACC,QAAQ,CAACvC,gBAAgB,CAACwC,oBAAoB,CAAE;MAAAb,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACrE,CACR,CAeF,CAAC,EACNf,KAAA,CAACtB,IAAI,CAACwC,IAAI;MAAAR,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACRf,KAAA,CAACrB,MAAM;MAAC8B,SAAS,EAAC,WAAW;MAACe,QAAQ,EAAC,QAAQ;MAACJ,QAAQ,EAAEtB,QAAS;MAAC2B,OAAO,EAAE3B,QAAS;MAAAY,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,MAE/E,CACC,CACP,CAAC;EAEX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module"}