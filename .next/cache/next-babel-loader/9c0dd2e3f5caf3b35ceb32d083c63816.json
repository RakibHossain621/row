{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rokibul\\\\Documents\\\\case\\\\pages\\\\_app.tsx\";\nvar __jsx = React.createElement;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport BaseLayout from '@layouts/base-layout';\nimport { authService, userService, settingService } from '@services/index';\nimport Router from 'next/router';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { Socket } from 'src/socket';\nimport Head from 'next/head';\nimport { SETTING_KEYS } from 'src/constants';\nimport { pick } from 'lodash';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { updateSettings } from '@redux/settings/actions';\nimport '../style/index.less';\nimport { setGlobalConfig } from '@services/config';\nimport { notificationService } from \"@services/notification.service\";\nimport 'tailwindcss/tailwind.css';\nimport '../style/global.css';\nimport { setUnreadsNotification } from '@redux/notification/actions';\nfunction redirectLogin(ctx) {\n  if (false) {\n    authService.removeToken();\n    Router.push('/');\n    return;\n  }\n\n  // fix for production build\n  ctx.res.clearCookie && ctx.res.clearCookie('token');\n  ctx.res.clearCookie && ctx.res.clearCookie('role');\n  ctx.res.writeHead && ctx.res.writeHead(302, {\n    Location: '/'\n  });\n  ctx.res.end && ctx.res.end();\n}\nasync function auth(ctx, noredirect, onlyPerformer) {\n  try {\n    const {\n      store\n    } = ctx;\n    const state = store.getState();\n    const {\n      token\n    } = nextCookie(ctx);\n    if (state.auth && state.auth.loggedIn) {\n      return;\n    }\n    if (token) {\n      authService.setToken(token);\n      const user = await userService.me({\n        Authorization: token\n      });\n      if (!user.data || !user.data._id) {\n        redirectLogin(ctx);\n        return;\n      }\n      if (!user.data.isPerformer && onlyPerformer && !noredirect) {\n        redirectLogin(ctx);\n        return;\n      }\n      store.dispatch(loginSuccess());\n      store.dispatch(updateCurrentUser(user.data));\n      return;\n    }\n    !noredirect && redirectLogin(ctx);\n  } catch (e) {\n    redirectLogin(ctx);\n  }\n}\nasync function updateSettingsStore(ctx, settings) {\n  const {\n    store\n  } = ctx;\n  store.dispatch(updateUIValue({\n    logo: settings.logoUrl || '',\n    siteName: settings.siteName || '',\n    favicon: settings.favicon || '',\n    loginPlaceholderImage: settings.loginPlaceholderImage || '',\n    menus: settings.menus || [],\n    footerContent: settings.footerContent || '',\n    countries: settings.countries || [],\n    userBenefit: settings.userBenefit || '',\n    modelBenefit: settings.modelBenefit || ''\n  }));\n  store.dispatch(updateLiveStreamSettings(pick(settings, [SETTING_KEYS.VIEWER_URL, SETTING_KEYS.PUBLISHER_URL, SETTING_KEYS.SUBSCRIBER_URL, SETTING_KEYS.OPTION_FOR_BROADCAST, SETTING_KEYS.OPTION_FOR_PRIVATE, SETTING_KEYS.SECURE_OPTION, SETTING_KEYS.ANT_MEDIA_APPNAME, SETTING_KEYS.AGORA_APPID, SETTING_KEYS.AGORA_ENABLE])));\n  store.dispatch(updateSettings(pick(settings, [SETTING_KEYS.REQUIRE_EMAIL_VERIFICATION, SETTING_KEYS.TOKEN_CONVERSION_RATE, SETTING_KEYS.STRIPE_PUBLISHABLE_KEY, SETTING_KEYS.STRIPE_ENABLE, SETTING_KEYS.PAYPAL_ENABLE, SETTING_KEYS.GOOGLE_RECAPTCHA_SITE_KEY, SETTING_KEYS.ENABLE_GOOGLE_RECAPTCHA, SETTING_KEYS.GOOGLE_CLIENT_ID, SETTING_KEYS.TWITTER_CLIENT_ID, SETTING_KEYS.CCBILL_ENABLE, SETTING_KEYS.META_KEYWORDS, SETTING_KEYS.META_DESCRIPTION, SETTING_KEYS.TOTAL_FOLLOWER_FOR_LIVE, SETTING_KEYS.TOTAL_FOLLOWER_FOR_PRIVATE_CHAT, SETTING_KEYS.CROSS_PROMOTION_DESCRIPTIONS, SETTING_KEYS.EXCHANGE_RATE_WEB_VALUE, SETTING_KEYS.SALES_RUBY_HEADER_PAGE])));\n}\nconst publicConfig = {};\nclass Application extends App {\n  // TODO - consider if we need to use get static props in children component instead?\n  // or check in render?\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // load configuration from ENV and put to config\n    if (!false) {\n      // eslint-disable-next-line global-require\n      const dotenv = require('dotenv');\n      const myEnv = dotenv.config().parsed;\n\n      // publish to server config with app\n      setGlobalConfig(myEnv);\n\n      // load public config and api-endpoint?\n      Object.keys(myEnv).forEach(key => {\n        if (key.indexOf('NEXT_PUBLIC_') === 0) {\n          publicConfig[key] = myEnv[key];\n        }\n      });\n    }\n\n    // won't check auth for un-authenticated page such as login, register\n    // use static field in the component\n    const {\n      noredirect,\n      onlyPerformer,\n      authenticate\n    } = Component;\n    if (authenticate !== false) {\n      await auth(ctx, noredirect, onlyPerformer);\n    }\n    const {\n      token\n    } = nextCookie(ctx);\n    ctx.token = token || '';\n    // server side to load settings, once time only\n    let settings = {};\n    if (!false) {\n      const [setting] = await Promise.all([settingService.all('all', true)]);\n      settings = _objectSpread({}, setting.data);\n      await updateSettingsStore(ctx, settings);\n    }\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({\n        ctx\n      });\n    }\n    return {\n      settings,\n      pageProps,\n      layout: Component.layout,\n      config: publicConfig\n    };\n  }\n  constructor(props) {\n    super(props);\n    _defineProperty(this, \"handleRouteChange\", () => {\n      this.checkNotifications();\n    });\n    _defineProperty(this, \"checkNotifications\", async () => {\n      var _this$props$store$get, _this$props$store$get2, _this$props$store$get3;\n      const user = (_this$props$store$get = this.props.store.getState()) === null || _this$props$store$get === void 0 ? void 0 : (_this$props$store$get2 = _this$props$store$get.user) === null || _this$props$store$get2 === void 0 ? void 0 : (_this$props$store$get3 = _this$props$store$get2.current) === null || _this$props$store$get3 === void 0 ? void 0 : _this$props$store$get3._id;\n      if (user) {\n        const {\n          data\n        } = await notificationService.countUnread();\n        this.props.store.dispatch(setUnreadsNotification(data > 0 ? true : false));\n      }\n    });\n    setGlobalConfig(this.props.config);\n  }\n  componentDidMount() {\n    this.checkNotifications();\n    Router.events.on(\"routeChangeComplete\", this.handleRouteChange);\n  }\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeComplete\", this.handleRouteChange);\n  }\n  render() {\n    const {\n      Component,\n      pageProps,\n      store,\n      settings\n    } = this.props;\n    const {\n      layout\n    } = Component;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }\n    }, settings === null || settings === void 0 ? void 0 : settings.siteName), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1, maximum-scale=1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }\n    }), settings && settings.gaCode && [__jsx(\"script\", {\n      async: true,\n      src: `https://www.googletagmanager.com/gtag/js?id=${settings.gaCode}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }), __jsx(\"script\", {\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML: {\n        __html: `\n                 window.dataLayer = window.dataLayer || [];\n                 function gtag(){dataLayer.push(arguments);}\n                 gtag('js', new Date());\n                 gtag('config', '${settings.gaCode}');\n             `\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    })], settings && settings.headerScript &&\n    // eslint-disable-next-line react/no-danger\n    __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: settings.headerScript\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }\n    })), __jsx(Socket, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }\n    }, __jsx(BaseLayout, {\n      layout: layout,\n      maintenance: settings.maintenanceMode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    })))), settings && settings.afterBodyScript &&\n    // eslint-disable-next-line react/no-danger\n    __jsx(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: settings.afterBodyScript\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }\n    }));\n  }\n}\nexport default withReduxSaga(Application);","map":{"version":3,"names":["App","React","Provider","nextCookie","withReduxSaga","BaseLayout","authService","userService","settingService","Router","loginSuccess","updateCurrentUser","updateUIValue","Socket","Head","SETTING_KEYS","pick","updateLiveStreamSettings","updateSettings","setGlobalConfig","notificationService","setUnreadsNotification","redirectLogin","ctx","removeToken","push","res","clearCookie","writeHead","Location","end","auth","noredirect","onlyPerformer","store","state","getState","token","loggedIn","setToken","user","me","Authorization","data","_id","isPerformer","dispatch","e","updateSettingsStore","settings","logo","logoUrl","siteName","favicon","loginPlaceholderImage","menus","footerContent","countries","userBenefit","modelBenefit","VIEWER_URL","PUBLISHER_URL","SUBSCRIBER_URL","OPTION_FOR_BROADCAST","OPTION_FOR_PRIVATE","SECURE_OPTION","ANT_MEDIA_APPNAME","AGORA_APPID","AGORA_ENABLE","REQUIRE_EMAIL_VERIFICATION","TOKEN_CONVERSION_RATE","STRIPE_PUBLISHABLE_KEY","STRIPE_ENABLE","PAYPAL_ENABLE","GOOGLE_RECAPTCHA_SITE_KEY","ENABLE_GOOGLE_RECAPTCHA","GOOGLE_CLIENT_ID","TWITTER_CLIENT_ID","CCBILL_ENABLE","META_KEYWORDS","META_DESCRIPTION","TOTAL_FOLLOWER_FOR_LIVE","TOTAL_FOLLOWER_FOR_PRIVATE_CHAT","CROSS_PROMOTION_DESCRIPTIONS","EXCHANGE_RATE_WEB_VALUE","SALES_RUBY_HEADER_PAGE","publicConfig","Application","getInitialProps","Component","dotenv","require","myEnv","config","parsed","Object","keys","forEach","key","indexOf","authenticate","setting","Promise","all","_objectSpread","pageProps","layout","constructor","props","_defineProperty","checkNotifications","_this$props$store$get","_this$props$store$get2","_this$props$store$get3","current","countUnread","componentDidMount","events","on","handleRouteChange","componentWillUnmount","off","render","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","content","gaCode","async","src","dangerouslySetInnerHTML","__html","headerScript","maintenance","maintenanceMode","_extends","afterBodyScript"],"sources":["C:/Users/Rokibul/Documents/case/pages/_app.tsx"],"sourcesContent":["import App from 'next/app';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport nextCookie from 'next-cookies';\nimport withReduxSaga from '@redux/withReduxSaga';\nimport { Store } from 'redux';\nimport BaseLayout from '@layouts/base-layout';\nimport {\n  authService, userService, settingService\n} from '@services/index';\nimport Router from 'next/router';\nimport { NextPageContext } from 'next';\nimport { loginSuccess } from '@redux/auth/actions';\nimport { updateCurrentUser } from '@redux/user/actions';\nimport { updateUIValue } from '@redux/ui/actions';\nimport { Socket } from 'src/socket';\nimport Head from 'next/head';\nimport { SETTING_KEYS } from 'src/constants';\nimport { pick } from 'lodash';\nimport { updateLiveStreamSettings } from '@redux/streaming/actions';\nimport { updateSettings } from '@redux/settings/actions';\nimport '../style/index.less';\nimport { setGlobalConfig } from '@services/config';\nimport { notificationService } from \"@services/notification.service\"\n\nimport 'tailwindcss/tailwind.css'\nimport '../style/global.css'\nimport { setUnreadsNotification } from '@redux/notification/actions';\n\ndeclare global {\n  interface Window {\n    ReactSocketIO: any;\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n  }\n}\n\ndeclare global {\n  interface Window {\n    ReactSocketIO: any;\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n  }\n}\n\nfunction redirectLogin(ctx: any) {\n  if (process.browser) {\n    authService.removeToken();\n    Router.push('/');\n    return;\n  }\n\n  // fix for production build\n  ctx.res.clearCookie && ctx.res.clearCookie('token');\n  ctx.res.clearCookie && ctx.res.clearCookie('role');\n  ctx.res.writeHead && ctx.res.writeHead(302, { Location: '/' });\n  ctx.res.end && ctx.res.end();\n}\n\nasync function auth(\n  ctx: NextPageContext,\n  noredirect: boolean,\n  onlyPerformer: boolean\n) {\n  try {\n    const { store } = ctx;\n    const state = store.getState();\n    const { token } = nextCookie(ctx);\n    if (state.auth && state.auth.loggedIn) {\n      return;\n    }\n    if (token) {\n      authService.setToken(token);\n      const user = await userService.me({\n        Authorization: token\n      });\n      if (!user.data || !user.data._id) {\n        redirectLogin(ctx);\n        return;\n      }\n      if (!user.data.isPerformer && onlyPerformer && !noredirect) {\n        redirectLogin(ctx);\n        return;\n      }\n      store.dispatch(loginSuccess());\n      store.dispatch(updateCurrentUser(user.data));\n      return;\n    }\n\n    !noredirect && redirectLogin(ctx);\n  } catch (e) {\n    redirectLogin(ctx);\n  }\n}\n\nasync function updateSettingsStore(ctx: NextPageContext, settings) {\n  const { store } = ctx;\n  store.dispatch(\n    updateUIValue({\n      logo: settings.logoUrl || '',\n      siteName: settings.siteName || '',\n      favicon: settings.favicon || '',\n      loginPlaceholderImage: settings.loginPlaceholderImage || '',\n      menus: settings.menus || [],\n      footerContent: settings.footerContent || '',\n      countries: settings.countries || [],\n      userBenefit: settings.userBenefit || '',\n      modelBenefit: settings.modelBenefit || ''\n    })\n  );\n  store.dispatch(\n    updateLiveStreamSettings(\n      pick(settings, [\n        SETTING_KEYS.VIEWER_URL,\n        SETTING_KEYS.PUBLISHER_URL,\n        SETTING_KEYS.SUBSCRIBER_URL,\n        SETTING_KEYS.OPTION_FOR_BROADCAST,\n        SETTING_KEYS.OPTION_FOR_PRIVATE,\n        SETTING_KEYS.SECURE_OPTION,\n        SETTING_KEYS.ANT_MEDIA_APPNAME,\n        SETTING_KEYS.AGORA_APPID,\n        SETTING_KEYS.AGORA_ENABLE\n      ])\n    )\n  );\n\n  store.dispatch(\n    updateSettings(\n      pick(settings, [\n        SETTING_KEYS.REQUIRE_EMAIL_VERIFICATION,\n        SETTING_KEYS.TOKEN_CONVERSION_RATE,\n        SETTING_KEYS.STRIPE_PUBLISHABLE_KEY,\n        SETTING_KEYS.STRIPE_ENABLE,\n        SETTING_KEYS.PAYPAL_ENABLE,\n        SETTING_KEYS.GOOGLE_RECAPTCHA_SITE_KEY,\n        SETTING_KEYS.ENABLE_GOOGLE_RECAPTCHA,\n        SETTING_KEYS.GOOGLE_CLIENT_ID,\n        SETTING_KEYS.TWITTER_CLIENT_ID,\n        SETTING_KEYS.CCBILL_ENABLE,\n        SETTING_KEYS.META_KEYWORDS,\n        SETTING_KEYS.META_DESCRIPTION,\n        SETTING_KEYS.TOTAL_FOLLOWER_FOR_LIVE,\n        SETTING_KEYS.TOTAL_FOLLOWER_FOR_PRIVATE_CHAT,\n        SETTING_KEYS.CROSS_PROMOTION_DESCRIPTIONS,\n        SETTING_KEYS.EXCHANGE_RATE_WEB_VALUE,\n        SETTING_KEYS.SALES_RUBY_HEADER_PAGE\n      ])\n    )\n  );\n}\n\ninterface AppComponent extends NextPageContext {\n  layout: string;\n}\n\ninterface IApp {\n  store: Store;\n  layout: string;\n  Component: AppComponent;\n  settings: any;\n  config: any;\n}\n\nconst publicConfig = {} as any;\nclass Application extends App<IApp> {\n  // TODO - consider if we need to use get static props in children component instead?\n  // or check in render?\n  static async getInitialProps({ Component, ctx }) {\n    // load configuration from ENV and put to config\n    if (!process.browser) {\n      // eslint-disable-next-line global-require\n      const dotenv = require('dotenv');\n      const myEnv = dotenv.config().parsed;\n\n      // publish to server config with app\n      setGlobalConfig(myEnv);\n\n      // load public config and api-endpoint?\n      Object.keys(myEnv).forEach((key) => {\n        if (key.indexOf('NEXT_PUBLIC_') === 0) {\n          publicConfig[key] = myEnv[key];\n        }\n      });\n    }\n\n    // won't check auth for un-authenticated page such as login, register\n    // use static field in the component\n    const { noredirect, onlyPerformer, authenticate } = Component;\n    if (authenticate !== false) {\n      await auth(ctx, noredirect, onlyPerformer);\n    }\n    const { token } = nextCookie(ctx);\n    ctx.token = token || '';\n    // server side to load settings, once time only\n    let settings = {};\n    if (!process.browser) {\n      const [setting] = await Promise.all([\n        settingService.all('all', true)\n      ]);\n      settings = { ...setting.data };\n\n      await updateSettingsStore(ctx, settings);\n    }\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    return {\n      settings,\n      pageProps,\n      layout: Component.layout,\n      config: publicConfig\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    setGlobalConfig(this.props.config);\n  }\n\n  componentDidMount() {\n    this.checkNotifications();\n    Router.events.on(\"routeChangeComplete\", this.handleRouteChange);\n  }\n\n  componentWillUnmount() {\n    Router.events.off(\"routeChangeComplete\", this.handleRouteChange);\n  }\n\n  handleRouteChange = () => {\n    this.checkNotifications(); \n  };\n\n  checkNotifications = async () => {\n    const user = this.props.store.getState()?.user?.current?._id;\n    if (user) {\n      const { data } = await notificationService.countUnread();\n      this.props.store.dispatch(setUnreadsNotification(data > 0 ? true : false));\n    }\n  };\n\n\n  render() {\n    const {\n      Component, pageProps, store, settings\n    } = this.props;\n    const { layout } = Component;\n    return (\n      <Provider store={store}>\n        <Head>\n          <title>{settings?.siteName}</title>\n          <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\" />\n          {/* GA code */}\n          {settings && settings.gaCode && [\n            <script async src={`https://www.googletagmanager.com/gtag/js?id=${settings.gaCode}`} />,\n            <script\n              // eslint-disable-next-line react/no-danger\n              dangerouslySetInnerHTML={{\n                __html: `\n                 window.dataLayer = window.dataLayer || [];\n                 function gtag(){dataLayer.push(arguments);}\n                 gtag('js', new Date());\n                 gtag('config', '${settings.gaCode}');\n             `\n              }}\n            />\n          ]}\n          {/* extra script */}\n          {settings && settings.headerScript && (\n            // eslint-disable-next-line react/no-danger\n            <div dangerouslySetInnerHTML={{ __html: settings.headerScript }} />\n          )}\n        </Head>\n        <Socket>\n          <BaseLayout layout={layout} maintenance={settings.maintenanceMode}>\n            <Component {...pageProps} />\n          </BaseLayout>\n        </Socket>\n        {settings && settings.afterBodyScript && (\n          // eslint-disable-next-line react/no-danger\n          <div dangerouslySetInnerHTML={{ __html: settings.afterBodyScript }} />\n        )}\n      </Provider>\n    );\n  }\n}\n\nexport default withReduxSaga(Application);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}