{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { APIRequest } from './api-request';\nexport var CommentService = /*#__PURE__*/function (_APIRequest) {\n  function CommentService() {\n    _classCallCheck(this, CommentService);\n    return _callSuper(this, CommentService, arguments);\n  }\n  _inherits(CommentService, _APIRequest);\n  return _createClass(CommentService, [{\n    key: \"create\",\n    value: function create(payload) {\n      return this.post('/comments', payload);\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, payload) {\n      return this.upload(\"/comments/\".concat(id), payload);\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      return this.get(this.buildUrl('/comments/search', query));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      return this.del(\"/comments/\".concat(id));\n    }\n  }]);\n}(APIRequest);\nexport var commentService = new CommentService();","map":{"version":3,"names":["APIRequest","CommentService","_APIRequest","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","value","create","payload","post","update","id","upload","concat","search","query","get","buildUrl","delete","del","commentService"],"sources":["C:/Users/Rokibul/Documents/case/src/services/comment.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\n\nexport class CommentService extends APIRequest {\n  create(\n    payload: any\n  ) {\n    return this.post('/comments', payload);\n  }\n\n  update(id: string, payload: any) {\n    return this.upload(`/comments/${id}`, payload);\n  }\n\n  search(query?: { [key: string]: any }) {\n    return this.get(\n      this.buildUrl('/comments/search', query)\n    );\n  }\n\n  delete(id: string) {\n    return this.del(`/comments/${id}`);\n  }\n}\n\nexport const commentService = new CommentService();\n"],"mappings":";;;;;;;AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,WAAaC,cAAc,0BAAAC,WAAA;EAAA,SAAAD,eAAA;IAAAE,eAAA,OAAAF,cAAA;IAAA,OAAAG,UAAA,OAAAH,cAAA,EAAAI,SAAA;EAAA;EAAAC,SAAA,CAAAL,cAAA,EAAAC,WAAA;EAAA,OAAAK,YAAA,CAAAN,cAAA;IAAAO,GAAA;IAAAC,KAAA,EACzB,SAAAC,MAAMA,CACJC,OAAY,EACZ;MACA,OAAO,IAAI,CAACC,IAAI,CAAC,WAAW,EAAED,OAAO,CAAC;IACxC;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAI,MAAMA,CAACC,EAAU,EAAEH,OAAY,EAAE;MAC/B,OAAO,IAAI,CAACI,MAAM,cAAAC,MAAA,CAAcF,EAAE,GAAIH,OAAO,CAAC;IAChD;EAAC;IAAAH,GAAA;IAAAC,KAAA,EAED,SAAAQ,MAAMA,CAACC,KAA8B,EAAE;MACrC,OAAO,IAAI,CAACC,GAAG,CACb,IAAI,CAACC,QAAQ,CAAC,kBAAkB,EAAEF,KAAK,CACzC,CAAC;IACH;EAAC;IAAAV,GAAA;IAAAC,KAAA,EAED,SAAAY,OAAMA,CAACP,EAAU,EAAE;MACjB,OAAO,IAAI,CAACQ,GAAG,cAAAN,MAAA,CAAcF,EAAE,CAAE,CAAC;IACpC;EAAC;AAAA,EAnBiCd,UAAU;AAsB9C,OAAO,IAAMuB,cAAc,GAAG,IAAItB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}