{"ast":null,"code":"import { APIRequest } from './api-request';\nexport class PaymentService extends APIRequest {\n  subscribePerformer(payload) {\n    return this.post('/payment/subscribe/performers', payload);\n  }\n  userSearch(payload) {\n    return this.get(this.buildUrl('/transactions/user/search', payload));\n  }\n  purchaseTokenPackage(id) {\n    return this.post(`/payment/purchase-tokens/${id}`, {\n      paymentGateway: \"paypal\"\n    });\n  }\n  applyCoupon(code) {\n    return this.post(`/coupons/${code}/apply-coupon`);\n  }\n  connectStripeAccount() {\n    return this.post('/stripe/accounts');\n  }\n  getStripeCards() {\n    return this.get('/stripe/user/cards');\n  }\n  addStripeCard(payload) {\n    return this.post('/stripe/user/cards', payload);\n  }\n  removeStripeCard(id) {\n    return this.del(`/stripe/user/cards/${id}`);\n  }\n  retrieveStripeAccount() {\n    return this.get('/stripe/accounts/me');\n  }\n  loginLink() {\n    return this.get('/stripe/accounts/me/login-link');\n  }\n  getCards(req) {\n    return this.get(this.buildUrl('/payment-cards', req));\n  }\n  addCard(gateway, payload) {\n    return this.post(`/${gateway}/cards`, payload);\n  }\n  removeCard(id) {\n    return this.del(`/payment-cards/${id}`);\n  }\n  sendSavePaypalCredentials({\n    performerId,\n    email\n  }) {\n    return this.post(`/performers/payment-gateway-settings`, {\n      performerId,\n      key: 'paypal',\n      status: 'active',\n      value: email\n    });\n  }\n  tradeDiamond(amount) {\n    return this.post('/payment/trade-diamonds', {\n      amount\n    });\n  }\n  paypalCallback(paypalOrderId) {\n    return this.post(`/paypal/cheking/${paypalOrderId}`);\n  }\n  paypalCallhook({\n    eventType,\n    orderId\n  }) {\n    return this.post(`/payment/paypal/callhook`, {\n      event_type: eventType,\n      resource: {\n        id: orderId\n      }\n    });\n  }\n}\nexport const paymentService = new PaymentService();","map":{"version":3,"names":["APIRequest","PaymentService","subscribePerformer","payload","post","userSearch","get","buildUrl","purchaseTokenPackage","id","paymentGateway","applyCoupon","code","connectStripeAccount","getStripeCards","addStripeCard","removeStripeCard","del","retrieveStripeAccount","loginLink","getCards","req","addCard","gateway","removeCard","sendSavePaypalCredentials","performerId","email","key","status","value","tradeDiamond","amount","paypalCallback","paypalOrderId","paypalCallhook","eventType","orderId","event_type","resource","paymentService"],"sources":["C:/Users/Rokibul/Documents/case/src/services/payment.service.ts"],"sourcesContent":["import { APIRequest } from './api-request';\n\nexport class PaymentService extends APIRequest {\n  subscribePerformer(payload: any) {\n    return this.post('/payment/subscribe/performers', payload);\n  }\n\n  userSearch(payload) {\n    return this.get(this.buildUrl('/transactions/user/search', payload));\n  }\n\n  purchaseTokenPackage(id: string) {\n    return this.post(`/payment/purchase-tokens/${id}`, {\n      paymentGateway: \"paypal\"\n    });\n  }\n\n  applyCoupon(code: any) {\n    return this.post(`/coupons/${code}/apply-coupon`);\n  }\n\n  connectStripeAccount() {\n    return this.post('/stripe/accounts');\n  }\n\n  getStripeCards() {\n    return this.get('/stripe/user/cards');\n  }\n\n  addStripeCard(payload) {\n    return this.post('/stripe/user/cards', payload);\n  }\n\n  removeStripeCard(id) {\n    return this.del(`/stripe/user/cards/${id}`);\n  }\n\n  retrieveStripeAccount() {\n    return this.get('/stripe/accounts/me');\n  }\n\n  loginLink() {\n    return this.get('/stripe/accounts/me/login-link');\n  }\n\n  getCards(req: any) {\n    return this.get(this.buildUrl('/payment-cards', req));\n  }\n\n  addCard(gateway: string, payload: any) {\n    return this.post(`/${gateway}/cards`, payload);\n  }\n\n  removeCard(id: string) {\n    return this.del(`/payment-cards/${id}`);\n  }\n\n  sendSavePaypalCredentials({\n    performerId,\n    email\n  }: {\n    performerId: string,\n    email: string\n  }) {\n    return this.post(`/performers/payment-gateway-settings`, {\n      performerId,\n      key: 'paypal',\n      status: 'active',\n      value: email\n    })\n  }\n\n  tradeDiamond(amount: number) {\n    return this.post('/payment/trade-diamonds', {\n      amount\n    });\n  }\n\n  paypalCallback(paypalOrderId:string) {\n    return this.post(`/paypal/cheking/${paypalOrderId}`);\n  }\n\n  paypalCallhook({eventType, orderId} : { eventType: string, orderId: string }) {\n    return this.post(`/payment/paypal/callhook`, {\n      event_type: eventType,\n      resource: {\n          id: orderId\n      }\n    })\n  }\n}\n\nexport const paymentService = new PaymentService();\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAE1C,OAAO,MAAMC,cAAc,SAASD,UAAU,CAAC;EAC7CE,kBAAkBA,CAACC,OAAY,EAAE;IAC/B,OAAO,IAAI,CAACC,IAAI,CAAC,+BAA+B,EAAED,OAAO,CAAC;EAC5D;EAEAE,UAAUA,CAACF,OAAO,EAAE;IAClB,OAAO,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,2BAA2B,EAAEJ,OAAO,CAAC,CAAC;EACtE;EAEAK,oBAAoBA,CAACC,EAAU,EAAE;IAC/B,OAAO,IAAI,CAACL,IAAI,CAAC,4BAA4BK,EAAE,EAAE,EAAE;MACjDC,cAAc,EAAE;IAClB,CAAC,CAAC;EACJ;EAEAC,WAAWA,CAACC,IAAS,EAAE;IACrB,OAAO,IAAI,CAACR,IAAI,CAAC,YAAYQ,IAAI,eAAe,CAAC;EACnD;EAEAC,oBAAoBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACT,IAAI,CAAC,kBAAkB,CAAC;EACtC;EAEAU,cAAcA,CAAA,EAAG;IACf,OAAO,IAAI,CAACR,GAAG,CAAC,oBAAoB,CAAC;EACvC;EAEAS,aAAaA,CAACZ,OAAO,EAAE;IACrB,OAAO,IAAI,CAACC,IAAI,CAAC,oBAAoB,EAAED,OAAO,CAAC;EACjD;EAEAa,gBAAgBA,CAACP,EAAE,EAAE;IACnB,OAAO,IAAI,CAACQ,GAAG,CAAC,sBAAsBR,EAAE,EAAE,CAAC;EAC7C;EAEAS,qBAAqBA,CAAA,EAAG;IACtB,OAAO,IAAI,CAACZ,GAAG,CAAC,qBAAqB,CAAC;EACxC;EAEAa,SAASA,CAAA,EAAG;IACV,OAAO,IAAI,CAACb,GAAG,CAAC,gCAAgC,CAAC;EACnD;EAEAc,QAAQA,CAACC,GAAQ,EAAE;IACjB,OAAO,IAAI,CAACf,GAAG,CAAC,IAAI,CAACC,QAAQ,CAAC,gBAAgB,EAAEc,GAAG,CAAC,CAAC;EACvD;EAEAC,OAAOA,CAACC,OAAe,EAAEpB,OAAY,EAAE;IACrC,OAAO,IAAI,CAACC,IAAI,CAAC,IAAImB,OAAO,QAAQ,EAAEpB,OAAO,CAAC;EAChD;EAEAqB,UAAUA,CAACf,EAAU,EAAE;IACrB,OAAO,IAAI,CAACQ,GAAG,CAAC,kBAAkBR,EAAE,EAAE,CAAC;EACzC;EAEAgB,yBAAyBA,CAAC;IACxBC,WAAW;IACXC;EAIF,CAAC,EAAE;IACD,OAAO,IAAI,CAACvB,IAAI,CAAC,sCAAsC,EAAE;MACvDsB,WAAW;MACXE,GAAG,EAAE,QAAQ;MACbC,MAAM,EAAE,QAAQ;MAChBC,KAAK,EAAEH;IACT,CAAC,CAAC;EACJ;EAEAI,YAAYA,CAACC,MAAc,EAAE;IAC3B,OAAO,IAAI,CAAC5B,IAAI,CAAC,yBAAyB,EAAE;MAC1C4B;IACF,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAACC,aAAoB,EAAE;IACnC,OAAO,IAAI,CAAC9B,IAAI,CAAC,mBAAmB8B,aAAa,EAAE,CAAC;EACtD;EAEAC,cAAcA,CAAC;IAACC,SAAS;IAAEC;EAAgD,CAAC,EAAE;IAC5E,OAAO,IAAI,CAACjC,IAAI,CAAC,0BAA0B,EAAE;MAC3CkC,UAAU,EAAEF,SAAS;MACrBG,QAAQ,EAAE;QACN9B,EAAE,EAAE4B;MACR;IACF,CAAC,CAAC;EACJ;AACF;AAEA,OAAO,MAAMG,cAAc,GAAG,IAAIvC,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}